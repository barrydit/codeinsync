[{"language":"PHP","category":"String Manipulation","snippets":[{"title":"Getting the names of all files in a directory with php","description":"Glob to show files\/paths. Remember to use array_filter(glob('*.php'), 'is_file')","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/2922954\/getting-the-names-of-all-files-in-a-directory-with-php","title":""},"code":"\/* \r\n * glob() examples\r\n *\/\r\n\r\n\/\/ get the array of full paths\r\n$result = glob( &#039;path\/*&#039; );\r\n\r\n\/\/ get the array of file names\r\n$result = array_map( function( $item ) {\r\n    return basename( $item );\r\n}, glob( &#039;path\/*&#039; ) );\r\n\r\n\r\n\/* \r\n * FilesystemIterator examples\r\n *\/\r\n\r\n\/\/ get the array of file names by using FilesystemIterator and array_map()\r\n$result = array_map( function( $item ) {\r\n    \/\/ $item: SplFileInfo object\r\n    return $item-&gt;getFilename();\r\n}, iterator_to_array( new FilesystemIterator( &#039;path&#039; ), false ) );\r\n\r\n\/\/ get the array of file names by using FilesystemIterator and iterator_apply() filter\r\n$it = new FilesystemIterator( &#039;path&#039; );\r\niterator_apply( \r\n    $it, \r\n    function( $item, &amp;$result ) {\r\n        \/\/ $item: FilesystemIterator object that points to current element\r\n        $result[] = (string) $item;\r\n        \/\/ The function must return TRUE in order to continue iterating\r\n        return true;\r\n    }, \r\n    array( $it, &amp;$result )\r\n);"},{"title":"Event handlers for textareas for clearing values.","description":"Example of dealing with events from button and textarea values. This example shows DOM and jQuery example.","stackoverflow":{"url":"","title":""},"code":"&lt;textarea id=&quot;myTextarea&quot;&gt;This is some text&lt;\/textarea&gt;\r\n&lt;button id=&quot;clearBtn&quot;&gt;Clear Textarea&lt;\/button&gt;\r\n\r\n&lt;!-- You&#039;ll need to include the jQuery library --&gt;\r\n&lt;script src=&quot;https:\/\/code.jquery.com\/jquery-3.6.0.min.js&quot;&gt;&lt;\/script&gt;\r\n\r\n&lt;!-- Your JavaScript code will go here --&gt;\r\n&lt;script&gt;\r\ndocument.addEventListener(&#039;DOMContentLoaded&#039;, function() {\r\n    const textarea = document.getElementById(&#039;myTextarea&#039;);\r\n    const clearBtn = document.getElementById(&#039;clearBtn&#039;);\r\n\r\n    \/\/ Event listener for the clear button\r\n    clearBtn.addEventListener(&#039;click&#039;, function() {\r\n        \/\/ Clear the textarea\r\n        textarea.value = &#039;&#039;;\r\n    });\r\n});\r\n    \/\/ Your JavaScript\/jQuery code will be placed here\r\n$(document).ready(function() {\r\n    \/\/ Event listener for the clear button\r\n    $(&#039;#clearBtn&#039;).on(&#039;click&#039;, function() {\r\n        \/\/ Clear the textarea\r\n        $(&#039;#myTextarea&#039;).val(&#039;&#039;);\r\n    });\r\n});\r\n&lt;\/script&gt;\r\n\r\n"},{"title":"Filter files similiar to ones before","description":"This checks the directory and filters files that match the file from before it, before including. Such that composer.php would include but composer_app.php does not get included, because of composer[_app.php]\r\n\r\nI created this to stop extended configs from running. Because some of them will be apps, where they have html code, and break the program.\r\n\r\n\r\nconfig.php\r\nconstants.php\r\nconstants_backup.php\r\nconstants_client-project.php\r\nfunctions.php\r\n\r\nI have a list of files that I need to include into my php application, but I need to restrict constants_backup.php and constants_client-project.php   based on a regular expression  that is a variable constants and _.*\\.php    How do I do that?\r\n\r\n","stackoverflow":{"url":"","title":""},"code":"&lt;?php\r\n\r\n    if (is_dir(&#039;config&#039;)) {\r\n      $previousFilename = &#039;&#039;; \/\/ Initialize the previous filename variable\r\n\r\n\/\/$files = glob(dirname(__DIR__) . DIRECTORY_SEPARATOR . &#039;config&#039; . DIRECTORY_SEPARATOR . &#039;*.php&#039;);\r\n\/\/$files = array_merge($files, glob(dirname(__DIR__) . DIRECTORY_SEPARATOR . &#039;config&#039; . DIRECTORY_SEPARATOR . &#039;**&#039; . DIRECTORY_SEPARATOR . &#039;*.php&#039;));\r\n\r\n\/\/sort($files);\r\n\r\n      foreach (glob(__DIR__ . DIRECTORY_SEPARATOR . &#039;*.php&#039;) as $includeFile) {\r\n        \/\/echo $includeFile . &quot;&lt;br \/&gt;\\n&quot;;\r\n\r\n        if (in_array($includeFile, get_required_files())) continue; \/\/ $includeFile == __FILE__\r\n\r\n        if (!file_exists($includeFile)) {\r\n          error_log(&quot;Failed to load a necessary file: &quot; . $includeFile . PHP_EOL);\r\n          break;\r\n        }\r\n\r\n        $currentFilename = substr(basename($includeFile), 0, -4);\r\n    \r\n        \/\/$pattern = &#039;\/^&#039; . preg_quote($previousFilename, &#039;\/&#039;)  . \/*_[a-zA-Z0-9-]*\/&#039;(_\\.+)?\\.php$\/&#039;; \/\/ preg_match($pattern, $currentFilename)\r\n\r\n        if (!empty($previousFilename) &amp;&amp; strpos($currentFilename, $previousFilename) !== false) {\r\n          continue;\r\n        }\r\n\r\n        require_once $includeFile;\r\n\r\n        $previousFilename = $currentFilename;\r\n      }\r\n\r\n    } else if (!in_array($path = realpath(&#039;config.php&#039;), get_required_files())) {\r\n      \/\/die($path . &#039; test&#039;);\r\n      require_once($path);\r\n    }"},{"title":"correctly including files inorder of predicibility","description":"This code takes awhile to write ... lots of room for mistakes, the working example is ontop.","stackoverflow":{"url":"","title":""},"code":"&lt;?php\r\n\r\nif ($path = (basename(getcwd()) == &#039;public&#039;)\r\n    ? (is_file(&#039;..\/config.php&#039;) ? &#039;..\/config.php&#039; : (is_file(&#039;..\/config\/config.php&#039;) ? &#039;..\/config\/config.php&#039; : null))\r\n    : (is_file(&#039;config.php&#039;) ? &#039;config.php&#039; : (is_file(&#039;config\/config.php&#039;) ? &#039;config\/config.php&#039; : null)))\r\n    require_once($path); \r\nelse die(var_dump($path . &#039; was not found. file=config.php&#039;));\r\n\r\n\/\/die(basename(getcwd()) . &#039; ==&#039; . &#039;public&#039;);\r\n\r\nif ($path = (basename(getcwd()) == &#039;public&#039;)\r\n    ? (is_file(&#039;composer_app.php&#039;) ? &#039;composer_app.php&#039; : (is_file(&#039;..\/composer_app.php&#039;) ? &#039;..\/composer_app.php&#039; : null))\r\n    : (is_file(&#039;..\/composer_app.php&#039;) ? &#039;..\/composer_app.php&#039; : (is_file(&#039;config\/composer_app.php&#039;) ? &#039;config\/composer_app.php&#039; : (is_file(&#039;public\/composer_app.php&#039;) ? &#039;public\/composer_app.php&#039; : &#039;composer_app.php&#039;))))\r\n  require_once($path); \r\nelse die(var_dump($path . &#039; was not found. file=composer_app.php&#039;));\r\n\r\n\r\n\/\/ die(var_dump(get_required_files())); | dd(get_required_files());\r\n\r\n\r\n\/*\r\nif ($path = realpath((!is_dir(dirname(__DIR__, 1) . DIRECTORY_SEPARATOR . &#039;config&#039;) ? __DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039; : (!is_dir(__DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039;) ? (basename(__DIR__) != &#039;config&#039; ? &#039;.&#039;: NULL ) : __DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039;))  . DIRECTORY_SEPARATOR . &#039;config.php&#039;)) \/\/ is_file(&#039;config\/config.php&#039;)) \r\n   require_once($path);\r\n\r\nif ($path = realpath((!is_dir(dirname(__DIR__, 1) . DIRECTORY_SEPARATOR . &#039;config&#039;) ? __DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039; : (!is_dir(__DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039;) ? (basename(__DIR__) != &#039;config&#039; ? NULL : &#039;.&#039;) : __DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039;))  . DIRECTORY_SEPARATOR . &#039;composer_app.php&#039;)) \/\/ is_file(&#039;config\/config.php&#039;)) \r\n  require_once($path);\r\n\r\n*\/\r\n\r\n\/*\r\nif ($path = realpath((!is_dir(&#039;..\/config&#039;) ? (!is_dir(&#039;config&#039;) ? NULL : __DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039; . DIRECTORY_SEPARATOR) : __DIR__ . DIRECTORY_SEPARATOR . &#039;..\/config&#039; . DIRECTORY_SEPARATOR) . &#039;composer.php&#039;)) \/\/ is_file(&#039;config\/composer.php&#039;)) \r\n  require_once($path);\r\n\r\nif ($path = realpath((basename(__DIR__) != &#039;..\/config&#039; ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . &#039;composer.php&#039;)) \/\/ is_file(&#039;config\/composer.php&#039;)) \r\n  require_once($path);\r\n*\/\r\n\r\n\/\/die((!is_dir(__DIR__ . DIRECTORY_SEPARATOR . &#039;..\/config&#039;) ? (!is_dir(__DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039;) ? (basename(__DIR__) != &#039;config&#039; ? NULL : &#039;.&#039; . DIRECTORY_SEPARATOR) : __DIR__ . DIRECTORY_SEPARATOR . &#039;config&#039; . DIRECTORY_SEPARATOR) : __DIR__ . DIRECTORY_SEPARATOR . &#039;..\/config&#039; . DIRECTORY_SEPARATOR) . &#039;composer.php&#039;);"},{"title":"HTML encode\/decode","description":"This code will encode and decode html entities","stackoverflow":{"url":"","title":""},"code":"&lt;?php\r\n\r\n$code = mb_convert_encoding(htmlspecialchars(html_entity_decode(  $_POST[&#039;inputval&#039;]  , ENT_QUOTES, &#039;UTF-8&#039;), ENT_QUOTES, &#039;UTF-8&#039;), &#039;HTML-ENTITIES&#039;, &#039;utf-8&#039;);\r\n\r\n$decode = mb_convert_encoding(htmlentities(htmlspecialchars_decode($code, ENT_QUOTES), ENT_QUOTES, &#039;UTF-8&#039;), &#039;UTF-8&#039;, &#039;HTML-ENTITIES&#039;);\r\n"},{"title":"require_once vs. short-hand","description":"This code does not work. ","stackoverflow":{"url":"","title":""},"code":"&lt;?php $path = &#039;include.php&#039;;  require_once($path) or die(var_dump($path));\r\n\r\n\/\/if (is_file($path = &#039;include.php&#039;)) { require_once($path); } else { die(var_dump($path)); }  ?&gt;"},{"title":"php how to create a good foreach shorthand","description":"Examples of shorthand foreach methods.","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/52297105\/php-how-to-create-a-good-foreach-shorthand","title":""},"code":"&lt;?php\r\n\r\n\r\necho implode(&#039;&#039;, array_map(fn($person) =&gt; $person-&gt;name . &#039;&lt;br&gt;&#039;, $people));\r\n\r\narray_map(function($p) { echo $p-&gt;name; }, $people);\r\n\r\n\r\narray_walk_recursive($a, function($v, $k) {echo $k === &#039;name&#039; ? $v : &#039;&#039;;});\r\n\r\nfunction print_each($collection, $property) {\r\n  foreach ($collection as $item) {\r\n    echo $item-&gt;$property . &quot;&lt;br \/&gt;&quot;;\r\n  }\r\n}\r\n\r\n$people = [\r\n  (object)[\r\n    &quot;name&quot; =&gt; &quot;Bob&quot;,\r\n    &quot;age&quot; =&gt; 25\r\n  ],\r\n  (object)[\r\n    &quot;name&quot; =&gt; &quot;Dan&quot;,\r\n    &quot;age&quot; =&gt; 31\r\n  ],\r\n  (object)[\r\n    &quot;name&quot; =&gt; &quot;Sally&quot;,\r\n    &quot;age&quot; =&gt; 45\r\n  ]\r\n];\r\n\r\nprint_each($people, &quot;name&quot;); \/\/ prints &quot;Bob&lt;br \/&gt;Dan&lt;br \/&gt;Sally&lt;br \/&gt;&quot;\r\n"},{"title":"difference between array map array walk and array filter","description":"Array\r\n(\r\n    [0] => 2\r\n    [1] => 2\r\n    [2] => 3\r\n)\r\nArray\r\n(\r\n    [0] => 2\r\n    [1] => 2\r\n    [2] => 3\r\n)\r\n0 => 2.4\r\n1 => 2.6\r\n2 => 3.5\r\nArray\r\n(\r\n    [0] => 4.8\r\n    [1] => 5.2\r\n    [2] => 10.5\r\n)\r\nArray\r\n(\r\n    [1] => 2.6\r\n    [2] => 3.5\r\n)","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/3432257\/difference-between-array-map-array-walk-and-array-filter","title":""},"code":"&lt;?php\r\n\r\n$origarray1 = array(2.4, 2.6, 3.5);\r\n$origarray2 = array(2.4, 2.6, 3.5);\r\n\r\nprint_r(array_map(&#039;floor&#039;, $origarray1)); \/\/ $origarray1 stays the same\r\n\r\n\/\/ changes $origarray2\r\narray_walk($origarray2, function (&amp;$v, $k) { $v = floor($v); }); \r\nprint_r($origarray2);\r\n\r\n\/\/ this is a more proper use of array_walk\r\narray_walk($origarray1, function ($v, $k) { echo &quot;$k =&gt; $v&quot;, &quot;\\n&quot;; });\r\n\r\n\/\/ array_map accepts several arrays\r\nprint_r(\r\n    array_map(function ($a, $b) { return $a * $b; }, $origarray1, $origarray2)\r\n);\r\n\r\n\/\/ select only elements that are &gt; 2.5\r\nprint_r(\r\n    array_filter($origarray1, function ($a) { return $a &gt; 2.5; })\r\n);"},{"title":"Auto height div with overflow and scroll when needed","description":"Some cool code samples...","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/10155344\/auto-height-div-with-overflow-and-scroll-when-needed","title":""},"code":""},{"title":"Get fragment value after hash from a url","description":"I was trying to find a way to see the anchor depending on development situations.","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/2317508\/get-fragment-value-after-hash-from-a-url","title":""},"code":"&lt;?php\r\n\/* A) already have url with #hash in PHP? Easy! Just parse it out !\r\n\r\nif( strpos( $url, &quot;#&quot; ) === false ) echo &quot;NO HASH !&quot;;\r\n   else echo &quot;HASH IS: #&quot;.explode( &quot;#&quot;, $url )[1]; \/\/ arrays are indexed from 0\r\n\r\nOr in &quot;old&quot; PHP you must pre-store the exploded to access the array:\r\n\r\n$exploded_url = explode( &quot;#&quot;, $url ); $exploded_url[1]; \r\n\r\nB) You want to get a #hash by sending a form to PHP?\r\n    =&gt; Use some JavaScript MAGIC! (To pre-process the form)\r\n\r\nvar forms = document.getElementsByTagName(&#039;form&#039;); \/\/get all forms on the site\r\nfor (var i = 0; i &lt; forms.length; i++) { \/\/to each form...\r\n    forms[i].addEventListener( \/\/ add a &quot;listener&quot;\r\n        &#039;submit&#039;, \/\/ for an on-submit &quot;event&quot;\r\n        function () { \/\/add a submit pre-processing function:\r\n            var input_name = &quot;fragment&quot;; \/\/ name form will use to send the fragment\r\n            \/\/ Try search whether we already done this or not\r\n            \/\/ in current form, find every &lt;input ... name=&quot;fragment&quot; ...&gt;\r\n            var hiddens = form.querySelectorAll(&#039;[name=&quot;&#039; + input_name + &#039;&quot;]&#039;);\r\n            if (hiddens.length &lt; 1) { \/\/ if not there yet\r\n                \/\/create an extra input element\r\n                var hidden = document.createElement(&quot;input&quot;);\r\n                \/\/set it to hidden so it doesn&#039;t break view \r\n                hidden.setAttribute(&#039;type&#039;, &#039;hidden&#039;);\r\n                \/\/set a name to get by it in PHP\r\n                hidden.setAttribute(&#039;name&#039;, input_name);\r\n                this.appendChild(hidden); \/\/append it to the current form\r\n            } else {\r\n                var hidden = hiddens[0]; \/\/ use an existing one if already there\r\n            }\r\n\r\n            \/\/set a value of #HASH - EVERY TIME, so we get the MOST RECENT #hash :)\r\n            hidden.setAttribute(&#039;value&#039;, window.location.hash);\r\n        }\r\n    );\r\n}\r\n\r\nDepending on your form&#039;s method attribute you get this hash in PHP by:\r\n$_GET[&#039;fragment&#039;] or $_POST[&#039;fragment&#039;]\r\n\r\nPossible returns: 1. &quot;&quot;[empty string] (no hash) 2. whole hash INCLUDING the #[hash] sign (because we&#039;ve used the window.location.hash in JavaScript which just works that way :) )\r\n\r\n*\/"},{"title":"difference between array map array walk and array filter","description":"Array\r\n(\r\n    [0] => 2\r\n    [1] => 2\r\n    [2] => 3\r\n)\r\nArray\r\n(\r\n    [0] => 2\r\n    [1] => 2\r\n    [2] => 3\r\n)\r\n0 => 2.4\r\n1 => 2.6\r\n2 => 3.5\r\nArray\r\n(\r\n    [0] => 4.8\r\n    [1] => 5.2\r\n    [2] => 10.5\r\n)\r\nArray\r\n(\r\n    [1] => 2.6\r\n    [2] => 3.5\r\n)","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/3432257\/difference-between-array-map-array-walk-and-array-filter","title":""},"code":"&lt;?php\r\n\r\n$origarray1 = array(2.4, 2.6, 3.5);\r\n$origarray2 = array(2.4, 2.6, 3.5);\r\n\r\nprint_r(array_map(&#039;floor&#039;, $origarray1)); \/\/ $origarray1 stays the same\r\n\r\n\/\/ changes $origarray2\r\narray_walk($origarray2, function (&amp;$v, $k) { $v = floor($v); }); \r\nprint_r($origarray2);\r\n\r\n\/\/ this is a more proper use of array_walk\r\narray_walk($origarray1, function ($v, $k) { echo &quot;$k =&gt; $v&quot;, &quot;\\n&quot;; });\r\n\r\n\/\/ array_map accepts several arrays\r\nprint_r(\r\n    array_map(function ($a, $b) { return $a * $b; }, $origarray1, $origarray2)\r\n);\r\n\r\n\/\/ select only elements that are &gt; 2.5\r\nprint_r(\r\n    array_filter($origarray1, function ($a) { return $a &gt; 2.5; })\r\n);\r\n\r\n?&gt;"},{"title":"dropdown list to include images or icons","description":"Great resource for creating a dropdown list without a select\/option.","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/70294838\/dropdown-list-to-include-images-or-icons","title":""},"code":"&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/font-awesome\/6.0.0-beta3\/css\/all.min.css&quot; integrity=&quot;sha512-Fo3rlrZj\/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26\/zrn20ImR1DfuLWnOo7aBA==&quot; crossorigin=&quot;anonymous&quot; referrerpolicy=&quot;no-referrer&quot; \/&gt;\r\n&lt;style&gt;\r\n.dropbtn {\r\n  background-color: #3498DB;\r\n  color: white;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.dropbtn:hover, .dropbtn:focus {\r\n  background-color: #2980B9;\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  min-width: 160px;\r\n  overflow: auto;\r\n}\r\n\r\n.dropdown-content a {\r\n  color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\n\r\n.dropdown a:hover {background-color: #ddd;}\r\n\r\n.show {display: block;}\r\n&lt;\/style&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;div class=&quot;dropdown&quot;&gt;\r\n  &lt;button onclick=&quot;myFunction()&quot; class=&quot;dropbtn&quot;&gt;Dropdown&lt;\/button&gt;\r\n  &lt;div id=&quot;myDropdown&quot; class=&quot;dropdown-content&quot;&gt;\r\n    &lt;a href=&quot;#&quot;&gt;image&lt;br&gt;&lt;img src=&quot;https:\/\/www.w3schools.com\/images\/lamp.jpg&quot;&gt;&lt;\/a&gt;\r\n    &lt;a href=&quot;#&quot;&gt;font awesome&lt;br&gt;&lt;i class=&quot;fas fa-phone&quot;&gt;&lt;\/i&gt;&lt;\/a&gt;\r\n  &lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;script&gt;\r\n\/* When the user clicks on the button, \r\ntoggle between hiding and showing the dropdown content *\/\r\nfunction myFunction() {\r\n  document.getElementById(&quot;myDropdown&quot;).classList.toggle(&quot;show&quot;);\r\n}\r\n\r\n\/\/ Close the dropdown if the user clicks outside of it\r\nwindow.onclick = function(event) {\r\n  if (!event.target.matches(&#039;.dropbtn&#039;)) {\r\n    var dropdowns = document.getElementsByClassName(&quot;dropdown-content&quot;);\r\n    var i;\r\n    for (i = 0; i &lt; dropdowns.length; i++) {\r\n      var openDropdown = dropdowns[i];\r\n      if (openDropdown.classList.contains(&#039;show&#039;)) {\r\n        openDropdown.classList.remove(&#039;show&#039;);\r\n      }\r\n    }\r\n  }\r\n}\r\n&lt;\/script&gt;\r\n\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n"},{"title":"create composer json file php project","description":"https:\/\/webrewrite.com\/create-composer-json-file-php-project\/\r\n\r\nResource for composer commands ...\r\n\r\nhttps:\/\/duckduckgo.com\/?q=autoload-dev+for+composer&t=newext&atb=v371-1&ia=web","stackoverflow":{"url":"","title":""},"code":""},{"title":"php constants containing arrays","description":"Really interesting ideas todo with constants and arrays and serialization","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/1290318\/php-constants-containing-arrays","title":""},"code":"&lt;?php\r\n\r\ndefine(&#039;DEFAULT_ROLES&#039;, array(&#039;guy&#039;, &#039;development team&#039;));\r\n\r\ndefine(&#039;DEFAULT_ROLES&#039;, &#039;guy|development team&#039;);\r\n\r\n\/\/...\r\n\r\n$default = explode(&#039;|&#039;, DEFAULT_ROLES);\r\n\r\n# define constant, serialize array\r\ndefine (&quot;FRUITS&quot;, serialize (array (&quot;apple&quot;, &quot;cherry&quot;, &quot;banana&quot;)));\r\n\r\n# use it\r\n$my_fruits = unserialize (FRUITS);"},{"title":"absolute relative fixed positioining how do they differ","description":"https:\/\/css-tricks.com\/absolute-relative-fixed-positioining-how-do-they-differ\/\r\n\r\nDifferences between each positions of block elements... trying to find out how to create a overflow for the absolute inside a relative ...","stackoverflow":{"url":"","title":""},"code":""},{"title":"How to use composer.phar","description":"I look forward to using composer.phar and composer.","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/35561073\/how-to-use-composer-phar","title":""},"code":"php -r &quot;readfile(&#039;https:\/\/getcomposer.org\/installer&#039;);&quot; &gt; composer-setup.php\r\nphp -r &quot;if (hash(&#039;SHA384&#039;, file_get_contents(&#039;composer-setup.php&#039;)) === &#039;fd26ce67e3b237fffd5e5544b45b0d92c41a4afe3e3f778e942e43ce6be197b9cdc7c251dcde6e2a52297ea269370680&#039;) { echo &#039;Installer verified&#039;; } else { echo &#039;Installer corrupt&#039;; unlink(&#039;composer-setup.php&#039;); }&quot;\r\nphp composer-setup.php\r\nphp -r &quot;unlink(&#039;composer-setup.php&#039;);&quot;"},{"title":"How to pipe to php process using the proc open function?","description":"Passing information into applications or into other php apps. Might be a good idea to investigate this for time lapsing ","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/33021505\/how-to-pipe-to-php-process-using-the-proc-open-function","title":""},"code":"&lt;?php\r\n$descriptors = array(\r\n    0 =&gt; array(&quot;pipe&quot;, &quot;r&quot;),  \/\/ STDIN\r\n    1 =&gt; array(&quot;pipe&quot;, &quot;w&quot;),  \/\/ STDOUT\r\n    2 =&gt; array(&quot;pipe&quot;, &quot;w&quot;)   \/\/ STDERR\r\n);\r\n\r\n$proc = proc_open(&quot;php script2.php&quot;, $descriptors, $pipes);\r\nfwrite($pipes[0], &quot;Your data here...&quot;);\r\nfclose($pipes[0]);\r\n\r\n$stdout = stream_get_contents($pipes[1]);\r\n$stderr = stream_get_contents($pipes[2]);\r\n\r\nfclose($pipes[1]);\r\nfclose($pipes[2]);\r\n\r\n$exitCode = proc_close($proc);\r\n\r\n\/\/list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];"},{"title":"Looked for a question regarding domdocument and classname","description":"I want to compare the new\/old version, 2.5<color=green>.8<\/color>\r\n\r\nBy dropping the suffix with the prefix","stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/20728839\/get-element-by-classname-with-domdocument-method","title":""},"code":"&lt;?php\r\ndefine(&#039;COMPOSER_ALLOW_SUPERUSER&#039;, true);\r\n\/\/COMPOSER_ALLOW_SUPERUSER=1 sudo composer --version\r\n$proc = proc_open(&#039;env COMPOSER_ALLOW_SUPERUSER=1; sudo composer --version;&#039;, array( array(&quot;pipe&quot;,&quot;r&quot;), array(&quot;pipe&quot;,&quot;w&quot;), array(&quot;pipe&quot;,&quot;w&quot;)), $pipes);\r\n\r\n\/\/fwrite($pipes[0], &quot;yes&quot;);\r\n\/\/fwrite($pipes[0], &quot;ENV COMPOSER_ALLOW_SUPERUSER=1&quot;);\r\n\r\n\/\/fclose($pipes[0]);\r\n\r\n$stdout = stream_get_contents($pipes[1]);\r\n$stderr = stream_get_contents($pipes[2]);\r\n\r\n\/*\r\n\r\n$stdout = stream_get_contents($pipes[1]);\r\n$stderr = stream_get_contents($pipes[2]);\r\n\r\nfclose($pipes[1]);\r\nfclose($pipes[2]);\r\n*\/\r\n$exitCode = proc_close($proc);\r\n\r\n$pattern = &#039;\/Composer version (\\d+\\.\\d+\\.\\d+) (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\/&#039;;\r\n\r\n\/\/dd($stdout);\r\n\r\nif (preg_match($pattern, $stdout, $matches)) {\r\n    $version = $matches[1];\r\n    $date = $matches[2];\r\n    \r\n    echo &quot;Version: &quot; . $version . &quot;\\n&quot;;\r\n    echo &quot;Date: &quot; . $date . &quot;\\n&quot;;\r\n} else {\r\n    echo &quot;No match found.\\n&quot;;\r\n}\r\n\r\n$url = &#039;https:\/\/getcomposer.org\/&#039;;\r\n$handle = curl_init($url);\r\ncurl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n$html = curl_exec($handle);\r\nlibxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n$doc = new DOMDocument(1.0, &#039;utf-8&#039;);\r\n$doc-&gt;loadHTML($html);\r\n\r\n$content_node=$doc-&gt;getElementById(&quot;main&quot;);\r\n\r\n$node=getElementsByClass($content_node, &#039;p&#039;, &#039;latest&#039;);\r\n\r\n\/\/$xpath = new DOMXpath ( $doc ); \/\/$xpath-&gt;query ( &#039;\/\/p [contains (@class, &quot;latest&quot;)]&#039; );\r\n\/\/dd($xpath);\r\n\r\n$pattern = &#039;\/Latest: (\\d+\\.\\d+\\.\\d+) \\(\\w+\\)\/&#039;;\r\n\r\nif (preg_match($pattern, $node[0]-&gt;nodeValue, $matches)) {\r\n    $new_version = $matches[1];\r\n    echo &quot;Version: &quot; . $new_version . &quot;\\n&quot;;\r\n} else {\r\n    echo &quot;No match found.\\n&quot;;\r\n}\r\n\r\ndd(substr($new_version, 0, strlen($version))); \/\/ 2.5.8   $version == 2.5.5"},{"title":"CSRF Token","description":"<a href=\"https:\/\/www.codegrepper.com\/code-examples\/php\/ternary+operator+for+three+conditions+in+php\">https:\/\/www.codegrepper.com\/code-examples\/<\/a><br>\r\n<a href=\"https:\/\/www.geeksforgeeks.org\/determine-the-first-and-last-iteration-in-a-foreach-loop-in-php\/\">determine-the-first-and-last-iteration-in-a-foreach-loop-in-php<\/a><br \/>\r\n<a href=\"https:\/\/phpdelusions.net\/pdo_examples\/dynamical_where\">dynamical where clause (implode AND conditions\/parameters)<\/a><br \/>\r\n<a href=\"https:\/\/stackoverflow.com\/questions\/4139301\/0-as-a-string-with-empty-in-php\">0-as-a-string-with-empty-in-php<\/a><br \/>\r\n<a href=\"https:\/\/stackoverflow.com\/questions\/7191626\/isset-and-empty-what-to-use\">isset-and-empty-what-to-use<\/a>","version":"1.0.0","tags":["php","string","manipulation"],"stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/12345678","title":""},"code":"&lt;?php\r\n\/\/ Start the session and generate a random token.\r\nsession_start();\r\n$_SESSION[&quot;token&quot;] = bin2hex(random_bytes(32));\r\n\/\/ Embed the CSRF token into the HTML form.\r\n\/\/ &lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&lt;?=$_SESSION[&quot;token&quot;]?&gt;&quot;\/&gt;\r\n\/\/ When the form is submitted, cross-check the submitted token against the session.\r\nif (!isset($_POST[&quot;token&quot;]) || !isset($_SESSION[&quot;token&quot;])) exit();\r\nif ($_POST[&quot;token&quot;] == $_SESSION[&quot;token&quot;]) { DO PROCESSING }"},{"title":"Example PHP Code Snippet","description":"This is an example code snippet in PHP.","version":"1.0.0","tags":["php","string","manipulation"],"stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/12345678","title":""},"code":"&lt;?php\r\n\r\n\/\/ Your PHP code snippet goes here\r\n\r\n?&gt;"},{"title":"Example PHP Code Snippet","description":"This is an example code snippet in PHP. ","version":"1.0.0","tags":["php","string","manipulation"],"stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/12345678","title":""},"code":"&lt;?php\r\n\r\n\/\/ Your PHP code snippet goes here 123\r\n\r\n?&gt;"}]},{"language":"PHP","category":"String Manipulation","snippets":[{"title":"Example PHP Code Snippet","description":"This is an example code snippet in PHP.","version":"1.0.0","tags":["php","string","manipulation"],"stackoverflow":{"url":"https:\/\/stackoverflow.com\/questions\/12345678","title":""},"code":"&lt;?php\r\n\r\n\/\/ Your PHP code snippet goes here\r\n\r\n?&gt;"}]}]