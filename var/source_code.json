{
".env" : "APP_ENV = production\nAPP_DEBUG = \nAPP_BASE = Array[test, another, test2]\nCACHE_DRIVER = file\nSESSION_DRIVER = file\nDB_HOST = localhost\nDB_NAME = \nDB_UNAME = root\nDB_PWORD = \nDB_PORT = 3306\nDEFAULT_CLIENT = 000-Raymant, David\nDEFAULT_DOMAIN = davidraymant.ca\nDEFAULT_PROJECT = 123\nERROR_LOG_FILE = error_log\nERROR_REPORTING_LEVEL = 32767\nHIDE_UPDATE_NOTICE = \nMAIL_DRIVER = smtp\nMAIL_HOST = smtp.mailtrap.io\nMAIL_PORT = 2525\nMAIL_USERNAME = your_username\nMAIL_PASSWORD = your_password\nMAIL_ENCRYPTION = tls\n[SHELL]\nEXPR_VERSION = \"\/(?:version|v)\\s*((?:[0-9]+\\.?)+)\/i\"\nEXPR_DOMAIN = \"\/(?:[a-z]+\\:\\\/\\\/)?(?:[a-z0-9\\-]+\\.)+[a-z]{2,6}(?:\\\/\\S*)?\/i\"\nPHP_EXEC = \"\/usr\/bin\/php\"\nUSER = www-data\nPASSWD = \n[COMPOSER]\nAUTOLOAD = 1\nCOMPOSER_EXEC = \"\/usr\/local\/bin\/composer\"\nEXPR_VERSION = \"\/(?:version|v)\\s*((?:[0-9]+\\.?)+)\/i\"\nEXPR_NAME = \"\/^([a-z0-9](?:[_.-]?[a-z0-9]+)*)\\\/([a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+)*)$\/\"\nEXPR_VER = \"\/v?\\d+(?:\\.\\d+){0,3}|dev-.*\/\"\nUSER = barrydit\nVENDOR = barrydit\nPACKAGE = codeinsync\nAUTHOR = Barry Dick\nEMAIL = barryd.it@gmail.com\n[GITHUB]\nGIT_EXEC = \"\/usr\/local\/bin\/git\"\nEXPR_VERSION = \"\/(?:version|v)\\s*((?:[0-9]+\\.?)+)\/i\"\nUSER = barrydit\nREPOSITORY = codeinsync\nORIGIN_URL = http:\/\/github.com\/barrydit\/codeinsync\nOAUTH_TOKEN = \nREMOTE_SHA = 2f079dda599d660b1d5e37900355b6b8b7711f76\n",
".gitignore" : "\/applications\r\n\/bin\r\n\/clientele\r\n!\/config\r\n\/dist\r\n\/node_modules\r\n!\/public\r\n\/public\/example.php\r\n\/public\/example*.php\r\n\/project?\/*\r\n!\/project?\/index.php\r\n\/resources\/js\r\n\/resources\/reels\r\n\/resources\/project\r\n\/vendor\r\n\/var\/*.html\r\n\/var\/*.php\r\n\/var\/*.json\r\n!\/var\/notes-sample.json\r\n!\/var\/notes.json\r\n!\/var\/source_code.json\r\n\/var\/packages\/*\r\n!\/var\/packages\/psr-log.php\r\n\/var\/weekly-timesheet-????-??.json\r\n!\/var\/weekly-timesheet-sample.json\r\n.env*\r\n.htaccess\r\n*.old\r\nauth.json\r\ncomposer.lock\r\ncomposer.phar\r\ncomposer-setup.php\r\nerror_log\r\nmain.js\r\nnotes*.txt\r\npackage-lock.json\r\nserver.log\r\nserver.pid\r\n!server.php\r\nsettings.json\r\n*.config.js\r\n",
".htaccess" : "RewriteEngine On\r\n\r\n# Redirect resource calls from \/assets\/ to \/resources\/\r\nRewriteRule ^resources\/(.*)$ ..\/resources\/$1 [L]",
"CHANGELOG.md" : "CHANGELOG\r\n\r\n\r\n:: PHP\r\n\r\nMany php functions either produce a forward slash, indicating the end of folder\/path\r\n\r\n  $path = dirname(__DIR__) . '\/config\/config.php'\r\n\r\n\r\n:: JavaScript\r\n\r\nJScript\r\n  tailwindcss-3.3.5.js\r\nStyle (type=\"text\/tailwindcss\")\r\n\r\n\r\n- Non-indented\/tab code means that it is included\/required\/imported\r\n\r\nJavascript libraries must be loaded in a particular order. If a library can not be loaded, \"ace is not defined\", then they are in the wrong order.\r\n\r\njQuery, jQuery-ui, ace-editor, requirejs",
"CONTRIBUTING.md" : "CONTRIBUTING",
"README.md" : "# codeinsync\n\n<p align=\"center\">\n  <img style=\"text-align: center;\" alt=\"demo loading\" src=\"https:\/\/github.com\/barrydit\/codeinsync\/assets\/6217010\/73ead4bf-8e20-47e4-a909-e259353a5275\" width=\"60%\" height=\"60%\" \/><br \/>\n  Demo Loading...\n<\/p>\n\nFront-end interface for php composer and git (push\/pull). I intend to make it a lot simplier to install php libraries from it with composer (packagist) and github, and that I want to be able to just plug the code right into it, and make it work. I also wanted to show my skills off. I realize there are many other peoples content\/images that are copyrighted, but if you ask nicely, they will be removed.\n \n![app_ace_editor](https:\/\/github.com\/user-attachments\/assets\/ff747b1a-3bc5-4a07-8aaf-c92eaf287249)\n\n![image](https:\/\/github.com\/barrydit\/codeinsync\/assets\/6217010\/763efd9c-71f2-4e66-8ced-0e2b17c82da2)\n\nThe code has the ability to operate in a root directory (\/public_html\/) scenario, but only on initial install of the program, it corrects itself into a project root directory(project\/[config|public]), where the configuration files are in in config, and the web code is under public. I learned in this course of work how to use .htaccess mod rewrite, and being able to change the url in order for [project\/index.php] and [project\/public\/index.php] can still result in see the same thing. \n\n<p align=\"center\">\n  <img style=\"text-align: center;\" src=\"https:\/\/github.com\/barrydit\/codeinsync\/assets\/6217010\/cba3f3b1-3f9b-44d1-ba95-2f94d86e3994\" width=\"60%\" height=\"60%\" \/>\n<br \/>\n<img style=\"text-align: center;\" src=\"https:\/\/github.com\/barrydit\/codeinsync\/assets\/6217010\/05b4ddf4-6087-4c9c-8a8e-58cf7d9705d6\" width=\"60%\" height=\"60%\" \/>\n<br \/>\n<img style=\"text-align: center;\" src=\"https:\/\/github.com\/barrydit\/codeinsync\/assets\/6217010\/62d368bd-bc23-4dfe-a6b9-1fcc5808114e\" width=\"60%\" height=\"60%\" \/>\n<\/p>\n\nI have a set of tools that I want to be able to replicate, as well as having 1 click solutions. Git is my next project, and then php. And then I have a terminal program I am working on for skeleton. I might just put it all into 1 project here on github. You can see at the end of the gif animation, that I have basic animation skills. Enough that I can create simple screen grab videos.\n",
"composer.json" : "{\n    \"name\": \"barrydit\/codeinsync\",\n    \"description\": \"General Description\",\n    \"type\": \"project\",\n    \"homepage\": \"https:\/\/github.com\/barrydit\/codeinsync\",\n    \"require\": {\n        \"php\": \"^8.1 || ^8.2.5\",\n        \"composer\/composer\": \"^1.0\",\n        \"aura\/session\": \"^4.0\",\n        \"laminas\/laminas-session\": \"^2.5\",\n        \"kevinoo\/phpwhois\": \"dev-main\",\n        \"ipinfo\/ipinfo\" : \"^2.2.0\",\n        \"noximo\/php-colored-ascii-linechart\": \"dev-master\",\n        \"vlucas\/phpdotenv\": \"^5.6@dev\",\n        \"cboden\/ratchet\": \"^0.4.4\"\n    },\n    \"require-dev\": {\n        \"pds\/skeleton\": \"^1.0\",\n        \"squizlabs\/php_codesniffer\": \"^3.6\",\n        \"phpstan\/phpstan\": \"^1.0\",\n        \"vimeo\/psalm\": \"^4.0\",\n        \"phpmd\/phpmd\": \"^2.10\",\n        \"friendsofphp\/php-cs-fixer\": \"^3.0\"\n    },\n    \"license\": \"WTFPL\",\n    \"authors\": [\n        {\n            \"name\": \"Barry Dick\",\n            \"email\": \"barryd.it@gmail.com\"\n        }\n    ],\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"repositories\": [],\n    \"config\": {\n      \"platform-check\": false,\n      \"platform\": {\n        \"php\": \"8.1.0\"\n      }\n    }\n}\n",
"index.php" : "<?php\r\nif (isset($_GET['debug'])) \r\n  require_once 'public\/index.php';\r\nelse\r\n  die(header('Location: public\/index.php'));\r\n",
"main.js" : "import { promises as fs } from 'fs';\r\n\r\n\/\/ Use fs here\r\n\r\nconsole.log(process.env.NODE_ENV);",
"package.json" : "{\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"start\": \"NODE_ENV=development node main.js\",\r\n    \"build\": \"NODE_ENV=production webpack\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel\/core\": \"^7.23.2\",\r\n    \"@babel\/preset-env\": \"^7.23.2\",\r\n    \"babel-loader\": \"^9.1.3\",\r\n    \"webpack\": \"^5.93.0\",\r\n    \"webpack-cli\": \"^5.1.4\"\r\n  },\r\n  \"dependencies\": {\r\n    \"jquery\": \"^3.7.1\",\r\n    \"npm\": \"^10.2.3\",\r\n    \"tailwindcss\": \"^3.4.7\"\r\n  }\r\n}\r\n",
"phpunit.php" : "<?php\r\nerror_reporting(E_ALL);\r\n$autoloader = __DIR__ . '\/vendor\/autoload.php';\r\nif (! file_exists($autoloader)) {\r\n    echo \"Composer autoloader not found: $autoloader\" . PHP_EOL;\r\n    echo \"Please issue 'composer install' and try again.\" . PHP_EOL;\r\n    exit(1);\r\n}\r\nrequire $autoloader;",
"server.php" : "#!\/usr\/bin\/env php\n<?php\ndeclare(strict_types=1, ticks=1); \/\/ First Line Only!\n\nrequire_once __DIR__ . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'config.php';\n\nini_set('error_log', (!defined('APP_PATH') ? __DIR__ . DIRECTORY_SEPARATOR : APP_PATH)  . 'server.log' );\nini_set('log_errors', 'true');\n\ndefine('PID_FILE', \/*getcwd() . *\/ (!defined('APP_PATH') ? __DIR__ . DIRECTORY_SEPARATOR : APP_PATH) . 'server.pid');\n\nstrpos(PHP_OS, 'LIN') === 0 && !extension_loaded('posix') || !extension_loaded('pcntl')\n  and die('posix && pcntl required. exiting');\n\n!is_writable('\/tmp')\n  and die('must be able to write to \/tmp to continue. exiting.');\n\n\/\/!file_exists($file = posix_getpwuid(posix_getuid())['dir'].'\/.aws\/credentials')\n\/\/  and die('an aws credentials file is required. exiting file=' . $file);\n\nif (file_exists(PID_FILE) && $pid = (int) file_get_contents(PID_FILE)) {\n  if (strpos(PHP_OS, 'WIN') === 0) {\n    exec(\"tasklist \/FI \\\"PID eq $pid\\\" 2>NUL | find \/I \\\"$pid\\\" >NUL\", $output, $status);\n    if ($status === 0) {\n      error_log(\"Server is already running with PID $pid\\n\");\n      echo \"Server is already running with PID $pid\\n\";\n      exit(1);\n    }\n  } else {\n    if (extension_loaded('pcntl') && function_exists('posix_kill') && posix_kill($pid, 0)) {\n      error_log(\"Server is already running with PID $pid\\n\");\n      echo \"Server is already running with PID $pid\\n\";\n      exit(1);\n    }\n  }\n} else if (isset($_SERVER['SUPERVISOR_ENABLED']) && $_SERVER['SUPERVISOR_ENABLED'] == '1') {\n  touch(PID_FILE);\n  exit(1);\n}\nfile_put_contents(PID_FILE, $pid = getmypid());\n\n\/**\n * Set the title of our script that ps(1) sees\n *\/\nif (!cli_set_process_title($title = basename(__FILE__))) {\n  echo \"Unable to set process title for PID $pid...\\n\";\n  exit(1);\n} else {\n  echo \"The process title '$title' has been set for your process!\\n\";\n  strpos(PHP_OS, 'LIN') === 0 and cli_set_process_name($title);\n  \/**\n   * Summary of cli_set_process_name\n   * @param mixed $title\n   * @throws Exception\n   * @return void\n   *\/\n  function cli_set_process_name($title)\n  {\n    file_put_contents('\/proc\/'.getmypid().'\/comm',$title);\n  }\n}\n\nset_time_limit(0);\n\n\/\/dd(get_defined_constants()); \/\/ get_required_files()\ndefine('SERVER_HOST', defined('APP_HOST') ? APP_HOST : '0.0.0.0');\ndefine('SERVER_PORT', defined('APP_PORT') ? APP_PORT : 8080);\n\n!empty($parsed_args = parseargs())\n  and print(\"Argv(s): \" . var_export($parsed_args, true) . \"\\n\");\n\n  \/\/ ps aux | grep server.php\n  \/\/ kill -SIGTERM <PID>\n  \/\/ kill -SIGINT <PID>\n  \/\/ kill -SIGSTOP <PID>\n  \/\/ kill -SIGCONT <PID>\n  \n  \/\/ [1]+  Stopped                 php server.php\n  \/\/ kill -SIGKILL \/ -9 <PID>\n  \/\/ [1]+  Killed                  php server.php\n\n  \/\/ Signal handler to gracefully shutdown\n  \/**\n   * Summary of signalHandler\n   * @param mixed $signal\n   * @throws \\Exception\n   * @return never\n   *\/\n  function signalHandler($signal) {\n    global $running, $socket, $server, $stream;\n    switch ($signal) {\n      case SIGCHLD:\n        while (pcntl_waitpid(-1, $status, WNOHANG) > 0) {\n          \/\/ Reap child processes\n        }\n        break;\n      case SIGTERM:\n      case SIGINT:\n        echo 'Shutting down server... PID=' . getmypid() . \"\\n\";\n        Logger::error('Shutting down server... PID=' . getmypid());\n        \/\/fclose($server); \n        unlink(PID_FILE);\n        if (isset($socket) && is_resource($stream)) {\n          if (extension_loaded('sockets')) {\n            socket_write($stream, 'Shutting down server... PID=' . getmypid());\n            socket_close($socket);\n          } elseif (get_resource_type($socket) == 'stream') {\n            fwrite($stream, 'Shutting down server... PID=' . getmypid());\n            fclose($socket);\n          }\n        }\n        $running = false;\n        break;\n    }\n    exit(1);\n  }\n\n  pcntl_async_signals(true); \/\/ Turn on asynchronous signal handling\n\n  \/\/ Register signal handlerfor SIGCHLD, SIGTERM, and SIGINT\n  \/\/pcntl_signal(SIGCHLD, 'signalHandler'); \/\/ hangs on sockets with empty cmd: on loop\n  pcntl_signal(SIGTERM, 'signalHandler');\n  pcntl_signal(SIGINT, 'signalHandler');\n\nfunction clientInputHandler($input) {\n    global $socket, $stream, $running, $manager;\n\n    if ($input == '') return;\n    error_log('Client [Input]: ' . trim($input));\n    echo 'Client [Input]: ' . trim($input) . \"\\n\";\n    \/\/$input = trim($input);\n    $output = '';\n\n    if (preg_match('\/^cmd:\\s*(shutdown|restart|server\\s*(shutdown|restart))\\s*?(?:(-f))(?=\\r?\\n$)?\/si', $input, $matches)) { \n      \/\/signalHandler(SIGTERM); \/\/ $running = false;\n      $output = var_export($matches, true);\n      if ($matches[3] == '-f')\n        signalHandler(SIGTERM);\n    } elseif (preg_match('\/^cmd:\\s*server\\s*status(?=\\r?\\n$)?\/si', $input)) {\n      $output = 'Server is running... PID=' . getmypid();\n    } elseif (preg_match('\/^cmd:\\s*chdir\\s*(.*)(?=\\r?\\n$)?\/si', $input, $matches)) {\n      ini_set('log_errors', 'false');\n      $output = \"Changing directory to \" . ($path = APP_PATH . APP_ROOT . trim($matches[1]) . '\/');\n      if ($path = realpath($path)) {\n        $output = \"Changing step 2 directory to $matches[1]\";\n        $resultValue = (function() use ($path) {\n          \/\/ Replace the escaped APP_PATH and APP_ROOT with the actual directory path\n          if (realpath($_GET['path'] = preg_replace('\/' . preg_quote(APP_PATH . APP_ROOT, '\/') . '\/', '', $path)) == realpath(APP_PATH . APP_ROOT))\n            $_GET['path'] = '';\n\n          \/\/dd('Path: ' . $_GET['path'] . \"\\n\", false);\n          ob_start();\n          require 'public\/app.directory.php';\n          ob_end_clean();\n          return $tableGen();\/\/ $app['directory']['body'];\n        })();\n        $output = $resultValue;\n      }\n\n    } elseif (preg_match('\/^cmd:\\s*edit\\s*(.*)(?=\\r?\\n$)?\/si', $input, $matches)) {\n      ini_set('log_errors', 'false');\n      if (realpath($file = APP_PATH . APP_ROOT . ($_GET['path'] ?? '') . trim($matches[1])))\n        $output = file_get_contents($file);\n    } elseif (preg_match('\/^cmd:\\s*server\\s*backup(?=\\r?\\n$)?\/si', $input, $matches)) {\n      require_once 'public\/index.php';\n\n      $files = get_required_files();\n      $baseDir = APP_PATH;\n      $organizedFiles = [];\n      $directoriesToScan = [];\n      \n      \/\/ Collect directories from the list of files\n      foreach ($files as $file) {\n          $relativePath = str_replace($baseDir, '', $file);\n          $directory = dirname($relativePath);\n          if (!in_array($directory, $directoriesToScan)) {\n              $directoriesToScan[] = $directory;\n          }\n          \/\/ Add the relative path to the organizedFiles array if it is a .php file and not already present\n          if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'php' && !in_array($relativePath, $organizedFiles)) {\n            $organizedFiles[] = $relativePath;\n          } else if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'htaccess' && !in_array($relativePath, $organizedFiles)) {\n            $organizedFiles[] = $relativePath;\n          }\n      }\n            \n      \/\/ Add non-recursive scanning for the root baseDir for *.php files\n      $rootPhpFiles = glob(\"{$baseDir}{*.php,.env.bck,.gitignore,.htaccess,*.md,LICENSE,*.js,composer.json,package.json,settings.json}\", GLOB_BRACE);\n      foreach ($rootPhpFiles as $file) {\n          if (is_file($file)) {\n              $relativePath = str_replace($baseDir, '', $file);\n              \/\/ Add the relative path to the array if it is a .php file and not already present\n              if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'php' && !in_array($relativePath, $organizedFiles)) {\n                  if ($relativePath == 'composer-setup.php') continue;\n                  $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'bck' && !in_array($relativePath, $organizedFiles)) {\n                if (preg_match('\/^\\.env\\.bck\/', $relativePath))\n                  $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'gitignore' && !in_array($relativePath, $organizedFiles)) {\n                $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'htaccess' && !in_array($relativePath, $organizedFiles)) {\n                $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'md' && !in_array($relativePath, $organizedFiles)) {\n                $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'LICENSE' && !in_array($relativePath, $organizedFiles)) {\n                $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'js' && !in_array($relativePath, $organizedFiles)) {\n                $organizedFiles[] = $relativePath;\n              } elseif (pathinfo($relativePath, PATHINFO_EXTENSION) == 'json' && !in_array($relativePath, $organizedFiles)) {\n                $organizedFiles[] = $relativePath;\n              }\n          }\n      }\n      \n      \/\/ Scan the specified directories\n      scanDirectories($directoriesToScan, $baseDir, $organizedFiles);\n      \n      \/\/ Display the results\n      $sortedArray = customSort($organizedFiles);\n\n      $output = var_export($sortedArray, true);\n\n      $json = \"{\\n\";  \/\/ Display the sorted array\n\n      while ($path = array_shift($sortedArray)) {\n      $json .= match ($path) {\n        '.env.bck' => '\".env\" : ' . json_encode(file_get_contents($path)) . (end($sortedArray) != $path ? ',' : '') . \"\\n\",\n        default => '\"' . $path . '\" : ' . json_encode(file_get_contents($path)) . (end($sortedArray) != $path && !empty($sortedArray) ? ',' : '') . \"\\n\",\n      };\n      }\n      $json .= \"}\\n\";\n\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'source_code.json', $json, LOCK_EX);\n\/**\/\n    } elseif (preg_match('\/^cmd:\\s*server(\\s*variables|)(?=\\r?\\n$)?\/si', $input)) {\n      $output = var_export($_SERVER, true);\n    } elseif (preg_match('\/^cmd:\\s*(add\\s*notification)(?=\\r?\\n$)?\/si', $input)) {    \n      $output = 'Added notification...';\n      $manager->addNotification(new Notification('notifyUser2', true, 300));\n    } elseif (preg_match('\/^cmd:\\s*(include|require)\\s*(.*)(?=\\r?\\n$)?\/si', $input, $matches)) {    \n      \/\/var_dump(getcwd() . \"\/$matches[2]\");\n      require_once trim($matches[2]);\n      $output = \"Including\/Requiring... $matches[2]\";\n      var_dump(get_required_files());\n    } elseif (preg_match('\/^cmd:\\s*(notifications)(?=\\r?\\n$)?\/si', $input)) {    \n      $output = 'Notification(s)...';\n      $output .= $manager->getNotifications();\n    } elseif (preg_match('\/^cmd:\\s*(date(\\?|)|what\\s+is\\s+the\\s+date(\\?|))(?=\\r?\\n$)?\/si', $input)) { \n      $output = 'The date is: ' . date('Y-m-d');\n    } elseif (preg_match('\/^cmd:\\s*(get\\s+defined\\s+constants)(?=\\r?\\n$)?\/si', $input)) { \n      $output = var_export(get_defined_constants(true)['user'], true);\n    } elseif (preg_match('\/^cmd:\\s*(get\\s+(required|included)\\s+files)(?=\\r?\\n$)?\/si', $input)) { \n      $output = var_export(get_required_files(), true);\n    } elseif (preg_match('\/^cmd:\\s*(composer(\\s+.*|))(?=\\r?\\n$)?\/si', $input, $matches)) { \/\/ ?(?=\\r?\\n$) \/\/ ?\n      $cmd = $matches[1]; \/\/ $input\n      $output = var_export($matches, true);\n      \/\/$output = 'test ' . trim(shell_exec($cmd));\n      \/\/$output .= \" $input\";\n\n    } elseif (preg_match('\/cmd:\\s+(.*)(?=\\r?\\n$)?\/s', $input, $matches)) { \/\/ cmd: composer update\n      $cmd = $matches[1];\n      $output = trim(shell_exec(\/*$cmd*\/ 'echo $PWD'));\n      $output .= \" cmd: $cmd\";\n    } else {\n      \/\/ Process the request and send a response\n      $output = \"Hello, client! Your input was: $input\";\n\n      global $manager;\n\n      \/\/ Append notification output to the response\n      $output .= \"\\n\" . $manager->getNotificationsOutput();\n    }\n\/*\n    if ($cmd = $matches[1] ?? NULL) {\n      $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . $cmd,\n      [\n        [\"pipe\", \"r\"],\n        [\"pipe\", \"w\"],\n        [\"pipe\", \"w\"]\n      ],\n      $pipes);\n      list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\n      $output = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : \" Error: $stderr\") . (!isset($exitCode) && $exitCode == 0 ? NULL : \" Exit Code: $exitCode\");\n\n      \/\/$output = shell_exec($cmd);\n    }\n*\/\n    \/\/$_POST['cmd'] = $cmd;\n\n    \/\/require_once('public\/app.console.php');\n    error_log(\"Client [Output]: \" . (strlen($output) > 50 ? substr($output, 0, 20) . '...' : $output));\n\n    echo \"Client [Output]: \" . (strlen($output) > 50 ? substr($output, 0, 20) . \"...\\n\" : $output);\n    return $output;\n}\n\n\/\/die(var_dump(stream_get_wrappers()));\n\n$running = true;\n\n$lastExecutionTime = 0;\n$interval = 300;\n\n\/\/use Logger; \/\/ use when not using composer\n\/\/use Shutdown;\n\nLogger::init();\n\nfunction checkFileModification() {\n  global $socket, $stream, $running;\n\n  $file = __FILE__;\n\n  \/\/ Retrieve file metadata using stat()\n  $fileStats = stat($file);\n\n  \/\/ Extract the last modification time from the stat results\n  $statMtime = $fileStats['mtime']; \/\/ filemtime(__FILE__);\n\n  \/\/ Clear the file status cache\n  clearstatcache(true, $file);\n\n  \/\/ Clear OPcache if enabled\n  \/\/if (function_exists('opcache_invalidate')) opcache_invalidate(__FILE__, true);\n\n  \/\/$input = trim($input);\n  $output = '';\n\n  if ($statMtime !== filemtime($file)) {\n      $output = 'Server has been updated. Please restart. ' . date('F d Y H:i:s', $statMtime) . ' != ' . date('F d Y H:i:s', filemtime($file)) . \"\\n\"\n      . 'Server is running... PID=' . getmypid() . \"\\n\"\n      . 'Server backup...' . \"\\n\";\n\n      $output .= clientInputHandler('cmd: server backup' . PHP_EOL);\n\n      \/\/$lastModifiedTime = filemtime(__FILE__);\n\n      if (extension_loaded('sockets')) {\n        socket_write($stream, $output);\n        socket_close($stream);\n      } elseif (get_resource_type($socket) == 'stream') {\n        fwrite($stream, $output);\n        fclose($stream);\n      }\n\n      error_log(\"Client [Output]: $output\");\n      echo \"Client [Output]: $output\\n\";\n      signalHandler(SIGTERM);\n      return $output;\n  }\n}\n\n\/\/ Define some example notification functions\nfunction notifyUser1()\n{\n    echo \"Notifying user 1...\\n\";\n}\nfunction notifyUser2()\n{\n    echo \"Notifying user 2...\\n\";\n}\n\n\/\/ Create Notification objects\n$notification1 = new Notification('notifyUser1', true, 300); \/\/ Repeatable every 5 minutes\n\/\/$notification2 = new Notification('notifyUser2', false); \/\/ One-time notification\n\n\/\/ Create NotificationManager and add notifications\n$manager = new NotificationManager();\n$manager->addNotification($notification1);\n\/\/$manager->addNotification($notification2);\n\n\/\/ server.php\n\/\/ composer require cboden\/ratchet\n\/\/ Exception: Interface \"Ratchet\\MessageComponentInterface\" not found\n\n\/\/get_included_files()[0] == \nif (is_dir($path = __DIR__ . APP_BASE['vendor'] . 'cboden' . DIRECTORY_SEPARATOR . 'ratchet') && !empty(glob($path)) && file_exists(__DIR__ . APP_BASE['vendor'] . 'autoload.php')) {\n  error_log('Creating a websocket server...');\n  require_once __DIR__ . DIRECTORY_SEPARATOR . APP_BASE['vendor'] . 'autoload.php';\n  require_once __DIR__ . DIRECTORY_SEPARATOR . APP_BASE['config'] . 'classes' . DIRECTORY_SEPARATOR . 'class.websocketserver.php';\n} else\n  try {\n  error_log('Creating a stream\/socket server...');\n    \n  \/**\n   * Creates a server socket.\n   * @param mixed $address\n   * @param mixed $port\n   * @throws \\Exception\n   * @return bool|resource|Socket\n   *\/\n  function createServerSocket($address, $port) {\n    \/\/ Create the socket\n    if (!$socket = @socket_create(AF_INET, SOCK_STREAM, SOL_TCP)) {\n        throw new Exception(\"Error: Unable to create server socket: \" . socket_strerror(socket_last_error()));\n    }\n\n    \/\/ Bind the socket to the address and port\n    if (!@socket_bind($socket, $address, $port)) {\n        throw new Exception(\"Could not bind to socket: \" . socket_strerror(socket_last_error()));\n    }\n\n    \/\/ Listen for incoming connections\n    if (!@socket_listen($socket)) {\n        throw new Exception(\"Could not listen on socket: \" . socket_strerror(socket_last_error()));\n    }\n\n    \/\/ Set the socket to non-blocking mode\n    socket_set_nonblock($socket);\n\n    return $socket;\n  }\n\n  if (extension_loaded('sockets')) {\n    \/\/ Create server socket using the Sockets extension\n    $socket = createServerSocket(SERVER_HOST, SERVER_PORT);\n\n    echo '(Socket) ';\n  } elseif (get_resource_type($socket) == 'stream') {\n    \/\/ Create a TCP\/IP server socket using stream_socket_server\n    if (!$socket = @stream_socket_server('tcp:\/\/' . SERVER_HOST . ':' . SERVER_PORT, $errno, $errstr)) {\n      echo \"Error: Unable to create server socket: $errstr ($errno)\\n\";\n      unlink(PID_FILE);\n      throw new Exception(\"Could not create server socket: $errstr ($errno)\");\n    }\n\n    echo in_array('tcp', stream_get_wrappers()) ? '' : \"TCP was NOT found in stream_get_wrappers()\\n\";\n    \/\/ Set the socket to non-blocking mode\n    stream_set_blocking($socket, false);  \n    \/\/ Display server information  \n    echo '(' . get_resource_type($socket) . ') ';\n  } \n  echo 'Server started on ' . SERVER_HOST . ':' . SERVER_PORT . ' (' . PHP_OS . \") PID=$pid\\n\\n\";\n      \n  \/**\n   * Manages the scheduled task based on a given interval.\n   *\/\n  function manageScheduledTask(&$lastExecutionTime, $interval) {\n      if (time() - $lastExecutionTime >= $interval) {\n          \/\/ Execute the scheduled task\n          checkFileModification();\n\n          \/\/ Update the last execution time\n          $lastExecutionTime = time();\n      } else {\n          \/\/ Display remaining time until next execution\n          if ($interval - (time() - $lastExecutionTime) != $interval)\n            echo ($interval - (time() - $lastExecutionTime)) . ' - ' . $interval . \" seconds left\\n\";\n          \/\/sleep(1);\n      }\n  }\n\n  \/**\n   * Handles an incoming client connection for streams.\n   *\/\n  function handleStreamClientConnection($stream) {\n      \/\/ Retrieve client information\n      $clientName = stream_socket_get_name($stream, true);\n      [$clientAddress, $clientPort] = explode(':', $clientName);\n      echo \"Client connected: IP {$clientAddress}:{$clientPort} Port \\n\";\n\n      \/\/ Read and process client data\n      $data = processClientData(fread($stream, 1024));\n\n      \/\/ Send processed data back to the client\n      sendDataToClient($stream, $data);\n\n      \/\/ Close the client connection\n      fclose($stream);\n      echo \"Client Disconnected: IP {$clientAddress}:{$clientPort} Port \\n\\n\";\n  }\n\n  \/**\n   * Handles an incoming client connection for sockets.\n   *\/\n  function handleSocketClientConnection($client) {\n      \/\/ Get the client's address and port\n      if (socket_getpeername($client, $clientAddress, $clientPort)) {\n          echo \"Client connected: IP $clientAddress, Port $clientPort\\n\";\n      } else {\n          $errorCode = socket_last_error($client);\n          $errorMsg = socket_strerror($errorCode);\n          echo \"Unable to get client's address and port: [$errorCode] $errorMsg\\n\";\n      }\n\n      \/\/ Read and process client data\n      $data = processClientData(socket_read($client, 1024));\n\n      \/\/ Send processed data back to the client\n      socket_write($client, $data);\n\n      \/\/ Close the client connection\n      socket_close($client);\n      echo \"Client Disconnected: IP $clientAddress, Port $clientPort\\n\\n\";\n  }\n\n  \/**\n   * Processes the data received from the client.\n   *\/\n  function processClientData($clientMsg) {\n\n      \/\/ Process the client message\n      $data = clientInputHandler($clientMsg);\n\n\n      \/\/ Normalize line breaks\n      $dataArray = explode(\"\\n\", $data ?? '');\n      return implode(\"\\n\", $dataArray);\n  }\n\n  \/**\n   * Sends data back to the client in chunks.\n   *\/\n  function sendDataToClient($stream, $data) {\n      $totalLength = strlen($data);\n      $written = 0;\n      $chunkSize = 1024; \/\/ Adjust chunk size as needed\n\n      while ($written < $totalLength) {\n          $writeLength = min($chunkSize, $totalLength - $written);\n          $result = fwrite($stream, substr($data, $written, $writeLength));\n\n          if ($result === false) {\n              \/\/ Handle write errors here (e.g., log it, retry, etc.)\n              break;\n          }\n\n          $written += $result;\n      }\n\n      fflush($stream); \/\/ Ensure all data is sent\n  }\n\n  while ($running) {\n      \/\/ Check notifications at the start of each loop\n      $manager->checkNotifications();\n\n      \/\/ Print the time left until the next scheduled execution\n      manageScheduledTask($lastExecutionTime, $interval);\n\n      if (extension_loaded('sockets')) {\n        \/\/ Accept incoming client connections using sockets\n        if ($client = @socket_accept($socket)) {\n          handleSocketClientConnection($client);\n        }\n      } elseif (get_resource_type($socket) == 'stream') {\n        \/\/ Accept incoming client connections using streams\n        if ($stream = @stream_socket_accept($socket, -1)) {\n          handleStreamClientConnection($stream);\n        }\n      } \n\n      \/\/ Dispatch any pending signals\n      pcntl_signal_dispatch();\n\n      \/\/ Sleep for a short time to prevent busy-waiting\n      usleep(100000); \/\/ 100 ms = 0.1 s\n  }\n\n  \/\/ extension_loaded('sockets') && socket_close($socket);\n  if (extension_loaded('sockets')) {\n    socket_close($socket);\n  } elseif (get_resource_type($socket) == 'stream') {\n    fclose($socket);\n  } \n} catch (Exception $e) {\n  \/\/Logger::error($e->getMessage());\n  \/\/Shutdown::triggerShutdown($e->getMessage());\n} finally {\n  if (isset($socket) && is_resource($socket)) {\n    if (extension_loaded('sockets')) {\n      socket_close($socket);\n    } elseif (get_resource_type($socket) == 'stream') {\n      fclose($socket);\n    } \n  }\n}\n\nunlink(PID_FILE);\ndie('EOF');",
"settings.json" : "{\r\n    \"intelliphp.inlineSuggestionsEnabled\" : true\r\n}",
"tailwind.config.js" : "\/** @type {import('tailwindcss').Config} *\/\nexport default {\n  content: [\n    '.\/*.html',\n    '.\/src\/**\/*.{html,js}',\n    '.\/components\/**\/*.{js,jsx,ts,tsx,vue}',\n    '.\/resources\/**\/*.html',\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n",
"webpack.config.js" : "module.exports = {\r\n  entry: '.\/main.js', \/\/ Entry point of your application\r\n  mode: process.env.NODE_ENV === 'production' ? 'production' : 'development',\r\n  output: {\r\n    filename: 'bundle.js', \/\/ Output file name\r\n    path: __dirname + '\/dist',\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: \/\\.js$\/,\r\n        exclude: \/node_modules\/,\r\n        use: {\r\n          loader: 'babel-loader',\r\n          options: {\r\n            presets: ['@babel\/preset-env']\r\n          }\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};",
"config/classes/class.clientorproj.php" : "<?php\r\nclass clientOrProj {\r\n    public $path;\r\n\r\n    public function __construct($path) {\r\n        $this->path = $path;\r\n    }\r\n\r\n    \/\/public function getParam() {\r\n    \/\/   return $this->param;\r\n    \/\/}\r\n}",
"config/classes/class.logger.php" : "<?php\r\nclass Logger\r\n{\r\n    public static function init()\r\n    {\r\n        \/\/ Initialize your logger here (e.g., Monolog)\r\n    }\r\n\r\n    public static function error($message)\r\n    {\r\n        \/\/ Log your error message\r\n        error_log($message . '   testing');\r\n    }\r\n}\r\n",
"config/classes/class.notification.php" : "<?php\r\n\r\nclass Notification\r\n{\r\n    private $callback;\r\n    private $notified = false;\r\n    private $repeatable = false;\r\n    private $interval;\r\n    private $lastNotifiedTime;\r\n    private $output = '';\r\n\r\n    public function __construct(callable $callback, bool $repeatable = false, int $interval = 300)\r\n    {\r\n        $this->callback = $callback;\r\n        $this->repeatable = $repeatable;\r\n        $this->interval = $interval;\r\n        $this->lastNotifiedTime = time();\r\n    }\r\n\r\n    public function checkAndNotify()\r\n    {\r\n        if (!$this->notified || ($this->repeatable && (time() - $this->lastNotifiedTime) >= $this->interval)) {\r\n            ob_start();\r\n            call_user_func($this->callback);\r\n            $this->output = ob_get_clean();\r\n            $this->notified = true;\r\n            $this->lastNotifiedTime = time();\r\n        }\r\n    }\r\n\r\n    public function getOutput()\r\n    {\r\n        return $this->output;\r\n    }\r\n\r\n    public function reset()\r\n    {\r\n        $this->notified = false;\r\n    }\r\n\r\n    public function isRepeatable()\r\n    {\r\n        return $this->repeatable;\r\n    }\r\n\r\n    public function setRepeatable($repeatable)\r\n    {\r\n        $this->repeatable = $repeatable;\r\n    }\r\n\r\n    public function setInterval($interval)\r\n    {\r\n        $this->interval = $interval;\r\n    }\r\n}\r\n\r\nclass NotificationManager\r\n{\r\n    private $notifications = [];\r\n\r\n    public function addNotification(Notification $notification)\r\n    {\r\n        $this->notifications[] = $notification;\r\n    }\r\n\r\n    public function getNotifications()\r\n    {\r\n        $output = '';\r\n        foreach ($this->notifications as $notification) {\r\n            $output .= (string)$notification . \"\\n\";\r\n        }\r\n        return $output;\r\n    }\r\n\r\n    public function checkNotifications()\r\n    {\r\n        foreach ($this->notifications as $notification) {\r\n            $notification->checkAndNotify();\r\n        }\r\n    }\r\n\r\n    public function getNotificationsOutput()\r\n    {\r\n        $output = '';\r\n        foreach ($this->notifications as $notification) {\r\n            $output .= $notification->getOutput();\r\n        }\r\n        return $output;\r\n    }\r\n\r\n    public function resetNotification(Notification $notification)\r\n    {\r\n        $notification->reset();\r\n    }\r\n}",
"config/classes/class.shutdown.php" : "<?php\r\n\r\n\/**\r\n * Summary of Shutdown\r\n *\/\r\nclass Shutdown\r\n{\r\n    private static $instance = false;\r\n    \/**\r\n     * Summary of functions\r\n     * @var \r\n     *\/\r\n    private static $functions;\r\n    private static $enabled = true;\r\n    private static $shutdownMessage = null;\r\n\r\n    \/**\r\n     * Summary of __construct\r\n     *\/\r\n    private function __construct()\r\n    {\r\n        error_log(\"Shutdown constructor called.\"); \/\/ Log message to error log\r\n        self::$functions = [];\r\n        defined('APP_END') or define('APP_END', microtime(true));\r\n        $this->initializeEnv();\r\n    }\r\n\r\n    \/**\r\n     * Summary of initializeEnv\r\n     * @return void\r\n     *\/\r\n    private static function initializeEnv()\r\n    {\r\n        $iniString = '';\r\n    \r\n        \/\/ Backup the current .env file if it's not empty\r\n        if (filesize('.env') > 0) {\r\n            $envContent = file_get_contents('.env');\r\n    \r\n            \/\/ Parse the .env content and filter out GITHUB OAUTH_TOKEN\r\n            $parsedEnv = parse_ini_string($envContent, true);\r\n            if (isset($parsedEnv['GITHUB']) && isset($parsedEnv['GITHUB']['OAUTH_TOKEN'])) {\r\n                $parsedEnv['GITHUB']['OAUTH_TOKEN'] = null;\r\n            }\r\n    \r\n            $backupEnvContent = '';\r\n            foreach ($parsedEnv as $section => $data) {\r\n                if (is_array($data)) {\r\n                    $backupEnvContent .= \"[$section]\\n\";\r\n                    foreach ($data as $key => $value) {\r\n                        $value = self::convertBooleanToString($value);\r\n                        $value = self::processNestedValue($value);\r\n                        $backupEnvContent .= \"$key = $value\\n\";\r\n                    }\r\n                } else {\r\n                    $data = self::convertBooleanToString($data);\r\n                    $data = self::processNestedValue($data);\r\n                    $backupEnvContent .= \"$section = $data\\n\";\r\n                }\r\n            }\r\n    \r\n            file_put_contents('.env.bck', $backupEnvContent);\r\n        }\r\n    \r\n        \/\/ Process the main .env file\r\n        $file = (defined('APP_PATH') ? APP_PATH : '') . (defined('APP_ROOT') ? APP_ROOT : '') . '.env';\r\n    \r\n        if (is_file($file)) {\r\n            $_ENV = array_intersect_key_recursive($_ENV, parse_ini_file_multi($file));\r\n    \r\n            if (!empty($_ENV)) {\r\n                foreach ($_ENV as $key => $value) {\r\n                    \/\/ Convert boolean values to strings\r\n                    $value = self::convertBooleanToString($value);\r\n                    if (is_array($value)) {\r\n                        $iniString .= \"[$key]\\n\";\r\n                        foreach ($value as $nestedKey => $nestedValue) {\r\n                            $nestedValue = self::processNestedValue($nestedValue);\r\n                            $iniString .= \"$nestedKey = $nestedValue\\n\";\r\n                        }\r\n                    } else {\r\n                        $value = self::processNestedValue($value);\r\n                        $iniString .= \"$key = $value\\n\";\r\n                    }\r\n                }\r\n            }\r\n    \r\n            file_put_contents($file, $iniString);\r\n        } else {\r\n            file_put_contents($file, $envContent);\r\n        }\r\n    }\r\n\r\n    \/**\r\n     * Summary of convertBooleanToString\r\n     * @param mixed $value\r\n     * @return mixed\r\n     *\/\r\n    private static function convertBooleanToString($value)\r\n    {\r\n        if ($value === true || $value === false || is_bool($value)) {\r\n            return $value ? 'true' : 'false';\r\n        }\r\n        return $value;\r\n    }\r\n\r\n    \/**\r\n     * Summary of processNestedValue\r\n     * @param mixed $value\r\n     * @return string\r\n     *\/\r\n    private static function processNestedValue($value)\r\n    {\r\n        if (is_string($value) && !is_numeric($value) && preg_match('\/^\\\/.*\\\/[a-z]*$\/i', $value)) {\r\n            return \"\\\"$value\\\"\";\r\n        }\r\n        if (is_bool($value)) {\r\n            return $value ? 'true' : 'false';\r\n        }\r\n        return addslashes($value);\r\n    }\r\n\r\n    \/**\r\n     * Summary of triggerShutdown\r\n     * @param mixed $message\r\n     * @return void\r\n     *\/\r\n    public static function triggerShutdown($message)\r\n    {\r\n        self::$shutdownMessage = $message;\r\n        register_shutdown_function([self::class, 'onShutdown']);\r\n    }\r\n\r\n    \/**\r\n     * Summary of instance\r\n     * @return bool|Shutdown\r\n     *\/\r\n    public static function instance()\r\n    {\r\n        if (self::$instance == false) {\r\n            self::$instance = new self();\r\n        }\r\n\r\n        return self::$instance;\r\n    }\r\n\r\n    \/**\r\n     * Summary of onShutdown\r\n     * @return void\r\n     *\/\r\n    public static function onShutdown()\r\n    {\r\n        if (self::$enabled && self::$shutdownMessage !== null) {\r\n            if (is_callable(self::$shutdownMessage)) {\r\n                echo call_user_func(self::$shutdownMessage);\r\n            } else {\r\n                echo self::$shutdownMessage;\r\n            }\r\n        } elseif (!self::$enabled) {\r\n            foreach (self::$functions as $fnc) {\r\n                $fnc(self::$shutdownMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    \/**\r\n     * Summary of create\r\n     * @return Shutdown\r\n     *\/\r\n    public static function create()\r\n    {\r\n        return new self();\r\n    }\r\n\r\n    \/**\r\n     * Summary of setInstance\r\n     * @param mixed $instance\r\n     * @return void\r\n     *\/\r\n    public static function setInstance($instance)\r\n    {\r\n        self::$instance = $instance;\r\n    }\r\n\r\n    \/**\r\n     * Summary of setFunctions\r\n     * @param mixed $functions\r\n     * @return Shutdown\r\n     *\/\r\n    public function setFunctions($functions): self\r\n    {\r\n        self::$functions = $functions;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Summary of getEnabled\r\n     * @return mixed\r\n     *\/\r\n    public static function getEnabled()\r\n    {\r\n        return self::$enabled;\r\n    }\r\n\r\n    \/**\r\n     * Summary of setEnabled\r\n     * @param mixed $enabled\r\n     * @return bool|Shutdown\r\n     *\/\r\n    public static function setEnabled($enabled)\r\n    {\r\n        self::$enabled = $enabled;\r\n        return isset(self::$instance) ? static::instance() : self::instance();\r\n    }\r\n\r\n    public static function setShutdownMessage($message): self\r\n    {\r\n        self::$shutdownMessage = $message;\r\n        return isset(self::$instance) ? static::instance() : self::instance();\r\n    }\r\n\r\n    public function shutdown($die = true)\r\n    {\r\n        if (!self::$enabled) {\r\n            foreach (self::$functions as $fnc) {\r\n                $fnc(self::$shutdownMessage);\r\n            }\r\n        }\r\n        $message = is_callable(self::$shutdownMessage) ? call_user_func(self::$shutdownMessage) : self::$shutdownMessage;\r\n        if ($die == true) {\r\n            exit($message);\r\n        }\r\n    }\r\n\r\n    public static function handleError($errno, $errstr, $errfile, $errline)\r\n    {\r\n        self::triggerShutdown(\"Error: [$errno] $errstr - $errfile:$errline\");\r\n        return true; \/\/ To prevent PHP's internal error handler from running\r\n    }\r\n\r\n    public static function handleException($exception)\r\n    {\r\n        self::triggerShutdown(\"Exception: \" . $exception->getMessage());\r\n    }\r\n\r\n    public static function handleParseError()\r\n    {\r\n        $error = error_get_last();\r\n        if ($error !== null) {\r\n            self::triggerShutdown(\"Fatal error: \" . $error['message']);\r\n        }\r\n    }\r\n}\r\n\r\n\/\/ Register custom error and exception handlers\r\nset_error_handler([Shutdown::class, 'handleError']);\r\nset_exception_handler([Shutdown::class, 'handleException']);\r\nregister_shutdown_function([Shutdown::class, 'handleParseError']);\r\n\r\n\/**\r\n * Dumps a variable with formatting and optionally stops execution.\r\n *\r\n * @param mixed $param The variable to be dumped. Default is null.\r\n * @param bool $die Whether to stop execution after dumping the variable. Default is true.\r\n * @param bool $debug Whether to include debug information in the output. Default is true.\r\n *\r\n * @return void Returns void if execution is stopped; otherwise, returns the result of var_dump().\r\n *\/\r\nfunction dd($param = null, bool $die = true, bool $debug = true): void{\r\n    \/\/ Prepare the output with execution time information\r\n    $output = ($debug == true && !defined('APP_END') ? \r\n              'Execution time: <b>'  . round(microtime(true) - APP_START, 3) . '<\/b> secs' : \r\n              'Execution time: <b>'  . round(APP_END - APP_START, 3) . '<\/b> secs'\r\n              ) . \"<br \/>\\n\";\r\n\r\n    if ($die) {\r\n        \/\/ If $die is true, set a shutdown function to output the dump and stop execution\r\n        Shutdown::setEnabled(false)->setShutdownMessage(function() use ($param, $output) {\r\n            return '<pre><code>' . str_replace(['\\'', '\"'], '', var_export($param, true)) . '<\/code><\/pre>' . $output;\r\n        })->shutdown();\r\n    } else {\r\n        \/\/ If $die is false, output the dump and continue execution\r\n        var_dump('<pre><code>' . str_replace(['\\'', '\"'], '', var_export($param, true)) . '<\/code><\/pre>' . $output);\r\n    }\r\n}",
"config/classes/class.sockets.php" : "<?php\r\n\r\nclass SocketException extends Exception {}\r\n\r\nclass Sockets\r\n{\r\n    private $socket;\r\n    private $errstr;\r\n    private $errno;\r\n\r\n\r\n    public function __construct()\r\n    {\r\n        try {\r\n            if (!isset($_SERVER['SOCKET']) && !$this->socket = $this->openSocket(APP_HOST, APP_PORT)) {\r\n                $this->handleSocketConnection();\r\n            } elseif (APP_SELF === APP_PUBLIC) {\r\n                $this->handleClientRequest();\r\n            }\r\n        } catch (SocketException $e) {\r\n            \/\/Logger::error($e->getMessage());\r\n            \/\/Shutdown::triggerShutdown($e->getMessage());\r\n        }\r\n    }\r\n\r\n    private function openSocket($host, $port, $timeout = 5)\r\n    {\r\n        $socket = $this->createSocket($host, $port, $timeout);\r\n    \r\n        if ($socket === false) {\r\n            throw new SocketException(\"Unable to open socket: {$this->errstr}\", $this->errno);\r\n        }\r\n    \r\n        return $socket;\r\n    }\r\n    \r\n    private function createSocket($host, $port, $timeout)\r\n    {\r\n        \/\/ Your implementation of creating a socket goes here\r\n        return @fsockopen($host, $port, $this->errno, $this->errstr, $timeout);\r\n    }\r\n\r\n    private function handleSocketConnection()\r\n    {\r\n        if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\r\n            $this->handleWindowsSocketConnection();\r\n        } elseif (stripos(PHP_OS, 'LIN') === 0) {\r\n            $this->handleLinuxSocketConnection();\r\n        }\r\n    }\r\n    public static function handleLinuxSocketConnection($start = false)\r\n    {\r\n        $pidFile = (defined('APP_PATH') ? APP_PATH : dirname(__DIR__) . DIRECTORY_SEPARATOR) . 'server.pid';\r\n\r\n        if (file_exists($pidFile)) {\r\n            $pid = file_get_contents($pidFile);\r\n            if (posix_kill($pid, 0)) posix_kill($pid, SIGTERM) and unlink($pidFile);\r\n        }\r\n        if ($start)\r\n          shell_exec('nohup php server.php > \/dev\/null 2>&1 &');\r\n    }\r\n    public static function handleWindowsSocketConnection()\r\n    {\r\n        $pidFile = (defined('APP_PATH') ? APP_PATH : dirname(__DIR__) . DIRECTORY_SEPARATOR) . 'server.pid';\r\n\r\n        if (file_exists($pidFile)) {\r\n            $pid = file_get_contents($pidFile);\r\n            exec(\"tasklist \/FI \\\"PID eq $pid\\\" 2>NUL | find \/I \\\"$pid\\\" >NUL\", $output, $status);\r\n\r\n            if ($status === 0) shell_exec(\"taskkill \/PID $pid \/F\") and unlink($pidFile);\r\n        }\r\n        pclose(popen((defined('APP_PATH') ? APP_PATH : dirname(__DIR__) . DIRECTORY_SEPARATOR) . 'bin\/psexec.exe -d C:\\xampp\\php\\php.exe -f ' . APP_PATH . 'server.php', \"r\"));\r\n    }\r\n\r\n    private function handleClientRequest()\r\n    {\r\n        global $errors, $output;\r\n        $errors['server-1'] = \"Connected to Server: \" . APP_HOST . ':' . APP_PORT . \"\\n\";\r\n\r\n        \/\/ Send a message to the server\r\n        $errors['server-2'] = 'Client request: ' . $message = \"cmd: \" . $_SERVER[\"SCRIPT_FILENAME\"] . \"\\n\";\r\n\r\n        fwrite($this->socket, $message);\r\n        $output[] = (!isset($_POST['cmd']) ?: $_POST['cmd']) . ': ';\r\n\r\n        \/\/ Read response from the server\r\n        while (!feof($this->socket)) {\r\n            $response = fgets($this->socket, 1024);\r\n            $errors['server-3'] = \"Server response: $response\\n\\n\";\r\n            \/\/if (isset($output[end($output)])) $output[end($output)] .= trim($response);\r\n            \/\/else $output[] = trim($response);\r\n        }\r\n    }\r\n\r\n    public function getSocket()\r\n    {\r\n        return $this->socket;\r\n    }\r\n    public function __destruct()\r\n    {\r\n        if (isset($this->socket)) {\r\n            if (is_resource($this->socket)) {\r\n                if (get_resource_type($this->socket) == 'stream') {\r\n                    fclose($this->socket);\r\n                } else {\r\n                    socket_close($this->socket);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$socket = new Sockets();\r\n\r\nif ($_SERVER['SOCKET'] = $socket->getSocket()) \/\/ realpath(dirname(__DIR__) . DIRECTORY_SEPARATOR . 'server.php')\r\n  if ($_SERVER['SOCKET'] === false) dd($errors['APP_SOCKET'] = 'Have you checked your server.php file lately?', false);\r\n  elseif ($_SERVER['SOCKET']) {\r\n\/*\r\n    $errors['server-1'] = \"Connected to Server: \" . APP_HOST . \"\\n\";\r\n\r\n    \/\/ Send a message to the server\r\n    $errors['server-2'] = 'Client request: ' . $message = \"cmd: composer update 123 \" . $_SERVER[\"SCRIPT_FILENAME\"] . \"\\n\";\r\n\r\n    fwrite($_SERVER['SOCKET'], $message);\r\n\r\n    \/\/ Read response from the server\r\n    while (!feof($_SERVER['SOCKET'])) {\r\n      $response = fgets($_SERVER['SOCKET'], 1024);\r\n      $errors['server-3'] = \"Server response [1]: $response\\n\";\r\n      if (!empty($response)) break;\r\n    }\r\n\r\n    \/\/ Close the connection\r\n    \/\/fclose($_SERVER['SOCKET']);\r\n*\/\r\n  } else\r\n    $errors['APP_SOCKET'] = ($_SERVER['SOCKET'] ?: 'Socket is unable to connect: ') . 'No server connection.' . \"\\n\";\r\n\r\nif (!$_SERVER['SOCKET']) {\r\n\r\n  define('PID_FILE', \/*getcwd() . *\/(!defined('APP_PATH') ? __DIR__ . DIRECTORY_SEPARATOR : APP_PATH ) . 'server.pid');\r\n\r\n  if (file_exists(PID_FILE)) {\r\n    $pid = (int) file_get_contents(PID_FILE);\r\n    \/\/unlink(PID_FILE);\r\n    if (strpos(PHP_OS, 'WIN') === 0) {\r\n      exec(\"tasklist \/FI \\\"PID eq $pid\\\" 2>NUL | find \/I \\\"$pid\\\" >NUL\", $output, $status);\r\n      if ($status !== 0) {\r\n        $socket->handleWindowsSocketConnection();\r\n        \/\/error_log(\"Server is already running with PID $pid\\n\");\r\n        \/\/echo \"Server is already running with PID $pid\\n\";\r\n        \/\/exit(1);\r\n      }\r\n    } else {\r\n      if (!posix_kill($pid, 0)) {\r\n        $socket->handleLinuxSocketConnection();\r\n        \/\/error_log(\"Server is already running with PID $pid\\n\");\r\n        \/\/echo \"Server is already running with PID $pid\\n\";\r\n        \/\/exit(1);\r\n      }\r\n    }\r\n  }\r\n\r\n    $errors['APP_SOCKET'] = \"Socket is not being created: Define \\$_SERVER['SOCKET']\\n\";\r\n\r\n    if (APP_DEBUG) { \r\n        \/\/var_dump(trim($errors['APP_SOCKET']));\r\n    }\r\n}\r\n",
"config/classes/class.websocketserver.php" : "<?php\r\n\r\n(!defined('APP_SERVER') && APP_SERVER !== get_required_files()[0])\r\n  and exit(1);\r\n\r\nuse Ratchet\\MessageComponentInterface;\r\nuse Ratchet\\ConnectionInterface;\r\n\r\nclass WebSocketServer implements MessageComponentInterface {\r\n    protected $clients;\r\n\r\n    public function __construct() {\r\n        $this->clients = new \\SplObjectStorage;\r\n    }\r\n\r\n    public function onOpen(ConnectionInterface $conn) {\r\n        $this->clients->attach($conn);\r\n        echo \"New connection! ({$conn->resourceId})\\n\";\r\n    }\r\n\r\n    public function onMessage(ConnectionInterface $from, $msg) {\r\n        $data = json_decode($msg, true);\r\n        foreach ($this->clients as $client) {\r\n            if ($from !== $client) {\r\n                $client->send($msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    public function onClose(ConnectionInterface $conn) {\r\n        $this->clients->detach($conn);\r\n        echo \"Connection {$conn->resourceId} has disconnected\\n\";\r\n    }\r\n\r\n    public function onError(ConnectionInterface $conn, \\Exception $e) {\r\n        echo \"An error has occurred: {$e->getMessage()}\\n\";\r\n        $conn->close();\r\n    } \r\n  }\r\n\r\nuse Ratchet\\Server\\IoServer;\r\nuse Ratchet\\Http\\HttpServer;\r\nuse Ratchet\\WebSocket\\WsServer;\r\n\r\nif ($server = IoServer::factory(\r\n  new HttpServer(\r\n    new WsServer(\r\n      new WebSocketServer()\r\n    )\r\n  ), 8080)) \r\n\r\n  $server->run();",
"config/composer.php" : "<?php\r\n\r\nif (is_file($include = APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'autoload.php'))\r\n  if (APP_SELF == APP_PUBLIC)\r\n    if (isset($_ENV['COMPOSER']['AUTOLOAD']) && (bool) $_ENV['COMPOSER']['AUTOLOAD'] === true)\r\n      require_once $include;\r\n\r\nuse Composer\\InstalledVersions;\r\n\r\nif (isset($_ENV['COMPOSER']['EXPR_NAME']) && !defined('COMPOSER_EXPR_NAME'))\r\n  define('COMPOSER_EXPR_NAME', $_ENV['COMPOSER']['EXPR_NAME']); \/\/ const COMPOSER_EXPR_NAME = 'string only\/non-block\/ternary';\r\nelseif (!defined('COMPOSER_EXPR_NAME'))\r\n  define('COMPOSER_EXPR_NAME', '\/([a-z0-9](?:[_.-]?[a-z0-9]+)*)\\\/([a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+)*)\/'); \/\/ name\r\n\r\nif (isset($_ENV['COMPOSER']['EXPR_VER']) && !defined('COMPOSER_EXPR_VER'))\r\n  define('COMPOSER_EXPR_VER', $_ENV['COMPOSER']['EXPR_VER']); \/\/ const COMPOSER_EXPR_VER = 'string only\/non-block';\r\nelseif (!defined('COMPOSER_EXPR_VER'))\r\n  define('COMPOSER_EXPR_VER', '\/v?\\d+(?:\\.\\d+){0,3}|dev-.*\/'); \/\/ name\r\n  \r\n\/\/composer config --global --auth --unset github-oauth.github.com\r\n\/\/composer config --global github-oauth.github.com __TOKEN__\r\n\/\/putenv('COMPOSER_use-github-api=true');\r\n\/\/putenv('COMPOSER_github-oauth.github.com=BAM');\r\n\r\n\/\/ php -d xdebug.remote_enable=0 composer\r\n\/\/ php -d xdebug.remote_enable=0 composer <your_command_here>\r\n\/\/ -d xdebug.remote_enable=0 \\\r\n\/\/ -d xdebug.profiler_enable=0 \\\r\n\/\/ -d xdebug.profiler_output_dir=. \\\r\n\/\/ -d xdebug.default_enable=0\r\n\r\n\/\/ php -dxdebug.mode=debug -dxdebug.output_dir=. public\/ui_complete.php\r\n\r\n\/*\r\nforeach ($array = preg_split(\"\/\\r\\n|\\n|\\r\/\", exec(APP_SUDO . ' \/usr\/local\/bin\/composer diagnose')) as $key => $diag_line) {\r\n  dd($diag_line, false);\r\n}\r\n*\/\r\n\r\n\/\/ '(win) set VARIABLE \/ (linux\/macos) export VARIABLE '\r\n\r\nconst COMPOSER_ALLOW_SUPERUSER = true;\r\nputenv('COMPOSER_ALLOW_SUPERUSER=' . (bool) COMPOSER_ALLOW_SUPERUSER);\r\n\r\nconst COMPOSER_ALLOW_XDEBUG = false; \/\/ didn't work\r\nputenv('COMPOSER_ALLOW_XDEBUG=' . (bool) COMPOSER_ALLOW_XDEBUG);\r\n\r\nputenv('COMPOSER_DISABLE_XDEBUG_WARN=' . (bool) true);\r\n\r\n\/\/dd(getenv('COMPOSER_ALLOW_SUPERUSER'));\r\n\r\nclass ComposerConfig {\r\n  private $name;\r\n  private $version;\r\n  private $description;\r\n  \/\/ Add more properties as needed\r\n  \r\n  public function __construct($config = ['name' => 'default', 'version' => '1.0.0', 'description' => 'Default description']) {\r\n      $this->name = $config['name'];\r\n      $this->version = $config['version'];\r\n      $this->description = $config['description'];\r\n      \/\/ Assign more properties from the config array\r\n\r\n      foreach(['name', 'version', 'description', 'type', 'keywords', 'homepage', 'readme', 'time', 'license', 'authors', 'repositories', 'require', 'require-dev', 'autoload', 'autoload-dev', 'minimum-stability', 'prefer-stable', 'config'] as $property) {\r\n          if (!isset($this->{$property})) {\r\n              \/\/ throw new Exception(\"Missing property: $property\");\r\n              $this->__set($property, '');\r\n\r\n              if ($property == 'require' || $property == 'require-dev') {\r\n                $this->{$property} = new stdClass();\r\n              } elseif ($property == 'autoload' || $property == 'autoload-dev') {\r\n                $this->{$property} = new stdClass();\r\n              } elseif ($property == 'repositories') {\r\n                $this->{$property} = new stdClass();\r\n              } elseif ($property == 'authors') {\r\n                $this->{$property} = new stdClass();\r\n                $this->{$property}[] = new stdClass();\r\n                $lastAuthor = end($this->{$property});\r\n                $lastAuthor->name = $_ENV['COMPOSER']['AUTHOR'];\r\n                $lastAuthor->email = $_ENV['COMPOSER']['EMAIL'];\r\n              } elseif ($property == 'config') {\r\n                $this->{$property} = new stdClass();\r\n                $this->{$property}->{'platform-check'} = false;\r\n                $this->{$property}->{'platform'} = new stdClass();\r\n                $this->{$property}->{'platform'}->{'php'} = '7.4.0';\r\n              } else {\r\n                $this->{$property} = '';\r\n              }\r\n          }\r\n      }\r\n  }\r\n  \r\n  \/\/ Add getter methods for each property\r\n  public function getName() {\r\n      return $this->name;\r\n  }\r\n  \r\n  public function getVersion() {\r\n      return $this->version;\r\n  }\r\n  \r\n  public function getDescription() {\r\n      return $this->description;\r\n  }\r\n  \r\n  \/\/ Add more getter methods for other properties\r\n  \r\n  \/\/ Add setter methods if needed\r\n  \r\n  \/\/ Add other methods as needed\r\n  \r\n  public function __get($property) {\r\n      $property = str_replace('-', '_', $property);\r\n      $method = 'get' . ucfirst($property);\r\n      if (method_exists($this, $method)) {\r\n          return $this->$method();\r\n      }\r\n      return null;\r\n  }\r\n  \r\n  public function __set($property, $value) {\r\n      $property = str_replace('-', '_', $property);\r\n      $method = 'set' . ucfirst($property);\r\n      if (method_exists($this, $method)) {\r\n          $this->$method($value);\r\n      }\r\n  }\r\n}\r\n\r\nclass composerSchema {\r\n  public $name;\r\n  public $description;\r\n  public $version;\r\n  public $type;\r\n  public $keywords;\r\n  public $homepage;\r\n  public $readme;\r\n  public $time; \/\/date('Y-m-d H:i:s');\r\n  public $license;\r\n  public $authors;\r\n  public $repositories;\r\n  public $require;\r\n\/\/public $require_dev;  \/\/ using {'require-dev'}\r\n  public $autoload;\r\n\/\/public $autoload_dev;  \/\/ using {'autoload-dev'}\r\n\r\n  \/**\r\n   *\/\r\n  public function __construct() {\r\n  }\r\n}\r\n\r\n\r\nif (!defined('APP_CONFIG') || !in_array(APP_CONFIG, get_required_files()))\r\n  die(APP_CONFIG . ' is missing. Presumed that this file was opened on its own.');\r\n\r\nif (!function_exists('get_declared_classes')) {\r\n  $autoloadContent = file_get_contents(APP_ROOT . APP_BASE['vendor'] . 'autoload.php');\r\n  if (!preg_match('\/class\\s+ComposerAutoloaderInit([a-f0-9]+)\/', $autoloadContent, $matches))\r\n    $errors['COMPOSER-AutoloaderInit'] = 'ComposerAutoloaderInit failed to be matched.';\r\n} else if (!empty($classes = get_declared_classes()))\r\n    foreach($classes as $key => $class) {\r\n      if (preg_match('\/(ComposerAutoloaderInit[a-f0-9]+)\/', $class, $matches)) \r\n        break;\r\n      if ($class == end($classes))\r\n        $errors['COMPOSER-AutoloaderInit'] = \"ComposerAutloaderInit2 failed to be matched.\\n\";\r\n\/*\r\nCheck oauth github\r\nCheck vendor folder exists and\/or empty\r\ncomposer\/InstalledVersions.php\r\n*\/\r\n\r\n    }\r\n\r\nif (isset($matches[1])) {\r\n  define('COMPOSER_AUTOLOADERINIT', $matches[1]); \/\/ no dashes\r\n\r\n  $classesFound = [];\r\n  $foundKey = false; \/\/ Flag to indicate if key 179 has been found\r\n  foreach ($classes as $key => $class) {\r\n    if ($foundKey) {\r\n        \/\/ Now $key is the key and $item is the value\r\n        \/\/echo \"$key => $class\\n\"; \/\/ Print key-value pair\r\n        $classesFound[] = $class;\r\n    }\r\n    if (preg_match('\/' . COMPOSER_AUTOLOADERINIT . '\/', $class)) {\r\n        $classesFound[] = $class;\r\n        $foundKey = true; \/\/ Set the flag to true once key 179 is found\r\n    }\r\n  }\r\n}\r\n\r\n$loadedLibraries = [];\r\n\r\n\/\/ Load a library\r\nif (class_exists(Composer\\Autoload\\ClassLoader::class)) {\r\n    $loadedLibraries[] = 'Composer\\Autoload\\ClassLoader';\r\n}\r\n\r\n\/\/ Check if a library is loaded\r\nif (in_array(Composer\\Autoload\\ClassLoader::class, $loadedLibraries)) {\r\n    \/\/ The library is loaded\r\n\/\/  echo 'Library found.';\r\n    \/\/$loadedLibraries;\r\n    \r\n  if (class_exists(\"Composer\\\\InstalledVersions\")) {\r\n      $installedPackages = Composer\\InstalledVersions::getInstalledPackages();\r\n      \/\/ Process $installedPackages as needed\r\n  } else {\r\n      $errors['COMPOSER_INSTALLEDVERSIONS'] = \"The class Composer\\\\InstalledVersions is not found. Please check your Composer setup.\";\r\n  }\r\n}\r\n\r\n\/\/dd();\r\n$vendors = [];\r\n\r\n\/\/ Print information about each package\r\n\r\nif (isset($installedPackages) && !empty($installedPackages)) {\r\nforeach ($installedPackages as $key => $package) { \/\/\r\n    if (preg_match(COMPOSER_EXPR_NAME, $package, $matches))\r\n      $vendors[$key] = $matches[1];\r\n}\r\n\r\n$uniqueVendors = array_unique($vendors);\r\n\r\nforeach ($installedPackages as $key => $package) { \/\/\r\n    if (preg_match(COMPOSER_EXPR_NAME, $package, $matches))\r\n      $uniqueVendors[$matches[1]][] = $matches[2];\r\n      unset($uniqueVendors[$key]);\r\n}\r\n\r\ndefine('COMPOSER_VENDORS', $uniqueVendors);\r\n}\r\n\r\n\/*\r\n  Must be defined before the composer-setup.php can be preformed.\r\n*\/\r\n\/\/dd(get_included_files());\r\n\r\n$composerUser = !isset($_ENV['COMPOSER']['USER']) ?: $_ENV['COMPOSER']['USER'];  \r\n$componetPkg = !isset($_ENV['COMPOSER']['PACKAGE']) ?: $_ENV['COMPOSER']['PACKAGE'];\r\n$user = getenv('USERNAME') ?: (getenv('APACHE_RUN_USER') ?: getenv('USER') ?: '');\r\n\r\n\/\/ Determine the Composer home path based on the OS and user\r\n$composerHome = (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') ? \"C:\/Users\/$user\/AppData\/Roaming\/Composer\/\" : ($user === 'root' ? '\/root\/.composer\/' : '\/var\/www\/.composer\/');\r\n\r\nif (!realpath($composerHome)) {\r\n  if (@!mkdir($composerHome, 0755, true))\r\n    $errors['COMPOSER_HOME'] = $composerHome . ' does not exist. Path: ' . $composerHome;\r\n} else define('COMPOSER_HOME', $composerHome);\r\n\r\n\/\/dd($errors);\r\n\/\/dd('Composer Home: ' . $composerHome, 0);\r\n\r\nputenv(\"COMPOSER_HOME=$composerHome\" ?? $_SERVER['HOME'] . '\/.composer\/');\r\n\r\nif (!file_exists(APP_PATH . 'composer.phar')) {\r\n  (!file_exists(APP_PATH . 'composer-setup.php'))\r\n    and copy('https:\/\/getcomposer.org\/installer', 'composer-setup.php');\r\n  \r\n  $error = shell_exec('php composer-setup.php'); \/\/ php -d register_argc_argv=1\r\n\r\n  $errors['COMPOSER-PHAR'] = 'Composer setup was executed and ' . (file_exists(APP_PATH.'composer.phar') ? 'does' : 'does not') . ' exist. version='.shell_exec('php composer.phar -V') . '  error=' . $error;\r\n} else {\r\n\r\n  if (preg_match('\/Composer(?: version)? (\\d+\\.\\d+\\.\\d+) (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\/', exec(($bin = 'php composer.phar') . ' -V'), $matches))\r\n    define('COMPOSER_PHAR', ['bin' => $bin, 'version' => $matches[1], 'date' => $matches[2]]);\r\n}\r\n\r\nif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') { \/\/ DO NOT REMOVE! { .. }\r\n    if (file_exists('C:\\ProgramData\\ComposerSetup\\bin\\composer.phar')) {\r\n      if (preg_match('\/Composer(?: version)? (\\d+\\.\\d+\\.\\d+) (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\/', exec($bin = 'php C:\\ProgramData\\ComposerSetup\\bin\\composer.phar' . ' -V'), $matches))\r\n        !defined('COMPOSER_PHAR') and define('COMPOSER_PHAR', ['bin' => $bin, 'version' => $matches[1], 'date' => $matches[2]]);\r\n      !defined('COMPOSER_BIN') && defined('COMPOSER_PHAR') and define('COMPOSER_BIN', COMPOSER_PHAR);\r\n    }\r\n} else {\r\n\r\n  \/\/if (file_exists(APP_PATH . 'composer.phar'))\r\n    \/\/define('COMPOSER_PHAR', ['bin' => 'php composer.phar', version => '1.0.0']);\r\n\/*\r\n  if (file_exists(APP_PATH . 'composer.phar')) {\r\n    define('COMPOSER_PHAR', (file_exists(APP_PATH . 'composer.phar') ? APP_PATH . 'composer.phar' : '\/usr\/bin\/composer'));\r\n    define('COMPOSER_BIN', '\/usr\/bin\/composer');\r\n  } elseif (file_exists('\/usr\/local\/bin\/composer')) {\r\n    define('COMPOSER_PHAR', (file_exists(APP_PATH . 'composer.phar') ? APP_PATH . 'composer.phar' : '\/usr\/local\/bin\/composer'));\r\n    define('COMPOSER_BIN', '\/usr\/local\/bin\/composer');\r\n  }\r\n*\/\r\n    (realpath($composer_which = trim(shell_exec(APP_SUDO . 'which composer')))) or $errors['COMPOSER-WHICH'] = 'which did not find composer. Err=' . $composer_which;\r\n\r\n    foreach(array( \/*'\/usr\/local\/bin\/composer',*\/ 'php ' . APP_PATH . 'composer.phar', $composer_which) as $key => $bin) {\r\n      !isset($composer) and $composer = array();\r\n\r\n\/*\/\/*\/\r\n      if (preg_match('\/^php.*composer\\.phar$\/', $bin)) !defined('COMPOSER_PHAR') and define('COMPOSER_PHAR', [ 'bin' => 'php ' . $bin]);\r\n      else {\r\n        $proc = proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO ) . basename($bin) . ' --version;', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n        $stdout = stream_get_contents($pipes[1]);\r\n        $stderr = stream_get_contents($pipes[2]);\r\n\r\n        $exitCode = proc_close($proc);\r\n\r\n        if (preg_match('\/Composer(?: version)? (\\d+\\.\\d+\\.\\d+) (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\/', $stdout, $matches)) {\r\n\r\n          $composer[$key]['bin'] = $bin;\r\n          $composer[$key]['version'] = $matches[1];\r\n          $composer[$key]['date'] = $matches[2];        \r\n        } else {\r\n          if (empty($stdout)) {\r\n            if (!empty($stderr))\r\n              $errors['COMPOSER_VERSION'] = $stderr;\r\n          } else $errors['COMPOSER_VERSION'] = $stdout; \/\/ else $errors['COMPOSER_VERSION'] = $stdout . ' does not match $version'; }\r\n        }\r\n      }\r\n    }\r\n\r\n    usort($composer, function($a, $b) {\r\n        return version_compare($b['version'], $a['version']); \/\/ Sort in descending order based on version\r\n    });\r\n\r\n\r\n    if (empty($composer)) $errors['COMPOSER-BIN'] = 'There are no composer binaries.';\r\n    else\r\n      foreach ($composer as $key => $exec) {\r\n        if ($key == 0 || $key == 1) {\r\n\r\n          !defined('COMPOSER_BIN') and define('COMPOSER_BIN', $exec);\r\n\r\n          continue; \/\/ !break 2-loops\r\n        } else break;\r\n      }\r\n}\r\n\r\n\/\/ dd(COMPOSER_PHAR, 0);\r\n\/\/ dd(COMPOSER_BIN, 0);\r\n\r\n\/\/\r\n\/\/exec('whoami', $output, $returnCode); \/\/ or $errors['COMPOSER-WHOAMI'] = $output;\r\n\/\/if (APP_DEBUG) {\r\n\r\n$output[0] = (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') ? realpath(shell_exec(APP_SUDO . 'where composer')) : realpath(shell_exec(APP_SUDO . 'which composer'));\r\n$output[1] = shell_exec(APP_SUDO . 'composer --version') ?: $errors['COMPOSER-VERSION'] = $output[1];\r\n\r\n\r\nif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\r\n  if (!preg_match('\/Composer(?: version)? (\\d+\\.\\d+\\.\\d+) (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\/', $output[1], $matches)) {\r\n    $errors['COMPOSER-VERSION'] = $output[1];\r\n  }\r\n} else {\r\n  preg_match('\/Composer(?: version)? (\\d+\\.\\d+\\.\\d+) (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\/', $output[1], $matches) or $errors['COMPOSER-VERSION'] = $output[1];\r\n}\r\n\r\ndefined('COMPOSER_EXEC') or define('COMPOSER_EXEC', (isset($_GET['exec']) && $_GET['exec'] == 'phar' ? COMPOSER_PHAR : (defined('COMPOSER_BIN') ? ['bin' => basename(COMPOSER_BIN['bin']), 'version' => ($matches[1] ?? '')] : COMPOSER_BIN)) ?? COMPOSER_PHAR);\r\n\r\nif (is_array(COMPOSER_EXEC))\r\n  define('COMPOSER_VERSION', COMPOSER_EXEC['version']);\r\nelse\r\n  define('COMPOSER_VERSION', COMPOSER_PHAR['version']);\r\n\r\n$configJsonPath = COMPOSER_HOME . 'config.json';\r\n\r\nif (!file_exists($configJsonPath)) {\r\n    if (!touch($configJsonPath)) {\r\n      $errors['COMPOSER_CONFIG'] = \"$configJsonPath is unable to be created.\";\r\n    } else {\r\n      file_put_contents($configJsonPath, '{}');\r\n    }\r\n}\r\n\r\nif (realpath($configJsonPath)) {\r\n    define('COMPOSER_CONFIG', [\r\n      'json' => '{}',\r\n      'path' => $configJsonPath\r\n    ]);\r\n}\r\n\r\n$authJsonPath = COMPOSER_HOME . 'auth.json';\r\n\r\nif (!file_exists($authJsonPath)) {\r\n    if (!touch($authJsonPath)) {\r\n      $errors['COMPOSER_AUTH'] = \"$authJsonPath is unable to be created.\";\r\n    } else {\r\n      file_put_contents($authJsonPath, '{\"github-oauth\": {\"github.com\": \"\"}}');\r\n    }\r\n}\r\n\r\nif (realpath($authJsonPath)) {\r\n  putenv('COMPOSER_AUTH=' . (filesize($authJsonPath) == 0 || trim(file_get_contents($authJsonPath)) == false ? '{\"github-oauth\": {\"github.com\": \"\"}}' : trim(str_replace([' ', \"\\r\\n\", \"\\n\", \"\\r\"], '', file_get_contents($authJsonPath)))));\r\n\r\n  define('COMPOSER_AUTH', [\r\n    'json' => getenv('COMPOSER_AUTH'),\r\n    'path' => $authJsonPath,\r\n    'token' => json_decode(getenv('COMPOSER_AUTH')\/*, true *\/)->{'github-oauth'}->{'github.com'}\r\n    ]);\r\n}\r\n\r\nputenv('COMPOSER_TOKEN=' . (COMPOSER_AUTH['token'] ?? 'static token')); \/\/ <GITHUB_ACCESS_TOKEN>\r\n\r\nputenv('PWD=' . APP_PATH . APP_ROOT);\r\n\r\n\/\/dd(file_get_contents($authJsonPath)); \/\/ json_decode(getenv('COMPOSER_AUTH') ?? file_get_contents($authJsonPath) \/*, true *\/)\r\n\r\n\/*\r\n  This section of code will need to correspond to a project\r\n  \r\n    A project file will need to look for first, and then look for the applications' composer.json\r\n    \r\n       Can a constant be a object, or does an object need to be able to write to itself ...\r\n     \r\n       If !defined(COMPOSER_JSON) and define('COMPOSER_JSON', APP_PATH . '\/composer.json');\r\n*\/\r\n\r\n\/* library, project, metapackage, composer-plugin ... Package type *\/\r\n$composer_exec = defined('COMPOSER_PHAR') && COMPOSER_EXEC['bin'] == COMPOSER_PHAR['bin'] ? COMPOSER_PHAR['bin'] : COMPOSER_EXEC['bin'];\r\n\r\n\/*\r\nAPP_WORK[client]\r\n\r\nAPP_CLIENT \/ APP_PROJECT APP_ {key(APP_WORK)}\r\n  [path]\r\n  [user]\r\n*\/\r\n\r\nif (defined('APP_ENV') and APP_ENV == 'development') {\r\n  if (defined('APP_CLIENT') || defined('APP_PROJECT'))\r\n    $$c_or_p = APP_CLIENT ?? APP_PROJECT;\r\n  else {\r\n    $c_or_p = 'client';\r\n    $$c_or_p = new stdClass();\r\n    $$c_or_p->path = APP_PATH;\r\n    $$c_or_p->name = 'www';\r\n    define('APP_CLIENT', $$c_or_p);\r\n  }\r\n\r\n  if (!isset($c_or_p) && !is_object($$c_or_p))\r\n    $errors['COMPOSER_CLIENT-PROJECT'] = '$c_or_p is not set. No project or client was selected. Using APP as client.';\r\n  else {\r\n    \/\/die('test');\r\n\r\n    ob_start(); ?>\r\n<?= $composer_exec; ?> init --quiet --no-interaction --working-dir=\"<?= APP_PATH . APP_ROOT; ?>\" --name=\"<?= $composerUser . '\/' . $$c_or_p->name; ?>\" --description=\"General Description\" --author=\"Barry Dick <barryd.it@gmail.com>\" --type=\"project\" --homepage=\"https:\/\/github.com\/<?= $composerUser . '\/' . $$c_or_p->name; ?>\"\" --require=\"php:^7.4||^8.0\" --require=\"composer\/composer:^1.0\" --require-dev=\"pds\/skeleton:^1.0\" --stability=\"dev\" --license=\"WTFPL\"\r\n<?php\r\n    defined('COMPOSER_INIT_PARAMS')\r\n      or define('COMPOSER_INIT_PARAMS', \/*<<<TEXT TEXT*\/ ob_get_contents());\r\n    ob_end_clean();\r\n    \r\n  if (!is_dir($$c_or_p->path . APP_BASE['vendor']))\r\n    $errors['COMPOSER_INIT-VENDOR'] = 'Failed to create the vendor\/ directory. If you are seeing this. An error has occured.';\r\n    \r\n    \/\/@mkdir($$c_or_p->path . 'vendor');\r\n\r\n  \r\n\r\n\/\/ composer init --require=twig\/twig:1.13.* -n   \/\/ https:\/\/webrewrite.com\/create-composer-json-file-php-project\/\r\n\r\n\/\/ composer init --quiet --no-interaction --working-dir=\"{$$c_or_p->path}\" --require=php:^7.4|^8.0\r\n\r\n\/\/ --require-dev=\"phpunit\/phpunit:^9.5.20\"\r\n\/\/ --autoload=\"src\/\"\r\n    if (file_exists(APP_PATH . APP_ROOT . 'composer.json')) {\r\n\r\n  \/\/ clean up json -- preg_replace('\/[\\x00-\\x1F\\x80-\\xFF]\/', '', str_replace('\\\\', '\\\\\\\\', '{...}'))\r\n\r\n  \/\/($err = json_decode(str_replace('\\\\', '\\\\\\\\', file_get_contents($$c_or_p->path . 'composer.json')), null, 512, JSON_THROW_ON_ERROR)) and $error['COMPOSER-JSON'] = 'Invalid JSON: ' . $err;\r\n\r\n      if (!defined('COMPOSER_JSON'))\r\n        define('COMPOSER_JSON', ['json' =>  file_get_contents(APP_PATH . APP_ROOT . 'composer.json'), 'path' => APP_PATH . APP_ROOT . 'composer.json']);\r\n\r\n    } else {\r\n  \/\/ php composer.phar init\r\n\r\n  \/\/ \/usr\/share\/php\/Symfony\/Component\/Console\/Helper\/HelperSet.php\r\n  \/\/ Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator()\r\n  \/\/ Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in \/usr\/share\/php\/Symfony\/Component\/Console\/Helper\/HelperSet.php on line 103\r\n\r\n  \/\/ 'COMPOSER_BIN init' >> Symfony\\Component\\Console\\Helper\\...\r\n\/*  This code would be used to create \r\n  $proc = proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_INIT_PARAMS, array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n  $stdout = stream_get_contents($pipes[1]);\r\n  $stderr = stream_get_contents($pipes[2]);\r\n\r\n  $exitCode = proc_close($proc);\r\n\r\n  if (empty($stdout)) {\r\n    if (!empty($stderr))\r\n      $errors['COMPOSER_INIT'] = '$stdout is empty. $stderr = ' . $stderr;\r\n  } \/\/else $errors['COMPOSER_INIT'] = $stdout;\r\n\r\n  if (file_exists($$c_or_p->path . 'composer.json'))\r\n    define('COMPOSER_JSON', ['json' => file_get_contents($$c_or_p->path . 'composer.json'), 'path' => $$c_or_p->path . 'composer.json']);\r\n  else \r\n    if (!touch($$c_or_p->path . 'composer.json'))\r\n      $errors['COMPOSER-JSON'] = 'composer.json was unable to be created.';\r\n    else\r\n      file_put_contents($$c_or_p->path . 'composer.json', '{}');\r\n*\/\r\n    }\r\n  }\r\n  \r\n\/*\r\n  Suggested packages to be added later:\r\n    composer\/packagist\r\n    composer\/getcomposer.org\r\n*\/\r\n\r\n  \/\/$errors['COMPOSER_JSON'] = 'COMPOSER_JSON constant\/object is not defined.';\r\n\r\n\/*\r\nif (file_exists($$c_or_p->path . '\/composer.json'))\r\n(defined(strtoupper($c_or_p)) ??\r\n  defined('COMPOSER_JSON')\r\n    or define('COMPOSER_JSON', $$c_or_p->path . '\/composer.json')\r\n);\r\nelse (@!touch($$c_or_p->path . '\/composer.json')? define('COMPOSER_JSON', $$c_or_p->path . '\/composer.json') : $erros['COMPOSER-JSON'] = 'composer.json was unable to be created.');\r\n*\/\r\n} \/\/ else { }\r\ndefined('COMPOSER_JSON') or define('COMPOSER_JSON', [\r\n  'json' => (is_file(APP_ROOT . 'composer.json') ? file_get_contents(APP_ROOT . 'composer.json') : '{}'),\r\n  'path' => APP_PATH . APP_ROOT . 'composer.json'\r\n]);\r\n\r\nob_start(); \r\n$root = APP_ROOT ?? ''; \/\/ do not use APP_ROOT\r\n?>\r\n<?= $composer_exec; ?> init --quiet --no-interaction --working-dir=\"<?= APP_PATH . $root; ?>\" --name=\"<?= $composerUser . '\/' . str_replace('.', '_', basename($root) ?? $componetPkg); ?>\" --description=\"General Description\" --author=\"Barry Dick <barryd.it@gmail.com>\" --type=\"project\" --homepage=\"https:\/\/github.com\/<?= $composerUser . '\/' . str_replace('.', '_', basename($root) ?? $componetPkg); ?>\" --require=\"php:^7.4||^8.0\" --require=\"composer\/composer:^1.0\" --require-dev=\"pds\/skeleton:^1.0\" --stability=\"dev\" --license=\"WTFPL\"\r\n<?php\r\ndefined('COMPOSER_INIT_PARAMS')\r\n  or define('COMPOSER_INIT_PARAMS', \/*<<<TEXT TEXT*\/ ob_get_contents());\r\nob_end_clean();\r\n\r\nif (!realpath(APP_PATH . APP_ROOT . APP_BASE['vendor'])) {\r\n  exec(COMPOSER_INIT_PARAMS);\r\n} elseif (!realpath(APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'autoload.php')) {\r\n  exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' update', $output, $returnCode);\r\n  if ($returnCode !== 0) {\r\n    $errors['COMPOSER-INIT-UPDATE'] = $output;\r\n  }\r\n  exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' dump-autoload', $output, $returnCode);\r\n  if ($returnCode !== 0) {\r\n    $errors['COMPOSER-DUMP-AUTOLOAD'] = $output;\r\n  }\r\n}\r\n\/* Consider writing a gui that would handle the composer traffic ... *\/\r\n\r\n\r\n\/\/ dd(getcwd());\r\n\r\n\/** Loading Time: 0.134s **\/\r\n\r\n  \/\/dd(get_required_files(), true);\r\n\r\n\/\/ moved to config.php load (last)\r\n\/\/ is_file(APP_BASE['vendor'] . 'autoload.php') and require_once APP_BASE['vendor'] . 'autoload.php'; \/\/ Include Composer's autoloader\r\n\r\n\/\/dd(get_required_files());\r\n\/*\r\n\r\nuse Composer\\Console\\Application;\r\nuse Symfony\\Component\\Console\\Input\\ArrayInput;\r\nuse Symfony\\Component\\Console\\Output\\BufferedOutput;\r\n\r\n\/\/ Create a new Composer Application\r\n$application = new Application();\r\n\r\n\/\/ Create a BufferedOutput to capture the output\r\n$output = new BufferedOutput();\r\n\r\n\/\/ Create an input object with the show command\r\n$input = new ArrayInput(['command' => 'show']);\r\n\r\n\/\/ Run the show command and capture the output\r\n$exitCode = $application->run($input, $output);\r\n\r\n\/\/ Check if the command was successful\r\nif ($exitCode === 0) {\r\n    \/\/ Get the captured output and print it\r\n    $outputText = $output->fetch();\r\n    echo $outputText;\r\n} else {\r\n    \/\/ Handle the case where the command failed\r\n    echo \"Composer show command failed with exit code $exitCode\";\r\n}\r\n*\/\r\n\/*\r\n\/\/ Use the Composer\\Factory to create a Composer instance\r\n$composer = \\Composer\\Factory::create();\r\n\r\n\/\/ Get the installed repository, which contains a list of installed packages\r\n$repository = $composer->getRepositoryManager()->getLocalRepository();\r\n\r\n\/\/ Get all installed packages\r\n$packages = $repository->getPackages();\r\n\r\n\/\/ Print information about each package\r\nforeach ($packages as $package) {\r\n    echo $package->getName() . ' - ' . $package->getPrettyVersion() . PHP_EOL;\r\n}\r\n*\/\r\n\/*\r\n\/\/ Use the Composer\\Factory to create a Composer instance\r\n$composer = new \\Composer\\Semver\\Semver();\r\n\r\n\/\/ Get the list of installed packages\r\n$installedPackages = $composer::getInstalledPackages();\r\n*\/\r\n\/*\r\n\/\/ Use Composer's InstalledVersions class to get a list of installed packages\r\n$installedPackages = Composer\\InstalledVersions::getAll();\r\n\r\n\/\/ Print information about each package\r\nforeach ($installedPackages as $package) {\r\n    echo $package['name'] . ' - ' . $package['version'] . PHP_EOL;\r\n}\r\n*\/\r\n\r\n\/*\r\n\/\/ Read the installed packages from the installed.json file\r\n$installedPackages = json_decode(file_get_contents('vendor\/composer\/installed.json'), true);\r\n\r\nforeach ($installedPackages['packages']  as $package) { \/\/\r\n    echo $package['name'] . ' - ' . $package['version'] . ' - ' . $package['description']. '<br \/>' . PHP_EOL; \/\/ \r\n}\r\n*\/\r\n\r\n\/\/dd(get_declared_classes());\r\n\r\n\r\n\r\n\r\n\/* This code starts here *\/\r\n\r\n\r\n\r\n\r\n\/* Ends here *\/\r\n\r\n\r\n\/*\r\n\r\nuse Composer\\Composer;\r\nuse Composer\\Factory;\r\nuse Composer\\DependencyResolver\\Request;\r\nuse Composer\\Package\\Version\\VersionSelector;\r\nuse Composer\\Repository\\CompositeRepository;\r\nuse Composer\\Repository\\PlatformRepository;\r\n\r\n\/\/ Initialize Composer\r\n$composer = Factory::create();\r\n\r\n\/\/ Create a repository representing all known packages\r\n$repositorySet = $composer->getRepositoryManager()->getLocalRepositorySet();\r\n\r\n\/\/ Create a PlatformRepository to represent the currently installed packages\r\n$platformRepo = new PlatformRepository();\r\n\r\n\/\/ Create a CompositeRepository with both the known packages and the installed packages\r\n$compositeRepo = new CompositeRepository([$platformRepo, $repositorySet->getCanonicalLocalRepository()]);\r\n\r\n\/\/ Create a Request for the package you're looking to install\r\n$request = new Request();\r\n$request->install(['package-name' => '*']);\r\n\r\n\/\/ Get the latest version of the package\r\n$versionSelector = new VersionSelector($compositeRepo);\r\n$latestPackage = $versionSelector->findBestCandidate('package-name');\r\n\r\nif ($latestPackage !== null) {\r\n    echo 'Package is installable.';\r\n} else {\r\n    echo 'Package is not installable.';\r\n}\r\n*\/\r\n\r\n\/\/ isset($$c_or_p) and dd($$c_or_p);\r\n\r\n\/\/cd \/usr\/local\/bin\r\n\/\/curl -sS https:\/\/getcomposer.org\/installer | php \/* -- --filename=composer *\/\r\n\/\/chmod a+x composer.phar\r\n\/\/sudo mv composer \/usr\/local\/bin\/composer\r\n\/\/Change into a project directory cd \/path\/to\/my\/project\r\n\r\n\r\n\r\n\/\/defined('PHP_WINDOWS_VERSION_MAJOR') ? 'APPDATA' : 'HOME';\r\n\r\n\r\n\/\/dd(APP_PATH);\r\n\r\n\/\/require __DIR__ . DIRECTORY_SEPARATOR . APP_BASE['vendor'] . 'Git.php\/src\/Git.php';\r\n\/\/require __DIR__ . DIRECTORY_SEPARATOR . APP_BASE['vendor'] . 'Git.php\/src\/GitRepo.php';\r\n\r\n\/\/use Kbjr\\Git\\Git;\r\n\/\/use Kbjr\\Git\\GitRepo;\r\n\r\n\/\/dd(var_dump(APP_BASE));\r\n\r\n\/\/dd(APP_PATH . APP_BASE['var']);\r\n\r\n\/\/ file has to exists first\r\n\r\nis_dir(APP_PATH . APP_BASE['var']) || mkdir(APP_PATH . APP_BASE['var'], 0755);\r\n\r\nif (is_file(APP_PATH . APP_BASE['var'] . 'getcomposer.org.html')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime(APP_PATH . APP_BASE['var'] . '\/getcomposer.org.html'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/getcomposer.org\/';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($html = curl_exec($handle))) {\r\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'getcomposer.org.html', $html) or $errors['COMPOSER_LATEST'] = \"$url returned empty.\";\r\n    }\r\n  }\r\n} else {\r\n  $url = 'https:\/\/getcomposer.org\/';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($html = curl_exec($handle))) {\r\n    file_put_contents(APP_PATH . APP_BASE['var'] . 'getcomposer.org.html', $html) or $errors['COMPOSER_LATEST'] = \"$url returned empty.\";\r\n  }\r\n}\r\n\r\nlibxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n$doc = new DOMDocument(1.0, 'utf-8');\r\n$doc->loadHTML(file_get_contents(APP_PATH . APP_BASE['var'] . 'getcomposer.org.html'));\r\n\r\n$content_node = $doc->getElementById(\"main\");\r\n\r\n$node = getElementsByClass($content_node, 'p', 'latest');\r\n\r\n\/\/$xpath = new DOMXpath ( $doc ); \/\/$xpath->query ( '\/\/p [contains (@class, \"latest\")]' );\r\n\/\/dd($xpath);\r\n\r\n$pattern = '\/Latest: (\\d+\\.\\d+\\.\\d+) \\(\\w+\\)\/';\r\n\r\nif (preg_match($pattern, $node[0]->nodeValue, $matches)) {\r\n  $version = $matches[1];\r\n\r\n  define('COMPOSER_LATEST', $version);\r\n  \/\/echo \"New Version: \" . COMPOSER_LATEST . \"\\n\";\r\n} else {\r\n  $errors['COMPOSER_LATEST'] = $node[0]->nodeValue . ' did not match $version';\r\n}\r\n\r\nif (defined('COMPOSER_JSON') && !empty(COMPOSER_JSON['json'])) {\r\n  $composer_obj = json_decode(COMPOSER_JSON['json']);\r\n} else {\r\n  $composer_obj = json_decode(json_encode(new composerConfig(), true)); \r\n  $composer_obj->{'require'} = new stdClass(); \/\/(array) ['php' => '7.4||8.1'];\r\n  $composer_obj->{'require'}->{'php'} = '7.4||8.1';\r\n  $composer_obj->{'require-dev'} = new stdClass();\r\n  $composer_obj->{'require-dev'}->{'pds\/skeleton'} = '^1.0';\r\n}\r\n\r\nif (defined('COMPOSER_VERSION') && defined('COMPOSER_LATEST') && defined('APP_DEBUG')) {\r\n\/\/  if (is_file($path = APP_PATH . 'composer.lock') && is_writable($path)) \r\n\/\/    unlink($path);\r\n\r\n  if (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0) {\r\n    \/\/dd(basename(COMPOSER_EXEC['bin']) . ' self-update;'); \/\/ (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . \r\n    $proc = proc_open(basename(COMPOSER_EXEC['bin']) . ' self-update;', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n\/*\r\n\/\/fwrite($pipes[0], \"yes\");\r\n\/\/fclose($pipes[0]);\r\n\r\n$stdout = stream_get_contents($pipes[1]);\r\n$stderr = stream_get_contents($pipes[2]);\r\n\r\nfclose($pipes[1]);\r\nfclose($pipes[2]);\r\n*\/\r\n\/**\/\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n    \r\n    if (empty($stdout)) {\r\n      if (!empty($stderr))\r\n        $errors['COMPOSER_UPDATE'] = $stderr;\r\n    } else $errors['COMPOSER_UPDATE'] = $stdout;\r\n\r\n  }\r\n\r\n  if (!is_dir(APP_PATH . APP_ROOT . APP_BASE['vendor']) || !is_file(APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'autoload.php'))\r\n    exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' dump-autoload', $output, $returnCode) or $errors['COMPOSER-DUMP-AUTOLOAD'] = $output;\r\n  else\r\n    if (!empty($composer_obj->{'require'}))\r\n      foreach ($composer_obj->{'require'} as $package => $version) {\r\n        if (preg_match(COMPOSER_EXPR_NAME . 'i', $package)) continue;  \/\/ $package == 'php'\r\n        elseif (in_array($package, ['php',])) continue;\r\n        else {\r\n        \/\/echo $package . ' => ' . $version . \"\\n\" ;\r\n          $errors['COMPOSER-PACKAGE'] = $package . ' does not match the package. reg_expr=' . COMPOSER_EXPR_NAME ;\r\n          $output = [];\r\n          $returnCode = 0;\r\n          exec(\"composer show $package\", $output, $returnCode);\r\n\r\n          if ($returnCode !== 0) {\r\n            if (isset($composer_obj->{'require'}->{$package}) && is_dir(APP_PATH . APP_ROOT . APP_BASE['vendor'] . $package)) continue;\r\n            if (!empty($composer_obj->{'repositories'}))\r\n              foreach ($composer_obj->{'repositories'} as $key => $repo) { \/\/unset($composer_obj->{'repositories'});\r\n                if (!is_dir(APP_PATH . APP_ROOT . APP_BASE['vendor'] .$package)) continue; \/\/ future: consider type->path and\/or checking locally and unsetting.\r\n                \/\/strcmp(\"git.php\", basename($package) !== 0);\r\n                if (!in_array(APP_PATH . APP_ROOT . APP_BASE['vendor'] . $package, array_filter(glob(APP_PATH . APP_ROOT . APP_BASE['vendor'] . dirname($package) . '\/*'), 'is_dir')))\r\n                  if ($oldpath = preg_grep('\/^vendor\\\/' . preg_quote($package, '\/') . '\/i', glob(APP_PATH . APP_ROOT . APP_BASE['vendor'] . dirname($package) . '\/*'))[0])\r\n                    rename($oldpath, APP_PATH . APP_ROOT . APP_BASE['vendor'] . $package) or $errors['COMPOSER-INSTALL'] = $package . ' has a vendor\/package installed, but the letter case spelling did not pass.';\r\n                $repository = new stdClass();\r\n                $repository->type = 'path';\r\n                $repository->url = APP_BASE['vendor'] . $package;\r\n                if ($repository == $repo) continue;\r\n                else if (!is_dir($repo->url)) unset($composer_obj->{'repositories'}[$key]);\r\n                else $composer_obj->repositories[] = $repository;\r\n              }\r\n            else {\r\n              $repository = new stdClass();\r\n              $repository->type = 'path';\r\n              $repository->url = APP_BASE['vendor'] . $package;\r\n              if (is_dir($repository->url)) $composer_obj->repositories[] = $repository;\r\n            }\r\n          } \/\/ else { }\r\n        }\r\n      }\r\n\r\n  \/\/if (!$composer_obj->{'repositories'}) $composer_obj->{'repositories'} = [];  \r\n  if (isset($composer_obj->{'version'}) && !preg_match(COMPOSER_EXPR_VER, $composer_obj->{'version'}))\r\n    unset($composer_obj->{'version'});\r\n\r\n  \/\/!isset($composer_obj->{'prefer-stable'})\r\n  \/\/  and $composer_obj->{'prefer-stable'} = true;\r\n  \r\n  if (!is_file(COMPOSER_JSON['path']))\r\n    file_put_contents(COMPOSER_JSON['path'], json_encode($composer_obj, JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT));\r\n\r\n\/* Previous unlink('composer.lock') location *\/\r\n\r\n  \/\/if (check_http_status()) {\r\n\r\n    $vendors = $dirs_diff = [];\r\n\r\n\/\/$dirs = array_filter( glob( APP_BASE['vendor'] . '*'), 'is_dir');\r\n    if (defined('COMPOSER_VENDORS'))\r\n      foreach (COMPOSER_VENDORS as $vendor => $packages) {\r\n        if ($vendor == basename('bin')) continue;\r\n        if ($vendor == 'barrydit') continue;\r\n        if (in_array(APP_ROOT . APP_BASE['vendor'] . $vendor, array_filter(glob(APP_ROOT . APP_BASE['vendor'] . $vendor . ''), 'is_dir'))) continue;\r\n        else $dirs_diff[] = basename($vendor);\r\n\r\n        if (!isset($uniqueNames[$vendor])) {\r\n          $uniqueNames[$vendor] = true;\r\n          $vendors[] = $vendor;\r\n        }\r\n      }\r\n\r\n    if (!isset($dirs_diff) && !empty($dirs_diff))\r\n      dd($dirs_diff);\r\n    else $dirs_diff = [];\r\n\r\n\/\/dd($vendors);\r\n\r\n    if (!empty(array_diff($vendors, $dirs_diff)) ) {\r\n\r\n      \/\/if (!$_SERVER['SOCKET']) $_SERVER['SOCKET'] = openSocket(APP_HOST, 12345); \/\/ \r\n\/\/dd($_SERVER['SOCKET']);\r\n      if (isset($_SERVER['SOCKET']) && $_SERVER['SOCKET'] !== false) {\r\n\/*\r\nlist($server, $port) = explode(PATH_SEPARATOR, APP_HOST . PATH_SEPARATOR . APP_PORT); \/\/ 127.0.0.1:12345   \r\n$errors['server-1'] = \"Connected to Server: \" . $server . PATH_SEPARATOR . $port . \"\\n\"; \/\/ APP_SERVER || APP_HOST\r\n\r\n\/\/ Send a message to the server\r\n$errors['server-2'] = 'Client request: ' . $message = \"cmd: composer update \" . \"\\n\";\r\n\r\nfwrite($_SERVER['SOCKET'], $message);\r\n\r\n\/\/ Read response from the server\r\nwhile (!feof($_SERVER['SOCKET'])) {\r\n    $response = fgets($_SERVER['SOCKET'], 1024);\r\n    $errors['server-3'] = \"Server response [2]: $response\\n\";\r\n    if (!empty($response)) break;\r\n}\r\n\r\n\/\/ Close the connection\r\n\/\/fclose($_SERVER['SOCKET']);\r\n*\/\r\n      } else {\r\n        $proc = proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' update', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n        list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n        if ($exitCode !== 0)\r\n          if (empty($stdout)) {\r\n            if (!empty($stderr))\r\n              $errors['COMPOSER-UPDATE'] = $stderr;\r\n          } else $errors['COMPOSER-UPDATE'] = $stdout;\r\n      \/\/else $debug['COMPOSER-UPDATE'] = '$stdout=' $stdout . \"\\n\".  '$stderr = ' . $stderr;\r\n    \r\n        (preg_match('\/Composer is operating significantly slower than normal because you do not have the PHP curl extension enabled.\/m', $stdout))\r\n          and $errors['ext\/curl'] = 'PHP cURL needs to be installed and enabled.';\r\n      }\r\n\r\n    }\r\n\r\n  if (!empty($errors) && isset($errors['COMPOSER-UPDATE'])) {\r\n\r\n    $problems = [];\r\n    if (preg_match_all('\/Problem \\d+.*?(?=\\r?\\nProblem \\d+|\\r?\\n$)\/s', $errors['COMPOSER-UPDATE'], $matches)) {\r\n      foreach ($matches[0] as $problem) {\r\n          \/\/ Extract problem ID\r\n          preg_match('\/Problem (\\d+)\/', $problem, $idMatch);\r\n          $problemId = $idMatch[1];\r\n  \r\n          \/\/ Extract items under the problem, excluding paths\r\n          preg_match_all('\/- (?!\\\/etc\\\/php\\\/\\d+\\.\\d+\\\/cli\\\/.*\\.ini)(.*?)(?=\\r?\\n(?!\\s*- )|\\r?\\n)\/s', $problem, $itemMatches); \/\/ --$\r\n          $items = array_map('trim', $itemMatches[1]);\r\n  \r\n          \/\/ Store the problem ID and its items\r\n          $problems = $items;\r\n      }\r\n  \r\n      \/\/ Count of problems\r\n      $problemCount = count($problems);\r\n  \r\n      \/\/ Display the results\r\n      $errors['COMPOSER-PROBLEMS'] = \"Total Problems: $problemCount\\n\";\r\n      $errors['COMPOSER-PROBARRAY'] = var_export($problems, true);\r\n    } else {\r\n      $errors['COMPOSER-PROBLEMS'] = \"No problems found.\\n\";\r\n    }\r\n\r\n    if (empty($problems) && preg_match_all('\/Problem \\d+.*?(?=\\r?\\n)$\/s', $errors['COMPOSER-UPDATE'], $matches)) {\r\n      $problems = [];\r\n      foreach ($matches[0] as $problem) {\r\n          \/\/ Extract problem ID\r\n          preg_match('\/Problem (\\d+)\/', $problem, $idMatch);\r\n          $problemId = $idMatch[1];\r\n  \r\n          \/\/ Extract items under the problem, excluding paths\r\n          preg_match_all('\/- (?!\\\/etc\\\/php\\\/\\d+\\.\\d+\\\/cli\\\/.*\\.ini)(.*?)(?=\\r?\\n(?!\\s*- )|\\r?\\n)\/s', $problem, $itemMatches); \/\/ --$\r\n          $items = array_map('trim', $itemMatches[1]);\r\n  \r\n          \/\/ Store the problem ID and its items\r\n          $problems = $items;\r\n      }\r\n  \r\n      \/\/ Count of problems\r\n      $problemCount = count($problems);\r\n  \r\n      \/\/ Display the results\r\n      $errors['COMPOSER-PROBLEMS'] = \"Total Problems: $problemCount\\n\";\r\n      $errors['COMPOSER-PROBARRAY'] = var_export($problems, true);\r\n    } else {\r\n      $errors['COMPOSER-PROBLEMS'] = \"No problems found.\\n\";\r\n    }\r\n\r\n    if (preg_match_all('\/To enable extensions, verify that they are enabled in your \\.ini files:.*?(?=\\r?\\n$)\/s', $errors['COMPOSER-UPDATE'], $matches)) {\r\n      $ini_files = [];\r\n      foreach ($matches[0] as $ini_file) {\r\n\r\n          \/\/ Extract items under the problem, excluding paths\r\n          preg_match_all('\/(?=\\\/etc\\\/php\\\/\\d+\\.\\d+\\\/cli\\\/.*\\.ini)(.*?)(?=\\r?\\n(?!\\s*- )|\\r?\\n)\/s', $ini_file, $itemMatches); \/\/ --$\r\n          $items = array_map('trim', $itemMatches[0]);\r\n  \r\n          \/\/ Store the problem ID and its items\r\n          $ini_files = $items;\r\n      }\r\n\r\n      $base_names = array_map(function($path) {\r\n        \/\/ Extract the filename without the extension\r\n        $filename = preg_replace('\/\\.ini$\/', '', basename($path));\r\n        return preg_replace('\/^\\d+-\/', '', $filename);\r\n      }, $ini_files);\r\n\r\n      \/\/ Count of problems\r\n      $ini_files_count = count($base_names);\r\n  \r\n      \/\/ Display the results\r\n      $errors['COMPOSER-INI-FILES'] = \"Total Ini Files: $ini_files_count\\n\";\r\n      $errors['COMPOSER-INIARRAY'] = var_export($base_names, true);\r\n    } else {\r\n      $errors['COMPOSER-INI-FILES'] = \"No Ini Files found.\\n\";\r\n    }\r\n\r\n\r\n    if (preg_match('\/^.*Problem \\d*(\\r?\\n)*.*- Root composer\\.json requires ([a-z0-9](?:[_.-]?[a-z0-9]+)*\\\/[a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+)) (\\^v?\\d+(?:\\.\\d+){0,3}|^dev-.*), it is satisfiable by (?:[a-z0-9](?:[_.-]?[a-z0-9]+)*\\\/[a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+))\\[\\d+(?:\\.\\d+){0,3}\\] from composer repo \\((?:[a-z]+\\:\\\/\\\/)?(?:[a-z0-9\\-]+\\.)+[a-z]{2,6}(?:\\\/\\S*)?\\) but (?:[a-z0-9](?:[_.-]?[a-z0-9]+)*\\\/[a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+))\\[(.*)\\]\/m', $errors['COMPOSER-UPDATE'], $matches)) {\r\n      if (preg_match('\/(v?\\d+(?:\\.\\d+){0,3})\/', $matches[4]))      \r\n        $composer_obj->require->{$matches[2]} = '^' . $matches[4];\r\n      elseif (preg_match('\/(dev-.*)\/', $matches[4]))\r\n        $composer_obj->require->{$matches[2]} = $matches[4];\r\n\r\n      file_put_contents(COMPOSER_JSON['path'], json_encode($composer_obj, JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT));\r\n      unset($errors['COMPOSER-UPDATE']);\r\n    }\r\n\r\n    if (preg_match('\/^.*Problem \\d*(?:\\r?\\n)*.*- Root composer\\.json requires ([a-z0-9](?:[_.-]?[a-z0-9]+)*\\\/[a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+)) (v?\\d+(?:\\.\\d+){0,3}|dev-.*)\\, found ([a-z0-9](?:[_.-]?[a-z0-9]+)*\\\/[a-z0-9](?:(?:[_.]|-{1,2})?[a-z0-9]+))\\s*\\[(v?\\d+(?:\\.\\d+){0,3}|dev-.*)(?:,|$)\/m', $errors['COMPOSER-UPDATE'], $matches)) {\r\n      \/\/ Split the fourth element by commas and extract the first part\r\n      $constraint_parts = explode(', ', $matches[4]);\r\n      $first_element = reset($constraint_parts);\r\n\r\n      if (preg_match('\/(v?\\d+(?:\\.\\d+){0,3})\/', $first_element))      \r\n        $composer_obj->require->{$matches[1]} = '^' . $first_element;\r\n      elseif (preg_match('\/(dev-.*)\/', $first_element))\r\n        $composer_obj->require->{$matches[1]} = $first_element;\r\n\r\n      file_put_contents(COMPOSER_JSON['path'], json_encode($composer_obj, JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT));\r\n      unset($errors['COMPOSER-UPDATE']);\r\n    }\r\n  }\r\n  \/\/}\r\n\r\n\/\/     while() { $errors['COMPOSER-UPDATE'] } \/\/ loop for 5 attempts to fix a problem \r\n\r\n  if (!is_file('composer.lock')) {\r\n\/**\r\n  Optimization\r\n**\/\r\n\r\n    \/\/ composer clear-cache\r\n\r\n\r\n    putenv('COMPOSER_HOME='); \/\/ TESTING\r\n    $proc = proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' install -o', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n    [$stdout, $stderr, $exitCode] = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n    if ($exitCode !== 0)\r\n      if (empty($stdout)) {\r\n        if (!empty($stderr))\r\n          $errors['COMPOSER-INSTALL'] = $stderr;\r\n      } else $errors['COMPOSER-INSTALL'] = $stdout;\r\n  \/\/else $debug['COMPOSER-INSTALL'] = '$stdout=' $stdout . \"\\n\".  '$stderr = ' . $stderr;\r\n\r\n  \/\/exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' install -o', $output, $returnCode) or $errors['COMPOSER-INSTALL'] = $output;\r\n  \r\n  }\r\n\r\n  \/\/ https:\/\/getcomposer.org\/doc\/03-cli.md\r\n\/\/  $proc = proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' validate --no-check-all --no-check-publish --no-check-version --strict', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes); \/\/ $output = shell_exec(\"cd \" . escapeshellarg(dirname(COMPOSER_JSON['path'])) . \" && \" . APP_SUDO . COMPOSER_EXEC . ' validate --no-check-all --no-check-publish --no-check-version');  dd($output);\r\n\r\n  \/\/  \".\/composer.json\" does not match the expected JSON schema:  \r\n  \/\/  - NULL value found, but an object is required\r\n\r\n  \/\/ poss. err '.\/composer.json is valid but your composer.lock has some errors'   checks composer.lock\r\n\/*\r\n  list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n  if ($exitCode !== 0) {\r\n    if (!empty($stdout)) {\r\n      $errors['COMPOSER-VALIDATE'] = $stdout;\r\n\r\n      if (preg_match('\/(?:\\s*)?\\\"\\.\\\/composer\\.json\\\" does not match the expected JSON schema:\/', $stdout))\r\n        $errors['COMPOSER-VALIDATE-JSON'] = false; \/\/'$stdout is empty. $stderr = ' . $stderr;\r\n      \r\n      if (preg_match('\/(?:\\s*)?\\.\\\/composer\\.json is valid but your composer.lock has some errors\/', $stdout)) \/\/ took off \\\"\\\"\r\n        $errors['COMPOSER-VALIDATE-LOCK'] = false; \/\/'$stdout is empty. $stderr = ' . $stderr;\r\n    }\r\n\r\n    if (!empty($stderr)) {\r\n      $errors['COMPOSER-VALIDATE-ERR'] = $stderr;\r\n\r\n      if (preg_match('\/(?:\\s*)?\\\"\\.\\\/composer\\.json\\\" does not contain valid JSON\/', $stderr))\r\n        $errors['COMPOSER-VALIDATE-JSON'] = false; \/\/'$stdout is empty. $stderr = ' . $stderr;\r\n    }\r\n    \/\/dd($errors);\r\n  }\r\n*\/\r\n}\r\n\r\n\r\n\/\/if (strpos($output, 'No errors or warnings detected') !== false)\r\n\/\/Deprecated:  strpos(): Passing null to parameter #1 ($haystack) of type string is deprecated\r\n\r\ndefined('COMPOSER_JSON')\r\n    and define('COMPOSER', ['json' => json_decode(file_get_contents($path = COMPOSER_JSON['path'])), 'path' => $path]);\r\n\r\nif (isset(COMPOSER['json']->{'require'}) && !empty(COMPOSER['json']->{'require'}))\r\n  foreach (COMPOSER['json']->require as $key => $value) {\r\n    switch ($key) {\r\n      case 'php':\r\n        continue 2;\r\n      default:\r\n        if (isset(COMPOSER['json']->require->{'composer\/composer'}) && $value === COMPOSER['json']->require->{'composer\/composer'}) {\r\n          \/\/echo \"The key is: $key\";\r\n          defined('VENDOR_JSON')\r\n            or define('VENDOR_JSON', ['json' => (is_file(APP_PATH . APP_ROOT . APP_BASE['vendor'] . $key . '\/composer.json') ? file_get_contents(APP_PATH . APP_ROOT . APP_BASE['vendor'] . $key . '\/composer.json') : '{}'), 'path' => APP_PATH . APP_ROOT . APP_BASE['vendor'] . $key . '\/composer.json']);\r\n\r\n          if (realpath(VENDOR_JSON['path']))\r\n            defined('VENDOR_JSON')\r\n              and define('VENDOR', json_decode(file_get_contents(VENDOR_JSON['path'])));\r\n          break 2;\r\n        } else {\r\n          defined('VENDOR_JSON') or define('VENDOR_JSON', ['json' => '{}', 'path' => '']);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n\/\/dd(COMPOSER['json']->{'require'}->{'php'}); \r\n\r\nif (!defined('VENDOR_JSON') && isset(COMPOSER['json']->{'require'}->{'composer'})) {\r\n  define('VENDOR_JSON', [\r\n    'json' => (is_file(APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'composer\/composer.json') ? file_get_contents(APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'composer\/composer.json') : '{}'),\r\n    'path' => APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'composer\/composer.json'\r\n  ]);\r\n}\r\n\r\n\/\/dd(COMPOSER);\r\n\/\/dd(COMPOSER);\r\n\/\/dd(VENDOR_JSON['path']);\r\n\r\n  \/\/else $errors['COMPOSER-VALIDATE'] = $output;\r\n\r\n\/\/dd(get_defined_constants(true)['user']);\r\n\/\/dd(COMPOSER_EXEC . '  ' . COMPOSER_VERSION);\r\n\r\n\r\nif (basename(dirname(APP_SELF)) == __DIR__ . DIRECTORY_SEPARATOR . 'public') {\r\n  if ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . 'ui.composer.php')) {\r\n    require_once $path;\r\n  }\r\n}\r\n\r\nif (APP_SELF == __FILE__ || (defined(APP_DEBUG) && isset($_GET['app']) && $_GET['app'] == 'composer')) {\r\n  die($app['composer']['html']);\r\n}\r\n\r\nunset($output);",
"config/config.php" : "<?php\r\ndeclare(strict_types=1); \/\/ First Line Only!\r\n\r\ndate_default_timezone_set('America\/Vancouver');\r\n\r\n$errors = []; \/\/ (object)\r\n\r\n\/\/ Custom error handler\r\n\/**\r\n * Summary of customErrorHandler\r\n * @param mixed $errno\r\n * @param mixed $errstr\r\n * @param mixed $errfile\r\n * @param mixed $errline\r\n * @return bool\r\n *\/\r\nfunction customErrorHandler($errno, $errstr, $errfile, $errline) {\r\n  global $errors;\r\n  !defined('APP_ERROR') and define('APP_ERROR', true); \/\/ $hasErrors = true;\r\n  !defined('APP_DEBUG') and define('APP_DEBUG', APP_ERROR);\r\n\r\n  foreach([\r\n    E_ERROR => 'Error',\r\n    E_WARNING => 'Warning',\r\n    E_PARSE => 'Parse Error',\r\n    E_NOTICE => 'Notice',\r\n    E_CORE_ERROR => 'Core Error',\r\n    E_CORE_WARNING => 'Core Warning',\r\n    E_COMPILE_ERROR => 'Compile Error',\r\n    E_COMPILE_WARNING => 'Compile Warning',\r\n    E_USER_ERROR => 'User Error',\r\n    E_USER_WARNING => 'User Warning',\r\n    E_USER_NOTICE => 'User Notice',\r\n    E_STRICT => 'Strict Notice',\r\n    E_RECOVERABLE_ERROR => 'Recoverable Error',\r\n    E_DEPRECATED => 'Deprecated',\r\n    E_USER_DEPRECATED => 'User Deprecated',\r\n  ] as $key => $value) {\r\n    if ($errno == $key) {\r\n      $errors[$key] = \"$key => $value\\n\";\r\n      $errors[] = \"$value: $errstr in $errfile on line $errline\\n\";\r\n      break;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\/\/ Set the custom error handler\r\nset_error_handler(\"customErrorHandler\");\r\n\r\n\/\/ Enable debugging and error handling based on APP_DEBUG and APP_ERROR constants\r\n!defined('APP_ERROR') and define('APP_ERROR', false);\r\n!defined('APP_DEBUG') and define('APP_DEBUG', isset($_GET['debug']) ? TRUE : FALSE);\r\n\r\nif (APP_DEBUG || APP_ERROR) {\r\n  $errors['APP_DEBUG'] = \"Debugging is enabled.\\n\";\r\n  $errors['APP_ERROR'] = \"Error handling is enabled.\\n\";\r\n  ini_set('display_errors', 1);\r\n  ini_set('display_startup_errors', 1);\r\n  error_reporting(E_ALL\/*E_STRICT |*\/);\r\n} else {\r\n  ini_set('display_errors', 1);\r\n  ini_set('display_startup_errors', 1);\r\n  error_reporting(E_ALL\/*E_STRICT |*\/);\r\n}\r\n\r\nini_set('error_log', is_dir($path = dirname(__DIR__, 1) . DIRECTORY_SEPARATOR . 'config') ? dirname($path, 1) . DIRECTORY_SEPARATOR . 'error_log' : 'error_log');\r\nini_set('log_errors', 'true');\r\n\r\nini_set('xdebug.debug', '0'); \/\/ remote_enable\r\nini_set('xdebug.mode', 'develop'); \/\/ default_enable mode=develop,coverage,debug,gcstats,profile,trace\r\n\/\/ini_set('xdebug.mode', 'profile'); \/\/ profiler_enable\r\n\r\nputenv(\"XDEBUG_MODE=off\");\r\n\/\/ Enable output buffering\r\nini_set('output_buffering', 'On');\r\n\r\nini_set(\"include_path\", \"src\"); \/\/ PATH_SEPARATOR ;:\r\n\r\nif (count(get_included_files()) == ((version_compare(PHP_VERSION, '5.0.0', '>=')) ? 1:0 )):\r\n  exit('Direct access is not allowed.');\r\nendif;\r\n\r\nif (isset($_ENV['SHELL']['EXPR_DOMAIN']) && !defined('DOMAIN_EXPR'))\r\n  define('DOMAIN_EXPR', $_ENV['SHELL']['EXPR_DOMAIN']); \/\/ const DOMAIN_EXPR = 'string only\/non-block\/ternary';\r\nelseif(!defined('DOMAIN_EXPR'))\r\n  define('DOMAIN_EXPR', '\/(?:[a-z]+\\:\\\/\\\/)?(?:[a-z0-9\\-]+\\.)+[a-z]{2,6}(?:\\\/\\S*)?\/i'); \/\/ \/(?:\\.(?:([-a-z0-9]+){1,}?)?)?\\.[a-z]{2,6}$\/';\r\n\r\nif (isset($_ENV['SHELL']['PHP_EXEC']) && !defined('PHP_EXEC'))\r\n  define('PHP_EXEC', $_ENV['SHELL']['PHP_EXEC'] ?? '\/usr\/bin\/php'); \/\/ const DOMAIN_EXPR = 'string only\/non-block\/ternary';\r\n\/\/ \/(?:\\.(?:([-a-z0-9]+){1,}?)?)?\\.[a-z]{2,6}$\/';\r\n\r\n\/\/die(var_dump($_SERVER['PHP_SELF'] . DIRECTORY_SEPARATOR . basename($_SERVER['PHP_SELF'])));\r\n\r\n\/\/$path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR ) . 'functions.php');\r\n\r\n\/\/ (basename(__DIR__) != 'config' ?\r\n\r\n\r\n\/\/!is_file( dirname($_SERVER['PHP_SELF']) . basename($_SERVER['PHP_SELF']) ?? __FILE__) \/\/ (!empty(get_included_files()) ? get_included_files()[0] : __FILE__)\r\n\r\n\r\n\/\/if (APP_ROOT != '') {}\r\n\r\n\/\/ Retrieve the latest commit SHA of the main branch from the remote repository\r\n\r\n\/\/ Directory of this script\r\n$isFile = function ($path) use (&$paths) {\r\n  if (is_file($path)) {\r\n    $paths[] = $path;\r\n  }\r\n};\r\n\r\n$isFile(__DIR__ . DIRECTORY_SEPARATOR . 'functions.php') ?: $isFile('config\/functions.php') ?: $isFile('functions.php');\r\n\r\nif (empty($paths)) {\r\n  die(var_dump(\"functions.php was not found.\"));\r\n}\r\n\r\n\/\/ Load the required files\r\n\/\/$paths[] = __DIR__ . DIRECTORY_SEPARATOR . 'constants.php'; \/\/require('constants.php'); \r\n\r\nwhile ($path = array_shift($paths)) {\r\n  if (is_file($path = realpath($path))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(basename($path) . ' was not found. file=' . $path));\r\n  }\r\n}\r\n\r\n\/\/ Check if the dd function exists\r\nif (!function_exists('dd')) {\r\n  $errors['FUNCTIONS'] = 'functions.php failed to load. Therefore function dd() does not exist (yet).';\r\n}\r\n\r\nif (!empty($_GET['client']) || !empty($_GET['domain'])) {\r\n  $path = \/*'..\/..\/'.*\/ 'clientele\/' . $_GET['client'] . '\/';\r\n  $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\r\n  if (count($dirs) == 1) {\r\n    foreach($dirs as $dir) {\r\n      $dirs[0] = $dirs[array_key_first($dirs)];\r\n      if (preg_match(DOMAIN_EXPR, strtolower(basename($dirs[0])))) {\r\n        $_GET['domain'] = basename($dirs[0]);\r\n        break;\r\n      } else {\r\n        unset($dirs[array_key_first($dirs)]);\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n\r\n  $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\r\n  if (!empty($_GET['domain'])) {\r\n    foreach($dirs as $key => $dir) {\r\n      if (basename($dir) == $_GET['domain']) {\r\n        \/\/if (is_dir($dirs[$key].'\/public\/')) $path .= basename($dirs[$key]).'\/public\/';\r\n        $path .= basename($dirs[$key]) . DIRECTORY_SEPARATOR;\r\n        break;\r\n      }\r\n    }\r\n  } else if (!isset($_GET['domain']) && count($dirs) >= 1) {\r\n    if (preg_match(DOMAIN_EXPR, strtolower(basename(array_values($dirs)[0])))) {\r\n      $_GET['domain'] = basename(array_values($dirs)[0]);\r\n      $path .= basename(array_values($dirs)[0]) . DIRECTORY_SEPARATOR;\r\n    } else {\r\n      $path .= ($_GET['domain'] = basename(array_values($dirs)[0])) . DIRECTORY_SEPARATOR;\r\n    }\r\n  }\r\n\r\n  if (is_dir(APP_PATH . $path)) {\r\n    defined('APP_CLIENT') ?: define('APP_CLIENT', new clientOrProj($path));\r\n  }\r\n} else if (!empty($_GET['project']) && is_dir(APP_PATH . 'projects\/' . $_GET['project'])) {\r\n  $path = \/*'..\/..\/'.*\/ 'projects\/' . $_GET['project'] . '\/';\r\n  \/\/$dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\/*\r\n  if (count($dirs) == 1) {\r\n    foreach($dirs as $dir) {\r\n      $dirs[0] = $dirs[array_key_first($dirs)];\r\n      if (preg_match(DOMAIN_EXPR, strtolower(basename($dirs[0])))) {\r\n        $_GET['domain'] = basename($dirs[0]);\r\n        break;\r\n      } else {\r\n        unset($dirs[array_key_first($dirs)]);\r\n        continue;\r\n      }\r\n    }\r\n  }*\/\r\n}\r\nunset($dirs);\r\n\r\nif (!defined('APP_ROOT')) {\r\n  $path = isset($_GET['path']) && is_dir(APP_PATH . $_GET['path']) ? $_GET['path'] : null;\r\n  define('APP_ROOT', $path = realpath(APP_PATH . $path) ? $path : null);\r\n}\r\n\/\/ dd(getenv('PATH') . ' -> ' . PATH_SEPARATOR);   \r\n\r\nif (!defined('APP_CONFIG')) {\r\n  define('APP_CONFIG',  str_replace(APP_PATH, '', basename(dirname(__FILE__))) == 'config' ? __FILE__ : __FILE__);\r\n}\r\n\r\n\/\/$errors->{'CONFIG'} = 'OK';\r\n\r\n$ob_content = NULL;\r\n\r\nob_start();\r\n\r\nif (isset($_GET['project'])) {\r\n  \/\/require_once('composer.php');\r\n  \/\/require_once('project.php');\r\n\r\n  if (isset($_GET['app']) && $_GET['app'] == 'project') {\r\n    require_once 'app.project.php';\r\n  }\r\n}\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\n\r\nif (!is_dir($path = APP_PATH . 'projects')) {\r\n  $errors['projects'] = \"projects\/ directory does not exist.\\n\";\r\n  mkdir($path, 0777, true);\r\n}\r\n\r\nif (!is_file($file = APP_PATH . 'projects\/index.php')) {\r\n  $errors['projects'] = 'projects\/index.php does not exist.';\r\n  if (is_file($source_file = APP_PATH . 'var\/source_code.json')) {\r\n    $source_file = json_decode(file_get_contents($source_file));\r\n    if ($source_file) {\r\n      file_put_contents($file, $source_file->{'projects\/index.php'});\r\n    }\r\n  }\r\n  unset($source_file);\r\n} elseif (is_file(APP_PATH . 'projects\/index.php') && isset($_GET['project']) && $_GET['project'] == 'show') {\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() {\r\n    return eval('?>' . file_get_contents(APP_PATH . 'projects\/index.php'));\r\n  })->shutdown();\r\n}\r\n\r\n$_ENV = parse_ini_file_multi(APP_PATH . '.env');\r\n\r\nif (basename($dir = getcwd()) != 'config') {\r\n  if (in_array(basename($dir), ['public', 'public_html']))\r\n    chdir('..\/');\r\n\r\n  chdir(APP_PATH . APP_ROOT);\r\n  if (is_file($file = APP_PATH . APP_ROOT . '.env')) {\r\n    $env = parse_ini_file_multi(APP_PATH . APP_ROOT . '.env');\r\n    $_ENV = array_merge_recursive_distinct($_ENV, $env);\r\n\/*\r\n        foreach($env as $key => $value) {\r\n            if (is_array($value)) {\r\n                foreach($value as $k => $v) {\r\n                    \/\/ Convert boolean values to strings\r\n                    $_ENV[$key][$k] = is_bool($v) ? ($v ? 'true' : 'false') : (string) $v;\r\n                }\r\n            } else {\r\n                \/\/ Convert boolean values to strings\r\n                $_ENV[$key] = is_bool($value) ? ($value ? 'true' : 'false') : (string) $value; \/\/ putenv($key.'='.$env_var);\r\n            }\r\n        }*\/\r\n    \/\/}\r\n  }\r\n\r\n  chdir(APP_PATH);\r\n\r\n} elseif (basename(dirname(APP_SELF)) == 'public_html') { \/\/ basename(__DIR__) == 'public_html'\r\n  $errors['APP_PUBLIC'] = \"The `public_html` scenario was detected.\\n\";\r\n  \r\n  if (is_dir(dirname(APP_SELF, 2) . '\/config')) {\r\n    $errors['APP_PUBLIC'] .= \"\\t\" . dirname(APP_SELF, 2) . '\/config\/*' . ' was found. This is not generally safe-scenario.'; \r\n  }\r\n\r\n  chdir(dirname(__DIR__, 1));  \/\/dd(getcwd());\r\n    \/\/ It is under the public_html scenario\r\n    \/\/ Perform actions or logic specific to the public_html directory\r\n    \/\/ For example:\r\n    \/\/ include '\/home\/user_123\/public_html\/config.php';\r\n} elseif (basename(dirname(APP_SELF)) == 'public') {    \/\/ strpos(APP_SELF, '\/public\/') !== false\r\n  \r\n  dd(APP_BASE);\r\n\r\n  if (!is_file(APP_PATH . APP_BASE['public'] . 'install.php'))\r\n    if (@touch(APP_PATH . APP_BASE['public'] . 'install.php'))\r\n      file_put_contents(APP_PATH . APP_BASE['public'] . 'install.php', '<?php ' . <<<END\r\nif (\\$_SERVER['REQUEST_METHOD'] == 'POST') {\r\n    foreach (['composer.php', 'config.php', 'constants.php', 'functions.php', 'git.php'] as \\$file) {\r\n        if (!rename(APP_PATH . \\$file, APP_PATH . 'config' . DIRECTORY_SEPARATOR . \\$file))\r\n            \\$errors['INSTALL_DESTPATH'] .= \"(config) Failed to move '\" . APP_PATH . \"\\$file'\";\r\n    }\r\n\r\n    foreach (['composer_app.php', 'index.php'] as \\$file) {\r\n        if (!rename(APP_PATH . \\$file, APP_PATH . 'public' . DIRECTORY_SEPARATOR . \\$file))\r\n            \\$errors['INSTALL_DESTPATH'] .= \"(public) Failed to move '\" . APP_PATH . \"\\$file'\";\r\n    }\r\n\r\n    if (!is_file(APP_PATH . 'index.php'))\r\n        if (@touch(APP_PATH . 'index.php'))\r\n            file_put_contents(APP_PATH . 'index.php', '<?php require_once \\'public\/index.php\\';');\r\n\r\n    unlink(__FILE__);\r\n}\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\");\r\n\r\n?>\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  \r\n  <meta http-equiv=\"cache-control\" content=\"no-cache, no-store, must-revalidate\">\r\n  <meta http-equiv=\"pragma\" content=\"no-cache\">\r\n  <meta http-equiv=\"expires\" content=\"0\">\r\n\r\n<style>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<div style=\"position: relative; margin: 0 auto; border: 1px solid #000;\">\r\n<div style=\"position: absolute; top: 0; left: 50%; transform: translate(-50%, 10%); text-align: center; width: 570px; height: 600px; background-position: center; background-size: cover; background-repeat: no-repeat; background-image: url('\/resources\/images\/install-scenario-small.gif'); opacity: 0.8; z-index: 1; border: 1px solid #000;\">\r\n\r\n<div style=\"position: absolute; top: 225px; left: 129px; width: 230px; height: 200px; border: 1px dashed #000;\">\r\n<form>\r\n<div style=\"position: absolute; top: 30px; left: 28px;\"><input type=\"radio\" name=\"scenario\" value=\"1\" checked \/><\/div>\r\n\r\n<div style=\"position: absolute; top: 30px; right: 20px;\"><input type=\"radio\" name=\"scenario\" value=\"2\" \/><\/div>\r\n\r\n<div style=\"position: absolute; bottom: 34px; right: 20px;\"><input type=\"radio\" name=\"scenario\" value=\"3\" \/><\/div>\r\n<\/form>\r\n<\/div>\r\n\r\n<\/div>\r\n<\/div>\r\n<\/body>\r\n<\/html>\r\nEND\r\n);\r\n\r\n  if (basename(get_required_files()[0]) !== 'release-notes.php')\r\n    if (is_dir('config')) {\r\n      $previousFilename = ''; \/\/ Initialize the previous filename variable\r\n\r\n\/\/$files = glob(dirname(__DIR__) . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . '*.php');\r\n\/\/$files = array_merge($files, glob(dirname(__DIR__) . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . '**' . DIRECTORY_SEPARATOR . '*.php'));\r\n\r\n\/\/sort($files);\r\n\r\n      foreach (array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . '*.php'), 'is_file') as $includeFile) {\r\n        \/\/echo $includeFile . \"<br \/>\\n\";\r\n\r\n        if (in_array($includeFile, get_required_files())) continue; \/\/ $includeFile == __FILE__\r\n\r\n        if (!file_exists($includeFile)) {\r\n          error_log(\"Failed to load a necessary file: \" . $includeFile . PHP_EOL);\r\n          break;\r\n        } else {\r\n          $currentFilename = substr(basename($includeFile), 0, -4);\r\n    \r\n          \/\/$pattern = '\/^' . preg_quote($previousFilename, '\/')  . \/*_[a-zA-Z0-9-]*\/'(_\\.+)?\\.php$\/'; \/\/ preg_match($pattern, $currentFilename)\r\n\r\n          if (!empty($previousFilename) && strpos($currentFilename, $previousFilename) !== false) {\r\n            continue;\r\n          } else {\r\n            \/\/ dd('file:'.$currentFilename,false);\r\n\r\n            require_once $includeFile;\r\n\r\n            $previousFilename = $currentFilename;\r\n          }\r\n        }\r\n      }\r\n\r\n    } else if (!in_array($path = realpath('config.php'), get_required_files()))\r\n      require_once $path;\r\n\r\n    if (defined('APP_PROJECT')) require_once 'public\/install.php';\r\n}\r\n\r\n\r\n\/*\r\nif ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR ) . 'constants.php')) \/\/ is_file('config\/constants.php')) \r\n  if (!in_array($path, get_required_files()))\r\n    require_once $path;\r\n*\/\r\n\r\n\/\/dd(get_defined_constants(true)['user']); \/\/ true\r\n\r\n\/*\r\n\r\n\/\/ Define your installation constants\r\ndefine('INSTALL_ROOT', $_SERVER['DOCUMENT_ROOT']);  \/\/ Document root\r\ndefine('APP_ROOT', __DIR__);  \/\/ Directory of this script\r\ndefine('SRC_DIR', '..\/src\/');\r\ndefine('PUBLIC_DIR', '..\/public\/');\r\ndefine('CONFIG_DIR', '..\/config\/');\r\n\r\n\/\/ Get the request path from the URL\r\n$requestPath = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\r\n\r\n\/\/ Determine if installation is needed\r\n$installNeeded = (realpath(INSTALL_ROOT) === realpath(APP_ROOT));\r\n\r\n\/\/ Perform installation if needed\r\nif ($installNeeded) {\r\n    \/\/ Determine the target directories based on request path\r\n    $targetDirs = [\r\n        '\/' => PUBLIC_DIR,\r\n        '\/subdir\/' => SRC_DIR,\r\n        '\/config\/' => CONFIG_DIR,\r\n    ];\r\n\r\n    \/\/ Find the appropriate target directory\r\n    $targetDir = '';\r\n    foreach ($targetDirs as $pathPrefix => $dir) {\r\n        if (strpos($requestPath, $pathPrefix) === 0) {\r\n            $targetDir = $dir;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!$targetDir) {\r\n        echo \"Installation path not found for request path: $requestPath\";\r\n    } else {\r\n        \/\/ Define source and destination paths\r\n        $sourceFile = __FILE__;\r\n        $destinationFile = $targetDir . basename($sourceFile);\r\n\r\n        \/\/ Perform installation (copy the script)\r\n        if (copy($sourceFile, $destinationFile)) {\r\n            echo \"Installation successful. Copied script to: $destinationFile\";\r\n        } else {\r\n            echo \"Installation failed. Unable to copy script.\";\r\n        }\r\n    }\r\n} else {\r\n    echo \"Installation not needed.\";\r\n}\r\n\r\n*\/\r\n\r\n\/* Install code ...\r\n\r\n$installNeeded = (realpath($_SERVER['DOCUMENT_ROOT']) === realpath(APP_PATH));\r\n\r\nif ($installNeeded) {\r\n    \/\/ Define your target directories\r\n    $srcDir = APP_PATH . '..' . DIRECTORY_SEPARATOR . 'src' . DIRECTORY_SEPARATOR;\r\n    $publicDir = APP_PATH . '..' . DIRECTORY_SEPARATOR . 'public' . DIRECTORY_SEPARATOR;\r\n    $configDir = APP_PATH . '..' . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR;\r\n\r\n    \/\/ Perform installation (example: copy files)\r\n    \/\/ copy('source_path\/file.php', $srcDir . 'file.php');\r\n    \/\/ copy('source_path\/index.php', $publicDir . 'index.php');\r\n    \/\/ copy('source_path\/config.php', $configDir . 'config.php');\r\n    \r\n    echo \"Installation performed.\";\r\n} else {\r\n    echo \"Installation not needed.\";\r\n}\r\n\r\n\r\nif (dirname(APP_SELF) == __DIR__) {\r\n  if (dirname(APP_CONFIG) != 'config')\r\n    if (!is_file(APP_PATH . 'install.php'))\r\n      if (@touch(APP_PATH . 'install.php')) {\r\n        file_put_contents(APP_PATH . 'install.php', '<?php ' . <<<END\r\nforeach (['composer.php', 'config.php', 'constants.php', 'functions.php'] as \\$file) {\r\n    if (!rename(APP_PATH . \\$file, APP_PATH . 'config' . DIRECTORY_SEPARATOR . \\$file))\r\n        \\$errors['INSTALL_DESTPATH'] .= \"(config) Failed to move '\" . APP_PATH . \"\\$file'\";\r\n}\r\n\r\nforeach (['composer_app.php', 'index.php'] as \\$file) {\r\n    if (!rename(APP_PATH . \\$file, APP_PATH . 'public' . DIRECTORY_SEPARATOR . \\$file))\r\n        \\$errors['INSTALL_DESTPATH'] .= \"(public) Failed to move '\" . APP_PATH . \"\\$file'\";\r\n}\r\n\r\nif (!is_file(APP_PATH . 'index.php'))\r\n    if (@touch(APP_PATH . 'index.php'))\r\n        file_put_contents(APP_PATH . 'index.php', '<?php require_once \\'public\/index.php\\';');\r\n\r\nunlink(__FILE__);\r\nEND\r\n);\r\n      define('APP_INSTALL', true);\r\n    }\r\n}\r\n*\/\r\n\r\n\/\/(!extension_loaded('gd'))\r\n\/\/  and $errors['ext\/gd'] = 'PHP Extension: <b>gd<\/b> must be loaded inorder to export to xls for (PHPSpreadsheet).';\r\n\r\n\/\/dd(); \/\/ dd(getcwd());\r\n\r\n\/\/ var_dump(get_defined_constants(true)['user']);\r\n\r\n\/\/echo ;\r\n\/*\r\nif (is_array($errors) && !empty($errors)) { ?>\r\n<html>\r\n<head><title>Error page<\/title><\/head>\r\n<body>\r\n<ul>\r\n<?php foreach ($errors as $key => $error) { ?>\r\n  <li><?= $key . ' => ' . $error ?><\/li>\r\n<?php } ?>\r\n<\/ul>\r\n<\/body>\r\n<\/html>\r\n<?php\r\n  die();\r\n} *\/\r\n\r\nuse vlucas\\phpdotenv;\r\n\r\nif (class_exists('Dotenv')) {\r\n  $dotenv = Dotenv\\Dotenv::createImmutable(dirname(__DIR__, 1));\r\n  $dotenv->safeLoad();\r\n}\r\n\/\/dd($_ENV);\r\n\r\n\/\/ $dotenv->load();\r\n\r\n\r\n\/*\r\n$dotenv = Dotenv\\Dotenv::createImmutable(dirname(__DIR__, 1));\r\n$dotenv->safeLoad();\r\n*\/\r\ndefine('APP_ERRORS', $errors ?? (($error = ob_get_contents()) == null ? null : \"ob_get_contents() maybe populated\/defined\/errors... error=$error\" ));\r\nob_end_clean();\r\n\r\n\r\n\/\/(defined('APP_DEBUG') && APP_DEBUG) and $errors['APP_DEBUG'] = (bool) var_export(APP_DEBUG, APP_DEBUG); \/\/ print('Debug (Mode): ' . var_export(APP_DEBUG, true) . \"\\n\");\r\n",
"config/constants.php" : "<?php\r\n\/\/ This may not be a good idea...\r\n\/\/if ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . 'config.php')) \/\/ is_file('config\/config.php')) \r\n\/\/  require_once $path;\r\n\r\n\/\/ Enable output buffering\r\n\/\/ini_set('output_buffering', 'On');\r\n\r\n\/\/ Increase the maximum execution time to 60 seconds\r\n\/\/ini_set('max_execution_time', 60);\r\n\r\n\/* This code sets up some basic configuration constants for a PHP application. *\/\r\n$user = ''; \/\/ www-data\r\n$password = ''; \/\/ password\r\n\r\nconst CONSOLE = true;\r\n\/\/ Define APP_SUDO constant\r\n!defined('APP_SUDO') and define('APP_SUDO', strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? \/*'runas \/user:Administrator \"cmd \/c\" '*\/ : 'echo ' . escapeshellarg(isset($password) && $password == '' ? '' : $password) . ' | sudo -S ' . (isset($user) && $user == '' ? '' : \"-u $user\") . ' '); \/\/ 'su -c'\r\n\r\n\/\/ Define APP_START constant\r\n!defined('APP_START') and define('APP_START', microtime(true)) ?: is_float(APP_START) or $errors['APP_START'] = 'APP_START is not a valid float value.';\r\n\r\n\/\/ Define APP_SELF constant\r\n!defined('APP_SELF') and define('APP_SELF', get_included_files()[0] ?? __FILE__) and is_string(APP_SELF) ?: $errors['APP_SELF'] = 'APP_SELF is not a valid string value.';\r\n\r\n\/\/ Define APP_PATH constant\r\n!defined('APP_PATH') and define('APP_PATH', realpath(__DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR) and is_string(APP_PATH) ?: $errors['APP_PATH'] = 'APP_PATH is not a valid string value.';\r\n\r\n\/*\r\n!defined('APP_DEV') and define('APP_DEV', true) ?: is_bool(APP_DEV) or $errors['APP_DEV'] = 'APP_DEV is not a valid boolean value.';\r\n!defined('APP_PROD') and define('APP_PROD', false) ?: is_bool(APP_PROD) or $errors['APP_PROD'] = 'APP_PROD is not a valid boolean value.';\r\n!defined('APP_TEST') and define('APP_TEST', false) ?: is_bool(APP_TEST) or $errors['APP_TEST'] = 'APP_TEST is not a valid boolean value.';\r\n!defined('APP_DEBUG') and define('APP_DEBUG', true) ?: is_bool(APP_DEBUG) or $errors['APP_DEBUG'] = 'APP_DEBUG is not a valid boolean value.';\r\n*\/\r\n\r\n\/\/ Resolve host to IP and check internet connection\r\nif ($ip = resolve_host_to_ip('google.com')) {\r\n  if (check_internet_connection($ip)) {\r\n    define('APP_CONNECTED', true);\r\n  } else {\r\n    define('APP_CONNECTIVITY', \"Not connected to the internet.\");\r\n  }\r\n} else {\r\n  define('APP_CONNECTIVITY', \"Failed to resolve host to IP.\");\r\n}\r\n\r\n\/\/ Set connectivity error if not connected\r\n!defined('APP_CONNECTED') and $errors['APP_CONNECTIVITY'] = 'APP Connect(ed): ' . var_export(APP_CONNECTIVITY, true) . \"\\n\"; \/\/ print('Connectivity: ' . APP_CONNECTIVITY . \"\\n\");\r\n\r\n\/\/echo 'Checking Constants: ' . \"\\n\\n\";\r\n\r\n\/\/ Application configuration\r\ndefine('APP_VERSION', '1.0.0');\r\n\r\n!is_string(APP_VERSION) and $errors['APP_VERSION'] = 'APP_VERSION is not a valid string value.';\r\n\r\n(version_compare(APP_VERSION, '1.0.0', '>=') == 0)\r\n  and $errors['APP_VERSION'] = 'APP_VERSION is not a valid version (' . APP_VERSION . ').';\r\n\r\n$auto_clear = false;\r\ndefine('APP_DOMAIN', array_key_exists('domain', parse_url($domain = $_SERVER['SERVER_NAME'] ?? $_SERVER['HTTP_HOST'] ?? $_SERVER['SERVER_ADDR'] ?? 'localhost')) ? $domain : 'localhost');\r\n!is_string(APP_DOMAIN) and $errors['APP_DOMAIN'] = 'APP_DOMAIN is not valid. (' . APP_DOMAIN . ')' . \"\\n\";\r\n\r\nif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\r\n  $shell_prompt = 'www-data' . '@' . $domain . PATH_SEPARATOR . (($homePath = realpath($_SERVER['DOCUMENT_ROOT'])) === getcwd() ? '~': $homePath) . '$ ';\r\n} else if (isset($_SERVER['HOME']) && ($homePath = realpath($_SERVER['HOME'])) !== false && ($docRootPath = realpath($_SERVER['DOCUMENT_ROOT'])) !== false && strpos($homePath, $docRootPath) === 0) {\r\n  $shell_prompt = $_SERVER['USER'] . '@' . $domain . PATH_SEPARATOR . ($homePath == getcwd() ? '~': $homePath) . '$ ';\r\n} elseif (isset($_SERVER['USER'])) {\r\n  $shell_prompt = $_SERVER['USER'] . '@' . $domain . PATH_SEPARATOR . ($homePath == getcwd() ? '~': $homePath) . '$ ';\r\n} else {\r\n  $shell_prompt = 'www-data' . '@' . $domain . PATH_SEPARATOR . (getcwd() == '\/var\/www' ? '~' : getcwd()) . '$ ';\r\n}\r\n\r\nconst APP_NAME = 'Dashboard';\r\n!is_string(APP_NAME)\r\n  and $errors['APP_NAME'] = 'APP_NAME is not a string => ' . var_export(APP_NAME, true); \/\/ print('Name: ' . APP_NAME  . ' v' . APP_VERSION . \"\\n\");\r\n\r\ndefine('APP_HOST', gethostbyname(APP_DOMAIN));\r\n!is_string(APP_HOST) and $errors['APP_HOST'] = 'APP_HOST is not valid. (' . APP_HOST . ')' . \"\\n\";\r\n\r\nconst APP_PORT = 8080;\r\n!is_int(APP_PORT) and $errors['APP_PORT'] = 'APP_PORT is not valid. (' . APP_PORT . ')' . \"\\n\";\r\n\r\n!defined('APP_SERVER') and define('APP_SERVER', (defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR)  . str_replace(defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR , '', dirname(basename(APP_SELF)) == 'public' ? basename(APP_SELF) : 'server.php')); \/\/\r\n\/\/ Check if the request is using HTTPS\r\nif (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') {\r\n  define('APP_HTTPS', TRUE);\r\n}\r\nif (defined('APP_HTTPS') && APP_HTTPS) {\r\n  $errors['APP_HTTPS'] = (bool) var_export(APP_HTTPS, true); \/\/ print('HTTPS: ' . APP_HTTPS . \"\\n\");\r\n}\r\n\r\ndefine('APP_WWW', 'http' . (defined('APP_HTTPS') ? 's' : '') . ':\/\/' . APP_DOMAIN . parse_url(isset($_SERVER['SERVER_NAME']) ? $_SERVER['REQUEST_URI'] : '' , PHP_URL_PATH));\r\n\r\ndefine('APP_TIMEOUT', strtotime(\"1970-01-01 08:00:00GMT\"));\r\nif (defined('APP_TIMEOUT') && !is_int(APP_TIMEOUT)) {\r\n  $errors['APP_TIMEOUT'] = APP_TIMEOUT;\r\n}\r\n\r\n$login = [\/*'UNAME' => '', 'PWORD' => ''*\/];\r\nif (!empty($login)) {\r\n  define('APP_LOGIN', $login);\r\n}\r\nif (defined('APP_LOGIN') && is_array(APP_LOGIN)) {\r\n  if (empty(APP_LOGIN['UNAME']) || empty(APP_LOGIN['PWORD'])) {\r\n    $errors['APP_LOGIN'] = APP_LOGIN;\r\n  }\r\n}\r\n\r\n\/\/ absolute pathname \r\nswitch (basename(__DIR__)) {\r\n  case 'config':\r\n  default:\r\n    \/\/ Define base paths\r\n    $base_paths = [ \/\/ https:\/\/stackoverflow.com\/questions\/8037266\/get-the-url-of-a-file-included-by-php\r\n      'config',\r\n      'clientele',\r\n      \/\/ 'database',\r\n      'public',\r\n      'projects',\r\n      'resources',\r\n      'node_modules',\r\n      'src',\r\n      'var',\r\n      'vendor',\r\n      \/\/ 'tmp' => 'var' . DIRECTORY_SEPARATOR . 'tmp' . DIRECTORY_SEPARATOR,\r\n      \/\/ 'export' =>  'var' . DIRECTORY_SEPARATOR . 'export' . DIRECTORY_SEPARATOR,\r\n      \/\/ 'session' => 'var' . DIRECTORY_SEPARATOR . 'session' . DIRECTORY_SEPARATOR,\r\n    ];\r\n\r\n    \/\/ Determine the base path for glob\r\n    $basePath = defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR;\r\n\r\n    \/\/ Get directories in the base path and filter them\r\n    $dirpaths = array_map('basename', array_filter(glob($basePath . '*', GLOB_ONLYDIR), 'is_dir'));\r\n\r\n    \/\/ Find common directories between base paths and directory paths\r\n    $common = array_intersect($base_paths, $dirpaths);\r\n\r\n    \/\/ Identify missing base paths\r\n    $missingBasePaths = array_diff($base_paths, $common);\r\n    if (!empty($missingBasePaths)) {\r\n      $errors['MISSING_BASE_PATHS'] = 'Directories missing base path: ' . implode(', ', $missingBasePaths) . \"\\n\";\r\n    }\r\n\r\n    \/\/ Identify missing base paths\r\n    $missingPaths = array_diff($dirpaths, $common);\r\n    if (!empty($missingPaths)) {\r\n      $errors['MISSING_PATHS'] = 'Directories not added to the base paths: ' . implode(', ', $missingPaths) . \"\\n\";\r\n    }\r\n\r\n    \/\/ Process common directories and prepare APP_BASE definition\r\n    $processedCommon = [];\r\n\r\n    if (empty($common))\r\n      $errors['APP_BASE'] = json_encode(array_keys($common)); \r\n    else {\r\n      foreach ($common as $key => $dirname) {\r\n        if (basename(__DIR__) == 'public' && $dirname == 'public') {\r\n          continue;\r\n        }\r\n\r\n        if (!is_dir((defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR)  . $dirname) && APP_DEBUG) {\r\n\r\n          (@!mkdir((defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR) . $dirname, 0755, true) ?: $errors['APP_BASE'][$key] = \"$dirname could not be created.\" );\r\n        }\r\n        $processedCommon[$dirname] = $dirname . DIRECTORY_SEPARATOR;\r\n      }\r\n    }\r\n\r\n    \/\/ Get directories in the base path and filter them\r\n    foreach(array_map('basename', array_filter(glob(\"{$basePath}{.env, .htaccess, .gitignore, LICENSE, *.md}\", GLOB_BRACE), 'is_file')) as $filename) {\r\n      if (!is_file($file = APP_PATH . $filename)) {\r\n        if (@touch($file)) {\r\n          if (is_file($source_file = APP_PATH . 'var\/source_code.json'))\r\n            $source_file = json_decode(file_get_contents($source_file));\r\n          if ($source_file) {\r\n            if (!is_file($file = APP_PATH . 'public\/.htaccess')) {\r\n              if (@touch($file)) {\r\n                file_put_contents($file, $source_file->{'public\/.htaccess'});\r\n              }\r\n            }\r\n            if (isset($source_file->{$filename}))\r\n              switch ($filename) {\r\n                case 'LICENSE':\r\n                  if (check_http_status('http:\/\/www.wtfpl.net\/txt\/copying')) {\r\n                    file_put_contents($file, file_get_contents('http:\/\/www.wtfpl.net\/txt\/copying'));\r\n                  } else {\r\n                    file_put_contents($file, $source_file->{$filename});\r\n                  }\r\n                  break;\r\n                default:\r\n\r\n\/*\r\nif (!realpath($path = APP_PATH . 'docs\/')) {\r\n  if (!mkdir($path, 0755, true))\r\n    $errors['DOCS'] = $path . ' does not exist';\r\n\r\n  if (!is_file($path . 'getting-started.md'))\r\n    if (@touch($path . 'getting-started.md'))   \/\/ https:\/\/github.com\/auraphp\/Aura.Session\/docs\/getting-started.md\r\n      file_put_contents($path . 'getting-started.md', <<<END\r\ngetting-started\r\nEND\r\n);\r\n}\r\n\r\nif (!realpath($path = APP_PATH . APP_BASE['public'] . 'policies\/')) {\r\n  if (!mkdir($path, 0755, true))\r\n    $errors['POLICIES'] = $path . ' does not exist';\r\n\r\n  if (!is_file($path . 'privacy-policy'))\r\n    if (@touch($path . 'privacy-policy'))\r\n      file_put_contents($path . 'privacy-policy', <<<END\r\nPrivacy Policy\r\nEND\r\n);\r\n\r\n  if (!is_file($path . 'terms-of-use'))\r\n    if (@touch($path . 'terms-of-use'))\r\n      file_put_contents($path . 'terms-of-use', <<<END\r\nTerms of Use\r\nEND\r\n);\r\n\r\n  if (!is_file($path . 'legal\/cookies'))\r\n    if (@touch($path . 'legal\/cookies'))\r\n      file_put_contents($path . 'legal\/cookies', <<<END\r\nCookies\r\nEND\r\n);\r\n}\r\n*\/\r\n                  file_put_contents($file, $source_file->{$filename});\r\n                  break;\r\n              }\r\n            unset($source_file);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    \/\/ Define APP_BASE\r\n    define('APP_BASE', $processedCommon);\r\n\r\n    break;\r\n}\r\n\r\n\/\/define('APP_ENV', 'production');\r\n\r\nif (defined('APP_DOMAIN') && !in_array(APP_DOMAIN, [\/*'localhost',*\/ '127.0.0.1', '::1'])) {\r\n\/* if (!is_file($file = APP_PATH . '.env') && @touch($file)) file_put_contents($file, \"DB_UNAME=\\nDB_PWORD=\"); *\/\r\n\/\/  defined('APP_ENV') or define('APP_ENV', 'production');\r\n} else {\r\n\/* if (!is_file($file = APP_PATH . '.env') && @touch($file)) file_put_contents($file, \"DB_UNAME=\\nDB_PWORD=\"); *\/\r\n\/\/  defined('APP_ENV') or define('APP_ENV', 'development'); \/\/ development\r\n} \/\/ APP_DEV |  APP_PROD\r\n\r\nif (defined('APP_ENV') && !is_string(APP_ENV)) {\r\n  $errors['APP_ENV'] = 'App Env: ' . var_export(APP_ENV, true);\r\n}\r\n\r\n\/* if (APP_ENV == 'development') { \r\n  if ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . 'constants_backup.php')) \/\/ is_file('config\/constants.php')) \r\n    require_once $path;\r\n\r\n  if ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . 'constants_client-project.php')) \/\/ is_file('config\/constants.php')) \r\n    require_once $path;\r\n} *\/\r\n\r\n\/\/(defined('APP_PATH') && truepath(APP_PATH)) and $errors['APP_PATH'] = truepath(APP_PATH); \/\/ print('App Path: ' . APP_PATH . \"\\n\" . \"\\t\" . '$_SERVER[\\'DOCUMENT_ROOT\\'] => ' . $_SERVER['DOCUMENT_ROOT'] . \"\\n\");\r\n\r\ndefine('APP_PUBLIC', (defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR)  . APP_BASE['public'] . str_replace(defined('APP_PATH') ? APP_PATH : __DIR__ . DIRECTORY_SEPARATOR , '', APP_BASE['public'] . dirname(basename($_SERVER['PHP_SELF'])) == 'public' ? basename($_SERVER['PHP_SELF']) : 'index.php')); \/\/ \r\n\r\n\/\/var_dump(APP_PATH . basename(dirname(__DIR__, 2)) . '\/' . basename(dirname(__DIR__, 1)));\r\nif (PHP_SAPI === 'cli') {\r\n  \/\/ Replace the script name from REQUEST_URI when run in CLI\r\n  $scriptName = $_SERVER['PHP_SELF'];\r\n  $requestUri = preg_replace('\/' . preg_quote($scriptName, '\/') . '$\/', '\/', $_SERVER['REQUEST_URI'] ?? '');\r\n} else {\r\n  $requestUri = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : (isset($_SERVER['PHP_SELF']) ? $_SERVER['PHP_SELF'] : '');\r\n  if ($requestUri !== '') {\r\n    $queryString = isset($_SERVER['QUERY_STRING']) && $_SERVER['QUERY_STRING'] !== '' ? '?' . $_SERVER['QUERY_STRING'] : '';\r\n    $requestUri .= $queryString;\r\n  }\r\n}\r\n$parsedUrl = parse_url($requestUri);\r\n\r\n\/\/ substr( str_replace('\\\\', '\/', __FILE__), strlen($_SERVER['DOCUMENT_ROOT']), strrpos(str_replace('\\\\', '\/', __FILE__), '\/') - strlen($_SERVER['DOCUMENT_ROOT']) + 1 )\r\nif (!is_array(APP_BASE)) {\r\n  $protocol = defined('APP_HTTPS') ? 'https' : 'http';\r\n  $appUrl = $protocol . ':\/\/' . APP_DOMAIN . $baseUrl;\r\n\r\n  define('APP_URL', $appUrl);\r\n} else {\r\n  $appUrl = [\r\n    'scheme' => (defined('APP_HTTPS') && APP_HTTPS ? 'https' : 'http'), \/\/ ($_SERVER['HTTPS'] == 'on', (isset($_SERVER['HTTPS']) === true ? 'https' : 'http')\r\n    \/* https:\/\/www.php.net\/manual\/en\/features.http-auth.php *\/\r\n    'user' => $_SERVER['PHP_AUTH_USER'] ?? null,\r\n    'pass' => $_SERVER['PHP_AUTH_PW'] ?? null,\r\n    'host' => APP_DOMAIN,\r\n    'port' => (int) ($_SERVER['SERVER_PORT'] ?? 80),\r\n    'path' => $parsedUrl['path'],\r\n    'query' => $_SERVER['QUERY_STRING'] ?? '', \/\/ array( key($_REQUEST) => current($_REQUEST) )\r\n    'fragment' => parse_url($_SERVER['REQUEST_URI'] ?? '', PHP_URL_FRAGMENT),\r\n  ];\r\n\r\n  define('APP_URL', $appUrl);\r\n}\r\n\/\/die(var_dump(APP_URL));\r\n\r\n\/*\r\n!is_array(APP_BASE) ?\r\n  substr($_SERVER['REQUEST_URI'], 0, strrpos($_SERVER['REQUEST_URI'], '\/') + 1) == '\/' \r\n    and define('APP_URL', 'http' . (defined('APP_HTTPS') ? 's' : '') . ':\/\/' . APP_DOMAIN . substr($_SERVER['REQUEST_URI'], 0, strrpos($_SERVER['REQUEST_URI'], '\/') + 1)) :\r\n  define('APP_URL', [\r\n    'scheme' => 'http' . (defined('APP_HTTPS') && APP_HTTPS ? 's' : ''), \r\n    'user' => (!isset($_SERVER['PHP_AUTH_USER']) ? NULL : $_SERVER['PHP_AUTH_USER']),\r\n    'pass' => (!isset($_SERVER['PHP_AUTH_PW']) ? NULL : $_SERVER['PHP_AUTH_PW']),\r\n    'host' => APP_DOMAIN,\r\n    'port' => (int) ($_SERVER['SERVER_PORT'] ?? 80),\r\n    'path' => $_SERVER['REQUEST_URI'] . substr($_SERVER['REQUEST_URI'], 0, strrpos($_SERVER['REQUEST_URI'], '\/') + 1), \/\/ https:\/\/stackoverflow.com\/questions\/7921065\/manipulate-url-serverrequest-uri\r\n    'query' => $_SERVER['QUERY_STRING'] ?? '',\r\n    'fragment' => parse_url($_SERVER['REQUEST_URI'], PHP_URL_FRAGMENT),\r\n  ]);\r\n*\/\r\n\/* var_dump(parse_url(APP_URL));\r\nvar_dump(parse_url(APP_URL, PHP_URL_SCHEME));\r\nvar_dump(parse_url(APP_URL, PHP_URL_USER));\r\nvar_dump(parse_url(APP_URL, PHP_URL_PASS));\r\nvar_dump(parse_url(APP_URL, PHP_URL_HOST));\r\nvar_dump(parse_url(APP_URL, PHP_URL_PORT));\r\nvar_dump(parse_url(APP_URL, PHP_URL_PATH));\r\nvar_dump(parse_url(APP_URL, PHP_URL_QUERY));\r\nvar_dump(parse_url(APP_URL, PHP_URL_FRAGMENT)); *\/\r\n\r\n\/\/ Define APP_BASE_URL\r\n!is_array(APP_URL) ? define('APP_URL_BASE', APP_URL) :\r\n  define('APP_URL_BASE', APP_URL['scheme'] . ':\/\/' . APP_URL['host'] . APP_URL['path']);\r\n\r\n\/\/ Define APP_BASE_URI\r\ndefine('APP_URL_PATH', !is_array(APP_URL) ? substr($_SERVER['REQUEST_URI'], 0, strrpos($_SERVER['REQUEST_URI'], '\/') + 1) : APP_URL['path']);\r\ndefine('APP_QUERY', !empty(parse_url($_SERVER['REQUEST_URI'] ?? '')['query']) ? (parse_str(parse_url($_SERVER['REQUEST_URI'])['query'], $query) ? [] : $query) : []);\r\n\r\n!is_array(APP_URL)\r\n  or define('APP_URI',   \/\/ BASEURL\r\n    preg_replace('!([^:])(\/\/)!', \"$1\/\",\r\n      str_replace('\\\\', '\/',\r\n        htmlspecialchars(APP_URL['scheme'] . ':\/\/' . (isset($_SERVER['PHP_AUTH_USER']) ? APP_URL['user'] . PATH_SEPARATOR . APP_URL['pass'] . '@' : '') . APP_URL['host'] . (APP_URL['port'] !== '80' ? PATH_SEPARATOR . APP_URL['port'] : '') . APP_URL['path'] . (!basename($_SERVER[\"SCRIPT_NAME\"]) ? '' : basename($_SERVER[\"SCRIPT_NAME\"])) . (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '')) \/\/ dirname($_SERVER['PHP_SELF'])  dirname($_SERVER['REQUEST_URI'])\r\n      )\r\n    )\r\n  );\r\n\r\n\/\/dd(get_defined_constants(true)['user']);\r\n\r\n\r\n\/*\r\nrequire_once('functions.php');\r\n\r\nrequire_once('debug.php');\r\n\r\nrequire_once('session.php');\r\n*\/\r\n\/*\r\nswitch(get_included_files()[0]) {\r\n  case APP_PATH . 'assets' . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'jquery.tinymce-config.js.php':\r\n\r\n  break;\r\n\r\n  case APP_PATH . 'index.php':\r\n\r\n  break;\r\n\r\n  case APP_PATH . 'install.php':\r\n\r\n  break;\r\n\r\n  case APP_PATH . 'login.php':\r\n\r\n  break;\r\n  \r\n  case APP_PATH . 'logout.php':\r\n\r\n  break;\r\n\r\n  default:\r\n  \r\n    \/\/var_dump(get_included_files());\r\n    \/\/header('Location: ' . APP_BASE_URL);\r\n    \/\/exit;\r\n    \r\n  break;\r\n}\r\n*\/\r\n\/\/die('hello world');\r\n\/\/if (basename(get_included_files()[0]) == 'jquery.tinymce-config.js.php') {\r\n  \/\/exit;\r\n\/\/} else if (basename($_SERVER[\"SCRIPT_FILENAME\"]) !== 'index.php') {\r\n\/\/  header('Location: ' . APP_BASE_URL . basename($_SERVER[\"SCRIPT_FILENAME\"]));\r\n\/\/  exit;\r\n\/\/}\r\n\r\n\/\/var_dump($_REQUEST);\r\n\r\n\/\/$str_1 = htmlentities($_REQUEST['history']);\r\n\r\n\/*\r\n$if = function($condition, $true, $false) { $condition ? header('Location: ' . preg_replace(\"\/^http:\/i\", \"https:\", $baseurl)) : ''; };\r\n\r\necho <<<TEXT\r\n\r\n   {$if(!isset($_SERVER['HTTPS']) && $use_ssl == TRUE, 'yes', 'no')}\r\n   content\r\n\r\nTEXT;\r\n*\/\r\n\r\n\/\/Ternary operator vs Null coalescing operator in PHP \r\n\/\/ ($condition) ?? \"NULL\";\r\n\r\n\r\n\r\n\/\/die();\r\n \r\n\/\/print <<<EOD\r\n\/\/{$outputVar}\r\n\/\/<h3>This is not SSL<\/h3>\r\n\/\/EOD;\r\n",
"config/functions.php" : "<?php\r\n\r\nrequire_once __DIR__ . DIRECTORY_SEPARATOR . 'constants.php'; \r\n\/\/ Get all PHP files in the 'classes' directory\r\n$paths = array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . 'classes\/*.php'), 'is_file');\r\n\r\n\/\/ Define the filenames to be excluded\r\n$excludedFiles = [\r\n    'class.sockets.php',\r\n    'class.websocketserver.php'\r\n];\r\n\r\n\/\/ Remove excluded files from $paths\r\n$paths = array_filter($paths, function ($path) use ($excludedFiles) {\r\n    return !in_array(basename($path), $excludedFiles);\r\n});\r\n\r\n\/\/ Sort $paths alphabetically by filename\r\nusort($paths, function ($a, $b) {\r\n    return strcmp(basename($a), basename($b));\r\n});\r\n\r\n\/\/ Require each file in $paths\r\nforeach ($paths as $path) {\r\n    if ($resolvedPath = realpath($path)) {\r\n        require_once $resolvedPath;\r\n    } else {\r\n        die(var_dump(basename($path) . ' was not found. file=' . $path));\r\n    }\r\n}\r\n\r\n\/*\r\n        $curl = curl_init($url);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\r\n\r\n        $response = curl_exec($curl);\r\n        $http_status = curl_getinfo($curl, CURLINFO_HTTP_CODE);\r\n\r\n        curl_close($curl);\r\n        return ($http_status == 200 ? true : false);\r\n*\/\r\n\r\n\/**\r\n * Parses command line args and returns array of args and their values\r\n *\r\n * @param Array $args   The array from $argv\r\n * @return Array\r\n *\/\r\nfunction parseargs($args = [])\r\n{  \r\n    global $argv;\r\n    $parsed_args = [];\r\n\r\n    $args = array_slice($args ?? $argv, 1);\r\n    for ($i=0;$i<count($args);$i++) {\r\n\r\n        switch (substr_count($args[$i], \"-\", 0, 2)) {\r\n            case 1:\r\n                foreach (str_split(ltrim($args[$i], \"-\")) as $a) {\r\n                    $parsed_args[$a] = isset($parsed_args[$a]) ? $parsed_args[$a] + 1 : 1;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                $parsed_args[ltrim(preg_replace(\"\/=.*\/\", '', $args[$i]), '-')] = strpos($args[$i], '=') !== false ? substr($args[$i], strpos($args[$i], '=') + 1) : 1;\r\n                break;\r\n\r\n            default:\r\n                $parsed_args['positional'][] = $args[$i];\r\n        }\r\n    }\r\n\r\n    return $parsed_args;\r\n}\r\n\r\n\/**\r\n * Logs a custom message to the error log.\r\n *\r\n * @param string $message The message to log.\r\n *\/\r\nfunction custom_log($message) {\r\n  $timestamp = date('Y-m-d H:i:s');\r\n  $logMessage = sprintf(\"%s - %s%s\", $timestamp, $message, PHP_EOL);\r\n  file_put_contents(ini_get('error_log'), $logMessage, FILE_APPEND);\r\n}\r\n\/**\r\n * Validates an IP address.\r\n *\r\n * @param string $ip The IP address to validate.\r\n * @return bool True if the IP address is valid, false otherwise.\r\n *\/\r\nfunction check_ip($ip = '') {\r\n  return filter_var($ip, FILTER_VALIDATE_IP) !== false;\r\n}\r\n\r\n\/**\r\n * Resolves a hostname to an IP address.\r\n *\r\n * @param string $host The hostname to resolve.\r\n * @return string|false The resolved IP address or false on failure.\r\n *\/\r\nfunction resolve_host_to_ip($host) {\r\n  $ip = gethostbyname($host);\r\n  return $ip !== $host ? $ip : false;\r\n}\r\n\r\n\/**\r\n * Checks internet connection by pinging a specified IP address.\r\n *\r\n * @param string $ip The IP address to ping. Defaults to Google's DNS server.\r\n * @return bool True if the connection is successful, false otherwise.\r\n *\/\r\nfunction check_internet_connection($ip = '8.8.8.8') {\r\n  $status = null;\r\n\r\n  \/\/ Ping the host to check network connectivity\r\n  if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN')\r\n      exec(\"ping -n 1 -w 1 \" . \/*-W 20 *\/ escapeshellarg($ip), $output, $status);  \/\/ parse_url($ip, PHP_URL_HOST)\r\n  else\r\n      exec(APP_SUDO . \"\/bin\/ping -c 1 -W 1 \" . escapeshellarg($ip), $output, $status); \/\/ var_dump(\\$status)\r\n\r\n  \/\/ If ping fails, try fsockopen as a fallback\r\n  if ($status !== 0) {\r\n    $connection = @fsockopen('www.google.com', 80, $errno, $errstr, 10);\r\n    if (!$connection) {\r\n        $errors['APP_CONNECTIVITY'] = 'No internet connection.';\r\n    } else {\r\n        fclose($connection);\r\n    }\r\n  }\r\n\r\n  return $status === 0;\r\n}\r\n\r\n\/\/ die(var_dump(check_internet_connection()) ? true : false);\r\n\r\n\/**\r\n * Check if a URL returns a specific HTTP status code.\r\n * \r\n * @param string $url The URL to check. Default is 'http:\/\/8.8.8.8'.\r\n * @param int $statusCode The HTTP status code to check for. Default is 200.\r\n * @return bool True if the URL does not return the specified status, false otherwise.\r\n *\/\r\nfunction check_http_status($url = 'http:\/\/8.8.8.8', $statusCode = 200) {\r\n  if (defined('APP_CONNECTED')) {\r\n      if ($url !== 'http:\/\/8.8.8.8' && !preg_match('\/^https?:\\\/\\\/\/', $url)) {\r\n          $url = \"http:\/\/$url\";\r\n      }\r\n      $headers = get_headers($url);\r\n      return !empty($headers) && strpos($headers[0], (string)$statusCode) === false;\r\n  }\r\n  return true; \/\/ Special case for the default URL or if not connected\r\n}\r\n\r\n\/**\r\n * Retrieves the source URL for a given package from Packagist.\r\n *\r\n * @param string $vendor The vendor name for the package.\r\n * @param string $package The package name.\r\n *\r\n * @return string The source URL if it points to a GitHub repository; otherwise, the initial URL.\r\n *\/\r\nfunction packagist_return_source($vendor, $package) {\r\n  $url = \"https:\/\/packagist.org\/packages\/$vendor\/$package\";\r\n  $initial_url = '';\r\n  \r\n  libxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n  $dom = new DOMDocument(1.0, 'utf-8');\r\n  if (check_http_status($url)) {\r\n    $dom->loadHTML(file_get_contents($url));\r\n\r\n    $anchors = $dom->getElementsByTagName('a');\r\n\r\n    foreach ($anchors as $anchor) {\r\n      if ($anchor->getAttribute('rel') == 'nofollow noopener external noindex ugc') {\r\n        \/\/echo $anchor->nodeValue;\r\n        if ($anchor->nodeValue == 'Source')\r\n            $initial_url = $anchor->getAttribute('href'); \/\/  '\/composer.json'\r\n      }\r\n    }\r\n  }\r\n  \/\/ $initial_url = \"https:\/\/github.com\/php-fig\/log\/tree\/3.0.0\/\";\r\n\r\n  if (preg_match('\/^https:\\\/\\\/(?:www.?)github.com\\\/\/', $initial_url)) {\r\n\r\n  \/\/ Extract username, repository, and version from the initial URL\r\n    $parts = explode(\"\/\", rtrim($initial_url, \"\/\"));\r\n    \/\/dd($initial_url);\r\n    \/\/dd($parts);\r\n    \r\n    \/\/$username = {$parts[3]};\r\n    \/\/$repository = $parts[4];\r\n    \/\/$version = $parts[6];\r\n\r\n  \/\/$blob_url = \"https:\/\/github.com\/$username\/$repository\/blob\/$version\/composer.json\";\r\n    return \"https:\/\/raw.githubusercontent.com\/{$parts[3]}\/{$parts[4]}\/{$parts[6]}\/composer.json\";\r\n\r\n  }\r\n  return $initial_url;\r\n}\r\n\r\n\/**\r\n * Sanitizes the input by converting HTML entities, removing invalid UTF-8 characters, and encoding special characters.\r\n *\r\n * @param mixed $input The input to sanitize. Can be a string, array, or null. Default is an empty string.\r\n *\r\n * @return string|null The sanitized string. Returns null if the input is null.\r\n *\/\r\nfunction htmlsanitize(mixed $input = '') {\r\n\r\n    if (is_array($input)) $input = var_export($input, true);\r\n    \r\n    if (is_null($input)) return;\r\n\r\n    \/\/ Convert HTML entities to their corresponding characters\r\n    $decoded = html_entity_decode($input, ENT_QUOTES, 'UTF-8');\r\n    \r\n    \/\/ Remove any invalid UTF-8 characters\r\n    $cleaned = mb_convert_encoding($decoded, 'UTF-8', 'UTF-8');\r\n    \r\n    \/\/ Convert special characters to HTML entities\r\n    $sanitized = htmlspecialchars($cleaned, ENT_QUOTES, 'UTF-8');\r\n\r\n    return $sanitized;\r\n}\r\n\r\n\/\/function htmlsanitize($argv = '') {\r\n\/\/  return html_entity_decode(mb_convert_encoding(htmlspecialchars($argv, ENT_QUOTES, 'UTF-8'), ENT_QUOTES, 'UTF-8' ), 'HTML-ENTITIES', 'utf-8');\r\n\/\/}\r\n\r\n\r\n\/**\r\nThis function takes in two parameters: $base and $path, which represent the base path and the path to be made relative, respectively.\r\n\r\nIt first detects the directory separator used in the base path, then splits both paths into arrays using that separator. It then removes the common base elements from the beginning of the path array, leaving only the difference.\r\n\r\nFinally, it returns the relative path by joining the remaining elements in the path array using the separator detected earlier, with the separator prepended to the resulting string.\r\n\r\n* Return a relative path to a file or directory using base directory. \r\n* When you set $base to \/website and $path to \/website\/store\/library.php\r\n* this function will return \/store\/library.php\r\n* \r\n* Remember: All paths have to start from \"\/\" or \"\\\" this is not Windows compatible.\r\n* \r\n* @param   string   $base   A base path used to construct relative path. For example \/website\r\n* @param   string   $path   A full path to file or directory used to construct relative path. For example \/website\/store\/library.php\r\n* \r\n* @return  string\r\n*\/\r\nfunction getRelativePath($base, $path) {\r\n  \/\/ Detect directory separator\r\n  $separator = substr((string)$base, 0, 1);\r\n  $base = array_slice(explode($separator, rtrim((string)$base,$separator)),1);\r\n  $path = array_slice(explode($separator, rtrim((string)$path,$separator)),1);\r\n\r\n  return $separator . (string)implode($separator, array_slice($path, count($base)));\r\n}\r\n\r\n\/**\r\n * Resolves a symbolic link to its final target path.\r\n *\r\n * This function follows symbolic links until it reaches a non-link file or directory.\r\n *\r\n * @param string $linkFilename The path to the symbolic link to resolve.\r\n *\r\n * @return string The resolved path of the final target, which is not a symbolic link.\r\n *\/\r\nfunction readlinkToEnd(string $linkFilename): string {\r\n  \/\/ Check if the provided path is a symbolic link\r\n  if (!is_link($linkFilename)) {\r\n      \/\/ If it's not a symbolic link, return the path as is\r\n      return $linkFilename;\r\n  }\r\n\r\n  $final = $linkFilename;\r\n\r\n  while (true) {\r\n      \/\/ Read the target path of the current symbolic link\r\n      $target = readlink($final);\r\n\r\n      \/\/ Construct the new path from the target\r\n      $final = (substr($target, 0, 1) == '\/') ? $target : dirname($final) . '\/' . $target;\r\n\r\n      \/\/ Remove leading '.\/' if present\r\n      if (substr($final, 0, 2) == '.\/') {\r\n          $final = substr($final, 2);\r\n      }\r\n\r\n      \/\/ If the new path is not a symbolic link, return it\r\n      if (!is_link($final)) {\r\n          return $final;\r\n      }\r\n  }\r\n}\r\n\r\n\/* function parse_ini_file_multi($file) {\r\n  \/\/ parse_ini_string(file_get_contents($file), true, INI_SCANNER_NORMAL))) \r\n  $data = parse_ini_file($file, true, INI_SCANNER_TYPED); \r\n  $output = [];\r\n  foreach($data as $key => $value) {\r\n    $keys = explode('.', $key);\r\n    $temp = &$output;\r\n    foreach($keys as $key) {\r\n      $temp = &$temp[$key];\r\n    }\r\n    $temp = $value;\r\n  }\r\n  return $output;\r\n}\r\nfunction parse_ini_file_multi($file) {\r\n  $data = parse_ini_file($file, true, INI_SCANNER_TYPED);\r\n  $output = [];\r\n\r\n  foreach($data as $section => $values) {\r\n    if (is_array($values)) {\r\n      foreach($values as $key => $value) {\r\n        $keys = explode('.', $key);\r\n        $temp = &$output[$section];\r\n        foreach($keys as $key_part) {\r\n          $temp = &$temp[$key_part];\r\n        }\r\n        $temp = $value;\r\n      }\r\n    } else {\r\n      $keys = explode('.', $section);\r\n      $temp = &$output;\r\n      foreach($keys as $key_part) {\r\n        $temp = &$temp[$key_part];\r\n      }\r\n      $temp = $values;\r\n    }\r\n  }\r\n  \r\n  return $output;\r\n}\r\nfunction parse_ini_file_multi($file) {\r\n  $data = parse_ini_file($file, true, INI_SCANNER_TYPED);\r\n  $output = [];\r\n\r\n  foreach ($data as $section => $values) {\r\n    if (is_array($values)) {\r\n      $output[$section] = [];\r\n      foreach ($values as $key => $value) {\r\n        $output[$section][$key] = str_replace(['\\'', '\"'], '', var_export($value, true));\r\n      }\r\n    } else {\r\n      $output[$section] = str_replace(['\\'', '\"'], '', var_export($values, true));\r\n    }\r\n  }\r\n\r\n  return $output;\r\n}\r\n\r\nfunction parse_ini_file_multi($file) {\r\n  $data = parse_ini_file($file, true, INI_SCANNER_TYPED);\r\n  $output = [];\r\n\r\n  foreach ($data as $section => $values) {\r\n      if (is_array($values)) {\r\n          $output[$section] = [];\r\n          foreach ($values as $key => $value) {\r\n              \/\/ Check if the value is a regular expression\r\n              if (preg_match('\/^\\\/.*\\\/$\/', $value)) {\r\n                  $output[$section][$key] = $value;\r\n              } else {\r\n                  \/\/ If not a regular expression, add slashes to escape special characters\r\n                  $output[$section][$key] = addcslashes($value, '\"\\\\');\r\n              }\r\n          }\r\n      } else {\r\n          \/\/ Add slashes to non-array values\r\n          $output[$section] = addcslashes($values, '\"\\\\');\r\n      }\r\n  }\r\n\r\n  return $output;\r\n}\r\n\r\nfunction parse_ini_file_multi($file) {\r\n  $data = parse_ini_file($file, true, INI_SCANNER_TYPED);\r\n  $output = [];\r\n\r\n  foreach ($data as $section => $values) {\r\n      if (is_array($values)) {\r\n          $output[$section] = [];\r\n          foreach ($values as $key => $value) {\r\n              \/\/ Do not escape regular expressions\r\n              if (preg_match('\/^\\\/.*\\\/[a-z]*$\/i', $value)) {\r\n                  $output[$section][$key] = $value;\r\n              } else {\r\n                  \/\/ Escape only non-regular expression values\r\n                  $output[$section][$key] = addcslashes($value, '\"\\\\');\r\n              }\r\n          }\r\n      } else {\r\n          \/\/ Escape only non-regular expression values\r\n          if (preg_match('\/^\\\/.*\\\/[a-z]*$\/i', $values)) {\r\n              $output[$section] = $values;\r\n          } else {\r\n              $output[$section] = addcslashes($values, '\"\\\\');\r\n          }\r\n      }\r\n  }\r\n\r\n  return $output;\r\n} *\/\r\n\r\nfunction parse_ini_file_multi($file) {\r\n  $data = (array) parse_ini_file($file, true, INI_SCANNER_TYPED);\r\n  $output = [];\r\n\r\n  foreach ($data as $section => $values) {\r\n      if (is_array($values)) {\r\n          $output[$section] = [];\r\n          foreach ($values as $key => $value) {\r\n              \/\/ Do not escape regular expressions\r\n              if (preg_match('\/^\\\/.*\\\/[a-z]*$\/i', $value)) {\r\n                  $output[$section][$key] = $value;\r\n              } else {\r\n                  \/\/ Handle boolean values explicitly\r\n                  if (is_bool($value)) {\r\n                      $output[$section][$key] = $value ? 'true' : 'false';\r\n                  } else {\r\n                      $output[$section][$key] = addcslashes($value, '\"\\\\');\r\n                  }\r\n              }\r\n          }\r\n      } else {\r\n          \/\/ Do not escape regular expressions\r\n          if (preg_match('\/^\\\/.*\\\/[a-z]*$\/i', $values)) {\r\n              $output[$section] = $values;\r\n          } else {\r\n              \/\/ Handle boolean values explicitly\r\n              if (is_bool($values)) {\r\n                  $output[$section] = $values ? 'true' : 'false';\r\n              } else {\r\n                  $output[$section] = addcslashes($values, '\"\\\\');\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  return $output;\r\n}\r\n\r\n\r\nfunction array_merge_recursive_distinct(array &$array1, array &$array2) {\r\n  $merged = $array1;\r\n\r\n  foreach ($array2 as $key => &$value) {\r\n    if (is_array($value) && isset($merged[$key]) && is_array($merged[$key])) {\r\n      $merged[$key] = array_merge_recursive_distinct($merged[$key], $value);\r\n    } else {\r\n      $merged[$key] = $value;\r\n    }\r\n  }\r\n\r\n  return $merged;\r\n}\r\n\r\nfunction array_intersect_key_recursive(array $array1, array $array2) {\r\n  $result = [];\r\n  foreach ($array1 as $key => $value) {\r\n    if (array_key_exists($key, $array2)) {\r\n      if (is_array($value) && is_array($array2[$key])) {\r\n        $result[$key] = array_intersect_key_recursive($value, $array2[$key]);\r\n      } else {\r\n        $result[$key] = $value;\r\n      }\r\n    }\r\n  }\r\n  return $result;\r\n}\r\n\r\n\r\n\r\n\/\/ Function to scan specified directories without recursing\r\nfunction scanDirectories($directories, $baseDir, &$organizedFiles) {\r\n      foreach ($directories as $directory) {\r\n          $files = glob($baseDir . $directory . '\/{*.php,.htaccess}', GLOB_BRACE); \/\/ Adjusted to scan only .php files at the top level of the directory\r\n          foreach ($files as $file) {\r\n              if (is_file($file)) {\r\n                  $relativePath = str_replace($baseDir, '', $file);\r\n                  \/\/ Add the relative path to the array if it is a .php file and not already present\r\n                  if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'php' && !in_array($relativePath, $organizedFiles)) {\r\n                      if ($relativePath == 'public\/project.php' && !in_array('projects\/index.php', $organizedFiles)) $organizedFiles[] = 'projects\/index.php';\r\n                      $organizedFiles[] = $relativePath;\r\n                  } else if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'htaccess' && !in_array($relativePath, $organizedFiles)) {\r\n                    $organizedFiles[] = $relativePath;\r\n                }\r\n              }\r\n          }\r\n      }\r\n  }\r\n  \r\n  function customSort($array) {\r\n    \/\/ Separate files and directories\r\n    $files = [];\r\n    $directories = [];\r\n  \r\n    foreach ($array as $item) {\r\n        if (preg_match('\/^.\\\/(.*)\/', $item)) continue;\r\n        if (preg_match('\/^public\\\/(example|test|ui\\_complete)(.*)\/', $item)) continue;\r\n        \/\/ Check if the item contains directories\r\n        if (strpos($item, '\/') !== false) {\r\n            $directories[] = $item;\r\n        } else {\r\n            $files[] = $item;\r\n        }\r\n    }\r\n  \r\n    \/\/ Sort directories and files\r\n    sort($files); \/\/ Sort files in descending order\r\n    sort($directories); \/\/ Sort directories in descending order\r\n  \r\n    \/\/ Merge files and directories\r\n    $sortedArray = array_merge($files, $directories);\r\n  \r\n    return $sortedArray;\r\n  }\r\n  \r\n\/*\r\nif (!empty($env_arr = parse_ini_file($file, true, INI_SCANNER_TYPED ))) {\r\nforeach ($env_arr as $key => $value) {\r\n\r\n  if (is_array($value)) {\r\n      foreach ($value as $k => $v) {\r\n        $env_arr[$key][$k] = str_replace(['\\'', '\"'], '', var_export($v, true));\r\n      }\r\n  } else {\r\n      \/\/ Check if the value is boolean true, and replace it with the string 'true'\r\n      if ($value === true) {\r\n        $env_arr[$key] = 'true';\r\n      } else {\r\n        $env_arr[$key] = str_replace(['\\'', '\"'], '', var_export($value, true));\r\n      }\r\n  }\r\n}\r\n*\/\r\n\r\n\/**\r\n * This function is to replace PHP's extremely buggy realpath().\r\n * @param string The original path, can be relative etc.\r\n * @return string The resolved path, it might not exist.\r\n *\/\r\nfunction truepath($path){\r\n    \/\/ whether $path is unix or not\r\n    $unipath=strlen($path)==0 || $path[0]!='\/';\r\n    \/\/ attempts to detect if path is relative in which case, add cwd\r\n    if(strpos($path,PATH_SEPARATOR)===false && $unipath)\r\n        $path=getcwd().DIRECTORY_SEPARATOR.$path;\r\n    \/\/ resolve path parts (single dot, double dot and double delimiters)\r\n    $path = str_replace(['\/', '\\\\'], DIRECTORY_SEPARATOR, $path);\r\n    $parts = array_filter(explode(DIRECTORY_SEPARATOR, $path), 'strlen');\r\n    $absolutes = array();\r\n    foreach ($parts as $part) {\r\n      if ('.'  == $part) continue;\r\n      switch ('..') {\r\n        case $part:\r\n          array_pop($absolutes);\r\n          break;\r\n        default:\r\n          $absolutes[] = $part;\r\n          break;\r\n      }\r\n    }\r\n    $path=implode(DIRECTORY_SEPARATOR, $absolutes);\r\n    \/\/ resolve any symlinks\r\n    if(file_exists($path) && linkinfo($path)>0)$path=readlink($path);\r\n    \/\/ put initial separator that could have been lost\r\n    $path = !$unipath ? \"\/$path\" : $path;\r\n    return $path;\r\n}\r\n\r\n\r\n\/\/ Snippet from PHP Share: http:\/\/www.phpshare.org\r\n\r\nfunction formatSizeUnits($bytes)\r\n{\r\n  if ($bytes >= 1073741824)\r\n    $bytes = number_format($bytes \/ 1073741824, 2) . ' GB';\r\n  elseif ($bytes >= 1048576)\r\n    $bytes = number_format($bytes \/ 1048576, 2) . ' MB';\r\n  elseif ($bytes >= 1024)\r\n    $bytes = number_format($bytes \/ 1024, 2) . ' KB';\r\n  elseif ($bytes > 1)\r\n    $bytes = \"$bytes bytes\";\r\n  elseif ($bytes == 1)\r\n    $bytes .= ' byte';\r\n  else\r\n    $bytes = '0 bytes';\r\n  return $bytes;\r\n}\r\n\r\nfunction convertToBytes($value) {\r\n    $unit = strtolower(substr($value, -1, 1));\r\n    return (int) $value * pow(1024, array_search($unit, [1 => 'k', 'm', 'g']));\r\n}\r\n\r\n\/**\r\n* Converts bytes into human readable file size.\r\n*\r\n* @param string $bytes\r\n* @return string human readable file size (2,87 ??)\r\n* @author Mogilev Arseny\r\n* @bug Does not handle 0 bytes\r\n*\/\r\nfunction FileSizeConvert($bytes)\r\n{\r\n  $bytes = floatval($bytes);\r\n  $arBytes = array(\r\n    0 => array(\r\n      \"UNIT\" => \"TB\",\r\n      \"VALUE\" => pow(1024, 4)\r\n    ),\r\n    1 => array(\r\n      \"UNIT\" => \"GB\",\r\n      \"VALUE\" => pow(1024, 3)\r\n    ),\r\n    2 => array(\r\n      \"UNIT\" => \"MB\",\r\n      \"VALUE\" => pow(1024, 2)\r\n    ),\r\n    3 => array(\r\n      \"UNIT\" => \"KB\",\r\n      \"VALUE\" => 1024\r\n    ),\r\n    4 => array(\r\n      \"UNIT\" => \"B\",\r\n      \"VALUE\" => 1\r\n    ),\r\n  );\r\n\r\n  foreach($arBytes as $arItem)\r\n  {\r\n    if($bytes >= $arItem[\"VALUE\"])\r\n    {\r\n      $result = $bytes \/ $arItem[\"VALUE\"];\r\n      $result = str_replace(\".\", \",\" , strval(round($result, 2))).\" \".$arItem[\"UNIT\"];\r\n      break;\r\n    }\r\n  }\r\n  return $result;\r\n}\r\n\r\nfunction getElementsByClass(&$parentNode, $tagName, $className) {\r\n    $nodes= [];\r\n\r\n    $childNodeList = $parentNode->getElementsByTagName($tagName);\r\n    for ($i = 0; $i < $childNodeList->length; $i++) {\r\n        $temp = $childNodeList->item($i);\r\n        if (stripos($temp->getAttribute('class'), $className) !== false) {\r\n            $nodes[]=$temp;\r\n        }\r\n    }\r\n\r\n    return $nodes;\r\n}\r\n",
"config/git.php" : "<?php\r\n\/**\/\r\n\/\/ https:\/\/techglimpse.com\/git-push-github-token-based-passwordless\/\r\n\/\/ git push https:\/\/<GITHUB_ACCESS_TOKEN>@github.com\/<GITHUB_USERNAME>\/<REPOSITORY_NAME>.git\r\nif ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . 'constants.php')) {\r\n  require_once $path;\r\n}\r\n\r\ndefine('GIT_EXEC', strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? 'git.exe' : '\/usr\/local\/bin\/git');\r\n\r\nif (isset($_ENV['GITHUB']['EXPR_VERSION'])) {\r\n  $gitVersion = exec(GIT_EXEC . ' --version');\r\n  preg_match($_ENV['GITHUB']['EXPR_VERSION'], $gitVersion, $match);\r\n  define('GIT_VERSION', rtrim($match[1], '.'));\r\n}\r\n\/* $latest_remote_commit_response = file_get_contents($latest_remote_commit_url);\r\n$latest_remote_commit_data = json_decode($latest_remote_commit_response, true);\r\n$latest_remote_commit_sha = $latest_remote_commit_data['object']['sha']; *\/\r\n\r\n\/**\r\n * Summary of git_origin_sha_update\r\n * @return bool|string\r\n *\/\r\nfunction git_origin_sha_update() {\r\n  global $errors;\r\n  $latest_local_commit_sha = exec(GIT_EXEC . ' --git-dir=\"' . APP_PATH . APP_ROOT . '.git\" --work-tree=\"' . dirname(__DIR__) . '\" rev-parse main');\r\n  $errors['GIT_UPDATE'] = \"Local main branch is not up-to-date with origin\/main\\n\";\r\n\r\n  $options = [\r\n    'http' => [\r\n        'method' => 'GET',\r\n        'header' => 'Authorization: token ' . ($_ENV['GITHUB']['OAUTH_TOKEN'] ?? '') . \"\\r\\n\" . \r\n          \"User-Agent: My-App\\r\\n\",\r\n    ],\r\n  ];\r\n\r\n  $context = stream_context_create($options);\r\n\r\n  if (!empty($_GET['client']) || !empty($_GET['domain'])) {\r\n    $latest_remote_commit_url = 'https:\/\/api.github.com\/repos\/barrydit\/' . $_GET['domain'] . '\/git\/refs\/heads\/main';\r\n  } elseif (!empty($_GET['project'])) {\r\n    $path = 'projects' . DIRECTORY_SEPARATOR . $_GET['project'] . DIRECTORY_SEPARATOR;   \r\n    if (is_dir(APP_PATH . $path)) {\r\n      define('APP_PROJECT', new clientOrProj($path));\r\n      $latest_remote_commit_url = 'https:\/\/api.github.com\/repos\/barrydit\/' . $_GET['project'] . '\/git\/refs\/heads\/main';\r\n    }\r\n  } else if (isset($_ENV['COMPOSER']) && !empty($_ENV['COMPOSER'])) {\r\n    $latest_remote_commit_url = 'https:\/\/api.github.com\/repos\/barrydit\/' . $_ENV['COMPOSER']['PACKAGE'] . '\/git\/refs\/heads\/main';\r\n  }\r\n\r\n  $response = defined('APP_CONNECTED') && check_http_status($_ENV['GITHUB']['ORIGIN_URL']) === true && !check_http_status($latest_remote_commit_url, 404) ? file_get_contents($latest_remote_commit_url, false, $context) : '{}';\r\n  $errorDetails = error_get_last();\r\n  if (isset($http_response_header) && strpos($http_response_header[0], '401') !== false) {\r\n    $errors['git-unauthorized'] = \"[git] You are not authorized. The token may have expired.\\n\";\r\n  } elseif (isset($errorDetails['message'])) {\r\n    $errors['other'] = 'An error occurred: ' . $errorDetails['message'];\r\n  }\r\n\r\n  $data = json_decode($response, true);\r\n\r\n  if ($data && isset($data['object']['sha'])) {\r\n    $latest_remote_commit_sha = $data['object']['sha'];\r\n\r\n    if ($latest_local_commit_sha !== $latest_remote_commit_sha) {\r\n      $errors['GIT_UPDATE'] = $errors['GIT_UPDATE'] . $latest_local_commit_sha . '  ' . $latest_remote_commit_sha  . \"\\n\"; \r\n    } else {\r\n      $errors[] = 'Remote SHA ($_ENV[\\'GITHUB\\'][\\'REMOTE_SHA\\']) was updated.' . \"\\n\" . $errors['GIT_UPDATE'] . \"\\n\";\r\n      $_ENV['GITHUB']['REMOTE_SHA'] = $latest_remote_commit_sha;\r\n      $_ENV['HIDE_UPDATE_NOTICE'] = '';\r\n      unset($errors['GIT_UPDATE']);\r\n    }\r\n  } else {\r\n    $errors['GIT_UPDATE'] .= \"Failed to retrieve commit information.\\n\";\r\n  }\r\n  $_ENV['HIDE_UPDATE_NOTICE'] = '';\r\n  return $_ENV['GITHUB']['REMOTE_SHA'] = $latest_local_commit_sha;\r\n}\r\n\r\n\/\/dd($latest_remote_commit_url);\r\n if (is_file($file = APP_PATH . APP_ROOT . '.env') && date('Y-m-d', filemtime($file)) != date('Y-m-d')) {\r\n    if (isset($_ENV['GITHUB']['REMOTE_SHA']) && git_origin_sha_update() !== $_ENV['GITHUB']['REMOTE_SHA']) {\r\n      \/\/\r\n    }\r\n}\r\n\r\n\/\/ file has to exists first\r\nis_dir(APP_PATH . APP_BASE['var']) or mkdir(APP_PATH . APP_BASE['var'], 0755);\r\nif (is_file(APP_PATH . APP_BASE['var'] . 'git-scm.com.html')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime(APP_PATH . APP_BASE['var'] . 'git-scm.com.html'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/git-scm.com\/downloads';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($html = curl_exec($handle))) {\r\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'git-scm.com.html', $html) or $errors['GIT_LATEST'] = \"$url returned empty.\";\r\n    }\r\n  }\r\n} else {\r\n  $url = 'https:\/\/git-scm.com\/downloads';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($html = curl_exec($handle))) {\r\n    file_put_contents(APP_PATH . APP_BASE['var'] . 'git-scm.com.html', $html) or $errors['GIT_LATEST'] = \"$url returned empty.\";\r\n  }\r\n}\r\nlibxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n$doc = new DOMDocument(1.0, 'utf-8');\r\n$doc->loadHTML(file_get_contents(APP_PATH . APP_BASE['var'] . 'git-scm.com.html'));\r\n\r\n$content_node = $doc->getElementById(\"main\");\r\n\r\n$node = getElementsByClass($content_node, 'span', 'version');\r\n\r\n\/\/$xpath = new DOMXpath($doc); \/\/$xpath->query('\/\/p [contains (@class, \"latest\")]');\r\n\/\/dd($xpath);\r\n\r\n$pattern = '\/(\\d+\\.\\d+\\.\\d+)\/';\r\n\r\nif (preg_match($pattern, $node[0]->nodeValue, $matches)) {\r\n  $version = $matches[1];\r\n\r\n  define('GIT_LATEST', $version);\r\n  \/\/echo \"New Version: \" . GIT_LATEST . \"\\n\";\r\n} else {\r\n  $errors['GIT_LATEST'] = $node[0]->nodeValue . ' did not match $version';\r\n}\r\n\r\nif (basename(dirname(APP_SELF)) == __DIR__ . DIRECTORY_SEPARATOR . 'public') {\r\n  if ($path = realpath((basename(__DIR__) != 'config' ? NULL : __DIR__ . DIRECTORY_SEPARATOR) . 'ui.git.php')) {\r\n    require_once $path;\r\n  }\r\n}\r\n\r\nif (APP_SELF == __FILE__ || (defined('APP_DEBUG') && isset($_GET['app']) && $_GET['app'] == 'git')) {\r\n  die($appGit['html']);\r\n}\r\n",
"config/npm.php" : "<?php\r\n\/*\r\n Error: npm WARN EBADENGINE Unsupported engine {\r\nnpm WARN EBADENGINE   package: 'npm@10.2.3',\r\nnpm WARN EBADENGINE   required: { node: '^18.17.0 || >=20.5.0' },\r\nnpm WARN EBADENGINE   current: { node: 'v12.22.12', npm: '7.5.2' }\r\nnpm WARN EBADENGINE }\r\n*\/\r\ndefine('NODE_ENV', !defined('APP_ENV') ? 'production' : APP_ENV);\r\nputenv('NODE_ENV=' . (string) NODE_ENV);\r\n\r\nswitch (substr(PHP_OS, 0, 3)) {\r\n  case 'win':\r\n    define('NODE_EXEC', 'node.exe');\r\n    break;\r\n  default:\r\n    define('NODE_EXEC', '\/usr\/bin\/node');\r\n    break;\r\n}\r\n\r\n$proc = proc_open((substr(PHP_OS, 0, 3) == 'win' ? '' : APP_SUDO) . NODE_EXEC . ' --version', [[\"pipe\", \"r\"], [\"pipe\", \"w\"], [\"pipe\", \"w\"]], $pipes);\r\n\r\n$stdout = stream_get_contents($pipes[1]);\r\n$stderr = stream_get_contents($pipes[2]);\r\n\r\n$exitCode = proc_close($proc);\r\n\r\nif (preg_match('\/v(\\d+\\.\\d+\\.\\d+)\/', $stdout, $matches)) {\r\n  define('NODE_VERSION', $matches[1]);\r\n} else {\r\n  if (empty($stdout)) {\r\n    if (!empty($stderr)) {\r\n      $errors['NODE_VERSION'] = \"\\$stderr = $stderr\";\r\n    }\r\n  }\r\n  \/\/ else $errors['NODE_VERSION'] = $stdout . ' does not match $version';\r\n}\r\n\r\ndefine('NODE_MODULES_PATH', APP_PATH . 'node_modules\/');\r\n\r\nif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN')\r\n  define('NPM_EXEC', 'npm' \/*.'.cmd'*\/);\r\nelse {\r\n  define('NPM_EXEC', '\/usr\/bin\/npm');\r\n\r\n  $npmExecPath = shell_exec('which ' . NPM_EXEC);\r\n  if ($npmExecPath !== false) {\r\n    \/\/ npm_exec not found\r\n    \/\/ handle the error here\r\n  \r\n$proc = proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' --version', [array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")], $pipes);\r\n\r\n$stdout = stream_get_contents($pipes[1]);\r\n$stderr = stream_get_contents($pipes[2]);\r\n\r\n$exitCode = proc_close($proc);\r\n    \r\n  }\r\n}\r\n\r\nif (preg_match('\/(\\d+\\.\\d+\\.\\d+)\/', $stdout, $matches))\r\n  define('NPM_VERSION', $matches[1]);\r\nelse\r\n  if (empty($stdout)) {\r\n    if (!empty($stderr))\r\n      $errors['NPM_VERSION'] = \"\\$stderr = $stderr\";\r\n  } \/\/ else $errors['NPM_VERSION'] = $stdout . ' does not match $version'; }\r\n\r\nif (!is_file(APP_PATH . 'package.json'))\r\n  if (@touch(APP_PATH . 'package.json'))\r\n    file_put_contents(APP_PATH . 'package.json', <<<END\r\n{\r\n  \"scripts\": {\r\n    \"start\": \"NODE_ENV=development node main.js\",\r\n    \"build\": \"NODE_ENV=production webpack\"\r\n  }\r\n}\r\nEND\r\n);\r\n\r\nif (!is_dir(NODE_MODULES_PATH)) {\r\n  $proc=proc_open((substr(PHP_OS, 0, 3) == 'win' ? '' : APP_SUDO) . NPM_EXEC . ' install',\r\n    [\r\n      [\"pipe\", \"r\"],\r\n      [\"pipe\", \"w\"],\r\n      [\"pipe\", \"w\"]\r\n    ],\r\n  $pipes);\r\n  [$stdout, $stderr, $exitCode] = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n  $errors['NPM-INSTALL']= !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : \" Error: $stderr\") . (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\");\r\n  \r\n  $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' install -g npm',\r\n    [\r\n      [\"pipe\", \"r\"],\r\n      [\"pipe\", \"w\"],\r\n      [\"pipe\", \"w\"]\r\n    ],\r\n  $pipes);\r\n  [$stdout, $stderr, $exitCode] = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n  $errors['NPM-INSTALL']= !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : \" Error: $stderr\") . (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\");\r\n} else {\r\n\/*\r\n\r\n  $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' --force update',\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\n  list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n  $errors['NPM-UPDATE']= (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n  \r\n   \/\/ Error: npm WARN using --force Recommended protections disabled.\r\n*\/\r\nif (substr(PHP_OS, 0, 3) != 'WIN') {\r\n  $npmExecPath = shell_exec('which ' . NPM_EXEC);\r\n  if ($npmExecPath !== false) {\r\n    $proc=proc_open(APP_SUDO . NPM_EXEC . ' cache clean -f',\r\n        [\r\n          [\"pipe\", \"r\"],\r\n          [\"pipe\", \"w\"],\r\n          [\"pipe\", \"w\"]\r\n        ],\r\n    $pipes);\r\n      [$stdout, $stderr, $exitCode] = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n    if (!preg_match('\/npm\\sWARN\\susing\\s--force\\sRecommended\\sprotections\\sdisabled.\/', $stderr))\r\n      $errors['NPM-CACHE-CLEAN-F'] = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : (preg_match('\/npm\\sWARN\\susing\\s--force\\sRecommended\\sprotections\\sdisabled.\/', $stderr) ? $stderr : \" Error: $stderr\")) . (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\");\r\n  }\r\n\r\n\r\n  \/\/ Error: npm WARN using --force Recommended protections disabled.\r\n\r\n  if (!is_dir(NODE_MODULES_PATH . 'jquery') ) {\r\n    $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' install jquery@3.7.1',\r\n      array(\r\n        array(\"pipe\",\"r\"),\r\n        array(\"pipe\",\"w\"),\r\n        array(\"pipe\",\"w\")\r\n      ),\r\n    $pipes);\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n    $errors['NPM-INSTALL-JQUERY'] = (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n  }\r\n\r\n  \/\/webpack - Packs CommonJs\/AMD modules for the browser\r\n  \r\n  $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . 'webpack --version', \/\/ Prints out System, Binaries, Packages\r\n      array(\r\n        array(\"pipe\",\"r\"),\r\n        array(\"pipe\",\"w\"),\r\n        array(\"pipe\",\"w\")\r\n      ),\r\n    $pipes);\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n    $errors['NPM-WEBPACK'] = (!isset($stdout) ? NULL : ltrim($stdout) . (isset($stderr) && $stderr === '' ? NULL : (preg_match('\/sudo:\\swebpack:\\scommand\\snot\\sfound\/', $stderr) ? '`webpack` is not currently installed (locally) on this computer.' . \"\\n\" : ' Error: ' . $stderr)) . (isset($exitCode) && $exitCode == 0 ? NULL : \/* 'Exit Code: ' . $exitCode*\/ '' ));\r\n    \r\n    if (!isset($errors['NPM-WEBPACK']) && !empty($errors['NPM-WEBPACK'])) {\r\n    \r\n  if (!is_dir(NODE_MODULES_PATH . 'webpack') || !is_dir(NODE_MODULES_PATH . 'webpack-cli') ) {\r\n    $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' install webpack webpack-cli --save-dev',\r\n      array(\r\n        array(\"pipe\",\"r\"),\r\n        array(\"pipe\",\"w\"),\r\n        array(\"pipe\",\"w\")\r\n      ),\r\n    $pipes);\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n    $errors['NPM-INSTALL-WEBPACK[-cli]']= (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n  } else {\r\n    \/\/ webpack.config.js\r\n    if (is_dir(NODE_MODULES_PATH . 'webpack')) {\r\n      if (!is_file(APP_PATH . 'webpack.config.js'))\r\n        if (@touch(APP_PATH . 'webpack.config.js'))\r\n          file_put_contents(APP_PATH . 'webpack.config.js', <<<END\r\nmodule.exports = {\r\n  entry: '.\/your_entry_file.js', \/\/ Entry point of your application\r\n  mode: '{APP_ENV}',\r\n  output: {\r\n    filename: 'bundle.js', \/\/ Output file name\r\n    path: __dirname + '\/dist',\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: \/\\.js$\/,\r\n        exclude: \/node_modules\/,\r\n        use: {\r\n          loader: 'babel-loader',\r\n          options: {\r\n            presets: ['@babel\/preset-env']\r\n          }\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\nEND\r\n);  \r\n    }\r\n\r\n    if (!is_dir(NODE_MODULES_PATH . 'babel-loader') ) {\r\n      $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' install babel-loader @babel\/core @babel\/preset-env --save-dev',\r\n        array(\r\n          array(\"pipe\",\"r\"),\r\n          array(\"pipe\",\"w\"),\r\n          array(\"pipe\",\"w\")\r\n        ),\r\n      $pipes);\r\n      list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n      $errors['NPM-INSTALL-BABEL-LOADER']= (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n    } else {\r\n      if (!is_file(APP_PATH . '.babelrc'))\r\n        if (@touch(APP_PATH . '.babelrc'))\r\n          file_put_contents(APP_PATH . '.babelrc', <<<END\r\n{\r\n  \"presets\": [\"@babel\/preset-env\"]\r\n}\r\n\r\nEND\r\n);\r\n\r\n      if (!is_file(APP_PATH . '.babelrc'))\r\n        if (@touch(APP_PATH . 'babel.config.js'))\r\n          file_put_contents(APP_PATH . 'babel.config.js', <<<END\r\nmodule.exports = {\r\n  presets: ['@babel\/preset-env']\r\n};\r\nEND\r\n);  \r\n    }\r\n\r\n    if (!is_file(APP_PATH . 'dist\/bundle.js')) {\r\n      $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' run build',\r\n        array(\r\n          array(\"pipe\",\"r\"),\r\n          array(\"pipe\",\"w\"),\r\n          array(\"pipe\",\"w\")\r\n        ),\r\n      $pipes);\r\n      list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n      $errors['NPM-RUN-BUILD[bundle.js]'] = (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n    }\r\n  }  \r\n\r\n    }\r\n  }\r\n}\r\n",
"config/php.php" : "",
"projects/index.php" : "<?php\n\/\/if (__FILE__ != get_required_files()[0])\n\/\/die(__FILE__ . '==' . $_SERVER[\"SCRIPT_FILENAME\"]);\n\/\/die(realpath($_SERVER[\"SCRIPT_FILENAME\"]) . '==' . get_required_files()[0]);\n\/\/\n\nif (realpath($_SERVER[\"SCRIPT_FILENAME\"]) == get_required_files()[0] && in_array(__FILE__, get_required_files()) ) {\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\n    if (is_file($path = realpath('..\/config\/config.php'))) {\n      require_once $path;\n    }\n  } elseif (is_file($path = realpath('config\/config.php'))) {\n    require_once $path;\n  } else {\n    die(var_dump(\"Path was not found. file=$path\"));\n  }\n  \/\/require_once(realpath('..\/config\/constants.php')); \n}\n\nif (isset($_ENV['COMPOSER']['AUTOLOAD']) && (bool) $_ENV['COMPOSER']['AUTOLOAD'] === true)\n  require_once APP_PATH . APP_BASE['vendor'] . 'autoload.php';\n\nob_start(); \/\/ dd('Break\/test the dd();');\nuse noximo\\PHPColoredAsciiLinechart\\Settings;\nuse noximo\\PHPColoredAsciiLinechart\\Linechart;\nuse noximo\\PHPColoredAsciiLinechart\\Colorizers\\HTMLColorizer;\n\n$linechart = new Linechart();\n$settings = new Settings();  \/\/ Settings are needed in this case\n$settings->setColorizer(new HTMLColorizer());  \/\/ Here you need to set up HTMLColorizer\n\n$lineA = [];\nfor ($i = 0; $i < +120; $i++) {\n    $lineA[] = 5 * sin($i * ((M_PI * 4) \/ 120));\n}\n\n$linechart->addLine(0, ['color:purple'], Linechart::FULL_LINE);  \/\/ Use css styles instead of ascii color codes\n$linechart->addMarkers($lineA, ['color: green'], ['color: red']);\n$linechart->setSettings($settings);\n\necho $linechart->chart();\n?>\n\n<div class=\"table-container\">\n<table border=\"1\" style=\"\">\n<tr><td>Created<\/td><td>a<\/td><td>table<\/td><td>columns<\/td><\/tr>\n<tr><td>A<\/td><td>new<\/td><td>row<\/td><\/tr>\n<tr><td>And<\/td><td>some<\/td><td>more<\/td><td>rows<\/td><\/tr>\n<\/table>\n\n<table border=\"1\" style=\"\">\n<tr><td>Create New<\/td><td>a<\/td><td>table<\/td><td>columns<\/td><\/tr>\n<tr><td>A<\/td><td>new<\/td><td>row<\/td><\/tr>\n<tr><td>And<\/td><td>some<\/td><td>more<\/td><td>rows<\/td><\/tr>\n<\/table>\n<\/div>\n<div style=\"clear: both;\"><\/div>\n\n<?php\n\n\/\/ Capture the output into a variable\n$output = ob_get_clean();\nob_end_clean();\n\n$output = ($output == '' ? '\u00a0' : $output);\n\nreturn <<<END\n<!DOCTYPE html>\n<html>\n<head>\n  <title><\/title>\n\n<style>\n\/* * { border: 1px dashed red; } *\/\npre {\n    white-space: pre-wrap;\n    background: hsl(220, 80%, 90%);\n}\n    .table-container {\n      width: 100%;\n      margin: 10px 0; \/* Adjust margin as needed *\/\n    }\n\n    .table-container table {\n      float: left;\n      width: 45%; \/* Adjust width as needed *\/\n      margin-right: 5%; \/* Adjust margin as needed *\/\n      border-collapse: collapse;\n    }\n\n    .table-container table:last-child {\n      margin-right: 0; \/* Remove margin for the last table *\/\n    }\n\n<\/style>\n\n<\/head>\n<body style=\"background-color: #fff;\">\n<pre style=\"text-align: center;\"><code>|||| Demonstrational Purposes ||||<br \/>--[Save] to Update--<\/code><\/pre>\n{$output}\n<\/body>\n<\/html>\nEND\n;",
"public/.htaccess" : "RewriteEngine On\r\n\r\n# Redirect resource calls from \/assets\/ to \/resources\/\r\nRewriteRule ^resources\/(.*)$ ..\/resources\/$1 [L]",
"public/app.backup.php" : "<?php\r\n\r\nif (__FILE__ != get_required_files()[0]) {\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('..\/config\/config.php'))) {\r\n      require_once $path;\r\n    }\r\n  } elseif (is_file($path = realpath('config\/config.php'))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n}\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  if (isset($_GET['app']) && $_GET['app'] == 'backup')\r\n    if (isset($_POST['path']) && isset($_GET['filename']) && $path = realpath($_POST['path'] . $_GET['filename']))\r\n      file_put_contents($path, $_POST['editor']);\r\n\r\n}\r\n\r\ndefine('APP_BACKUP_PATH', (isset($_SERVER['HOME']) ? $_SERVER['HOME'] : $_SERVER['DOCUMENT_ROOT']) . '\/backup\/'); \/\/ symlink(\/mnt\/d)\r\n\r\n\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_backup-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nright: 0;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n\r\n.splitter {\r\n  width: 100%;\r\n  height: 250px;  \r\n  position: relative;\r\n}\r\n\r\n#separator {\r\n  cursor: row-resize;\r\n  background-color: #aaa;\r\n  background-image: url(\"data:image\/svg+xml;utf8,<svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='100' height='3'><path d='M2 30 0 M5 0 v30 M8 0 v30' fill='none' stroke='black'\/><\/svg>\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  width: 100%;\r\n  height: 15px;\r\n  z-index: 2;\r\n  transform: translateZ(0);\r\n  \/* Prevent the browser's built-in drag from interfering *\/\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n#first {\r\n  background-color: #dde;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 10px;\r\n  z-index: 1;\r\n  transform: translateZ(0);\r\n}\r\n\r\n#second {\r\n  background-color: #eee;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 10px;\r\n  z-index: 1;\r\n  transform: translateZ(0);\r\n  overflow-x: hidden;\r\n}\r\n\r\n#ace-editor {\r\n  margin: 0;\r\n  position: relative;\r\n  resize: both;\r\n  overflow: auto;\r\n  white-space: pre-wrap;\r\n  \/\/width: 100%;\r\n  \/\/height: 100%;\r\n}\r\n\r\n\r\n<?php $app[$backup]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n  <div id=\"app_backup-container\" class=\"<?= (APP_SELF == __FILE__ || isset($_GET['client']) && $_GET['client'] || (isset($_GET['app']) && $_GET['app'] == 'backup')  ? 'selected' : '') ?>\" style=\"position: absolute; <?= (isset($_GET['client']) && $_GET['client'] ? 'display: block;' : '' ) ?> border: 1px solid #000; right: 0; top: 0; z-index: 1;\">\r\n\r\n<?php\r\nif (isset($_GET['client']) && $_GET['client']) {\r\n\r\n$_GET['client'] = urldecode($_GET['client']);\r\n\r\n  $dirs = array_filter(glob(dirname(__DIR__) . '\/..\/..\/clientele\/' . $_GET['client'] . '\/*'), 'is_dir');\r\n\r\n\/\/if (count($dirs) >= 1) $_GET['domain'] = basename($dirs[array_key_first($dirs)]);\r\n\r\n?>\r\n\r\n<form action method=\"GET\">\r\n<!-- input type=\"hidden\" name=\"domain\" value=\"\" \/ -->\r\n<div style=\"display: inline-block;\">\r\n<label for=\"client\">Client:<\/label>\r\n<select id=\"client\" name=\"client\" onchange=\"this.form.submit();\">\r\n  <option value=\"\">---<\/option>\r\n<?php\r\n  $dirs = array_filter(glob(dirname(__DIR__) . '\/..\/..\/clientele\/*'), 'is_dir');\r\n\r\n  foreach ($dirs as $dir) { ?>\r\n  <option <?= (isset($_GET['client']) && $_GET['client'] == basename($dir) ? 'selected' : '') ?>><?= basename($dir); ?><\/option>\r\n<?php } ?>\r\n<\/select>\r\n<\/div>\r\n\r\n<?php if (!empty($_GET['client'])) { \r\n    $dirs = array_filter(glob(dirname(__DIR__) . '\/..\/..\/clientele\/' . $_GET['client'] . '\/*'), 'is_dir'); ?>\r\n<div style=\"display: inline-block;\">\r\n<label for=\"domain\">Domain:<\/label>\r\n<select id=\"domain\" name=\"domain\" onchange=\"this.form.submit();\">\r\n  <option value=\"\">---<\/option>\r\n<?php foreach ($dirs as $dir) { ?>\r\n  <option <?= (isset($_GET['domain']) && $_GET['domain'] == basename($dir) ? 'selected' : '') ?>><?= basename($dir); ?><\/option>\r\n<?php } ?>\r\n<\/select>\r\n<\/div>\r\n<\/form>\r\n<div style=\"clear: both;\"><\/div>\r\n<?php\r\n if (!empty($_GET['domain'])) { \r\n\r\n\/*\r\ndie(var_dump($dirs));\r\n(!str_ends_with(APP_PATH, '\/clientele\/' . $_GET['client'] . '\/' . $_GET['domain'] . '\/') ?: APP_PATH)\r\n*\/\r\n\r\n?>\r\n<form action method=\"POST\">\r\n<?= (!isset($_GET['client'])?: '<input type=\"hidden\" name=\"client\" value=\"' . $_GET['client'] . '\" \/>') ?>\r\n<?= (!isset($_GET['domain'])?: '<input type=\"hidden\" name=\"domain\" value=\"' . $_GET['domain'] . '\" \/>') ?>\r\n<div style=\"padding-left: 50px; text-align: right;\">\r\n<?php\r\n  $dirs = array_filter(glob(dirname(__DIR__) . '\/..\/..\/clientele\/' . $_GET['client'] . '\/' . $_GET['domain'] . '\/*'), 'is_dir');\r\n  foreach ($dirs as $key => $dir) {\r\n    $dir_key = $key;\r\n  ?>\r\n\r\n  <table style=\"width: 75%; font-family: 'Avenir', Verdana, sans-serif; font-size: 10px; color: #000; text-align: left; margin-left: 10px;\">\r\n    <tr>\r\n      <td><input id=\"folder-<?= $key; ?>\" type=\"checkbox\" name=\"folder[<?= basename($dir) ?>]\" value=\"<?= basename($dir); ?>\" checked=\"\" <?= (in_array(basename($dir), ['database', 'vendor', 'var']) ? 'disabled' : '')  ?> \/>&nbsp;<label for=\"folder-<?= $key; ?>\" style=\"color: blue; text-transform: uppercase;\" title=\"<?= $dir; ?>\"><?= basename($dir); ?>\/<\/label><\/td>\r\n    <\/tr>\r\n\r\n<?php\r\n  $dir = basename($dir);\r\n\/\/dd($dir);\r\n  $files = glob(dirname(__DIR__) . '\/..\/..\/clientele\/' . $_GET['client'] . '\/' . $_GET['domain'] . '\/' . $dir . '\/*.php');\r\n  foreach ($files as $key => $file) {\r\n    $b_file = APP_BACKUP_PATH . 'clientele\/' . $_GET['client'] . '\/' . $_GET['domain'] . '\/' . $dir . '\/'. basename($file);\r\n    $hash = md5_file($file);\r\n ?>\r\n    <tr>\r\n      <td >\r\n        <fieldset name=\"\">\r\n          <input id=\"files-<?= $key; ?>\" type=\"checkbox\" name=\"folder[<?= $dir ?>][]\" value=\"<?= basename($file) ?>\" <?= (!is_file($b_file) ? 'checked=\"\"' : (md5_file($b_file) == $hash ?: 'checked=\"\"')) ?> \/>&nbsp;<a href=\"<?= '?client=' . $_GET['client'] . '&domain=' . $_GET['domain']  . '&file=' . $dir . '\/' . basename($file) ?>\" style=\"<?=(md5_file($b_file) == $hash ?: 'color: red;')?>\" title=\"<?= (!is_file($b_file) ? '&lt;NO FILE FOUND&gt;' : md5_file($file)) ?>\"><?= basename($file) ?><\/a>\r\n        <\/fieldset>\r\n      <\/td>\r\n      <td style=\"color: <?= (!is_file($b_file)? 'black' : (md5_file($b_file) == $hash ? 'green' : 'red')) ?>;\"><?= (!is_file($b_file)? '&lt;NO FILE FOUND&gt;' : '' \/*md5_file($file)*\/) ?><\/td>\r\n    <\/tr>\r\n<?php } ?>\r\n  <\/table>\r\n<?php } ?>\r\n<\/div>\r\n<div style=\"display: inline-block;\">\r\n<input type=\"checkbox\" id=\"backup\" name=\"backup\" value=\"<?= APP_BACKUP_PATH ?>\" checked=\"\" \/>&nbsp;<label for=\"backup\"><?= APP_BACKUP_PATH ?> (Backup)<\/label>\r\n<\/div>\r\n<div style=\"display: inline-block; float: right;\">\r\n<button type=\"submit\" class=\"btn\">Commit<\/button>\r\n<\/div>\r\n<\/form>\r\n\r\n<?php } } else { ?>\r\n\r\n<\/form>\r\n\r\n<?php } ?>\r\n\r\n<?php } ?>\r\n\r\n  <\/div>\r\n\r\n<?php $app[$backup]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\/\/ A function is used for dragging and moving\r\nfunction dragElement(element, direction) {\r\n  var md; \/\/ remember mouse down info\r\n  const first = document.getElementById(\"first\");\r\n  const second = document.getElementById(\"second\");\r\n\r\n  element.onmousedown = onMouseDown;\r\n\r\n  function onMouseDown(e) {\r\n    \/\/console.log(\"mouse down: \" + e.clientX);\r\n    md = {\r\n      e,\r\n      offsetLeft: element.offsetLeft,\r\n      offsetTop: element.offsetTop,\r\n      firstHeight: first.offsetHeight,\r\n      secondHeight: second.offsetHeight\r\n    };\r\n\r\n    document.onmousemove = onMouseMove;\r\n    document.onmouseup = () => {\r\n      \/\/console.log(\"mouse up\");\r\n      document.onmousemove = document.onmouseup = null;\r\n    }\r\n  }\r\n\r\n  function onMouseMove(e) {\r\n    \/\/console.log(\"mouse move: \" + e.clientX);\r\n    var delta = {\r\n      x: e.clientX - md.e.clientX,\r\n      y: e.clientY - md.e.clientY\r\n    };\r\n\r\n    if (direction === \"V\") \/\/ Vertical\r\n    {        \r\n      \/\/ Prevent negative-sized elements\r\n      delta.x = Math.min(Math.max(delta.y, -md.firstHeight),\r\n        md.secondHeight);\r\n\r\n      element.style.top = md.offsetTop + delta.x + \"px\";\r\n      first.style.height = (md.firstHeight + delta.x) + \"px\";\r\n      second.style.height = (md.secondHeight - delta.x) + \"px\";\r\n    }\r\n  }\r\n}\r\n\r\ndragElement(document.getElementById(\"separator\"), \"V\");\r\n\r\n<?php $app[$backup]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$backup]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'backup' && APP_DEBUG)\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() {\r\n      return '<!DOCTYPE html>'; \/\/ -wow *\/\r\n    })->shutdown(); \/\/ die();ob_start(); ?>",
"public/app.browser.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"])) {\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('..\/config\/config.php'))) {\r\n      require_once $path;\r\n    }\r\n  } elseif (is_file($path = realpath('config\/config.php'))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n} \r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\n\r\n\/\/ dd(APP_PATH . '  ' . APP_ROOT);\r\n\/\/ PHP_URL_SCHEME, PHP_URL_HOST, PHP_URL_PORT, PHP_URL_USER, PHP_URL_PASS, PHP_URL_PATH, PHP_URL_QUERY or PHP_URL_FRAGMENT\r\n\r\n\r\n\r\n\r\n\/\/ dd(parse_url($_SERVER['REQUEST_URI'], PHP_URL_HOST));\r\n\r\n\/*\r\n\/\/ Define the GitHub API URL\r\n\/\/$githubApiUrl = 'https:\/\/api.github.com\/barrydit';\r\n\r\n\/\/ Make the request to GitHub API\r\n\/\/$response = file_get_contents($githubApiUrl);\r\n\r\n$accessToken = COMPOSER_AUTH['token']; \/\/ Replace with your actual access token\r\n$apiUrl = 'https:\/\/api.github.com\/barrydit';\r\n\r\n$options = [\r\n    'http' => [\r\n        'header' => \"Authorization: token $accessToken\",\r\n        'method' => 'GET'\r\n    ]\r\n];\r\n\r\n$context = stream_context_create($options);\r\n$response = file_get_contents($apiUrl, false, $context);\r\n\r\nif ($response === false) {\r\n    echo 'Error fetching data from GitHub API';\r\n} else {\r\n    $data = json_decode($response, true);\r\n    print_r($data);\r\n}\r\n\r\n\/\/ Forward the response to the client\r\ndd($response);\r\n*\/ \r\n\/*\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/console_app.php') ? '..\/console_app.php' : (is_file('..\/config\/console_app.php') ? '..\/config\/console_app.php' : 'console_app.php'))\r\n    : (is_file('console_app.php') ? 'console_app.php' : (is_file('public\/console_app.php') ? 'public\/console_app.php' : null))) require_once $path; \r\nelse die(var_dump($path . ' path was not found. file=console_app.php'));\r\n*\/\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n\r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['filename'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['filename'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'sudo ' . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open('sudo ' . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n}\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_browser-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 600px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n\r\n<?php $app[$browser]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_browser-container\" class=\"<?= (__FILE__ == get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'browser') ? 'selected' : '') ?>\" style=\"border: 1px solid #000;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">Browser ()<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_browser-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n      <div style=\"display: inline-block; width: auto; padding-left: 10px;\">\r\n        <div style=\"position: absolute; background-color: white; left: 0; right: 0; width: auto;\">WWW: <input type=\"text\" name=\"url\" onselect=\"go_to_url();\" \/><\/div>\r\n        <iframe src=\"<?= (is_dir($path = APP_PATH . APP_BASE['public']) && getcwd() == realpath($path) ?  APP_BASE['public']:'' ) . basename(__FILE__) ?>\" style=\"height: 550px; width: 775px;\"><\/iframe>\r\n      <\/div>\r\n\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n\r\n  <\/div>\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$browser]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$browser]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$browser]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\nis_dir(APP_PATH . APP_BASE['var']) or mkdir(APP_PATH . APP_BASE['var'], 0755);\r\nif (is_file(APP_PATH . APP_BASE['var'] . 'github.com.html')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime(APP_PATH . APP_BASE['var'] . '\/github.com.html'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/github.com\/barrydit\/codeinsync';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($html = curl_exec($handle))) \r\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'github.com.html', $html) or $errors['COMPOSER_LATEST'] = \"$url returned empty.\";\r\n  }\r\n} else {\r\n  $url = 'https:\/\/github.com\/barrydit\/codeinsync';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($html = curl_exec($handle))) \r\n    file_put_contents(APP_PATH . APP_BASE['var'] . 'github.com.html', $html) or $errors['COMPOSER_LATEST'] = \"$url returned empty.\";\r\n}\r\n\r\n\/*\r\nlibxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n$dom = new DOMDocument(1.0, 'utf-8');\r\n$dom->loadHTML(file_get_contents(check_http_status('https:\/\/github.com\/barrydit\/codeinsync') ? 'https:\/\/github.com\/barrydit\/codeinsync' : APP_PATH . APP_BASE['var'] . 'github.com.html'), LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD );   \r\n$xpath = new DOMXPath($dom);\r\n\r\n\/\/header('Content-Type: application\/json');\r\nheader('Access-Control-Allow-Origin: *');\r\nheader('Access-Control-Allow-Methods: GET, OPTIONS');\r\nheader('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization');\r\n\/\/header('Content-Type: application\/json');\r\n\/\/header('Access-Control-Allow-Credentials: true');\r\n\r\n\r\n$destination = $xpath->query('\/\/head\/meta');\r\n$template = $dom->createDocumentFragment();\r\n$template->appendXML('<base href=\"https:\/\/github.com\/\" \/>');\r\n$destination[0]->parentNode->insertBefore($template, $destination[0]->nextSibling);\r\n*\/\r\n\r\n\/*\r\n$dom = new DOMDocument(1.0, 'utf-8');\r\n$dom->loadHTML(file_get_contents(APP_PATH . APP_BASE['var'] . 'github.com.html'));\r\n\r\n$divs = $dom->getElementsByTagName('head');\r\n\r\n$element = $dom->createElement('test', 'This is the root element!');\r\n\r\n$elm = createElement($dom, 'foo', 'bar', array('attr_name'=>'attr_value'));\r\n\r\n$dom->appendChild($elm);\r\n*\/\r\n\r\n\/\/dd($divs);\r\n\r\n\/\/$content_node=$dom->getElementById(\"main\");\r\n\/\/$node=getElementsByClass($content_node, 'p', 'latest');\r\n\r\n\/\/$dom->saveHTML($dom->documentElement);\r\n \r\n\/\/echo \r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'browser' && APP_DEBUG)\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() { \/\/ use($dom)\r\n      return '<!DOCTYPE html>'; \/\/ $dom->saveHTML() ?? file_get_contents(\"https:\/\/github.com\/barrydit\/codeinsync\"); \/\/ $dom->saveHTML(); \/* eval('? >' . $project_code); \/\/ -wow *\/\r\n    })->shutdown(); \/\/ die();",
"public/app.console.php" : "<?php\r\n\r\nglobal $shell_prompt, $auto_clear, $errors;\r\n\r\n  \/*\r\n      realpath ? Returns canonicalized absolute pathname\r\n      is_writable ? Tells whether the filename is writable\r\n      unlink ? Deletes a file\r\n  *\/\r\n  \/\/die(var_dump(get_required_files()));\r\n  if (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]))\r\n    if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n      if (is_file($path = realpath('index.php'))) {\r\n        require_once $path;\r\n      }\r\n    }\r\n    else\r\n      die(var_dump(\"Path was not found. file=$path\"));\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n  \r\n    \/\/require_once realpath(__DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR  . 'config' . DIRECTORY_SEPARATOR . 'classes' . DIRECTORY_SEPARATOR . 'class.sockets.php');\r\n  \r\n  \/\/dd(get_required_files());\r\n    \/\/if (__FILE__ == $_SERVER[\"SCRIPT_FILENAME\"]) {\r\n    \/\/  echo \"called directly\";\r\n    \/\/} else {\r\n    \/\/  echo \"included\/required\";\r\n    \/\/}\r\n  \r\n    \/\/dd(__FILE__, false);\r\n  \/\/!function_exists('dd') ? die('dd is not defined') : dd(COMPOSER_EXEC);\r\n  \r\n  if ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n    if (isset($_POST['cmd'])) {\r\n      chdir(APP_PATH . APP_ROOT);\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^help\/i', $_POST['cmd']))\r\n          $output[] = implode(', ', array('install', 'php', 'composer', 'git', 'npm', 'whoami', 'wget', 'tail', 'cat', 'echo', 'env', 'sudo'));\r\n        else if (preg_match('\/^server\\s*start$\/i', $_POST['cmd'])) {\r\n          Sockets::handleLinuxSocketConnection(true);\r\n          $output[] = 'Sockets started ...';\r\n        } else if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include 'templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php';\r\n        \/\/else if (preg_match('\/^edit\\s+(:?(.*))\/i', $_POST['cmd'], $match))\r\n          \/\/exec($_POST['cmd'], $output);\r\n          \/\/die(header('Location: ' . APP_URL_BASE . '?app=text_editor&filename='.$_POST['cmd']));\r\n        else if (preg_match('\/^php\\s+(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n          if (preg_match('\/^php\\s+(?!(-r))\/i', $_POST['cmd'])) {\r\n            $match[1] = trim($match[1], '\"');\r\n            $output[] = eval($match[1] . (substr($match[1], -1) != ';' ? ';' : ''));\r\n          } else if (preg_match('\/^php\\s+(?:(-r))\\s+(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n            $match[2] = trim($match[2], '\"');\r\n            $_POST['cmd'] = 'php -r \"' . $match[2] . (substr($match[2], -1) != ';' ? ';' : '') . '\"';\r\n  \r\n            if (!$_SERVER['SOCKET']) {\r\n              exec($_POST['cmd'], $output);\r\n            } else {\r\n              $errors['server-1'] = \"Connected to Server: \" . APP_HOST . ':' . APP_PORT . \"\\n\";\r\n  \r\n              \/\/ Send a message to the server\r\n              $errors['server-2'] = 'Client request: ' . $message = \"cmd: \" . $_POST['cmd'] . \"\\n\";\r\n          \r\n              fwrite($_SERVER['SOCKET'], $message);\r\n              $output[] = $_POST['cmd'] . ': ';\r\n              \/\/ Read response from the server\r\n              while (!feof($_SERVER['SOCKET'])) {\r\n                  $response = fgets($_SERVER['SOCKET'], 1024);\r\n                  $errors['server-3'] = \"Server responce: $response\\n\";\r\n                  if (isset($output[end($output)])) $output[end($output)] .= trim($response);\r\n                  \/\/if (!empty($response)) break;\r\n              }\r\n            }\r\n            \/\/$output[] = $_POST['cmd'];\r\n          }\r\n  \r\n        } else if (preg_match('\/^composer\\s+(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n  \r\n          if (!$_SERVER['SOCKET']) {\r\n  \r\n            \/\/$output[] = dd(COMPOSER_EXEC);\r\n            \/\/$output[] = APP_SUDO . COMPOSER_EXEC['bin'] . ' ' . $match[1];\r\n            $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . COMPOSER_EXEC['bin'] . ' ' . $match[1],\r\n            [\r\n              [\"pipe\", \"r\"],\r\n              [\"pipe\", \"w\"],\r\n              [\"pipe\", \"w\"]\r\n            ],\r\n            $pipes);\r\n            list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n            $output[] = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) && $exitCode == 0 ? NULL : ' Exit Code: ' . $exitCode);\r\n                  \/\/$output[] = $_POST['cmd'];        \r\n            \/\/exec($_POST['cmd'], $output);\r\n            \/\/die(var_dump($output));\r\n  \r\n          } else {\r\n  \r\n            $errors['server-1'] = \"Connected to \" . APP_HOST . \" on port \" . APP_PORT . \"\\n\";\r\n  \r\n            \/\/ Send a message to the server\r\n            $errors['server-2'] = 'Client request: ' . $message = \"cmd: \" . $_POST['cmd'] . \"\\n\";\r\n  \r\n            $output[] = $_POST['cmd'] . ' test2: ';\r\n  \r\n            \/\/dd($message, false);\r\n            if (isset($_SERVER['SOCKET']) && is_resource($_SERVER['SOCKET'])) {\r\n              if (get_resource_type($_SERVER['SOCKET']) == 'stream') {\r\n                  fwrite($_SERVER['SOCKET'], $message);\r\n              } else {\r\n                  socket_write($_SERVER['SOCKET'], $message);\r\n              }\r\n            }\r\n  \r\n            \/\/ Read response from the server\r\n            while (!feof($_SERVER['SOCKET'])) {\r\n                $response = fgets($_SERVER['SOCKET'], 1024);\r\n                \r\n                $errors['server-3'] = \"Server responce: $response\\n\";\r\n                if (isset($output[end($output)])) $output[end($output)] .= trim($response);\r\n                else $output[1] .= trim($response);\r\n                \/\/if (!empty($response)) break;\r\n            }\r\n  \r\n            \/\/die(var_dump($output));\r\n          }\r\n  \r\n  \r\n        } else if (preg_match('\/^git\\s+(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n          require_once APP_PATH . 'config\/git.php';\r\n          if (preg_match('\/^git\\s+(help)(:?\\s+)?\/i', $_POST['cmd'])) {\r\n            $output[] = <<<END\r\n  git reset filename   (unstage a specific file)\r\n  \r\n  git branch\r\n  -m   oldBranch newBranch   (Renaming a git branch)\r\n  -d   Safe deletion\r\n  -D   Forceful deletion\r\n  \r\n  git commit -am \"Default message\"\r\n  \r\n  git checkout -b branchName\r\n  END;\r\n          $output[] = $command = ((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') ? '' : APP_SUDO) . (defined('GIT_EXEC') ? GIT_EXEC : 'git' ) . (is_dir($path = APP_PATH . APP_ROOT . '.git') || APP_PATH . APP_ROOT != APP_PATH ? '' : '' ) . ' ' . $match[1];\r\n  \r\n  $proc=proc_open($command,\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\n  \r\n          list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n          preg_match('\/\\\/(.*)\\\/\/', DOMAIN_EXPR, $matches);   \r\n          $output[] = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : (preg_match('\/^To\\s' . $matches[1] . '\/', $stderr) ? $stderr : \"Error: $stderr\")) . (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\");\r\n          } else if (preg_match('\/^git\\s+(update)(:?\\s+)?\/i', $_POST['cmd'])) {\r\n            $output[] = git_origin_sha_update();\r\n          } else if (preg_match('\/^git\\s+(clone)(:?\\s+)?\/i', $_POST['cmd'])) {\r\n          \r\n            \/\/$output[] = dd($_POST['cmd']);\r\n            $output[] = 'test'; \r\n  \r\n  if (preg_match('\/^git\\s+clone\\s+(http(?:s)?:\\\/\\\/([^@\\s]+)@github\\.com\\\/[\\w.-]+\\\/[\\w.-]+\\.git)(?:\\s*([\\w.-]+))?\/', $_POST['cmd'], $github_repo)) { \/\/ matches with token\r\n  \r\n   \/\/ (?:(?=(.*?[^@\\s]+))[^@\\s]+@)?\r\n  \r\n  } else if (preg_match('\/^git\\s+clone\\s+(http(?:s)?:\\\/\\\/github\\.com\\\/[\\w.-]+\\\/[\\w.-]+\\.git)(?:\\s*([\\w.-]+))?\/', $_POST['cmd'], $github_repo)) { \/\/ matches without token\r\n  \/*\r\n              if (realpath($github_repo[3])) $output[] = realpath($github_repo[3]);\r\n  \r\n              \/\/$output[] = dd($github_repo);\r\n              if (!is_dir('.git')) exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . 'git init', $output);\r\n  \r\n              exec('git branch -m master main', $output);\r\n  \r\n              \/\/exec('git remote add origin ' . $github_repo[2], $output);\r\n              \/\/...git remote set-url origin http:\/\/...@github.com\/barrydit\/\r\n  \r\n              exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO)  . 'git config core.sparseCheckout true', $output);\r\n  \r\n              \/\/touch('.git\/info\/sparse-checkout');\r\n  \r\n              file_put_contents('.git\/info\/sparse-checkout', '*'); \/\/\/ exec('echo \"*\" >> .git\/info\/sparse-checkout', $output);\r\n  \r\n              exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . 'git pull origin main', $output);\r\n  \r\n              \/\/exec(APP_SUDO . ' git init', $output);\r\n              \/\/$output[] = dd($output);\r\n            $output[] = 'This works ... ';\r\n  *\/\r\n  }\r\n  \r\n  $output[] = $command = $_POST['cmd'] . ' --git-dir=\"' . APP_PATH . APP_ROOT . '.git\" --work-tree=\"' . APP_PATH . APP_ROOT . '\" https:\/\/' . $_ENV['GITHUB']['OAUTH_TOKEN'] .'@github.com\/barrydit\/codeinsync.git';\r\n  \r\n  \/**\/\r\n  if (isset($github_repo) && !empty($github_repo)) {\r\n  \r\n  $proc = proc_open($command,\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\n  \r\n  list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n  $output[] = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\"));\r\n  \r\n  }\r\n  \r\n  \/\/ exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO)  . 'git --git-dir=\"' . APP_PATH . APP_ROOT . '.git\" --work-tree=\"' . APP_PATH . APP_ROOT . '\" remote add origin ' . $github_repo[2], $output);\r\n  \r\n          } else {\r\n  \r\n          \/\/ git --git-dir=\/var\/www\/.git --work-tree=\/var\/www pull\r\n          \r\n          \/\/ $GIT_DIR environment variable\r\n          if (preg_match('\/^(init)(:?\\s+)?\/i', $match[1])) \r\n            if (!is_file($path = APP_PATH . APP_ROOT . '.gitignore')) touch($path);\r\n  \r\n          if ($match[1] == 'pull') $_ENV['GITHUB']['REMOTE_SHA'] = git_origin_sha_update(); \/\/ git_origin_sha();\r\n  \r\n          \/\/var_dump($_ENV['GITHUB']['REMOTE_SHA']);\r\n  \r\n          \/\/dd($_ENV['GITHUB']['REMOTE_SHA']);\r\n  \r\n          $output[] = 'www-data@localhost:' . getcwd() . '# ' . $command = ((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') ? '' : APP_SUDO) . (defined('GIT_EXEC') ? GIT_EXEC : 'git' ) . (is_dir($path = APP_PATH . APP_ROOT . '.git') || APP_PATH . APP_ROOT != APP_PATH ? ' --git-dir=\"' . $path . '\" --work-tree=\"' . dirname($path) . '\"': '' ) . ' ' . $match[1];\r\n  \r\n  $proc=proc_open($command,\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\n  \r\n          list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n          preg_match('\/\\\/(.*)\\\/\/', DOMAIN_EXPR, $matches);  \r\n          $output[] = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : (preg_match('\/^To\\s' . $matches[1] . '\/', $stderr) ? $stderr : \"Error: $stderr\")) . (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\");\r\n          \/\/$output[] = $_POST['cmd'];     \r\n  \r\n          }\r\n  \r\n  \/*\r\n  Error: To https:\/\/github.com\/barrydit\/codeinsync.git\r\n   5fbad5b..29f689e  main -> main\r\n   \r\n  ^To\\s(?:[a-z]+\\:\\\/\\\/)?(?:[a-z0-9\\\\-]+\\.)+[a-z]{2,6}(?:\\\/\\S*)?\r\n   \r\n   \r\n  *\/\r\n  \/\/ \r\n  \r\n  \r\n        } else if (preg_match('\/^npm\\s+(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n          $output[] = $command = (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . NPM_EXEC . ' ' . $match[1];\r\n  $proc=proc_open($command,\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\n          list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n          $output[] = (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n          \/\/$output[] = $_POST['cmd'];\r\n  \r\n          \/\/exec($_POST['cmd'], $output);\r\n        } else if (preg_match('\/^whoami(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec('whoami', $output);\r\n        else if (preg_match('\/^wget\\s+(:?(.*))\/i', $_POST['cmd'], $match))\r\n          \/* https:\/\/stackoverflow.com\/questions\/9691367\/how-do-i-request-a-file-but-not-save-it-with-wget *\/\r\n          exec(\"wget -qO- {$match[1]} &> \/dev\/null\", $output);\r\n        else {\r\n  \r\n            if (!$_SERVER['SOCKET']) {\r\n              \/\/exec($_POST['cmd'], $output);\r\n              if (preg_match('\/^(\\w+)\\s+(:?(.*))\/i', $_POST['cmd'], $match))\r\n                if (isset($match[1]) && in_array($match[1], ['tail', 'cat', 'echo', 'env', 'sudo', 'whoami', 'server'])) {\r\n                \/\/exec(APP_SUDO . $match[1] . ' ' . $match[2], $output); \/\/ $output[] = var_dump($match);\r\n                \r\n  $output[] = APP_SUDO . $match[1] . ' ' . $match[2];\r\n  $proc=proc_open((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : APP_SUDO) . $match[1] . ' ' . $match[2],\r\n    array(\r\n      array(\"pipe\",\"r\"),\r\n      array(\"pipe\",\"w\"),\r\n      array(\"pipe\",\"w\")\r\n    ),\r\n    $pipes);\r\n            list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n            $output[] = !isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : \" Error: $stderr\") . (isset($exitCode) && $exitCode == 0 ? NULL : \"Exit Code: $exitCode\");\r\n                \r\n            } else {\r\n              $output[] = 'Command not found: ' . $_POST['cmd'];\r\n            }\r\n            } else {\r\n              $errors['server-1'] = \"Connected to \" . APP_HOST . \" on port \" . APP_PORT . \"\\n\";\r\n  \r\n              \/\/ Send a message to the server\r\n              $errors['server-2'] = 'Client request: ' . $message = \"cmd: \" . $_POST['cmd'] . \"\\n\";\r\n            \r\n              fwrite($_SERVER['SOCKET'], $message);\r\n              $output = []; \/\/$_POST['cmd'] . ' test3: ';\r\n\r\n              $buffer = '';\r\n  \r\n              \/\/ Read response from the server\r\n              while (!feof($_SERVER['SOCKET'])) {\r\n                $response = fgets($_SERVER['SOCKET'], 1024); \/\/ Read in chunks of 1024 bytes\r\n                if ($response !== false) {\r\n                    $buffer .= $response; \/\/ Accumulate the response\r\n                }\r\n\/*\r\n                  $response = fgets($_SERVER['SOCKET'], 1024); \/\/ Reading the response 1024 bytes at a time\r\n                  $errors['server-3'] = \"Server response: $response\\n\";\r\n          \r\n                  \/\/ Append or add the response to the output array\r\n                  if (end($output) !== false) {\r\n                      $output[key($output)] .= trim($response);\r\n                  } else {\r\n                      $output[] = trim($response);\r\n                  }\r\n          \r\n                  \/\/ Check for an empty response or end-of-message (optional)\r\n                  if (!empty($response)) {\r\n                      break; \/\/ Exit loop on receiving a non-empty response, or continue based on your logic\r\n                  }\r\n*\/\r\n              }\r\n              \/\/die(var_dump($_SERVER['SOCKET']));\r\n\r\n              fclose($_SERVER['SOCKET']);\r\n            }\r\n  \r\n  \r\n          \/\/\r\n      \r\n        }\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (isset($output) && !empty($output)) {\r\n        if (count($output) == 1) echo \/*(isset($match[1]) ? $match[1] : 'PHP') . ' >>> ' . *\/ join(\"\\n... <<< \", $output); \/\/ . \"\\n\" var_dump($output);\r\n        else join(\"\\n\", $output); \/\/ . \"\\n\"\r\n        echo implode(\"\\n\", $output);\r\n        \/\/$output[] = 'post: ' . var_dump($_POST);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      } else echo $buffer;\r\n      Shutdown::setEnabled(true)->setShutdownMessage(function () { })->shutdown();\r\n      \/\/exit();\r\n    }\r\n  }\r\n  \/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/git.php') ? '..\/git.php' : (is_file('..\/config\/git.php') ? '..\/config\/git.php' : null))\r\n    : (is_file('git.php') ? 'git.php' : (is_file('config\/git.php') ? 'config\/git.php' : null))) require_once $path; \r\n  else die(var_dump($path . ' path was not found. file=git.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/composer.php') ? '..\/composer.php' : (is_file('..\/config\/composer.php') ? '..\/config\/composer.php' : null))\r\n    : (is_file('composer.php') ? 'composer.php' : (is_file('config\/composer.php') ? 'config\/composer.php' : null))) require_once $path; \r\n  else die(var_dump($path . ' path was not found. file=composer.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/npm.php') ? '..\/npm.php' : (is_file('..\/config\/npm.php') ? '..\/config\/npm.php' : null))\r\n    : (is_file('npm.php') ? 'npm.php' : (is_file('config\/npm.php') ? 'config\/npm.php' : null))) require_once $path; \r\n  else die(var_dump($path . ' path was not found. file=npm.php'));\r\n  *\/\r\n  \r\nob_start(); ?>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n\/* Styles for the container div *\/\r\n.container {\r\nposition: relative;\r\nheight: 100%;\r\nwidth: 100%;\r\nbackground-color: lightblue;\r\n}\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_console-container {\r\nposition: fixed;\r\nbottom: 65px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 45px;\r\nbackground-color: #FFA6A6; \/* rgba(255, 0, 0, 0.35) *\/\r\ncolor: white;\r\ntext-align: center;\r\nz-index: 1;\r\n}\r\n\r\n#responseConsole {\r\nposition: relative;\r\ndisplay: block;\r\nmargin: 0 auto;\r\nbackground-color: #D0D0D0; \/* rgba(200,200,200,0.85) *\/\r\ncolor: black;\r\ncursor: pointer;\r\nheight: 60px;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n    .process-list {\r\n      position: absolute;\r\n      background-color: #FFA6A6;\r\n      left: -150px;\r\n      width: 150px;\r\n      height: 150px;\r\n      border: 2px solid #000;\r\n      overflow: hidden;\r\n      display: block;\r\n    }\r\n\r\n    .process {\r\n      border: 1px solid #000;\r\n      color: #fff;\r\n      padding: 10px;\r\n      margin: 5px 0;\r\n      display: block;\r\n      position: relative;\r\n      white-space: nowrap; \/* Prevent wrapping of the text *\/\r\n      width: fit-content; \/* Set the width to fit the content *\/\r\n      clear: both; \/* Ensure each process starts on a new line *\/\r\n      overflow: hidden;\r\n    }\r\n\r\n    @keyframes scroll {\r\n      0% { transform: translateX(15%); }\r\n      100% { transform: translateX(-75%); }\r\n    }\r\n\r\n    .scrolling {\r\n      animation: scroll 10s linear infinite;\r\n    }\r\n\r\n    .vert-slider-container {\r\n      position: relative;\r\n      float: right;\r\n      width: 10px; \/* Adjust the width as needed *\/\r\n      height: 100px; \/* Adjust the height as needed *\/\r\n      \/* margin: 10px auto; Adjust margin to center vertically *\/\r\n      background-color: #f0f0f0; \/* Background color for the slider *\/\r\n    }\r\n\r\n    .vert-slider {\r\n      position: absolute;\r\n      top: 45px;\r\n      left: -70px;\r\n      width: 100px; \/* Adjust the width of the slider track *\/\r\n      height: 10px;\r\n      background: #4CAF50; \/* Slider track color *\/\r\n      \/*transform: translateX(-50%);*\/\r\n      transform: rotate(90deg); \/* Rotate the slider vertically *\/\r\n      cursor: pointer;\r\n    }\r\n\r\n    .vert-slider::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      width: 20px; \/* Adjust the thumb width *\/\r\n      height: 20px; \/* Adjust the thumb height *\/\r\n      background: #fff; \/* Thumb color *\/\r\n      border: 2px solid #4CAF50; \/* Thumb border color *\/\r\n      border-radius: 50%; \/* Rounded thumb *\/\r\n      cursor: pointer;\r\n      margin-top: -10px; \/* Adjust thumb position *\/\r\n      margin-left: -10px; \/* Adjust thumb position *\/\r\n    }\r\n\r\n    .vert-slider::-moz-range-thumb {\r\n      width: 20px; \/* Adjust the thumb width *\/\r\n      height: 20px; \/* Adjust the thumb height *\/\r\n      background: #fff; \/* Thumb color *\/\r\n      border: 2px solid #4CAF50; \/* Thumb border color *\/\r\n      border-radius: 50%; \/* Rounded thumb *\/\r\n      cursor: pointer;\r\n    }\r\n\r\n\r\n    @keyframes scroll {\r\n            0% { transform: translateX(100%); }\r\n            100% { transform: translateX(-100%); }\r\n        }\r\n\r\n<?php $app[$console]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n\r\n<div id=\"app_console-container\" class=\"\" style=\"border: 1px dashed #000; \">\r\n    <div id=\"process-list\" class=\"process-list\" onmouseout=\"stopScroll()\">\r\n<!--\r\n      <div style=\"position: relative; width: 80px; height: 20px; background-color: #000; margin: 0 auto;\">\r\n        <div class=\"scroll-text\" style=\"animation: none; border: 1px solid red; margin: auto; position: absolute; top: 50%; left: 30%; right: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);\">\r\n        Testing\r\n        <\/div>\r\n      <\/div>    \r\n      <div class=\"scroll-text\" style=\"animation: none; position: relative; width: 80px; height: 20px; background-color: #000; margin: 0 auto;\">\r\n      test\r\n      <\/div>    \r\n      <div class=\"scroll-text\" style=\"animation: none; position: relative; width: 80px; height: 20px; background-color: #000; margin: 0 auto;\">\r\n      test\r\n      <\/div>\r\n      -->\r\n    <\/div>\r\n    <div style=\"position: absolute; display: none; top: -320px; background-color: #FFF; border: 1px dashed #000; height: 160px; width: 100%; padding: 20px 10px; color: #000; text-align: left; z-index: -1; text-align: center;\" class=\"text-sm\">\r\n    <h1>&lt;html&gt; &lt;head&gt;<\/h1>\r\n    <h2>&lt;meta&gt;, &lt;link&gt;, &lt;base&gt;,... &lt;\/head&gt;<\/h2>\r\n    \r\n    <h1>body<\/h1>\r\n    <h2>&lt;p&gt;, &lt;pre&gt;, &lt;div&gt;,...<\/h2>\r\n    \r\n    To put language manual \/ langauge specifics <br \/>\r\n    langauge function paramters and related functions <br \/>\r\n    math functions \/ order-of-operation <br \/>\r\n    <\/div>\r\n    <div style=\"position: absolute; display: none; top: -160px; background-color: rgba(255, 255, 255, 0.6); border: 1px dashed #000; height: 160px; width: 100%; padding: 20px 10px; color: #000; text-align: left; z-index: -1;\" class=\"text-sm\">\r\n      <div style=\"display: inline; float: left; background-color: #FFF; width: 50%; border: 1px dashed #000; \">\r\n        <input type=\"checkbox\" checked \/> Interactive<br \/>\r\n        <input type=\"checkbox\" checked \/> font-family: 'Courier New', Courier, monospace;\r\n      <\/div>\r\n      <div style=\"display: inline; float: right; text-align: right; width: 50%; border: 1px dashed #000; \">\r\n      <div style=\"display: inline; float: left; width: 85%; text-align: right;\">Text Zoom:<\/div>\r\n      <div class=\"vert-slider-container\" style=\"display: inline; float: right;\">\r\n        <input type=\"range\" min=\"-2\" max=\"2\" value=\"0\" step=\"1\" class=\"vert-slider\" id=\"mySlider\">\r\n      <\/div>\r\n      <\/div>\r\n    <\/div>\r\n\r\n    <div style=\"position: absolute; top: -24px; background-color: #FFA6A6; border: 1px dashed #000; border-right: none; z-index: -1;\"><button id=\"console-settings-btn\" style=\"padding: 0 4px 4px 4px; font-weight: bold;\" class=\"text-xs\">[Settings...]<\/button><\/div>\r\n\r\n    \r\n    <div style=\"position: absolute; top: -24px; left: 73px; background-color: #FFA6A6; border: 1px dashed #000; border-left: none; z-index: -1;\"><button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold; color: black;\" class=\"text-xs\">Console<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; border: 1px dashed #000; font-weight: bold;\" class=\"text-xs\">SQL Query<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold;\" class=\"text-xs\">PHP<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold;\" class=\"text-xs\">Perl<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold;\" class=\"text-xs\">Python<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold;\" class=\"text-xs\">JavaScript<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold;\" class=\"text-xs\">CSS<\/button> | <button style=\"border: 1px dashed #000; padding: 0 4px 2px 4px; font-weight: bold;\" class=\"text-xs\">HTML<\/button> <\/div>\r\n    <div style=\"text-align: left; position: relative;\">\r\n\r\n        <div style=\"display: inline-block; margin: 5px 0px 0px 10px; float: left;\">\r\n            <button id=\"requestSubmit\" type=\"submit\" style=\"border: 1px dashed #FFF; padding: 2px 4px;\">Run<\/button>&nbsp;\r\n\r\n            <input list=\"commandHistory\" id=\"requestInput\" class=\"text-sm\" style=\"font-family: 'Courier New', Courier, monospace;\" type=\"text\" size=\"34\" name=\"requestInput\" autocomplete=\"off\" spellcheck=\"off\" placeholder=\"php [-rn] &quot;echo 'hello world';&quot;\" value=\"\">\r\n            <datalist id=\"commandHistory\">\r\n                <option value=\"Edge\"><\/option>\r\n            <\/datalist>\r\n\r\n        <\/div>\r\n        <div style=\"display: inline-block;\">\r\n        \r\n        <div style=\"position: relative; display: inline-block; margin: 5px 15px 0px 15px; float: right;\">\r\n            <div style=\"float: left;\">\r\n                <button id=\"consoleCls\" class=\"text-xs\" type=\"submit\" style=\"border: 1px dashed #FFF; padding: 2px 2px; color: black; background-color: yellow;\">Clear (auto)<\/button>\r\n                <input id=\"app_console-auto_clear\" type=\"checkbox\" name=\"auto_clear\" <?= ($auto_clear ? 'checked=\"\" ' : '') ?> \/>&nbsp;\r\n            <\/div>\r\n            <div style=\"float: left;\">\r\n                <button id=\"consoleSudo\" class=\"text-xs\" type=\"submit\" style=\"border: 1px dashed #FFF; padding: 2px 2px; background-color: red;\">sudo<\/button>\r\n                <input id=\"app_console-sudo\" type=\"checkbox\" name=\"auto_sudo\" <?= (defined('APP_SUDO') ? 'checked=\"\" ' : '') ?> \/>&nbsp;\r\n            <\/div>\r\n            <div style=\"float: right;\">\r\n                &nbsp;<button id=\"consoleAnykeyBind\" class=\"text-xs\" type=\"submit\" style=\"border: 1px dashed #FFF; padding: 2px 2px; background-color: green;\">Bind Any[key]<\/button>\r\n                <input id=\"app_ace_editor-auto_bind_anykey\" type=\"checkbox\" name=\"auto_bind_anykey\" checked=\"\">\r\n            <\/div>\r\n        <\/div>\r\n\r\n        <\/div>\r\n        <button id=\"changePositionBtn\" style=\"float: right; margin: 5px 10px 0 0;\" type=\"submit\">&#9650;<\/button>\r\n        <textarea id=\"responseConsole\" spellcheck=\"false\" rows=\"10\" cols=\"85\" name=\"responseConsole\" readonly=\"\"><?php\r\n\/\/$errors->{'CONSOLE'}  = 'wtf';\r\n\r\n\/\/dd($errors);\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  \/\/var_dump($output['results']);\r\n  if (!empty($output['command'])) \/\/ echo join(\"\\n$shell_prompt\", $output['command']) . \"\\n\";\r\n    foreach($output['command'] as $command) {\r\n      if (!empty($output['results'])) {\r\n        echo $shell_prompt . $command;\r\n        foreach($output['results'] as $result) \r\n          foreach($result as $line) { echo \"$line\\n\"; }\r\n      }\r\n    }\r\n  else echo \"$shell_prompt\\n\";\r\n\r\n}\r\n\/\/dd($errors);\r\nif (!empty($errors))\r\n  foreach($errors as $key => $error) {\r\n      if (!is_array($error))\r\n        echo \/*$key . '=>' . *\/$error . ($key != end($errors) ? '' : \"\\n\");\r\n      else echo var_export($error, true); \/\/ foreach($error as $err) echo $err . \"\\n\";\r\n      \/\/else dd($error);\r\n  } ?>\r\n<\/textarea>\r\n        \r\n    <\/div>\r\n<\/div>\r\n\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$console]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\nfunction deleteProcess(link) {\r\n      const process = link.parentNode;\r\n      process.parentNode.removeChild(process);\r\n    }\r\n\r\n    function startScroll(element) {\r\n      const processList = document.getElementById('process-list');\r\n      const duration = processList.offsetWidth \/ 75; \/\/ Adjust the speed by changing the divisor value\r\n      element.style.animationDuration = `${duration}s`;\r\n      element.classList.add('scrolling');\r\n    }\r\n\r\n    function stopScroll() {\r\n      const processList = document.getElementById('process-list');\r\n      const processes = processList.getElementsByClassName('process');\r\n      for (const process of processes) {\r\n        process.classList.remove('scrolling');\r\n      }\r\n    }\r\n\r\nvar slider = document.getElementById(\"mySlider\");\r\n\r\nslider.addEventListener(\"input\", function() {\r\n\r\nvar respConsole = document.getElementById(\"responseConsole\");\r\n\r\nswitch (this.value) {\r\n  case \"-2\":\r\n    respConsole.style.fontSize = \"x-large\"; \r\n    console.log(\"x-large\");\r\n    break;\r\n  case \"-1\":\r\n    respConsole.style.fontSize = \"large\"; \r\n    console.log(\"large\");\r\n    break;\r\n  case \"0\":\r\n    respConsole.style.fontSize = \"medium\"; \r\n    console.log(\"medium\");\r\n    break;\r\n  case \"1\":\r\n    respConsole.style.fontSize = \"small\"; \r\n    console.log(\"small\");\r\n    break;\r\n  case \"2\":\r\n    respConsole.style.fontSize = \"x-small\"; \r\n    console.log(\"x-small\");\r\n    break;\r\n  default:\r\n    console.log(this.value);\r\n}\r\n\r\n    console.log(this.value); \/\/ Output the value to console (you can replace this with any other action)\r\n});\r\n\r\nconst consoleContainer = document.getElementById('app_console-container');\r\n\/\/const reqInp = document.getElementById('requestInput');\r\nconst respCon = document.getElementById('responseConsole');\r\n    \r\nconst styles = window.getComputedStyle(consoleContainer);\r\nconst changePositionBtn = document.getElementById('changePositionBtn');\r\n\r\n<?php if (defined('COMPOSER')) { ?>\r\nconst initSubmit = document.getElementById('app_composer-init-submit');\r\n<?php } ?>\r\n\r\n\r\nlet isFixed = false; \/\/ Store the current position state\r\n\r\nvar requestInput = document.getElementById('requestInput');\r\n\r\nchangePositionBtn.addEventListener('click', () => {\r\n  if (consoleContainer.style.position == 'fixed') {\r\n      isFixed = false;\r\n      changePositionBtn.innerHTML = '&#9660;';\r\n  } else {\r\n\r\n      isFixed = !isFixed;\r\n      changePositionBtn.innerHTML = '&#9650;';\r\n\r\n  }\r\n\/\/show_console();\r\n});\r\n\r\nfunction show_console(event) {\r\n    console.log('showing console...'); \r\n\r\n    const consoleContainer = document.getElementById('app_console-container');\r\n\r\n    \/\/requestInput.focus();\r\n    \r\n    if (typeof event !== 'undefined')\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed) {\r\n                    requestInput.value = '';\r\n                    requestInput.focus();\r\n                }\r\n                event.preventDefault();\r\n                \/\/show_console();\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n        else if (event.keyCode === 8 && requestInput.value == '') {\r\n            if (document.activeElement === requestInput)\r\n                event.preventDefault();\r\n            return false;\r\n        } else {\r\n            if (document.activeElement == document.body) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed) {\r\n                    requestInput.value = event.key;\r\n                    requestInput.focus();\r\n                \/\/isFixed = true; \r\nshow_console();\r\n                } else {                }\r\n                event.preventDefault();\r\n                console.log('activeElement');\r\n            } else {\r\n                document.activeElement = null;\r\n                console.log('else');\r\n                return false;\r\n            }\r\n        }\r\n  \/\/isFixed = !isFixed; \r\n    \r\n  if (typeof isFixed === 'undefined') {\r\n    \/\/if (event !== undefined)\r\n    console.log('isFixed is undefined');\r\n  } else {\r\n  if (!isFixed) {\r\n\r\n    \/\/ If it's currently fixed, change back to absolute\r\n    consoleContainer.style.position = 'absolute';\r\n    consoleContainer.style.top = '';\r\n    consoleContainer.style.left = '50%';\r\n    consoleContainer.style.right = '';\r\n    consoleContainer.style.bottom = '35px';\r\n    consoleContainer.style.transform = 'translate(-50%, -50%)';\r\n    consoleContainer.style.textAlign = 'center';\r\n    consoleContainer.style.zIndex = '999';\r\n\r\n    respCon.style.height = '80px';\r\n\r\n    changePositionBtn.innerHTML = '&#9650;';\r\n\r\n\/*\r\n    consoleContainer.style.marginLeft = 'auto';\r\n    consoleContainer.style.marginRight = 'auto';\r\n    consoleContainer.style.textAlign = 'center';\r\n    consoleContainer.style.transform = 'none';\r\n*\/  \r\n  } else {\r\n\r\n    \/\/ If it's currently absolute, change to fixed\r\n    consoleContainer.style.position = 'fixed';\r\n    consoleContainer.style.top = '35%'; \/\/ Set the fixed position as needed\r\n    consoleContainer.style.left = '50%';\r\n    consoleContainer.style.bottom = '32px';\r\n    consoleContainer.style.transform = 'translate(-50%, -50%)';\r\n    consoleContainer.style.zIndex = '999';\r\n\r\n    respCon.style.height = '165px';\r\n\r\n    changePositionBtn.innerHTML = '&#9660;';\r\n  }\r\n\r\n  }\r\n  if (isFixed) isFixed = !isFixed;\r\n  \/\/isFixed = true;\r\n  \/\/ Toggle the state for the next click\r\n    \/\/isFixed = !isFixed;\r\n}\r\n\r\n\/\/ Attach a focus event listener to the input element\r\n    requestInput.addEventListener('focus', function() {\r\n        \/\/ Check the condition before calling the show_console function\r\n        \/\/if (consoleContainer.style.position !== 'fixed')\r\n        if (  document.getElementById('app_console-container').style.position != 'absolute') {\r\n          if (isFixed)\r\n            requestInput.focus();\r\n\r\n          \/\/show_console();\r\n        }\r\n        if (isFixed) {isFixed = !isFixed;}\r\n        isFixed = true;\r\n        show_console();\r\n    });\r\n\r\n\r\n<?php if (defined('COMPOSER')) { ?>\r\ninitSubmit.addEventListener('click', () => {\r\n  show_console();\r\n  const requestInput = document.getElementById('requestInput');\r\n  const requestConsole = document.getElementById('requestConsole');\r\n  const argv = requestInput.value;\r\n  $.post(\"<?= APP_URL_BASE; \/*$projectRoot*\/?>\",\r\n  {\r\n    cmd: argv\r\n  },\r\n  function(data, status) {\r\n    const requestConsole = document.getElementById('requestConsole');\r\n    console.log(\"Data: \" + data + \"\\nStatus1: \" + status);\r\n    if (requestConsole !== null) {\r\n      requestConsole.value = data + argv;\r\n      requestConsole.value = '<?= $shell_prompt; ?>' + argv + \" \\n\" + data;\r\n    \r\n      requestConsole.scrollTop = requestConsole.scrollHeight;\r\n      console.log('changed scroll');\r\n    }\r\n  }\r\n  \r\n  );\r\n});\r\n<?php } ?>\r\nwindow.addEventListener('resize', () => {\r\n  \/\/ document.getElementById('responseConsole').style.width = window.innerWidth - 15 + 'px';\r\n });\r\n\r\n\r\n\/\/requestInput.addEventListener('focus', (consoleContainer.style.position == 'absolute' ? null : show_console()));\r\n\r\n$(document).ready(function() {\r\n\r\n  const autoClear = $(\"#app_console-auto_clear\").checked;\r\n\r\n\r\n  \/\/$('#responseConsole').css('width', $(window).width() - 20 + 'px');\r\n  \r\n    $(\".slide-toggle\").click(function(){\r\n      $(\".box\").animate({\r\n        width: \"toggle\"\r\n      });\r\n    });\r\n<?php if (defined('APP_PROJECT')) { ?>\r\n  \/\/getDirectory('<?=(isset($_GET['project']) && !empty($_GET['project']) ? basename(APP_PATH . APP_ROOT) : '') ?>', '<?=(isset($_GET['project'\r\n]) && !empty($_GET['project']) ? '' : APP_PATH ) ?>');\r\n  console.log('Path: <?=APP_PATH?>');\r\n<?php } ?>\r\n\r\n  $(\"#requestInput\").bind(\"keydown\", {}, keypressInBox); \/\/keypress\r\n\r\n  function keypressInBox(e) {\r\n    var code = (e.keyCode ? e.keyCode : e.which);\r\n    switch (code) {\r\n\r\n      case 13: \/\/Enter keycode\r\n        e.preventDefault();\r\n        if ($('#requestInput').val() == 'clear') {\r\n          $('#responseConsole').val('>_');\r\n          $('#requestInput').val('');  \r\n        } else\r\n          if ($('#requestInput').val() != '')\r\n            $(\"#requestSubmit\").click();\r\n          $('#requestInput').val('');\r\n        break;\r\n      \/\/case 37:\r\n      \/\/  str = 'Left Key pressed!';\r\n      \/\/  break;\r\n      case 38:\r\n        $('#requestInput').val('test up');\r\n        break;\r\n      \/\/case 39:\r\n      \/\/  str = 'Right Key pressed!';\r\n      \/\/  break;\r\n      case 40:\r\n        $('#requestInput').val('test down');\r\n        \r\n        break;\r\n      default:\r\n        console.log('Key Code: ' + code);\r\n        \/\/show_console();\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  $('#consoleCls').on('click', function() {\r\n    console.log('Button Clicked!');\r\n    $('#responseConsole').val('<?= $shell_prompt; ?>');\r\n    if ($('#app_console-container').css('position') == 'absolute')\r\n      show_console();\r\n  });\r\n\r\n\r\n  $('#changePositionBtn').on('click', function() {\r\n    console.log('Drop Button Clicked!');\r\n    show_console();\r\n  });\r\n    \r\n  $(\"#app_git-help-cmd\").click(function() {\r\n    $('#requestInput').val('git help');\r\n    $('#requestSubmit').click();\r\n    console.log('wow');\r\n\r\n    if (!isFixed) isFixed = true;\r\n    show_console();\r\n  });\r\n\r\n  $(\"#app_git-add-cmd\").click(function() {\r\n    $('#requestInput').val('git add .');\r\n    $('#requestSubmit').click();\r\n    console.log('wow');\r\n  });\r\n  \r\n  $(\"#app_git-remote-cmd\").click(function() {\r\n    $('#requestInput').val('git remote -v');\r\n    $('#requestSubmit').click();\r\n    console.log('wow');\r\n  });\r\n\r\n  $(\"#app_git-commit-cmd\").click(function() {\r\n    $('#requestInput').val('git commit -am \"default message\"');\r\n    document.getElementById('app_git-commit-msg').style.display='block';\r\n\r\n    if (!isFixed) isFixed = true;\r\n    show_console();\r\n    \/\/$('#requestSubmit').click();\r\n  });\r\n  \r\n  $(\"#app_git-clone-cmd\").click(function() {\r\n    $('#requestInput').val('git clone ');  <!--  I need to get the URL -->\r\n    \r\n    document.getElementById('app_git-clone-url').style.display='block';\r\n\r\n    if (!isFixed) isFixed = true;\r\n    show_console();\r\n    \/\/$('#requestSubmit').click();\r\n  });\r\n\r\n  document.getElementById('app_git-oauth-input').addEventListener(\"keydown\", function(event) {\r\n  if (event.keyCode === 13) {\r\n    \/\/ Enter key was pressed\r\n    console.log(\"Enter key pressed\");\r\n\r\n<?php\r\n\/\/dd(APP_PATH . APP_ROOT . '.git\/config');\r\n\r\nif (is_file($file = APP_PATH . APP_ROOT . '.git\/config')) {\r\n\r\n$config = parse_ini_file($file, true);\r\n\r\nif (isset($config['remote origin']['url']) && preg_match('\/(?:[a-z]+\\:\\\/\\\/)?([^\\s]+@)?((?:[a-z0-9\\-]+\\.)+[a-z]{2,6}(?:\\\/\\S*))\/', $config['remote origin']['url'], $matches))\r\n  if (count($matches) >= 2) { ?>\r\n\r\n    $('#requestInput').val('git remote set-url origin https:\/\/' + $(\"#app_git-oauth-input\").val() + '@<?= $matches[2] ?>');\r\n\r\n<?php } else { ?>\r\n\r\n    $('#requestInput').val('git remote set-url origin https:\/\/' + $(\"#app_git-oauth-input\").val() + '@<?= $matches[1] ?>');\r\n\r\n<?php } } ?>\r\n\r\n    document.getElementById('app_git-clone-url').style.display='none';\r\n    \r\n    $('#requestSubmit').click();\r\n  }\r\n\r\n});\r\n\r\n  document.getElementById('app_git-commit-input').addEventListener(\"keydown\", function(event) {\r\n  if (event.keyCode === 13) {\r\n    \/\/ Enter key was pressed\r\n    console.log(\"Enter key pressed\");\r\n    \r\n    $('#requestInput').val('git commit -am \"' + $(\"#app_git-commit-input\").val() + '\"');\r\n    \r\n    document.getElementById('app_git-commit-msg').style.display='none';\r\n    \r\n    $('#requestSubmit').click();\r\n  }\r\n\r\n});\r\n\r\n\r\n\r\n  document.getElementById('app_git-clone-url').addEventListener(\"keydown\", function(event) {\r\n  if (event.keyCode === 13) {\r\n    \/\/ Enter key was pressed\r\n    console.log(\"Enter key pressed\");\r\n    \r\n    $('#requestInput').val('git clone ' + $(\"#app_git-clone-url-input\").val() + ' .');\r\n    \r\n    document.getElementById('app_git-clone-url').style.display='none';\r\n    \r\n    $('#requestSubmit').click();\r\n  }\r\n});\r\n  \r\n  \r\n  $(\"#app_php-error-log\").click(function() {\r\n    $('#requestInput').val('wget <?= APP_WWW ?>?error_log=unlink'); \/\/ unlink\r\n    \/\/show_console();\r\n    $('#requestSubmit').click();\r\n  });\r\n\r\n  $(\"#app_composer-init-submit\").click(function() {\r\n    const requestValue = $('#app_composer-init-input').val().replace(\/\\n\/g, ' ');\r\n    \r\n    $('#requestInput').val(requestValue);\r\n    $('#requestSubmit').click(); \/\/show_console();\r\n    if ($('#app_console-container').css('position') == 'absolute')\r\n      $('#changePositionBtn').click();\r\n    $('#requestInput').val('');\r\n  });\r\n\r\n\r\n  $('#requestSubmit').click(function() {\r\n    let matches = null;\r\n    const autoClear = document.getElementById('app_console-auto_clear').checked;\r\n    console.log('autoClear is ' + autoClear);\r\n    \r\n    \r\n    if (!isFixed) isFixed = true;\r\n    show_console();\r\n\r\n    \r\n    if ($('#app_console-container').css('position') != 'absolute') {\r\n      \/\/window.isFixed = true;\r\n      \/\/if (!window.isFixed) window.isFixed = !window.isFixed;\r\n      \r\n    \/\/if (!isFixed) isFixed = true;\r\n    \/\/show_console();\r\n      \/\/$('#changePositionBtn').click();\r\n    }\r\n    const argv = $('#requestInput').val().trim();\r\n\r\n    if (argv === '') return;\r\n\r\nconst processList = document.getElementById('process-list');\r\nconst newProcess = document.createElement('div');\r\nnewProcess.classList.add('process');\r\nnewProcess.innerHTML = `<a href=\"#\" onclick=\"deleteProcess(this)\">[X]<\/a> ${argv}`;\r\n\r\n\/\/ Add mouseover event\r\nnewProcess.onmouseover = function() {\r\n  setTimeout(() => { startScroll(newProcess); }, 3000);\r\n};\r\n\r\nsetTimeout(() => {\r\n  if (newProcess.parentNode) { \/\/ Check if process still exists\r\n    newProcess.textContent = argv;\r\n    newProcess.onmouseover = function() {\r\n      startScroll(newProcess);\r\n    };\r\n    \/\/ Send post request\r\n    $.post('<?= APP_URL_BASE; \/*$projectRoot*\/?>', { cmd: argv });\r\n  }\r\n}, 3000);\r\n\r\nprocessList.prepend(newProcess);\r\n\r\n\r\n    console.log('Argv: ' + argv);\r\n\r\n\r\n    if (autoClear) $('#responseConsole').val('<?= $shell_prompt; ?>' + argv);\r\n    \r\n    if (argv == '') $('#responseConsole').val('<?= $shell_prompt; ?>' + \"\\n\" + $('#responseConsole').val()) ; \/\/  + \r\n    else if (matches = argv.match(\/^(?:echo\\s+)?(hello)\\s+world\/i)) { \/\/ argv == 'edit'\r\n      if (matches) {\r\n        $('#responseConsole').val(matches[1].charAt(0).toUpperCase() + matches[1].slice(1) + ' ' + 'Barry' + \"\\n\" + '<?= $shell_prompt; ?>' + argv + \"\\n\" + $('#responseConsole').val());\r\n        return false;\r\n      } else {\r\n        console.log(\"Invalid input format.\");\r\n      }\r\n    }     \r\n     else if (matches = argv.match(\/^project\/i)) { \/\/ argv == 'edit'\r\n      if (matches) {\r\n        document.getElementById('app_project-container').style.display='block';\r\n        $('#responseConsole').val('Barry, here you can begin editing your project.' + \"\\n\" + '<?= $shell_prompt; ?>' + argv + \"\\n\" + $('#responseConsole').val());\r\n        changePositionBtn.click();\r\n        return false;\r\n      } else {\r\n        console.log(\"Invalid input format.\");\r\n      }\r\n    } else if (matches = argv.match(\/^h(?:elp)?\\s+?(\\S+)$\/)) {\r\n      \/\/$('#requestInput').val('help');\r\n      \/\/$('#requestSubmit').click();\r\n    } else if (matches = argv.match(\/^j(?:ava)?s(?:cript)?\\s+?(\\S+)$\/)) {\r\n\/\/ Save the original console.log function\r\nvar originalLog = console.log;\r\n\r\n\/\/ Create an array to store log messages\r\nvar logMessages = [];\r\n\r\n  var js_prompt = 'javascript: ';\r\n  var codeString = matches[1]; \/\/ \"console.log('Hello, world!');\";\r\n  var myFunction = new Function(codeString);\r\n\r\n  myFunction();\r\n\/\/ Override console.log to capture messages\r\nconsole.log = function() {\r\n  \/\/ Save the log message to the array\r\n  logMessages.push(Array.from(codeString).join(' '));\r\n\r\n  $('#responseConsole').val(logMessages[1] + \"\\n\" + js_prompt + codeString + \"\\n\" + $('#responseConsole').val());\r\n\r\n  \/\/ Call the original console.log function\r\n  originalLog.apply(console, logMessages);      \r\n      return false;\r\n};\r\n      console.log();\r\n      console.log = originalLog;\r\n      return false;\r\n    } else if (matches = argv.match(\/^edit\\s+(\\S+)$\/)) { \/\/ argv == 'edit'\r\n      if (matches) {\r\n        const pathname = matches[1]; \/\/ \"\/path\/to\/file.txt\"\r\n        console.log(\"Editing: \", pathname);\r\n\r\n        const filePath = pathname;\r\n\r\n        const lastSlashIndex = filePath.lastIndexOf('\/');\r\n        const dirname = filePath.substring(0, lastSlashIndex);\r\n        const filename = filePath.substring(lastSlashIndex + 1);\r\n\r\n\r\n        $.post(\"<?= basename(__FILE__) . '?' . $_SERVER['QUERY_STRING'] ; \/\/APP_URL_BASE; $projectRoot ?>\",\r\n      {\r\n        cmd: argv\r\n      },\r\n      function(data, status) {\r\n        console.log(\"Data: \" + data + \"Status: \" + status);\r\n\r\n        \/\/data = data.trim(); \/\/ replace(\/(\\r\\n|\\n|\\r)\/gm, \"\")\r\n\r\n        if (matches = argv.match(\/edit(\\s+(:?.*)?|)\/gm)) {\r\n          editor1.setValue(data);\r\n\r\n          document.getElementById('app_ace_editor-container').style.display = 'block';\r\n          \/\/console.log(data);\r\n        }\r\n      });\r\n\r\n        \/\/ window.location.href = '<?= APP_URL_BASE ?>?app=ace_editor&path=' + dirname + '&file=' + filename;  \/\/ filename= + pathname\r\n        return false;\r\n      } else {\r\n        console.log(\"Invalid input format.\");\r\n      }\r\n      return false;\r\n    } else if (argv == 'clear') $('#responseConsole').val('clear');\r\n    else if (argv == 'cls') $('#responseConsole').val('<?= $shell_prompt; ?>');\r\n    else if (argv == 'reset') $('#responseConsole').val('>_');\r\n    else {\r\n\r\n      if (autoClear) {\r\n        $('#responseConsole').val(data + argv);\r\n        $('#responseConsole').val('<?= $shell_prompt; ?>' + argv + \"\\n\");\r\n      } else {\r\n        $('#responseConsole').val('<?= $shell_prompt; ?>' + argv + \"\\n\" + $('#responseConsole').val());\r\n      }\r\n\r\n      $.post(\"<?= basename(__FILE__) . '?' . $_SERVER['QUERY_STRING']  ; \/\/APP_URL_BASE; $projectRoot ?>\",\r\n      {\r\n        cmd: argv\r\n      },\r\n      function(data, status) {\r\n        console.log(\"Data: \" + data + \"Status: \" + status);\r\n\r\n        \/\/data = data.trim(); \/\/ replace(\/(\\r\\n|\\n|\\r)\/gm, \"\")\r\n\r\n        if (matches = argv.match(\/chdir(\\s+(:?.*)?|)\/gm)) {\r\n          document.getElementById('app_directory-container').innerHTML = data;\r\n          \/\/console.log(data);\r\n        } else if (matches = data.match(\/((:?sudo\\s+)?(:?<?=str_replace('\/', '\\\/', defined('GIT_EXEC') ? dirname(GIT_EXEC) : ''); ?>)?<?= defined('GIT_EXEC') ? basename(GIT_EXEC) : ''; ?>.*)\/gm)) {\r\n          if (matches = data.match(\/.*status.*\\n+\/gm)) {\r\n            if (matches = data.match(\/.*On branch main\\nYour branch is (ahead of|up to date with).*(:?by\\s[0-9]+commits)?\/gm)) {\r\n              if (matches = data.match(\/.*On branch main\\nYour branch is up to date with.*\\n+\/gm)) {\r\n                if (matches = data.match(\/.*nothing to commit, working tree clean\/gm)) {\r\n                \/\/\r\n                } \r\n              }\r\n              if (matches = data.match(\/.*nothing to commit, working tree clean\/gm)) {\r\n                $('#requestInput').val('git push');\r\n                $('#requestSubmit').click();\r\n              } else if (matches = data.match(\/.*Changes not staged for commit:\/gm)) {\r\n                $('#requestInput').val('git add .');\r\n                $('#requestSubmit').click();\r\n                if (confirm('(Re)Check Git Status?')) {\r\n                  \/\/ User clicked OK\r\n                  $('#requestInput').val('git status');\r\n                  $('#requestSubmit').click();\r\n                } else {\r\n                  \/\/ User clicked Cancel\r\n                  console.log('User clicked Cancel');\r\n                }\r\n                \/\/\r\n              } else if (matches = data.match(\/.*Changes to be committed:\/gm)) {\r\n                $('#requestInput').val('git commit -am \"automatic <?= date('Y-m-d h:i:s'); ?> commit\"');\r\n                \/\/$('#requestSubmit').click();\r\n              } \r\n            }\r\n            $('#responseConsole').val(data + \"\\n\" + $('#responseConsole').val());\r\n          } else if (matches = data.match(\/.*remote\\s-v.*\\n+\/gm)) {\r\n            if (matches = data.match(\/.*origin\\s+(?:[a-z]+\\:\\\/\\\/)?([^\\s]+@)?((?:[a-z0-9\\-]+\\.)+[a-z]{2,6}(?:\\\/\\S*))\\s+\\((fetch|push)\\)\/gm)) {\r\n              \/\/ if (matches === undefined || array.matches == 0) {\r\n              \/\/ array empty or does not exist\r\n              \/\/ }\r\n              $('#responseConsole').val(data + \"\\n\" + $('#responseConsole').val());\r\n            } else {\r\n              $('#responseConsole').val(data + \"\\nNo URL were found.\" + $('#responseConsole').val());\r\n            }\r\n          } else if (matches = data.match(\/.*push.*\\n+\/gm)) {\r\n            if (matches = data.match(\/.*Error:.+(fatal: could not read Password for.+)\\n+Exit Code:.([0-9]+)\/gm)) {\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>Wrong Password!' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n              document.getElementById('app_git-container').style.display='block';\r\n              document.getElementById('app_git-oauth').style.display='block';\r\n              document.getElementById('app_git-clone-url').style.display='none';\r\n              document.getElementById('app_git-commit-msg').style.display='none';\r\n            } else if (matches = data.match(\/.*push.*\\n+To.*\/gm)) {\r\n              if (matches = data.match(\/.*push.*\\n+To.*\\n.*!.*\\[rejected\\].+(\\w+).+[->].+(\\w+).\\(fetch first\\)\/gm)) {\r\n                $('#responseConsole').val('<?= $shell_prompt; ?>Push unsuccessful. Fetch first ' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n                $('#requestInput').val('git fetch origin main');\r\n                $('#requestSubmit').click();\r\n                $('#requestInput').val('git merge origin\/main');\r\n                $('#requestSubmit').click();\r\n                $('#requestInput').val('git commit');\r\n                $('#requestSubmit').click();\r\n                $('#requestInput').val('git push origin main');\r\n                if (confirm('git push origin main?')) {\r\n                  $('#requestSubmit').click();\r\n                } \r\n              } else if (matches = data.match(\/.*push.*\\n+To.*\\n.*!.*\\[rejected\\].+(\\w+).+[->].+(\\w+).\\(non-fast-forward\\)\/gm)) {\r\n                $('#responseConsole').val('<?= $shell_prompt; ?>Push unsuccessful. \"non-fast-forward\" error ' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n                $('#requestInput').val('git push --force origin main');\r\n                if (confirm('(Force) git push origin main?')) {\r\n                  $('#requestSubmit').click();\r\n                } \r\n              } else {\r\n                $('#responseConsole').val('<?= $shell_prompt; ?>Push successful' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n              }\r\n            } else if (matches = data.match(\/.*push.*\\n+Error: Everything up-to-date\/gm)) {\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>Everything up-to-date' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n            } else {\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>' + data + \"\\n\" + $('#responseConsole').val());\r\n\r\n              if (matches = data.match(\/.*push.*\\n+To.*\\n.*!.*\\[.*rejected\\].+\/gm)) {\r\n                $('#responseConsole').val('<?= $shell_prompt; ?> Error: ... secret password may have been found.' + \"\\n\" + $('#responseConsole').val());\r\n              }\r\n            }\r\n          } else if (matches = data.match(\/.*fetch.*\\n+\/gm)) {\r\n            if (matches = data.match(\/.*Error:.+From.+\\n.+\\* branch.+(\\w+).+[->].+(\\w+)\/gm)) {\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>\"non-fast-forward\" error' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n              $('#requestInput').val('git fetch origin main');\r\n              $('#requestSubmit').click();\r\n              if (confirm('(Re)Check Git Status?')) {\r\n                \/\/ User clicked OK\r\n                $('#requestInput').val('git status');\r\n                $('#requestSubmit').click();\r\n              } else {\r\n                \/\/ User clicked Cancel\r\n                console.log('User clicked Cancel');\r\n              }\r\n              $('#requestInput').val('git rebase origin\/main');\r\n              $('#requestSubmit').click();\r\n              $('#requestInput').val('git rebase --continue');\r\n              $('#requestSubmit').click();\r\n              $('#requestInput').val('git push origin main');\r\n              $('#requestSubmit').click();\r\n            }\r\n          } else if (matches = data.match(\/.*pull.*\\n\/gm)) {\r\n            $('#responseConsole').val(data + \"\\n\" + $('#responseConsole').val());\r\n            if (matches = data.match(\/.*Already up to date\\.\/gm))\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>Already up to date.' + \"\\n\" + $('#responseConsole').val());\r\n            else if (confirm('(Re)load Window?')) {\r\n              \/\/ User clicked OK\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>Reloading page (User Prompt).' + \"\\n\" + $('#responseConsole').val());\r\n              window.location.reload();  \/\/ window.location.href = window.location.href;\r\n            }\r\n\r\n          } else if (matches = data.match(\/.*(:?<?=str_replace('\/', '\\\/', defined('GIT_EXEC') ? dirname(GIT_EXEC) : ''); ?>)?<?= defined('GIT_EXEC') ? basename(GIT_EXEC) : ''; ?>.*commit.*\\n\/gm)) {\r\n            if (matches = data.match(\/.*Error: Author identity unknown\\.\/gm)) {\r\n              $('#responseConsole').val('<?= $shell_prompt; ?>Author identity unknown' + \"\\n\" + data + \"\\n\" + $('#responseConsole').val());\r\n              $('#requestInput').val('git config --global user.email \"barryd.it@gmail.com\"');\r\n              $('#requestSubmit').click();\r\n              $('#requestInput').val('git config --global user.name \"Barry Dick\"');\r\n              $('#requestSubmit').click();\r\n            } else {\r\n              if (confirm('Git Push?')) {\r\n                \/\/ User clicked OK\r\n                $('#requestInput').val('git push');\r\n                $('#requestSubmit').click();\r\n              } else {\r\n                \/\/ User clicked Cancel\r\n                console.log('User clicked Cancel');\r\n              }\r\n            }\r\n            $('#responseConsole').val(data + \"\\n\" + $('#responseConsole').val());\r\n          } else {\r\n            $('#responseConsole').val(data + \"\\n\" + $('#responseConsole').val());\r\n          }\r\n        } else {\r\n          \/\/$('#requestInput').val(argv);\r\n          \/\/$('#requestSubmit').click();\r\n          $('#responseConsole').val(data + \"\\n\" + $('#responseConsole').val());\r\n        }\r\n        \/\/if (!autoClear) { $('#responseConsole').val(\"\\n\" + $('#responseConsole').val()); }\r\n      \r\n        \/\/$('#requestInput').val('');\r\n      \r\n        $('#responseConsole').scrollTop = $('#responseConsole').scrollHeight;\r\n      });\r\n    }\r\n\r\n  });\r\n});\r\n<?php $app[$console]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\n\/\/ Path to the JavaScript file\r\n$path = APP_PATH . APP_BASE['resources'] . 'js\/tailwindcss-3.3.5.js';\r\n\r\n\/\/ Create the directory if it doesn't exist\r\nis_dir(dirname($path)) or mkdir(dirname($path), 0755, true);\r\n\r\n\/\/ URL for the CDN\r\n$url = 'https:\/\/cdn.tailwindcss.com';\r\n\r\n\/\/ Check if the file exists and if it needs to be updated\r\nif (!is_file($path) || (time() - filemtime($path)) > 5 * 24 * 60 * 60) { \/\/ ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 \r\n  \/\/ Download the file from the CDN\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n  $js = curl_exec($handle);\r\n  \r\n  \/\/ Check if the download was successful\r\n  if (!empty($js)) {\r\n    \/\/ Save the file\r\n    file_put_contents($path, $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n}\r\n?>\r\n\r\n  <script src=\"<?= check_http_status($url) ? substr($url, strpos($url, parse_url($url)['host']) + strlen(parse_url($url)['host'])) : substr($path, strpos($path, dirname(APP_BASE['resources'] . 'js'))) ?>\"><\/script>     \r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app[$console]['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app[$console]['body']; ?>\r\n\r\n  <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script>\r\n  <!-- <script src=\"resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n<script>\r\n<?= $app[$console]['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $app[$console]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'console' && APP_DEBUG)\r\n  die($app[$console]['html']);\r\n",
"public/app.debug.php" : "<?php\r\n\r\n\/\/require_once('session.php');\r\n\r\n\/\/ dd(get_required_files());\r\n\/\/dd( dirname(__DIR__) . '\/config\/config.php');\r\n\r\nif (__FILE__ == get_required_files()[0]) { \/\/die(getcwd());\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n} elseif (!in_array($path = dirname(__DIR__) . '\/config\/config.php', get_required_files()))\r\n  require_once $path;\r\n$path = $_SERVER['DOCUMENT_ROOT'] . parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\r\n\r\n\r\n\/*\r\nrequire_once realpath('index.php');\r\n*\/\r\n\/\/dd( realpath($path) == realpath(APP_PATH) );\r\n\r\n\/\/dd(APP_ERRORS);\r\n\r\n\/\/dd($_ENV);\r\nif (defined('APP_ENV'))\r\n  if (APP_ENV == 'development' && defined('APP_ERRORS') && APP_ERRORS && defined('APP_DEBUG') && APP_DEBUG == $report_errors = true) NULL;\r\n  elseif (APP_ENV == 'development' && APP_DEBUG == false)\r\n    die(header('Location: ' . (!defined('APP_URL_BASE') and 'http:\/\/' . APP_DOMAIN . APP_URL_PATH) .  '?debug'));\r\n\/\/ is_array($ob_content)\r\n  \/\/$report_errors = true; \/\/\/ dd(APP_ERRORS); \/\/ get_defined_constants(true)['user']'\r\n\r\n \/\/ realpath($path) == \"\/mnt\/c\/www\/public\/composer\" ... $path == \"[\/var\/www\/public]\/composer\/\" == $_SERVER['DOCUMENT_ROOT'] . parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)\r\n\r\n\r\n\/\/ Initialize an associative array with the desired keys\r\n\/\/$files = array( \/* 0 => array('path', 'filesize') *\/\r\n\/\/    'config' => glob(APP_PATH . 'config' . DIRECTORY_SEPARATOR . '*.php'),\r\n\/\/    'database' => glob(APP_PATH . 'database' . DIRECTORY_SEPARATOR . '*.sql'),\r\n\/\/    'public' => glob(APP_PATH . 'public' . DIRECTORY_SEPARATOR . '*.php'),\r\n\/\/    'src' => glob(APP_PATH . 'src' . DIRECTORY_SEPARATOR . '*.php')\r\n\/\/);\r\n\r\n\/\/foreach (array_merge(glob(APP_PATH . '*.php'), glob(APP_PATH . '**\/*.php', GLOB_BRACE | GLOB_NOSORT)) as $filename) {\r\n\/\/    if ($filename == APP_SELF) continue;\r\n\/\/    if ($filename == APP_PATH . 'composer-setup.php') continue;\r\n\/\/    $files[] = ['path' => $filename, 'filesize' => filesize($filename), 'filemtime' => filemtime($filename)];\r\n\/\/}\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\n\r\nob_start(); ?>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n<?php $app[$debug]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n<div><\/div>\r\n<?php $app[$debug]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$debug]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n$files = get_required_files();\r\n$baseDir = APP_PATH;\r\n$organizedFiles = [];\r\n$directoriesToScan = [];\r\n\r\n\/\/ Collect directories from the list of files\r\nforeach ($files as $key => $file) {\r\n    $relativePath = str_replace($baseDir, '', $file);\r\n    $directory = dirname($relativePath);\r\n    \/\/var_dump($directory);\r\n    if (preg_match('\/^vendor(\\\/.*$|)\/', $directory)) {\r\n      unset($files[$key]);\r\n      continue;\r\n    }\r\n    if (!in_array($directory, $directoriesToScan)) {\r\n        $directoriesToScan[] = $directory;\r\n    }\r\n    \/\/ Add the relative path to the organizedFiles array if it is a .php file and not already present\r\n    if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'php' && !in_array($relativePath, $organizedFiles)) {\r\n      $organizedFiles[] = $relativePath;\r\n    }\r\n}\r\n\r\n\/\/ Add non-recursive scanning for the root baseDir for *.php files\r\n$rootPhpFiles = glob($baseDir . '{*.php}', GLOB_BRACE);\r\nforeach ($rootPhpFiles as $file) {\r\n    if (is_file($file)) {\r\n        $relativePath = str_replace($baseDir, '', $file);\r\n        \/\/ Add the relative path to the array if it is a .php file and not already present\r\n        if (pathinfo($relativePath, PATHINFO_EXTENSION) == 'php' && !in_array($relativePath, $organizedFiles)) {\r\n            if ($relativePath == 'composer-setup.php') continue;\r\n            $organizedFiles[] = $relativePath;\r\n        }\r\n    }\r\n}\r\n\r\n\/\/ Scan the specified directories\r\nscanDirectories($directoriesToScan, $baseDir, $organizedFiles);\r\n\r\n\/\/ Display the results\r\n$sortedArray = customSort($organizedFiles);\r\n\r\n$total_include_files = count($files);\r\n$total_include_lines = 0;\r\n$total_filesize = 0;\r\n$total_files = count($sortedArray);\r\n$total_lines = 0;\r\n\r\n\/\/dd($files);\r\n\r\nforeach($sortedArray as $key => $path) {\r\n  $sortedArray[$key] = ['path' => APP_PATH . $path, 'filesize' => filesize(APP_PATH . $path), 'filemtime' => filemtime(APP_PATH . $path)];\r\n  \/\/$total_files++;\r\n  in_array($sortedArray[$key]['path'], $files) and $total_include_lines += count(file($sortedArray[$key]['path'])); \/\/or $total_include_files++;\r\n  $total_filesize += $sortedArray[$key]['filesize'];\r\n  $total_lines += count(file($sortedArray[$key]['path']));\r\n}\r\n\r\n\r\n\/\/die(include 'example-nodes.php');\r\n\r\n\r\nif (isset($_GET['debug']) && $_GET['debug'] == 'stats') {\r\n  \/\/define('APP_END',     microtime(true));\r\n  \r\n  echo <<<HTML\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<style>\r\nbody { background-color: #fff; }\r\n<\/style>\r\nHTML;\r\necho <<<SCRIPT\r\n<script>\r\nwindow.onload = function() {\r\n\r\nvar chart = new CanvasJS.Chart(\"chartContainer\", {\r\n\tanimationEnabled: true,\r\n\ttitle: {\r\n\t\ttext: \"Used and vs Unused Memory\"\r\n\t},\r\n\tdata: [{\r\n\t\ttype: \"pie\",\r\n\t\tstartAngle: 300,\r\n\t\tyValueFormatString: \"##0.00\\\"%\\\"\",\r\n\t\tindexLabel: \"{label} {y}\",\r\n\t\tdataPoints: [\r\n\r\nSCRIPT;\r\n\r\necho '\t\t\t{y: ' . abs(round((1 - memory_get_usage() \/ convertToBytes(ini_get('memory_limit'))) * 100, 2)) . ', label: \"[avail. memory]\"},' . \"\\n\";\r\n\r\necho '\t\t\t{y: ' . round((1 - (convertToBytes(ini_get('memory_limit')) - memory_get_usage()) \/ convertToBytes(ini_get('memory_limit'))) * 100, 2) . ', label: \"[used memory]\"}' . \"\\n\";\r\n\r\n\/\/echo '\t\t\t{y: 7.31, label: \"public\/index\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 4.00, label: \"config\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 7.06, label: \"database\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 1.26, label: \"debug\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 4.91, label: \"functions\"}' . \"\\n\";\r\n\r\necho <<<SCRIPT\r\n\t\t]\r\n\t}]\r\n});\r\nchart.render();\r\n\r\nvar chart2 = new CanvasJS.Chart(\"chartContainer2\", {\r\n\tanimationEnabled: true,\r\n\ttitle: {\r\n\t\ttext: \"Source code vs (Un)Executed code\"\r\n\t},\r\n\tdata: [{\r\n\t\ttype: \"pie\",\r\n\t\tstartAngle: 0,\r\n\t\tyValueFormatString: \"##0.00\\\"%\\\"\",\r\n\t\tindexLabel: \"{label} {y}\",\r\n\t\tdataPoints: [\r\n\r\nSCRIPT;\r\n\r\nob_start();\r\n$sql_lines = 0;\r\nforeach (glob(\"database\/*.sql\") as $filename) {\r\n  $lines = count(file($filename));\r\n  $sql_lines += $lines;\r\n  \/\/echo '\t\t\t{y: ' . abs(round((1 - $lines \/ $total_lines) * 100 - 100, 2)) . ', label: \"' . (basename(dirname($requireFile, 1)) == 'public' ? 'public\/' : '') . pathinfo(basename($requireFile), PATHINFO_FILENAME) . '\"},' . \"\\n\";\r\n}\r\nob_end_clean();\r\n\r\nob_start();\r\n$loaded_lines = 0;\r\n\r\n$percentage = ($total_lines != 0) ? abs(round((1 - $sql_lines \/ $total_lines) * 100 - 100, 2)) : 0;\r\n\r\necho '\t\t\t{y: ' . $percentage . ', label: \"[sql schema]\"},' . \"\\n\";\r\n\r\n$total_lines -= $sql_lines;\r\nforeach(get_required_files() as $requireFile) {\r\n  if (basename(dirname($requireFile, 2)) == 'vendor')\r\n    continue; \/\/ $lines = count(file($requireFile));\r\n  if (basename(dirname($requireFile, 3)) == 'vendor')\r\n    continue; \/\/ $lines = count(file($requireFile));\r\n  elseif (basename(dirname($requireFile, 4)) == 'vendor')\r\n    continue;\r\n  elseif (basename(dirname($requireFile, 5)) == 'vendor')\r\n    continue;\r\n  elseif (basename(dirname($requireFile, 6)) == 'vendor')\r\n    continue;\r\n  else\r\n    $lines = count(file($requireFile));\r\n  $loaded_lines += $lines;\r\n\r\n  $percentage = ($total_lines != 0) ? abs(round((1 - $lines \/ $total_lines) * 100 - 100, 2)) : 0;\r\n\r\n  echo '\t\t\t{y: ' . $percentage . ', label: \"' . (basename(dirname($requireFile, 1)) == 'public' ? pathinfo(basename($requireFile), PATHINFO_FILENAME) : pathinfo(basename($requireFile), PATHINFO_FILENAME)) . '\"},' . \"\\n\";\r\n}\r\n$output = ob_get_contents();\r\nob_end_clean();\r\n\r\n\r\nif ($total_lines != 0) {\r\n    $percentage = abs(round((1 - $lines \/ $total_lines) * 100 - 100, 2)); \/\/ round((1 - $loaded_lines + $sql_lines \/ $total_lines) * 100, 2);\r\n} else {\r\n    $percentage = 0; \/\/ or any default value you want to use when $total_lines is 0\r\n}\r\n\r\necho '\t\t\t{y: ' . $percentage . ', label: \"[source]\"},' . \"\\n\";\r\n\r\necho $output;\r\n\/\/echo '\t\t\t{y: 7.31, label: \"public\/index\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 4.00, label: \"config\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 7.06, label: \"database\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 1.26, label: \"debug\"},' . \"\\n\";\r\n\/\/echo '\t\t\t{y: 4.91, label: \"functions\"}' . \"\\n\";\r\n\r\necho <<<SCRIPT\r\n\t\t]\r\n\t}]\r\n});\r\nchart2.render();\r\n\r\n}\r\n<\/script>\r\nSCRIPT;\r\n  echo <<<HTML\r\n<\/head>\r\n\r\n\r\n\r\n\r\n<body>\r\n\r\n  <form style=\"display: inline;\" action=\"\" method=\"POST\">\r\n      Environemnt: <select name=\"environment\" onchange=\"this.form.submit();\">\r\n        <option value=\"develop\">Development<\/option>\r\n        <option value=\"product\">Production<\/option>\r\n        <option value=\"math\" selected=\"\">Math<\/option>\r\n      <\/select>\r\n  <\/form>\r\n<br \/>\r\nHTML;\r\n  defined('APP_END') or define('APP_END', microtime(true));\r\n  echo '<div style=\"display: block;\" title=\"APP_START - APP_END\"><em>Execution time: <b>'  . round(APP_END - APP_START, 6) . '<\/b> secs ' . \"<br \/>\\n\" . 'Mem: ' . formatSizeUnits(memory_get_usage()) . \"<br \/>\\n\" . ' Max: ' . formatSizeUnits(convertToBytes(ini_get('memory_limit'))) . '<\/em><\/div>' . \"\\n\";\r\n  echo '<div style=\"display: inline-block; float: right; text-align: right;\">'\r\n  . '  <em style=\"font-size: 13px;\">Source (code): [<b>' . formatSizeUnits($total_filesize) . '<\/b>]  [<b>'. $total_files . '<\/b> files]  [<b>' . ($total_lines + $sql_lines) . '<\/b> lines]<\/em>'\r\n  . '<\/div>';\r\n  echo '<div id=\"chartContainer\" style=\"height: 195px; display: inline-block; width: 46%;\"><\/div>' . \"\\n\";\r\n  echo '<div id=\"chartContainer2\" style=\"height: 195px; display: inline-block; width: 46%;\"><\/div>' . \"\\n\";\r\n  echo '<pre style=\"font-size: 12px;\">' . \"\\n\";\r\n  \/\/ print_r(get_defined_constants(true)['user']);\r\n  echo '<\/pre>' . \"\\n\";\r\n  echo '<script src=\"https:\/\/canvasjs.com\/assets\/script\/canvasjs.min.js\"><\/script>' . \"\\n\";\r\n  echo '<\/body>' . \"\\n\";\r\n  echo '<\/html>' . \"\\n\";\r\n  die(); \/\/ include APP_PATH . '\/src\/debug.php'; \r\n\r\n\/*\r\nif (basename($_SERVER['PHP_SELF']) == basename(__FILE__)) { \/\/ ($_SERVER[\"SCRIPT_NAME\"] != APP_ROOT_URL . 'index.php') \r\n  require_once dirname(__DIR__, 1) . '\/config\/session.php';\r\n  header('Location: ' . APP_URL_BASE . '?' . http_build_query( array( 'file' => 'debug' ) ));\r\n  exit();\r\n}\r\n*\/\r\n?>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\" \/>\r\n    <title>Patient Clinic Files -- Debug Window<\/title>\r\n    \r\n    <base href=\"<?=(!is_array(APP_URL) ? APP_URL : APP_URL_BASE)?>\">\r\n    \r\n    <link rel=\"shortcut icon\" href=\"<?=(!defined('APP_URL_BASE') and '\/\/' . APP_DOMAIN . APP_URL_PATH)?>favicon.ico\" \/>\r\n\r\n    <!-- BOOTSTRAP STYLES-->\r\n    <link rel=\"stylesheet\" type=\"text\/css\" href=\"<?=(!defined('APP_URL_BASE') and '\/\/' . APP_DOMAIN . APP_URL_PATH)?>assets\/css\/bootstrap\/bootstrap.min.css\" \/>\r\n\r\n    <link rel=\"stylesheet\" type=\"text\/css\" href=\"<?=(!defined('APP_URL_BASE') and '\/\/' . APP_DOMAIN . APP_URL_PATH)?>assets\/css\/styles.css\" \/>\r\n\r\n    <style><\/style>\r\n\r\n    <script><\/script>\r\n\r\n  <\/head>\r\n\r\n  <body>\r\n    <div id=\"page-inner\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"panel panel-primary\">\r\n            <div class=\"panel-heading\">\r\n              <div style=\"float: left; padding-top: 5px;\">\r\n                <a href=\"<?=APP_BASE_URI?>\" style=\"color: white; text-decoration:none;\"><img src=\"<?=APP_BASE_URI?>assets\/images\/favicon.png\" width=\"32\" height=\"32\"> Debug Window<\/a>\r\n              <\/div>\r\n              <div style=\"float: right;\">\r\n                <a class=\"btn btn-primary\" href=\"<?=APP_BASE_URI . '?file=entry_form&amp;patient_id=' . $_SESSION['patient_id']?>\" style=\"\">New Patient Form<\/a>\r\n                <a class=\"btn btn-primary\" href=\"<?=APP_BASE_URI . '?file=database'?>\" style=\"\">Database<\/a>\r\n                <a class=\"btn btn-primary\" href=\"<?=APP_BASE_URI . '?auth=logout'?>\" style=\"\">Logout<\/a>\r\n              <\/div>\r\n              <div class=\"clearfix\"><\/div>\r\n            <\/div>\r\n            <div class=\"panel-body\">\r\n              <div class=\"col-md-12 h-100\">\r\n                  <!-- <div class=\"form-group\">\r\n                    <label for=\"display_name\">Display Name<\/label>\r\n                    <input type=\"input\" name=\"display_name\" class=\"form-control\" value=\"\">\r\n\t\t\t\t  <\/div> -->\r\n\r\n                  <div class=\"form-group\" style=\"height: 85vh;\">\r\n<?php\r\n  echo '<pre>';\r\n  echo 'Session_id: ' . session_id() . ' ' . '(' . strlen(session_id()) . ')'. \"\\n\\n\";\r\n\r\n  echo 'Defined Constants [User]: ';\r\n  print_r(get_defined_constants(true)['user']); \/\/ [Core] | [pcre]\r\n\r\n  echo '$_SERVER[\"HTTPS\"]: ' . (isset($_SERVER['HTTPS']) ? $_SERVER['HTTPS'] : 'off') . \"\\n\";\r\n  echo '$_SERVER[\"REQUEST_URI\"]: ' . $_SERVER['REQUEST_URI'] . \"\\n\";\r\n  echo '$_SERVER[\"HTTP_REFERER\"]: ' . (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '&lt;none&gt;') . \"\\n\\n\";\r\n\r\n  echo 'Included files: ';\r\n  print_r(get_included_files());\r\n  echo 'Required files: ';\r\n  print_r(get_required_files());\r\n  \r\n  echo 'REQUEST: ';\r\n  print_r($_REQUEST);    \r\n  echo 'GET: ';\r\n  print_r($_GET);    \r\n  echo 'POST: ';\r\n  print_r($_POST);    \r\n  echo 'FILES: ';\r\n  print_r($_FILES);  \r\n  echo 'ENV: ';\r\n  print_r($_ENV);  \r\n  echo 'Cookies: ';\r\n  print_r($_COOKIE);\r\n  echo 'Sessions: ';\r\n  print_r($_SESSION);\r\n\r\n  echo '<\/pre>';\r\n\r\n\/*\r\n    echo 'APP_URL_BASE: ' . APP_URL_BASE . \"<br \/>\\n\";\r\n    echo 'REQUEST_URI: ' . ltrim($_SERVER['REQUEST_URI'], '\/') . \"<br \/>\\n\";\r\n    echo 'Location: ' . preg_replace(\"\/^http:\/i\", \"https:\", APP_URL_BASE . $_SERVER['REQUEST_URI']) . \"<br \/>\\n\";\r\n\t\/\/ echo '__FILE__: ' . __FILE__;\r\n\techo 'Basename ' . basename($_SERVER['REQUEST_URI']) . \"<br \/>\\n\";\r\n    die('PHP_SELF: ' . $_SERVER['PHP_SELF']);\r\n*\/\r\n\r\n  $indicesServer = array(\r\n    'PHP_SELF',\r\n    'argv',\r\n    'argc',\r\n    'GATEWAY_INTERFACE',\r\n    'SERVER_ADDR',\r\n    'SERVER_NAME',\r\n    'SERVER_SOFTWARE',\r\n    'SERVER_PROTOCOL',\r\n    'REQUEST_METHOD',\r\n    'REQUEST_TIME',\r\n    'REQUEST_TIME_FLOAT',\r\n    'QUERY_STRING',\r\n    'DOCUMENT_ROOT', \/\/ \/var\/www\/public\r\n    'HTTP_ACCEPT',\r\n    'HTTP_ACCEPT_CHARSET',\r\n    'HTTP_ACCEPT_ENCODING',\r\n    'HTTP_ACCEPT_LANGUAGE',\r\n    'HTTP_CONNECTION',\r\n    'HTTP_HOST',\r\n    'HTTP_REFERER',\r\n    'HTTP_USER_AGENT',\r\n    'HTTPS',\r\n    'REMOTE_ADDR',\r\n    'REMOTE_HOST',\r\n    'REMOTE_PORT',\r\n    'REMOTE_USER',\r\n    'REDIRECT_REMOTE_USER',\r\n    'SCRIPT_FILENAME',\r\n    'SERVER_ADMIN',\r\n    'SERVER_PORT',\r\n    'SERVER_SIGNATURE',\r\n    'PATH_TRANSLATED',\r\n    'SCRIPT_NAME',\r\n    'REQUEST_URI',\r\n    'PHP_AUTH_DIGEST',\r\n    'PHP_AUTH_USER',\r\n    'PHP_AUTH_PW',\r\n    'AUTH_TYPE',\r\n    'PATH_INFO',\r\n    'ORIG_PATH_INFO'\r\n  );\r\n\r\n  echo '<table cellpadding=\"10\">';\r\n  foreach ($indicesServer as $arg) {\r\n    if (isset($_SERVER[$arg])) {\r\n      echo '<tr><td>'.$arg.'<\/td><td>' . $_SERVER[$arg] . '<\/td><\/tr>';\r\n    }\r\n    else {\r\n      echo '<tr><td>'.$arg.'<\/td><td>-<\/td><\/tr>';\r\n    }\r\n  }\r\n  foreach (array_keys($_SESSION) as $arg) {\r\n    if (isset($_SESSION[$arg])) {\r\n      echo '<tr><td>'.$arg.'<\/td><td>' . $_SESSION[$arg] . '<\/td><\/tr>';\r\n    }\r\n    else {\r\n      echo '<tr><td>'.$arg.'<\/td><td>-<\/td><\/tr>';\r\n    }\r\n  }\r\n  foreach (array_keys($_REQUEST) as $arg) {\r\n    if (isset($_REQUEST[$arg])) {\r\n      echo '<tr><td>'.$arg.'<\/td><td>' . $_REQUEST[$arg] . '<\/td><\/tr>';\r\n    }\r\n    else {\r\n      echo '<tr><td>'.$arg.'<\/td><td>-<\/td><\/tr>';\r\n    }\r\n  }\r\n  foreach (array_keys($_FILES) as $arg) {\r\n    if (isset($_FILES[$arg])) {\r\n      echo '<tr><td>'.$arg.'<\/td><td>' . $_FILES[$arg] . '<\/td><\/tr>';\r\n    }\r\n    else {\r\n      echo '<tr><td>'.$arg.'<\/td><td>-<\/td><\/tr>';\r\n    }\r\n  }\r\n  echo '<\/table>';\r\n?>\r\n                <\/div>\r\n              <\/div>\r\n            <\/div>\r\n          <\/div>\r\n        <\/div>\r\n      <\/div>\r\n    <\/div>\r\n\r\n    <!-- JQUERY SCRIPTS -->\r\n    <script src=\"<?=!defined('APP_URL_BASE') and '\/\/' . APP_DOMAIN . APP_URL_PATH . APP_BASE['resources'] ?>js\/jquery\/jquery-3.5.1.min.js\"><\/script>\r\n  <\/body>\r\n<\/html>\r\n<?php } ?>",
"public/app.directory.php" : "<?php\r\n\r\nif ($path = (basename(getcwd()) == 'public') ? (is_file('..\/config\/config.php') ? '..\/config\/config.php' : 'config.php') :\r\n  (is_file('config.php') ? 'config.php' : dirname(__DIR__, 1) . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'config.php' ))\r\n  require_once $path;\r\nelse {\r\n    die(var_dump(\"$path was not found. file=config.php\"));\r\n}\r\n\r\n\/\/ !isset($_GET['path']) and $_GET['path'] = '';\r\n\r\nglobal $errors;\r\n\r\n\/\/namespace App\\Directory;\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\n\/\/dd($directory, true);\r\n\r\n$tableGen = function() {\r\n  ob_start();\r\n  if (isset($_GET['path']) && preg_match('\/^vendor$\/', $_GET['path'])) { \r\n    if ($_ENV['COMPOSER']['AUTOLOAD'] == true)\r\n      require_once APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'autoload.php';\r\n    require_once 'config\/composer.php';\r\n  ob_start();\r\n?>\r\n    <!-- iframe src=\"composer_pkg.php\" style=\"height: 500px; width: 700px;\"><\/iframe -->\r\n    <div style=\"width: 700px;\">\r\n      <div style=\"display: inline-block; width: 350px;\">Composers Vendor Packages [Installed] List<\/div>\r\n      <div style=\"display: inline-block; text-align: right; width: 300px;\">\r\n        <form action=\"<?= !defined('APP_URL_BASE') ? '\/\/' . APP_DOMAIN . APP_URL_PATH . '?' . http_build_query(APP_QUERY, '', '&amp;') : APP_URL_BASE . '?' . http_build_query(APP_QUERY, '', '&amp;') ?>\" method=\"POST\">\r\n          <input id=\"RequirePkg\" type=\"text\" title=\"Enter Text and onSelect\" list=\"RequirePkgs\" placeholder=\"[vendor]\/[package]\" name=\"composer[package]\" value onselect=\"get_package(this);\" autocomplete=\"off\" style=\" margin-top: 4px;\">\r\n          <button type=\"submit\" style=\"border: 1px solid #000; margin-top: 4px;\"> Add <\/button>\r\n          <div style=\"display: inline-block; float: right; text-align: left; margin-left: 10px;\" class=\"text-xs\">\r\n            <input type=\"checkbox\" name=\"composer[install]\" value=\"\" \/> Install<br \/>\r\n            <input type=\"checkbox\" name=\"composer[update]\" value=\"\" \/> Update\r\n          <\/div>\r\n          <datalist id=\"RequirePkgs\">\r\n            <option value=\"\"><\/option>\r\n          <\/datalist>\r\n        <\/form>\r\n      <\/div>\r\n    <\/div>\r\n    <table style=\"width: inherit; border: none;\">\r\n      <tr style=\" border: none;\">\r\n<?php\r\nif (defined('COMPOSER_VENDORS')) {\r\n          \/\/$paths = glob($path . '\/*');\r\n          $paths = COMPOSER_VENDORS;\r\n          \/\/dd(COMPOSER_VENDORS, false);\r\n          \/\/dd(urldecode($_GET['path']));\r\n          \/*\r\n          $paths = ['0' => ...];\r\n          usort($paths, function ($a, $b) {\r\n              $aIsDir = is_dir(APP_BASE['vendor'].$a);\r\n              $bIsDir = is_dir(APP_BASE['vendor'].$b);\r\n              \r\n              \/\/ Directories go first, then files\r\n              if ($aIsDir && !$bIsDir) {\r\n                  return -1;\r\n              } elseif (!$aIsDir && $bIsDir) {\r\n                  return 1;\r\n              }\r\n              \r\n              \/\/ If both are directories or both are files, sort alphabetically\r\n              return strcasecmp($a, $b);\r\n          });\r\n          *\/\r\n          if (is_file(APP_PATH . 'projects\/index.php'))\r\n            $handle = fopen(APP_PATH . 'projects\/index.php', 'r');\r\n          $pkgs_matched = [];\r\n          \r\n          if (@$handle) {\r\n              while (($line = fgets($handle)) !== false) {\r\n                  if (preg_match('\/^use\\s+(.+?);\/', $line, $matches)) {\r\n                      $pkgs_matched[] = addslashes($matches[1]);\r\n                  }\r\n              }\r\n              fclose($handle);\r\n          } else {\r\n              echo \"Error opening the projects\/index.php file.\";\r\n          }\r\n          \r\n          \r\n          $dirs = [];\r\n          \r\n          foreach (array_filter( glob( APP_PATH . APP_BASE['var'] . 'packages' . DIRECTORY_SEPARATOR . '*.php'), 'is_file') as $key => $dir) {\r\n            if (preg_match('\/^(.*)-(.*).php$\/', basename($dir), $matches)) {\r\n                $name = $matches[1];\r\n                if (!isset($uniqueNames[$name])) {\r\n                    $uniqueNames[$name] = true;\r\n                    $dirs[] = $name;\r\n                }\r\n            }\r\n          }\r\n          \r\n          $count = 1;\r\n          if (!empty($paths))\r\n            foreach ($paths as $vendor => $packages) {\r\n          \r\n              echo \"          <td style=\\\"text-align: center; border: none;\\\" class=\\\"text-xs\\\">\\n            <div class=\\\"container2\\\">\\n\";\r\n          \r\n              $show_notice = true;\r\n          \r\n              \/\/var_dump(preg_grep('\/^Psr\\\\\\\\Log\/', ['Psr\\\\Log\\\\LogLevel']));\r\n              \r\n              \/\/var_dump($dirs);\r\n          \r\n              foreach ($packages as $package) {\r\n                  \/\/var_dump('\/^' . ucfirst($vendor) . '\\\\\\\\' . ucFirst($package) . '\/'); \/\/ $pkgs_matched[0]\r\n              \/\/var_dump(preg_grep($grep = '\/^'. ucfirst($vendor) . '\\\\\\\\\\\\\\\\' . ucFirst($package) . '\/', $pkgs_matched));\r\n                      \/\/if (!in_array(APP_PATH.APP_BASE['vendor'].$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files())) { break; }\r\n                  \/\/if (isset($pkgs_matched) && !empty($pkgs_matched) && class_exists($pkgs_matched[0])) {\r\n                  \r\n                  \/\/$grep = '\/^' . ucfirst($vendor) . '\\\\\\\\' . ucFirst($package) . '\/';\r\n                  \/\/dd(get_declared_classes());\r\n                  \/\/$arr = preg_grep($grep, get_declared_classes());\r\n                  \/\/$show_notice = (!empty($arr) ? true : false);\r\n                  \/\/if (!empty($arr)) {}\r\n                  \r\n                    \r\n                 \/\/ $arr = ;\r\n                  \/\/$show_notice = (!empty($arr) ? true : false);\r\n                  \/\/if (!empty($arr)) { }\r\n          \r\n                  if ($show_notice)\r\n                    $show_notice = isset($pkgs_matched) && !empty($pkgs_matched) && !empty(preg_grep($grep = '\/^' . ucfirst($vendor) . '\\\\\\\\\\\\\\\\' . ucFirst($package) . '\/', $pkgs_matched)) ? false : (in_array($vendor, $dirs) ? true : false); \/\/ $arr[0] class_exists() $pkgs_matched[0]\r\n                    \r\n                    \/\/ (!in_array($vendor, $dirs) ? true : false) \r\n                    \r\n                    \r\n                  \/\/var_dump($show_notice);\r\n                  \/\/var_dump($grep);\r\n                  \/\/var_dump(!empty(preg_grep($grep, $pkgs_matched)));\r\n                  \/\/}\r\n              }\r\n              if ($show_notice)\r\n                  echo '<div style=\"position: absolute; left: -12px; top: -12px; color: red; font-weight: bold;\">[1]<\/div>';\r\n          \r\n                if (is_dir(APP_BASE['vendor'].$vendor) \/*|| !is_dir(APP_BASE['vendor'].$vendor)*\/)\r\n                  \/\/if ($vendor == 'barrydit') continue;\r\n                  if ($vendor == 'symfony') {\r\n                    echo '<a class=\"pkg_dir\" href=\"?path=' . APP_BASE['vendor'] . $vendor . '\">'\r\n                    . '<img src=\"resources\/images\/directory-symfony.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{\"$vendor\/$package\"}) || isset(COMPOSER->{'require-dev'}->{\"$vendor\/$package\"})?: 'opacity:0.4;filter:alpha(opacity=40);') . '\" \/><\/a><br \/>'\r\n                    . '<div class=\"overlay\">';\r\n                    foreach ($packages as $package) {\r\n                      if (in_array(APP_PATH . APP_BASE['vendor'] . $vendor.'\/'.$package.'\/bootstrap.php', get_required_files()))\r\n                        echo '<a href=\"?app=ace_editor&path=' . APP_BASE['vendor'] . $vendor.'\/'.$package.'\/&file=bootstrap.php\"><code style=\"background-color: white; color: #0078D7; font-size: 9px;\">' . $package. '<\/code><\/a><br \/>';\r\n                      elseif (in_array(APP_PATH . APP_BASE['vendor'] . $vendor.'\/'.$package.'\/function.php', get_required_files()))\r\n                        echo '<a href=\"?app=ace_editor&path=' . APP_BASE['vendor'] . $vendor.'\/'.$package.'\/&file=function.php\"><code style=\"background-color: white; color: #0078D7; font-size: 9px;\">' . $package. '<\/code><\/a><br \/>';\r\n                      else \r\n                        echo '<p style=\"background-color: #0078D7;\">' . $package . '<\/p>' . PHP_EOL;\r\n                      \/\/echo APP_PATH. APP_BASE['vendor'] . $vendor.'\/'.$package;\r\n          \r\n                      \/\/ \/mnt\/c\/www\/public\/composer\/vendor\/symfony\/deprecation-contracts\r\n                    }\r\n                    echo '<\/div>' . '<a href=\"?path=' . APP_BASE['vendor'] . $vendor . '\">' . ucfirst($vendor) . '<\/a>';\r\n              \r\n                  } elseif ($vendor == 'composer') {\r\n                    foreach ($packages as $package) {\r\n                      if (is_file(APP_BASE['var'] . 'packages' . DIRECTORY_SEPARATOR . $vendor . '-' . $package . '.php'))\r\n                        $app['composer'][$vendor][$package]['body'] = file_get_contents(APP_BASE['var'] . 'packages' . DIRECTORY_SEPARATOR . $vendor . '-' . $package . '.php');\r\n                      \/\/if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files())) {\r\n                        \/\/echo '<div style=\"position: absolute; left: -12px; top: -12px; color: red; font-weight: bold;\">[1]<\/div>';\r\n                      \/\/  break;\r\n                      \/\/}\r\n                    }\r\n                    echo '<a class=\"pkg_dir\" href=\"#!\" onclick=\"document.getElementById(\\'app_composer-container\\').style.display=\\'block\\';\">' \/\/ ?app=ace_editor&path=vendor\/' . $vendor . '\r\n                    . '<img src=\"resources\/images\/directory-composer.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{\"$vendor\/composer\"}) || isset(COMPOSER->{'require-dev'}->{\"$vendor\/$package\"})? '' : 'opacity:0.4;filter:alpha(opacity=40);') . '\" \/><\/a><br \/>'\r\n                    . '<div class=\"pkg_dir overlay\">';\r\n                    foreach ($packages as $package) {\r\n                      if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files()) && $package == 'log') {\r\n                        echo '<a href=\"?app=ace_editor&path=vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/&file=LogLevel.php\"><code style=\"background-color: white; color: #0078D7; font-size: 10px;\">' . $package. '<\/code><\/a>';\r\n                        continue;\r\n                      }\r\n                      echo '<p style=\"background-color: #0078D7;\">' . $package. '<\/p>' . PHP_EOL;\r\n                    }\r\n                    echo '<\/div>' . '<a href=\"?path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>' . \"\\n\";    \r\n                  } elseif ($vendor == 'psr') {\r\n                    echo '<a class=\"pkg_dir\" href=\"#!\" onclick=\"document.getElementById(\\'app_project-container\\').style.display=\\'block\\';\">' \/\/ ?app=ace_editor&path=vendor\/' . $vendor . '\r\n                    . '<img src=\"resources\/images\/directory-psr.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{\"$vendor\/$package\"}) || isset(COMPOSER->{'require-dev'}->{\"$vendor\/$package\"}) ? '' : (!$show_notice ? '' : 'opacity:0.4;filter:alpha(opacity=40);')) . '\" \/>' . '<\/a><br \/>'\r\n                    . '<div class=\"overlay\">';\r\n                    foreach ($packages as $package) {\r\n                      if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files()) && $package == 'log') {\r\n                        echo '<a href=\"?app=ace_editor&path=vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/&file=LogLevel.php\"><code style=\"background-color: white; color: #0078D7; font-size: 10px;\">' . $package. '<\/code><\/a>';\r\n                        continue;\r\n                      }\r\n                      \r\n                      echo '<p style=\"background-color: #0078D7;\">' . $package. '<\/p>' . PHP_EOL;\r\n                    }\r\n                    echo '<\/div>' . '<a href=\"?path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>' . \"\\n\";    \r\n                  } else {\r\n          \r\n                    echo '<a class=\"pkg_dir\" href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'path=vendor\/' . $vendor . '\">'\r\n                    . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{\"$vendor\/$package\"}) || isset(COMPOSER->{'require-dev'}->{\"$vendor\/$package\"})?: 'opacity:0.4;filter:alpha(opacity=40);') . '\" \/>' . '<\/a><br \/>'\r\n                    . '<div class=\"overlay\">';\r\n                    foreach ($packages as $package) {\r\n                      echo '<code style=\"background-color: white; color: #0078D7;\">' . $package. '<\/code><br \/>' . PHP_EOL;\r\n                    }\r\n                    echo '<\/div>' . '<a href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>' . \"\\n\";\r\n                  }\r\n                echo  '<\/div>' . \"\\n\"\r\n                . '<\/td>' . \"\\n\";\r\n          \r\n                if ($count >= 6) echo '<\/tr><tr>';\r\n                elseif ($vendor == end($paths)) echo '<\/tr>';\r\n          \r\n                if (isset($count) && $count >= 6) $count = 1;\r\n                else $count++;\r\n          \r\n            }\r\n          \r\n          foreach (COMPOSER_VENDORS as $vendor => $packages) {\r\n              $dirs_diff[] = $vendor;\r\n          }\r\n          \r\n          $result = array_diff($dirs, $dirs_diff);\r\n          \r\n          \/\/dd($result);\r\n          if (!empty($result))\r\n            foreach ($result as $install) {\r\n              echo '<td style=\"border: none; text-align: center;\" class=\"text-xs\">' . \"\\n\"\r\n              . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_git-container\\').style.display=\\'block\\';\">' \/\/ \"?path=' . basename($path) . '\" \r\n              . '<img src=\"resources\/images\/directory-install.png\" width=\"50\" height=\"32\" ' . \/*style=\"opacity:0.4;filter:alpha(opacity=40);\"*\/' \/><br \/>' . $install . '\/<\/a>' . \"\\n\";\r\n              echo '<\/td>' . \"\\n\";\r\n          \r\n              if ($count >= 6) echo '<\/tr><tr>';\r\n              elseif ($install == end($result)) echo '<\/tr>';\r\n          \r\n              if (isset($count) && $count >= 6) $count = 1;\r\n              else $count++;\r\n            }\r\n          } \r\n          ?>\r\n        <!-- \/tr -->\r\n    <\/table>\r\n<?php \r\n    $cwd_table = ob_get_contents();\r\n    ob_end_clean();\r\n\r\n    echo $cwd_table;\r\n\r\n\r\n  } elseif (isset($_GET['project']) && empty($_GET['project'])) {\r\n    if (readlinkToEnd($_SERVER['HOME'] . '\/projects') == '\/mnt\/c\/www\/projects' || realpath(APP_PATH . 'projects')) {\r\n      ob_start();         \r\n?>\r\n    <div style=\"text-align: center; border: none;\" class=\"text-xs\">\r\n      <a class=\"pkg_dir\" href=\"#\" onclick=\"document.getElementById('app_project-container').style.display='block';\">\r\n      <img src=\"resources\/images\/project-icon.png\" width=\"50\" height=\"32\" style=\"\" \/><\/a><br \/><a href=\"?project\">.\/project\/<\/a>\r\n    <\/div>\r\n    <table width=\"\" style=\"border: none;\">\r\n      <tr style=\" border: none;\">\r\n        <?php\r\n          $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/*'), 'is_dir'); \r\n          \r\n          $count = 1;\r\n          ?>\r\n        <?php\r\n          if (empty($links)) {\r\n            echo '<hr \/>' . \"\\n\"; \/\/ label=\"     \"\r\n          } else  \/\/dd($links);\r\n            $old_links = $links;\r\n          while ($link = array_shift($links)) {\r\n            $old_link = $link;\r\n            $link = basename($link);\r\n          \r\n          \r\n            echo \"<td style=\\\"text-align: center; border: none;\\\" class=\\\"text-xs\\\">\\n\";\r\n            echo \"<a class=\\\"pkg_dir\\\" href=\\\"?project=$link\\\"><img src=\\\"resources\/images\/directory.png\\\" width=\\\"50\\\" height=\\\"32\\\" style=\\\"\\\" \/><br \/>$link<\/a><br \/><\/td>\\n\";        \r\n            if ($count >= 7) echo '<\/tr><tr>';\r\n            elseif ($old_link == end($old_links)) echo '<\/tr>';\r\n          \r\n            if (isset($count) && $count >= 7) $count = 1;\r\n            else $count++;\r\n          }\r\n          \r\n          }\r\n          \r\n          ?>\r\n    <\/table>\r\n    <!--\r\n      <li>\r\n      <?php if (readlinkToEnd('\/var\/www\/projects') == '\/mnt\/c\/www\/projects' || realpath(APP_PATH . 'projects')) { ?>\r\n      <a href=\"projects\/\">project\/<\/a>\r\n        <ul style=\"padding-left: 10px;\">\r\n          <form action method=\"GET\">\r\n            <select id=\"sproject\" name=\"project\" style=\"color: #000;\">\r\n      <?php\r\n        while ($link = array_shift($links)) {\r\n          $link = basename($link); \/\/ Get the directory name from the full path\r\n          if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/' . $link))\r\n            echo '  <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n        }\r\n        ?>\r\n            <\/select>\r\n          <\/form>\r\n      <\/ul>\r\n      <?php }\r\n      $cwd_table = ob_get_contents();\r\n      ob_end_clean();\r\n\r\n      echo $cwd_table; ?><\/li>\r\n      -->\r\n    <?php } elseif(isset($_GET['application'])) { ?>\r\n\r\n    <?php if (readlinkToEnd('\/var\/www\/applications') == '\/mnt\/c\/www\/applications') {\r\n    if ($_GET['application']) {\r\n\r\n      $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/' . $_GET['application']), 'is_file');\r\n      \r\n      echo '<h3>Application: 7-Zip<\/h3>';\r\n      \r\n      \r\n      echo '<br \/><div style=\"text-align: center; margin: 0 auto;\"><a href=\"https:\/\/www.7-zip.org\/download.html\"><img width=\"110\" height=\"63\" src=\"http:\/\/www.7-zip.org\/7ziplogo.png\" alt=\"7-Zip\" border=\"0\" \/><br \/>'. basename($links[0]) . ' =&gt; <a href=\"https:\/\/www.7-zip.org\/a\/7z2301-x64.exe\">7z2301-x64.exe<\/a><\/a><\/div>' . \"<br \/>\";\r\n      \r\n      \r\n    } else {\r\n      $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/*'), 'is_file'); ?>\r\n    <h3>Applications:<\/h3>\r\n    <table width=\"\" style=\"border: none;\">\r\n      <tr style=\" border: none;\">\r\n        <?php\r\n          \/\/if (empty($links)) {\r\n          \/\/  echo '<option value=\"\" selected>---<\/option>' . \"\\n\"; \/\/ label=\"     \"\r\n          \/\/} else  \/\/dd($links);\r\n          $count = 1; \r\n          $old_links = $links;\r\n          while ($link = array_shift($links)) {\r\n            $old_link = $link;\r\n            $link = basename($link);\r\n          \r\n          \r\n            echo '<td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\";\r\n          \r\n            echo '<a class=\"pkg_dir\" href=\"?application=' . $link . '\">'\r\n            . '<img src=\"resources\/images\/app_file.png\" width=\"50\" height=\"32\" style=\"\" \/><br \/>' . $link . '<\/a><br \/>'\r\n            . '<\/td>' . \"\\n\";\r\n          \r\n            if ($count >= 3) echo '<\/tr><tr>';\r\n            elseif ( $old_link == end($old_links)) echo '<\/tr>';\r\n          \r\n            if (isset($count) && $count >= 3) $count = 1;\r\n            else $count++;\r\n          }\r\n          \r\n          ?>\r\n    <\/table>\r\n    <?php } } } elseif(isset($_GET['node_module']) && empty($_GET['node_module'])) { ?> \r\n    <?php \/\/if (readlinkToEnd('\/var\/www\/applications') == '\/mnt\/c\/www\/applications') { }\r\n      $links = array_filter(glob(APP_PATH . 'node_modules\/*'), 'is_dir'); ?>\r\n    <div style=\"display: inline-block; width: 350px;\">Node Modules [Installed] List<\/div>\r\n    <div style=\"display: inline-block; text-align: right; width: 300px; \">\r\n      <form action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'composer', 'path' => 'vendor'))  ?>\" method=\"POST\">\r\n        <input id=\"RequirePkg\" type=\"text\" title=\"Enter Text and onSelect\" list=\"RequirePkgs\" placeholder=\"[vendor]\/[package]\" name=\"composer[package]\" value=\"\" onselect=\"get_package(this);\" autocomplete=\"off\" style=\" margin-top: 4px;\">\r\n        <button type=\"submit\" style=\"border: 1px solid #000; margin-top: 4px;\"> Add <\/button>\r\n        <div style=\"display: inline-block; float: right; text-align: left; margin-left: 10px;\" class=\"text-xs\">\r\n          <input type=\"checkbox\" name=\"composer[install]\" value=\"\"> Install<br>\r\n          <input type=\"checkbox\" name=\"composer[update]\" value=\"\"> Update\r\n        <\/div>\r\n        <datalist id=\"RequirePkgs\">\r\n          <option value=\"\"><\/option>\r\n        <\/datalist>\r\n      <\/form>\r\n    <\/div>\r\n    <table width=\"\" style=\"border: none;\">\r\n      <tr style=\" border: none;\">\r\n        <?php\r\n          \/\/if (empty($links)) {\r\n          \/\/  echo '<option value=\"\" selected>---<\/option>' . \"\\n\"; \/\/ label=\"     \"\r\n          \/\/} else  \/\/dd($links);\r\n          $count = 1; \r\n          $old_links = $links;\r\n          while ($link = array_shift($links)) {\r\n            $old_link = $link;\r\n            $link = basename($link);\r\n          \r\n          \r\n            echo '<td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\";\r\n          \r\n            echo '<a class=\"pkg_dir\" href=\"?application=' . $link . '\">'\r\n            . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" style=\"\" \/><br \/>' . $link . '<\/a><br \/>'\r\n            . '<\/td>' . \"\\n\";\r\n            \r\n            if ($count >= 3) echo '<\/tr><tr>';\r\n            elseif ($old_link == end($old_links)) echo '<\/tr>';\r\n          \r\n            if (isset($count) && $count >= 3) $count = 1;\r\n            else $count++;\r\n          }\r\n          \r\n          ?>\r\n    <\/table>\r\n    <?php } elseif(isset($_GET['client']) && empty($_GET['client'])) { ?> \r\n    <?php if (readlinkToEnd('\/var\/www\/clientele') == '\/mnt\/c\/www\/clientele' || realpath(APP_PATH . 'clientele')) {\r\n    ob_start();\r\n    foreach(['000', '100', '200', '300', '400'] as $key => $status) {\r\n      \r\n      if ($key != 0) echo \"<\/table>\\n\\n\\n\";\r\n      \r\n      $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $status . '*'), 'is_dir');\r\n      $statusCode = $status;\r\n      $status = ($status == 000) ? \"On-call\" :\r\n               (($status == 100) ? \"Working\" :\r\n               (($status == 200) ? \"Planning\" :\r\n               (($status == 300) ? \"Previous\" :\r\n               (($status == 400) ? \"Future\" : \"Unknown\"))));\r\n\r\n?>\r\n    <h3>&#9660; Stage: <?= $status ?> (<?= $statusCode ?>)<\/h3>\r\n    <table width=\"\" style=\"border: none;\">\r\n      <tr style=\" border: none;\">\r\n        <?php\r\n          $count = 1; \r\n\r\n          \/\/if (empty($links)) {\r\n          \/\/  echo '<option value=\"\" selected>---<\/option>' . \"\\n\"; \/\/ label=\"     \"\r\n          \/\/} else  \/\/dd($links);\r\n          $old_links = $links;\r\n          while ($link = array_shift($links)) {\r\n            $old_link = $link;\r\n            $link = basename($link);\r\n\r\n            echo \"<td style=\\\"text-align: center; border: none;\\\" class=\\\"text-xs\\\">\\n<a class=\\\"pkg_dir\\\" href=\\\"?client=$link\\\"><img src=\\\"resources\/images\/directory.png\\\" width=\\\"50\\\" height=\\\"32\\\" style=\\\"\\\" \/><br \/>$link<\/a><br \/><\/td>\\n\";\r\n          \r\n            if ($count >= 6) echo '<\/tr><tr>';\r\n            elseif ($old_link == end($old_links)) echo '<\/tr>';\r\n          \r\n            if (isset($count) && $count >= 6) $count = 1;\r\n            else $count++;\r\n          }\r\n        } ?>\r\n    <\/table>\r\n    <?php \r\n    $cwd_table = ob_get_contents();\r\n    ob_end_clean();\r\n  \r\n    echo $cwd_table;\r\n\r\n  } else { ?>\r\n\r\n    <div style=\"position: absolute; top: 100px; width: 200px; left: 36%; right: 64%; text-align: center; border: 1px solid #000;\">\r\n            <?php echo '<a class=\"pkg_dir\" style=\"border: 1px dashed blue;\" href=\"?client=' . '\">'\r\n            . 'Missing directory.<br\/>'\r\n            . '<img src=\"resources\/images\/directory.png\" width=\"60\" height=\"42\" style=\"\" \/><br \/>Create <input type=\"text\" style=\"text-align: right;\"size=\"7\" name=\"clientele\" value=\"clientele\/\"><\/a><br \/>' . \"\\n\"; ?>\r\n\r\n    <\/div>\r\n\r\n    <?php } } else {\r\n\r\n      if(isset($_GET['client']) && !empty($_GET['client']))\r\n        $path = 'clientele\/' . $_GET['client'] . '\/' . (isset($_GET['domain']) && !empty($_GET['domain']) ? $_GET['domain'] . '\/' : '');\r\n      \r\n      elseif(isset($_GET['project']) && !empty($_GET['project']))\r\n        $path =  'projects\/' . $_GET['project'] . '\/';\r\n\r\nob_start(); \r\n\/\/ >>>\r\n      echo '<div style=\"position: absolute; width: 100%;\"><a href=\"?path\" onclick=\"handleClick(event, \\'\/\\')\">' . APP_PATH . APP_ROOT . '<\/a>' . ($_GET['path'] ?? ''). '<\/div>';\r\n      \r\n\/\/ <<<\r\n\r\n    if (!realpath(APP_PATH . APP_ROOT . (isset($_GET['path']) ? rtrim($_GET['path'], '\/') . '\/' : ''))) { ?>\r\n      \r\n    \r\n      <?= '<br \/><br \/>Missing directory'; ?>\r\n  \r\n    <?php } else { ?>\r\n    <table style=\"width: inherit; border: 0 solid #000;\">\r\n    <tr>\r\n        <?php\r\n\r\n          \/\/$paths = ['thgsgfhfgh.php'];\r\n          $paths = glob(APP_PATH . APP_ROOT . (isset($_GET['path']) ? rtrim($_GET['path'], '\/') . '\/' : '') . '{.[!.]*,*}', GLOB_BRACE | GLOB_MARK);\r\n          \/\/dd(urldecode($_GET['path']));\r\n\r\n          usort($paths, function ($a, $b) {\r\n              $aIsDir = is_dir($a);\r\n              $bIsDir = is_dir($b);\r\n          \r\n              \/\/ Check if either $a or $b is the \"project.php\" file\r\n              $aIsProjectFile = !$aIsDir && basename($a) === 'project.php';\r\n              $bIsProjectFile = !$bIsDir && basename($b) === 'project.php';\r\n          \r\n              \/\/ Handle the case when either $a or $b is the \"project.php\" file\r\n              if ($aIsProjectFile || $bIsProjectFile) {\r\n                  if ($aIsProjectFile && $bIsProjectFile) {   \/\/ -1 0 1\r\n                      return -1; \/\/ Both are \"project.php\" files, no change in order\r\n                  } elseif ($aIsProjectFile) {\r\n                      return 0; \/\/ $a is \"project.php\", move it down\r\n                  } else {\r\n                      return 1; \/\/ $b is \"project.php\", move it up\r\n                  }\r\n              }\r\n          \r\n              \/\/ Directories go first, then files\r\n              if ($aIsDir && !$bIsDir) {\r\n                  return -1;\r\n              } elseif (!$aIsDir && $bIsDir) {\r\n                  return 1;\r\n              }\r\n          \r\n              \/\/ If both are directories or both are files, sort alphabetically\r\n              return strcasecmp($a, $b);\r\n          });\r\n          \/*\r\n          usort($paths, function ($a, $b) {\r\n              $aIsDir = is_dir($a);\r\n              $bIsDir = is_dir($b);\r\n              \r\n              \/\/ Directories go first, then files\r\n              if ($aIsDir && !$bIsDir) {\r\n                  return -1;\r\n              } elseif (!$aIsDir && $bIsDir) {\r\n                  return 1;\r\n              }\r\n          \r\n              \/\/ If both are directories or both are files, sort alphabetically\r\n              return strcasecmp($a, $b);\r\n          });\r\n          *\/\r\n          \r\n          $count = 1;\r\n          if (!empty($paths))\r\n            foreach($paths as $key => $path) {\r\n                echo \"<td style=\\\"border: 0 solid #000; text-align: center;\\\" class=\\\"text-xs\\\">\\n\";\r\n                if (is_dir($path))\r\n                  if (basename($path) == '.git')\r\n                    echo '<a href=\"#!\" onclick=\"document.getElementById(\\'app_git-container\\').style.display=\\'block\\';\">' \/\/ \"?path=' . basename($path) . '\" \r\n                    . '<img src=\"resources\/images\/directory-git.png\" width=\"50\" height=\"32\" \/><br \/>'\r\n                    . '<a href=\"?path=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\/\\')\">' . basename($path) . '\/<\/a>' . \"\\n\";\r\n                  elseif (basename($path) == 'applications')\r\n                    echo '<div style=\"position: relative;\">'\r\n                    . '<a href=\"?application\" onclick=\"document.getElementById(\\'app_application-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-application.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                    . '<a href=\"?path=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\/\\')\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"         \r\n                    . '\/<\/a><\/div>' . \"\\n\";\r\n                  elseif (basename($path) == 'node_modules')\r\n                    echo '<div style=\"position: relative;\">'\r\n                    . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_npm-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-npm.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                    . '<a href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'path=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\/\\')\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"         \r\n                    . '\/<\/a><\/div>' . \"\\n\";\r\n                  elseif (basename($path) == 'projects')\r\n                    echo '<div style=\"position: relative;\">'\r\n                    . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_project-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-project.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                    . '<a href=\"?path=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\/\\')\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"\r\n                    . '\/<\/a><\/div>' . \"\\n\";\r\n                  elseif (basename($path) == 'vendor')\r\n                    echo '<div style=\"position: relative;\">'\r\n                    . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_composer-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-composer.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                    . '<a href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . (array_key_first($_GET) == 'client' ? '&domain=' . $_GET['domain'] . '&' : '' ) : '') . 'app=composer&path=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\/\\')\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"         \r\n                    . '\/<\/a><\/div>' . \"\\n\";\r\n                  else\r\n                    echo '<a href=\"?' . (!defined('APP_ROOT') || empty(APP_ROOT) ? '' : (array_key_first($_GET) == 'client' ? 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) :  (array_key_first($_GET) == 'project' ? 'project=' . $_GET['project'] . '&' : ''))) . 'path=' . (!isset($_GET['path']) ? '' : $_GET['path'] . ($_GET['path'] == '' ? '' : '\/' ) ) . basename($path) . '\" onclick=\"handleClick(event, \\'' . (!isset($_GET['path']) ? '' : $_GET['path'] . ($_GET['path'] == '' ? '' : '\/' )) . basename($path) . '\/\\')\">'\r\n                    . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" \/><br \/>' . basename($path) . '\/<\/a>';\r\n                elseif (is_file($path)) {\r\n                  if (preg_match('\/^\\..*\/', basename($path))) {\r\n                    switch (basename($path)) {\r\n                      case '.htaccess':\r\n                        echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/  'file=' . basename($path) . '\"><img src=\"resources\/images\/htaccess_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                        break;\r\n                      case '.babelrc':\r\n                        echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\"><img src=\"resources\/images\/babelrc_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                        break;\r\n                      case '.gitignore':\r\n                        echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/gitignore_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                        break;\r\n                      case '.env.bck':\r\n                      case '.env':\r\n                        echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/env_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                        break;\r\n                      default:\r\n                        echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&'. (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/  'file=' . basename($path) . '\"><img src=\"resources\/images\/env_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                        break;\r\n                    }\r\n          \r\n                  }  elseif (preg_match('\/^package(?:-lock)?\\.(json)\/', basename($path))) {\r\n                    echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\">';\r\n\r\n                    switch (basename($path)) {\r\n                      case 'package.json':\r\n                        echo '<div style=\"position: relative;\"><img src=\"resources\/images\/package_json_file.png\" width=\"40\" height=\"50\" \/><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        . (isset($errors['COMPOSER-VALIDATE-JSON']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '')\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        break;\r\n                      case 'package-lock.json':\r\n                        echo '<div style=\"position: relative;\"><img src=\"resources\/images\/package-lock_json_file.png\" width=\"40\" height=\"50\" \/><br \/>' \r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        . (isset($errors['COMPOSER-VALIDATE-JSON']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '')\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        break;\r\n                    }\r\n                    \r\n                  } elseif (preg_match('\/^composer(?:-setup)?\\.(json|lock|php|phar)\/', basename($path))) {\r\n                    echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\">';\r\n\r\n                    switch (basename($path)) {\r\n                      case 'composer.json':\r\n                        echo '<img src=\"resources\/images\/composer_json_file.gif\" width=\"40\" height=\"50\" \/><br \/>'\r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        . (isset($errors['COMPOSER-VALIDATE-JSON']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '')\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        break;\r\n                      \r\n                      case 'composer.lock':\r\n                        echo '<img src=\"resources\/images\/composer_lock_file.gif\" width=\"40\" height=\"50\" \/><br \/>'\r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        . (isset($errors['COMPOSER-VALIDATE-LOCK']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '')\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        break;\r\n                      case 'composer.phar':\r\n                        echo '<img src=\"resources\/images\/phar_file.png\" width=\"40\" height=\"50\" \/><br \/>'\r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>'\r\n                        \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        break;\r\n                      default:\r\n                        echo '<img src=\"resources\/images\/composer_php_file.gif\" width=\"40\" height=\"50\" \/><\/a><br \/>'\r\n                        . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path)\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        break;\r\n                    }\r\n                  } elseif (preg_match('\/^.*\\.js$\/', basename($path))) {\r\n                    switch (basename($path)) {\r\n                      case 'webpack.config.js':\r\n                        echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\"><img src=\"resources\/images\/webpack_config_js_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>';\r\n                        break;\r\n                      default:\r\n                        echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\"><img src=\"resources\/images\/js_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' . '<a href=\"?path=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path)  . '<\/a>';\r\n                        break;\r\n                    }\r\n\r\n                  } elseif (preg_match('\/^.*\\.md$\/', basename($path))) {\r\n                    echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\"><img src=\"resources\/images\/md_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>';\r\n\r\n                  } elseif (preg_match('\/^.*\\.php$\/', basename($path))) {\r\n                    if (preg_match('\/^project\\.php\/', basename($path)))\r\n                      echo '<a style=\"position: relative;\" href=\"' . (isset($_GET['project']) ? '?project#!' : '#') . '\" onclick=\"document.getElementById(\\'app_project-container\\').style.display=\\'block\\';\"><div style=\"position: absolute; left: -60px; top: -20px; color: red; font-weight: bold;\">' . (isset($_GET['project']) ? '' : '') . '<\/div><img src=\"resources\/images\/project-icon.png\" width=\"40\" height=\"50\" \/><\/a><br \/><a href=\"' . (isset($_GET['project']) ? '?project#!' : '?app=ace_editor&' . (!isset($_GET['path']) ? '' : 'file=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path)) . '\" ' . (isset($_GET['project']) ? 'onclick=\"document.getElementById(\\'app_ace_editor-container\\').style.display=\\'block\\';\"' : '') . '>' . basename($path) . '<\/a>';\r\n                    elseif (basename($path) == 'phpunit.php') echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' ) . 'app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/phpunit_php_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>';\r\n                    else echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&path=' . \/*(basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path))))*\/ (isset($_GET['path']) ? $_GET['path'] : '') . '&file=' . basename($path) . '\"><img src=\"resources\/images\/php_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>';\r\n          \r\n                  } elseif (basename($path) == 'LICENSE') {\r\n                    \/* https:\/\/github.com\/unlicense *\/\r\n                    echo '<div style=\"position: relative;\"><a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\"><img src=\"resources\/images\/license_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>un' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path)\r\n                    . '.org<\/a>'\r\n                    \/* . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                    . '<\/div>' . \"\\n\";\r\n                  } elseif (basename($path) == basename(ini_get('error_log')))\r\n                    echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&') . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . \/*'path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) .*\/ 'file=' . basename($path) . '\">'\r\n                    . '<div style=\"position: relative;\"><img src=\"resources\/images\/error_log.png\" width=\"40\" height=\"50\" \/><\/a><br \/><a id=\"app_php-error-log\" href=\"' . (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') . \/* '?' . basename(ini_get('error_log')) . '=unlink' *\/ '\" style=\"text-decoration: line-through; background-color: red; color: white;\"><\/a>' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path)\r\n                    . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<\/a><div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' )\r\n                    . '<\/div>' . \"\\n\";\r\n                  else\r\n                    echo '<a href=\"?' . (!isset($_GET['client']) ? (!isset($_GET['project']) ? '' : 'project=' . $_GET['project'] . '&') : 'client=' . $_GET['client'] . '&' . (isset($_GET['domain']) ? 'domain=' . ($_GET['domain'] != '' ? $_GET['domain'] . '&' : '') : '' ) ) . 'app=ace_editor&' . (!isset($_GET['path']) ? '' : 'path=' . $_GET['path'] . '&') . 'file=' . basename($path) . '\"><img src=\"resources\/images\/php_file.png\" width=\"40\" height=\"50\" \/><\/a><br \/>' . '<a href=\"?file=' . basename($path) . '\" onclick=\"handleClick(event, \\'' . basename($path) . '\\')\">' . basename($path) . '<\/a>';\r\n                }\r\n                echo \"<\/td>\\n\";\r\n                if ($count >= 6) echo '<\/tr><tr>';\r\n                elseif ($path == end($paths)) echo '<\/tr>';\r\n          \r\n                if (isset($count) && $count >= 6) $count = 1;\r\n                else $count++;\r\n            }\r\n          ?>\r\n    <\/table>\r\n<?php } \r\n      $cwd_table = ob_get_contents();\r\n      ob_end_clean();\r\n\r\n      echo $cwd_table;\r\n    }\r\n  $returnValue = ob_get_contents();\r\n  ob_end_clean();\r\n  return $returnValue;\r\n};\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$directory]['style'] = ob_get_contents();\r\nob_end_clean(); \r\n\r\nob_start(); ?>\r\n<div id=\"app_directory-container\" style=\"position: absolute; display: <?= isset($_GET['debug']) || isset($_GET['project']) || isset($_GET['path']) ? \/*'block'*\/ 'none' : 'none'; ?>; background-color: rgba(255,255,255,0.3); height: 600px; top: 100px; margin-left: auto; margin-right: auto; left: 0; right: 0; width: 700px; overflow-x: hidden; overflow-y: scroll; padding: 10px;\">\r\n<?php echo $tableGen(); \/*  '';*\/  ?>\r\n<\/div>\r\n<?php $app[$directory]['body'] = ob_get_contents();\r\nob_end_clean(); ?>\r\n\r\n<?php ob_start(); ?>\r\n\r\n  function handleClick(event, path) {\r\n    \/\/ Prevent the default hyperlink action\r\n    event.preventDefault();\r\n\r\n    \/\/ Check for APP_DEBUG or any other condition\r\n    if (typeof APP_DEBUG !== 'undefined' && APP_DEBUG === true) {\r\n      \/\/ Allow the hyperlink to work as usual\r\n      window.location.href = event.currentTarget.href;\r\n    } else {\r\n\r\n\r\n      if (matches = path.match(\/^.*\\\/$\/gm)) {\r\n\r\n      \/\/ Use jQuery to update the request input and submit\r\n      $('#requestInput').val('chdir ' + path);\r\n      $('#requestSubmit').click();\r\n\r\n      } else {\r\n\r\n        \/\/ Use jQuery to update the request input and submit\r\n      $('#requestInput').val('edit ' + path);\r\n      $('#requestSubmit').click();\r\n\r\n\r\n        \/\/document.getElementsByClassName('ace_text-input')[0].value = 'hello world';\r\n      }\r\n\r\n      if (!isFixed) isFixed = false;\r\n      show_console();\r\n\r\n      \/\/ Optionally, you could update the div directly if needed\r\n      \/\/ $('#app_directory-container').html('Loading ' + folder + '...');\r\n    }\r\n  }\r\n<?php\r\n$app[$directory]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\n\/\/ Path to the JavaScript file\r\n$path = APP_PATH . APP_BASE['resources'] . 'js\/tailwindcss-3.3.5.js';\r\n\r\n\/\/ Create the directory if it doesn't exist\r\nis_dir(dirname($path)) or mkdir(dirname($path), 0755, true);\r\n\r\n\/\/ URL for the CDN\r\n$url = 'https:\/\/cdn.tailwindcss.com';\r\n\r\n\/\/ Check if the file exists and if it needs to be updated\r\nif (!is_file($path) || (time() - filemtime($path)) > 5 * 24 * 60 * 60) { \/\/ ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 \r\n  \/\/ Download the file from the CDN\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n  $js = curl_exec($handle);\r\n  \r\n  \/\/ Check if the download was successful\r\n  if (!empty($js)) {\r\n    \/\/ Save the file\r\n    file_put_contents($path, $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n}\r\n?>\r\n\r\n  <script src=\"<?= check_http_status($url) ? substr($url, strpos($url, parse_url($url)['host']) + strlen(parse_url($url)['host'])) : substr($path, strpos($path, dirname(APP_BASE['resources'] . 'js'))) ?>\"><\/script>     \r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app[$directory]['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app[$directory]['body']; ?>\r\n\r\n  <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script>\r\n  <!-- <script src=\"resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n<script>\r\n<?= $app[$directory]['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $app[$directory]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'directory' && APP_DEBUG)\r\n  die($app[$directory]['html']);\r\n",
"public/app.github.php" : "<?php\r\n\r\n\/*\r\n\r\n$accessToken = 'YOUR_ACCESS_TOKEN'; \/\/ Replace with your actual access token\r\n$apiUrl = 'https:\/\/api.github.com\/brrydit';\r\n\r\n$options = [\r\n    'http' => [\r\n        'header' => \"Authorization: token $accessToken\",\r\n        'method' => 'GET'\r\n    ]\r\n];\r\n\r\n$context = stream_context_create($options);\r\n$response = file_get_contents($apiUrl, false, $context);\r\n\r\nif ($response === false) {\r\n    echo 'Error fetching data from GitHub API';\r\n} else {\r\n    $data = json_decode($response, true);\r\n    print_r($data);\r\n}\r\n----------------\r\n\r\n$accessToken = 'YOUR_ACCESS_TOKEN'; \/\/ Replace with your actual access token\r\n$apiUrl = 'https:\/\/api.github.com\/user';\r\n\r\n$ch = curl_init($apiUrl);\r\ncurl_setopt($ch, CURLOPT_HTTPHEADER, ['Authorization: token ' . $accessToken]);\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n\r\n$response = curl_exec($ch);\r\n\r\nif ($response === false) {\r\n    echo 'Error fetching data from GitHub API';\r\n} else {\r\n    $data = json_decode($response, true);\r\n    print_r($data);\r\n}\r\n\r\ncurl_close($ch);\r\n?>\r\n\r\n\r\n\/\/ Set the CORS headers\r\nheader('Access-Control-Allow-Origin: *');\r\nheader('Access-Control-Allow-Methods: GET, POST, OPTIONS');\r\nheader('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept');\r\n\r\n\/\/ Check if this is a preflight request (OPTIONS method), and if so, exit early\r\nif ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {\r\n    header('HTTP\/1.1 200 OK');\r\n    exit();\r\n}\r\n\r\n\/\/ Define the GitHub API endpoints\r\n$endpoints = array(\r\n    'used_by_list' => 'https:\/\/api.github.com\/repos\/barrydit\/codeinsync\/community\/profile',\r\n    'overview_actions' => 'https:\/\/api.github.com\/repos\/barrydit\/codeinsync\/actions',\r\n    'commit_rollup' => 'https:\/\/api.github.com\/repos\/barrydit\/codeinsync\/commits\/e5bc5fed931d9e81105cab97ad0957e61ab4691b\/rollup',\r\n    'citation_hovercards' => 'https:\/\/api.github.com\/repos\/barrydit\/codeinsync\/contents\/hovercards\/citation\/sidebar_partial?ref=main',\r\n    'security_overall_count' => 'https:\/\/api.github.com\/repos\/barrydit\/codeinsync\/community\/profile',\r\n    'spoofed_commit_check' => 'https:\/\/api.github.com\/repos\/barrydit\/codeinsync\/compare\/e5bc5fed931d9e81105cab97ad0957e61ab4691b...HEAD'\r\n);\r\n\r\n\/\/ Get the requested endpoint from the query string\r\n$endpoint = isset($_GET['endpoint']) ? $_GET['endpoint'] : null;\r\n\r\n\/\/ Check if the requested endpoint is valid\r\nif ($endpoint && isset($endpoints[$endpoint])) {\r\n    \/\/ Make the request to the GitHub API\r\n    $url = $endpoints[$endpoint];\r\n    $response = file_get_contents($url);\r\n\r\n    \/\/ Forward the GitHub API response to the client\r\n    header('Content-Type: application\/json');\r\n    die($response);\r\n} else {\r\n    \/\/ Invalid endpoint requested\r\n\/\/    header('HTTP\/1.1 400 Bad Request');\r\n\/\/    die(json_encode(array('error' => 'Invalid endpoint')));\r\n}\r\n\r\n*\/\r\n\r\nif (__FILE__ == get_required_files()[0]) \/\/die(getcwd());\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n\r\n\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\n\r\n\/*\r\n\/\/ Define the GitHub API URL\r\n\/\/$githubApiUrl = 'https:\/\/api.github.com\/barrydit';\r\n\r\n\/\/ Make the request to GitHub API\r\n\/\/$response = file_get_contents($githubApiUrl);\r\n\r\n$accessToken = COMPOSER_AUTH['token']; \/\/ Replace with your actual access token\r\n$apiUrl = 'https:\/\/api.github.com\/barrydit';\r\n\r\n$options = [\r\n    'http' => [\r\n        'header' => \"Authorization: token $accessToken\",\r\n        'method' => 'GET'\r\n    ]\r\n];\r\n\r\n$context = stream_context_create($options);\r\n$response = file_get_contents($apiUrl, false, $context);\r\n\r\nif ($response === false) {\r\n    echo 'Error fetching data from GitHub API';\r\n} else {\r\n    $data = json_decode($response, true);\r\n    print_r($data);\r\n}\r\n\r\n\/\/ Forward the response to the client\r\ndd($response);\r\n*\/ \r\n\/*\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/console_app.php') ? '..\/console_app.php' : (is_file('..\/config\/console_app.php') ? '..\/config\/console_app.php' : 'console_app.php'))\r\n    : (is_file('console_app.php') ? 'console_app.php' : (is_file('public\/console_app.php') ? 'public\/console_app.php' : null))) require_once $path; \r\nelse die(var_dump($path . ' path was not found. file=console_app.php'));\r\n*\/\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n\r\n      \r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['filename'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['filename'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . APP_SUDO . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . APP_SUDO . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = APP_SUDO . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open(APP_SUDO . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n}\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_github-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 600px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n\r\n<?php $app[$github]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_github-container\" class=\"<?= (APP_SELF == __FILE__ || (isset($_GET['app']) && $_GET['app'] == 'github') ? 'selected' : '') ?>\" style=\"border: 1px solid #000;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">Github.com VCS (Source Code)<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_github-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n      <div style=\"display: inline-block; width: auto; padding-left: 10px;\">\r\n        <iframe src=\"<?= \/* basename(__FILE__) *\/ NULL; ?>\" style=\"height: 550px; width: 775px;\"><\/iframe>\r\n      <\/div>\r\n\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n\r\n  <\/div>\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$github]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$github]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$github]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\nis_dir(APP_PATH . APP_BASE['var']) or mkdir(APP_PATH . APP_BASE['var'], 0755);\r\nif (is_file(APP_PATH . APP_BASE['var'] . 'github.com.html')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime(APP_PATH . APP_BASE['var'] . '\/github.com.html'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/github.com\/barrydit\/codeinsync';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($html = curl_exec($handle))) \r\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'github.com.html', $html) or $errors['COMPOSER_LATEST'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/github.com\/barrydit\/codeinsync';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($html = curl_exec($handle))) \r\n    file_put_contents(APP_PATH . APP_BASE['var'] . 'github.com.html', $html) or $errors['COMPOSER_LATEST'] = $url . ' returned empty.';\r\n}\r\n\/*\r\nlibxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n$dom = new DOMDocument(1.0, 'utf-8');\r\n$dom->loadHTML(file_get_contents(check_http_status('https:\/\/github.com\/barrydit\/codeinsync') ? 'https:\/\/github.com\/barrydit\/codeinsync' : APP_PATH . APP_BASE['var'] . 'github.com.html'), LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD );   \r\n$xpath = new DOMXPath($dom);\r\n\r\n\/\/ https:\/\/stackoverflow.com\/questions\/27358966\/how-can-i-set-x-frame-options-on-an-iframe\r\n\r\n\/\/header('Content-Type: application\/json');\r\nheader('Access-Control-Allow-Origin: *');\r\nheader('Access-Control-Allow-Methods: GET, OPTIONS');\r\nheader('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization');\r\n\/\/header('Content-Type: application\/json');\r\n\/\/header('Access-Control-Allow-Credentials: true');\r\n\r\n\r\n$destination = $xpath->query('\/\/head\/meta');\r\n$template = $dom->createDocumentFragment();\r\n$template->appendXML('<base href=\"https:\/\/github.githubassets.com\/\" \/>');\r\n$destination[0]->parentNode->insertBefore($template, $destination[0]->nextSibling);\r\n*\/\r\n\r\n\/*\r\n$dom = new DOMDocument(1.0, 'utf-8');\r\n$dom->loadHTML(file_get_contents(APP_PATH . APP_BASE['var'] . 'github.com.html'));\r\n\r\n$divs = $dom->getElementsByTagName('head');\r\n\r\n$element = $dom->createElement('test', 'This is the root element!');\r\n\r\n$elm = createElement($dom, 'foo', 'bar', array('attr_name'=>'attr_value'));\r\n\r\n$dom->appendChild($elm);\r\n*\/\r\n\r\n\/\/dd($divs);\r\n\r\n\/\/$content_node=$dom->getElementById(\"main\");\r\n\/\/$node=getElementsByClass($content_node, 'p', 'latest');\r\n\r\n\/\/$dom->saveHTML($dom->documentElement);\r\n \r\n\/\/echo \r\n$dom = '';\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'php' && APP_DEBUG)\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() use($dom) {\r\n      return file_get_contents(\"https:\/\/github.com\/barrydit\/codeinsync\") ?? \/* $dom->saveHTML() *\/ ''; \/\/ $dom->saveHTML(); \/* eval('? >' . $project_code); \/\/ -wow *\/\r\n    })->shutdown(); \/\/ die();",
"public/app.install.php" : "<?php\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\nob_start(); ?>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n<?php $app[$install]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n<div style=\"position: relative; margin: 0 auto; border: 1px solid #000;\">\r\n<div style=\"position: absolute; top: 0; left: 50%; transform: translate(-50%, 10%); text-align: center; width: 570px; height: 600px; background-position: center; background-size: cover; background-repeat: no-repeat; background-image: url('\/resources\/images\/install-scenario-small.gif'); opacity: 0.8; z-index: 1; border: 1px solid #000;\">\r\n\r\n<div style=\"position: absolute; top: 225px; left: 129px; width: 230px; height: 200px; border: 1px dashed #000;\">\r\n<form>\r\n<div style=\"position: absolute; top: 30px; left: 28px;\"><input type=\"radio\" name=\"scenario\" value=\"1\" checked \/><\/div>\r\n\r\n<div style=\"position: absolute; top: 30px; right: 20px;\"><input type=\"radio\" name=\"scenario\" value=\"2\" \/><\/div>\r\n\r\n<div style=\"position: absolute; bottom: 34px; right: 20px;\"><input type=\"radio\" name=\"scenario\" value=\"3\" \/><\/div>\r\n<\/form>\r\n<\/div>\r\n\r\n<\/div>\r\n<\/div>\r\n<?php $app[$install]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$install]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\");\r\n\r\n\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  \r\n  <meta http-equiv=\"cache-control\" content=\"no-cache, no-store, must-revalidate\">\r\n  <meta http-equiv=\"pragma\" content=\"no-cache\">\r\n  <meta http-equiv=\"expires\" content=\"0\">\r\n\r\n<style>\r\n <?= $app[$install]['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n  <?= $app[$install]['body']; ?>\r\n<\/body>\r\n<\/html>\r\n<?php $app[$install]['html'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\/\/if (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'backup' && APP_DEBUG)\r\n\/\/  Shutdown::setEnabled(false)->setShutdownMessage(function() {\r\n\/\/      return $app[$install]['html'];  \/\/ -wow *\/\r\n\/\/    })->shutdown(); \/\/ die();ob_start();\r\n?>",
"public/app.notes.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"])) {\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('..\/config\/config.php'))) {\r\n      require_once $path;\r\n    }\r\n  } elseif (is_file($path = realpath('config\/config.php'))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n} \r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\n\/*\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/console_app.php') ? '..\/console_app.php' : (is_file('..\/config\/console_app.php') ? '..\/config\/console_app.php' : 'console_app.php'))\r\n    : (is_file('console_app.php') ? 'console_app.php' : (is_file('public\/console_app.php') ? 'public\/console_app.php' : null))) require_once $path; \r\nelse die(var_dump($path . ' path was not found. file=console_app.php'));\r\n*\/\r\n\/\/if ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  \/\/if (isset($_GET['app']) && $_GET['app'] == 'php')\r\n  \/\/  if (isset($_POST['path']) && isset($_GET['filename']) && $path = realpath($_POST['path'] . $_GET['filename']))\r\n  \/\/    file_put_contents($path, $_POST['editor']);\r\n      \r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['filename'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['filename'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . APP_SUDO . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . APP_SUDO . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = APP_SUDO . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open(APP_SUDO . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n\/\/}\r\n\r\n$data = (!file_exists($path = APP_PATH . APP_BASE['var'] . 'notes.json')) ? json_decode(<<<'JSON'\r\n[{\r\n  \"language\":\"PHP\",\r\n  \"category\":\"String Manipulation\",\r\n  \"snippets\":[{\r\n    \"title\":\"Example PHP Code Snippet\",\r\n    \"description\":\"This is an example code snippet in PHP.\",\r\n    \"version\":\"1.0.0\",\r\n    \"tags\":[\"php\",\"string\",\"manipulation\"],\r\n    \"stackoverflow\":{\"url\":\"https:\\\/\\\/stackoverflow.com\\\/questions\\\/12345678\",\"title\":\"\"},\r\n    \"code\":\"&lt;?php\\r\\n\\r\\n\\\/\\\/ Your PHP code snippet goes here\\r\\n\\r\\n?&gt;\"\r\n  }]\r\n}]\r\nJSON\r\n  ,\r\n  true\r\n) : json_decode(file_get_contents($path), true);\r\n\r\n$categories = ['String Manipulation', 'Array Manipulation', 'Regular Expressions', 'Error Handling', 'File Handling', 'Database Operations', 'Form Handling', 'Date and Time', 'Image Manipulation', 'Email Handling', 'Encryption and Security', 'API Integration', 'Performance Optimization', 'Session Management', 'Authentication and Authorization', 'File Upload and Download', 'Templating', 'Caching', 'Logging and Debugging', 'Web Scraping', 'PDF Generation', 'XML and JSON Manipulation', '(CLI) Applications', 'Web Services and RESTful APIs', 'Internationalization and Localization', 'Error Reporting and Logging', 'HTML and Markup Generation', 'Server-Side Rendering', 'Image Processing and Manipulation', 'Data Validation and Sanitization', 'Networking and HTTP Requests', 'Templating Engines', 'Testing and Test Frameworks'];\r\n\r\n$tags = [0 => ['Concatenation', 'Substring', 'Replace', 'Split', 'Trim', 'Search', 'Case Conversion', 'Regular Expressions', 'Character Encoding', 'Length\/Size', 'String Comparison', 'Format\/Parse', 'Join', 'Padding', 'Reverse', 'Tokenize', 'Escape\/Unescape', 'Format Specifiers', 'Palindrome', 'Anagram'], 1 => ['Indexing', 'Iteration\/Traversal', 'Adding\/Removing Elements', 'Concatenation', 'Copying\/Cloning', 'Sorting', 'Filtering\/Selecting Elements', 'Mapping\/Transforming Elements', 'Searching', 'Joining Arrays', 'Splitting Arrays', 'Reversing', 'Slicing', 'Merging Arrays', 'Finding Min\/Max Elements', 'Finding Duplicates', 'Finding Unique Elements', 'Shuffling\/Randomizing', 'Flattening Nested Arrays', 'Combining Arrays'], 2 => ['Pattern Matching', 'Regex Syntax', 'Metacharacters', 'Quantifiers', 'Anchors', 'Character Classes', 'Alternation', 'Grouping and Capturing', 'Escape Sequences', 'Assertions', 'Modifiers', 'Greedy vs. Non-Greedy', 'Backreferences', 'Lookahead and Lookbehind', 'Boundary Matchers', 'Unicode Characters in Regex', 'Matching HTML\/XML Tags', 'Validating Email Addresses', 'Validating Dates', 'Password Validation'], 3 => []];\r\n\r\nforeach($data as $key => $sample) {\r\n  if (!in_array($sample['category'], $categories))\r\n    $categories[] = $sample['category'];\r\n}\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\r\n  $id = explode('-', !isset($_GET['id']) ? '0-0' : $_GET['id']);\r\n\r\n  if (isset($_GET['id'])) {\r\n    header('Content-type: application\/json');\r\n    $json = [];\r\n    foreach($data as $key1 => $sample) {\r\n      if (isset($id[0]) && $id[0] == $key1) {\r\n        $json['language'] = $sample['language'];\r\n        $json['category'] = $sample['category'];\r\n\r\n        foreach ($sample['snippets'] as $key2 => $snippet) {\r\n          if (isset($id[1]) && $id[1] == $key2) {\r\n            $json['snippets'] = $snippet;\r\n            break 1;\r\n          } elseif (!isset($id[1])) {\r\n            $json['snippets'] = $sample['snippets'];\r\n            break 1;\r\n          }\r\n        }\r\n      }\r\n      continue;\r\n    }\r\n\r\n    $json = array_map(\"unserialize\", array_unique(array_map(\"serialize\", $json)));\r\n\r\n    exit(json_encode($json));\r\n  }\r\n}\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  $id = explode('-', !isset($_POST['id']) ? '0-0' : $_POST['id']);\r\n  if (count($id) == 2)\r\n    $id = [0 => (int) $id[0], 1 => (int) $id[1]];\r\n  elseif (count($id) <= 1)\r\n    $id = [0 => (int) $id[0]];\r\n    \r\n  if (isset($_POST['n_id'])) {\r\n    $new_id = explode('-', $_POST['n_id']);\r\n    $new_id = [0 => (int) $new_id[0], 1 => (int) $new_id[1]];\r\n\r\n    if (!empty($new_id)) {\r\n      $snippet = $data[$id[0]]['snippets'][$new_id[1]];\r\n      $data[$id[0]]['snippets'][$new_id[1]] = $data[$id[0]]['snippets'][$id[1]];\r\n      $data[$id[0]]['snippets'][$id[1]] = $snippet;\r\n      file_put_contents($path, json_encode($data), LOCK_EX);\r\n    }\r\n  }\r\n\r\n  if (isset($_POST['inputval'])) {\r\n    $code = mb_convert_encoding(\r\n      htmlspecialchars(\r\n        html_entity_decode($_POST['inputval'], ENT_QUOTES, 'UTF-8'), \r\n        ENT_QUOTES, 'UTF-8'\r\n      ), 'HTML-ENTITIES', 'utf-8'\r\n    );\r\n    \r\n    \/* $decode = mb_convert_encoding(\r\n      htmlentities(\r\n        htmlspecialchars_decode($code, ENT_QUOTES),\r\n        ENT_QUOTES, 'UTF-8'),\r\n      'UTF-8', 'HTML-ENTITIES'\r\n    ); *\/\r\n\r\n    \/\/$data[$id[0]]['language'] = $_POST['language'];\r\n    \/\/$data[$id[0]]['category'] = $_POST['category'];\r\n\r\n    $snippets = $data[$id[0]]['snippets'];\r\n    $counter = 0;\r\n\r\n    switch (count($id)) {\r\n      case 2:\r\n        $data[$id[0]]['snippets'][$id[1]] = ['title' => $_POST['title'], 'description' => $_POST['description'], 'stackoverflow' => ['url' => $_POST['so-url'], 'title' => ''], 'code' => $code];\r\n        break;\r\n      default:\r\n        foreach ($snippets as $snippet) {\r\n          if ($counter == 0) {\r\n            $data[$id[0]]['snippets'] = [];\r\n            $data[$id[0]]['snippets'][] = ['title' => $_POST['title'], 'description' => $_POST['description'], 'stackoverflow' => ['url' => $_POST['so-url'], 'title' => ''], 'code' => $code];\r\n          }\r\n          $data[$id[0]]['snippets'][] = $snippet;\r\n          $counter += 1;\r\n        }\r\n        break;\r\n    }\r\n    file_put_contents($path, json_encode($data), LOCK_EX);\r\n  }\r\n}\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_notes-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 500px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\n<?php $app[$notes]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_notes-container\" class=\"<?= (APP_SELF == __FILE__ || (isset($_GET['app']) && $_GET['app'] == 'notes') ? 'selected' : '') ?>\" style=\"border: 1px solid #000;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">Notes<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_notes-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n      <div style=\"display: inline-block; width: auto;\">\r\n        <iframe src=\"<?= (is_dir($path = APP_PATH . APP_BASE['public']) && getcwd() == realpath($path) ?  APP_BASE['public']:'' ) . basename(__FILE__) ?>\" style=\"height: 460px; width: 800px;\"><\/iframe>\r\n      <\/div>\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n  <\/div>\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$notes]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n\r\n\r\n<?php $app[$notes]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\/\/dd($_SERVER);\r\nob_start(); ?>\r\n\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  \r\n  <link rel=\"stylesheet\"\r\n      href=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/11.2.0\/styles\/a11y-dark.min.css\">\r\n\r\n  <!-- href=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/11.2.0\/styles\/default.min.css\" -->\r\n\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file(\"{$path}tailwindcss-3.3.5.js\")) {\r\n  if (ceil(abs(strtotime(date('Y-m-d')) - strtotime(date('Y-m-d', strtotime('+5 days', filemtime(\"{$path}tailwindcss-3.3.5.js\")))) \/ 86400) <= 0 )) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents(\"{$path}tailwindcss-3.3.5.js\", $js) or $errors['JS-TAILWIND'] = \"$url returned empty.\";\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents(\"{$path}tailwindcss-3.3.5.js\", $js) or $errors['JS-TAILWIND'] = \"$url returned empty.\";\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n  <!-- <style type=\"text\/tailwindcss\"> -->\r\n  \r\n  <style type=\"text\/tailwindcss\">\r\n* { margin: 0; padding: 0; } \/* to remove the top and left whitespace *\/\r\n\r\nhtml, body { width: 100%; height: 100%; <?= ($_SERVER['SCRIPT_FILENAME'] == __FILE__ ? 'overflow:hidden;' : '') ?> } \/* just to be sure these are full screen*\/\r\n\r\npre {\r\n  background: #eee;\r\n  padding-bottom: 1em;\r\n}\r\n<\/style>\r\n\r\n<style>\r\n<?= \/*$appWhiteboard['style'];*\/ NULL; ?>\r\n\r\nbutton.move_up::before {\r\n  content: \"\\25b2\";\r\n  display: block;\r\n  width: 16px;\r\n  height: 16px;\r\n  border: none;\r\n}\r\n\r\nbutton.move_down::before {\r\n  content: \"\\25bc\";\r\n  display: block;\r\n  width: 16px;\r\n  height: 16px;\r\n  border: none;\r\n}\r\n\r\np#open_add_new {\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\ninput, textarea {\r\n  border: 1px solid #000;\r\n}\r\n<\/style>\r\n<\/head>\r\n<body>\r\n  <div style=\"position: relative;\">\r\n    <div id=\"add_new\" style=\"position: fixed; display: none; top: 25px; left: 50%; transform: translateX(-50%); width: 725px; padding: 5px; border: 1px solid #000; background-color: #fff; z-index: 1;\">\r\n      <form action method=\"POST\">\r\n        <input id=\"id\" type=\"hidden\" name=\"id\" value=\"<?= $id[0] . '-' . $id[1] ?>\" \/>\r\n        <div style=\" width: 725px;\">\r\n          <div style=\"display: inline-block;\">Category: <!-- use datalist instead -->\r\n            <select id=\"category\" name=\"category\">\r\n<?php foreach ($categories as $category) { ?>\r\n              <option value=\"<?= $category; ?>\"><?= $category; ?><\/option>\r\n<?php } ?>\r\n            <\/select><br \/>\r\n            <label for=\"title\">Title: <\/label><input id=\"title\" type=\"text\" style=\"width: 390px;\" name=\"title\" value=\"\" \/><br \/>\r\n            <label for=\"so-url\">Stackoverflow: <\/label><input id=\"so-url\" type=\"text\" name=\"so-url\" style=\"width: 300px;\" value=\"\" \/><br \/>\r\n          <\/div>\r\n\r\n          <div style=\"display: inline-block; text-align: right; float: right; clear: both;\">[<a href=\"#\" id=\"close_add_new\">X<\/a>]<br \/>\r\n            <input type=\"submit\" value=\"Update\/Save\" \/><br \/>\r\n      Language:\r\n            <select id=\"language\" name=\"language\">\r\n<?php foreach (array('bash' => 'BASH', 'diff' => 'Diff', 'javascript' => 'JavaScript', 'php' => 'PHP', 'python' => 'Python', 'sql' => 'SQL', 'xml' => 'XML\/HTML') as $key => $language) { ?>\r\n              <option value=\"language-<?= $key ?>\"><?= $language; ?><\/option>\r\n<?php } ?>\r\n            <\/select><br \/>\r\n          <\/div>\r\n        <\/div><br \/>\r\n        <label for=\"description\">Description: <\/label><br \/>\r\n        <textarea id=\"description\" rows=\"5\" style=\"width: 100%;\" <?= \/* cols=\"100\" *\/ NULL; ?> name=\"description\" spellcheck=\"false\"><\/textarea><br \/>\r\n        <label for=\"inputval\">Source Code: <\/label><br \/>\r\n        <textarea id=\"inputval\" rows=\"15\" style=\"width: 100%;\" <?= \/* cols=\"100\" *\/ NULL; ?>  name=\"inputval\" spellcheck=\"false\"><\/textarea><br \/>\r\n      <\/form>\r\n\r\n    <\/div>\r\n  <\/div>\r\n  <p id=\"open_add_new\"><img src=\"resources\/images\/notes-edit.png\" style=\"margin-left: 4px; padding-top: 5px; cursor: pointer; \" height=\"50\" width=\"42\" \/>Add New Snippet<\/p>\r\n<?php\r\nforeach($data as $key1 => $sample) {\r\n  $counter = 0;\r\n  foreach ($sample['snippets'] as $key2 => $snippet) {\r\n?>\r\n  <h3><?= $snippet['title']; ?><\/h3>\r\n  <a href=\"<?= $snippet['stackoverflow']['url']; ?>\"><?= (!empty($snippet['stackoverflow']['title']) ? $snippet['stackoverflow']['title'] : 'Stackoverflow Question\/Answer') ?><\/a>\r\n  <form action method=\"POST\">\r\n    <img class=\"open_edit\" src=\"resources\/images\/notes-edit.png\" style=\"display: inline-block;margin-left: 4px; padding-top: 5px; cursor: pointer; \" height=\"25\" width=\"21\" onclick=\"document.getElementById('id').value = '<?= $key1 . '-' . $key2; ?>';\" \/>  \r\n    <input type=\"hidden\" name=\"id\" value=\"<?= $key1 . '-' . $key2; ?>\" \/>\r\n    <div style=\"display: inline-block; font-size: 18px; margin-top: 0px; padding-bottom: 5px;\">\r\n      <button type=\"submit\" class=\"move_up\" name=\"n_id\" value=\"<?= $key1 . '-' . (empty($key2) ? $key2 : $key2 - 1 ); ?>\" style=\"<?= ($counter == 0 ? 'visibility: hidden;' : '' ) \/* NULL; *\/ ?>\" onchange=\"this.form.submit();\"><\/button>\r\n      <button type=\"submit\" class=\"move_down\" name=\"n_id\" value=\"<?= $key1 . '-' . $key2 + 1; ?>\" style=\"<?= ($counter == count( $sample['snippets'] ) - 1 ? 'visibility: hidden;' : '' ) \/* NULL; *\/ ?>\" onchange=\"this.form.submit();\"><\/button>\r\n    <\/div>\r\n  <pre style=\"margin: 0px;\"><code class=\"language-<?= $sample['language']; ?>\"><?= $snippet['code']; ?><\/code>\r\n<?= $snippet['description']; ?>\r\n  <\/pre>\r\n  <\/form>\r\n  <div style=\" margin-left: 15px;\">\r\n\r\n  <\/div>\r\n<?php $counter += 1; } } ?>\r\n  \r\n\r\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script>\r\n  <!-- <script src=\"..\/resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/highlight.min.js\"')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/highlight.js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'highlight.min.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'highlight.min.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/11.6.0\/highlight.min.js';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'highlight.min.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/11.6.0\/highlight.min.js';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'highlight.min.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/highlight.js\/highlight.min.js' ?? $url ?>\"><\/script>\r\n\r\n<script>\r\n<?= \/* $appWhiteboard['script']; *\/ NULL; ?>\r\n\r\nhljs.highlightAll();\r\n$(document).ready(function(){\r\n  $('#open_add_new').click(function() {\r\n    val = $('#id').val('0');\r\n    console.log($('#id').val());\r\n    if ($( \"#add_new\" ).css('display') == 'none') {\r\n      $( '#add_new' ).slideDown( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    } else {\r\n      $( '#add_new' ).slideUp( \"slow\", function() {\r\n        \/\/ Animation complete.\r\n      });\r\n    }\r\n      \r\n  });  \r\n  $('.open_edit').click(function() {\r\n    console.log($('#id').val());\r\n    if ($( \"#add_new\" ).css('display') == 'none') {\r\n      $( '#add_new' ).slideDown( \"slow\", function() {\r\n        \/\/ Animation complete.\r\n        var val, url;\r\n        val = $('#id').val();\r\n        url = 'http:\/\/localhost\/composer-src\/app.notes.php?id=' + val;\r\n        if (val != '')\r\n          $.getJSON(url, function(data) {\r\n            \/\/populate the packages datalist\r\n            $(\"select[name='language'] option[value='language-\" + $(data)[0].language.toLowerCase() + \"']\").attr('selected','selected');\r\n            $(\"select[name='category'] option[value='\" + $(data)[0].category + \"']\").attr('selected','selected');\r\n            $('#title').val($(data.snippets)[0].title);\r\n            $('#so-url').val($(data.snippets)[0].stackoverflow['url']);\r\n            $('#description').val($(data.snippets)[0].description);\r\n            $('#inputval').html($(data.snippets)[0].code).text();\r\n          });\r\n      });\r\n    } else {\r\n      $( '#add_new' ).slideUp( \"slow\", function() {\r\n        \/\/ Animation complete.\r\n      });\r\n    }\r\n  });\r\n  $('#close_add_new').click(function() {\r\n    console.log($('#id').val());\r\n    $( '#add_new' ).slideUp( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n    });\r\n  });\r\n});\r\n  <\/script>\r\n\r\n<\/body>\r\n<\/html>\r\n<?php $app[$notes]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'php' && APP_DEBUG)\r\n  die($app[$notes]['html']);\r\n\r\n",
"public/app.packagist.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0]) \/\/die(getcwd());\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n\/*\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/console_app.php') ? '..\/console_app.php' : (is_file('..\/config\/console_app.php') ? '..\/config\/console_app.php' : 'console_app.php'))\r\n    : (is_file('console_app.php') ? 'console_app.php' : (is_file('public\/console_app.php') ? 'public\/console_app.php' : null))) require_once $path; \r\nelse die(var_dump($path . ' path was not found. file=console_app.php'));\r\n*\/\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  if (isset($_GET['app']) && $_GET['app'] == 'php')\r\n    if (isset($_POST['path']) && isset($_GET['filename']) && $path = realpath($_POST['path'] . $_GET['filename']))\r\n      file_put_contents($path, $_POST['editor']);\r\n      \r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['filename'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['filename'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'sudo ' . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open('sudo ' . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n}\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_packagist-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 600px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n#ace-editor {\r\n  margin: 0;\r\n  position: relative;\r\n  resize: both;\r\n  overflow: auto;\r\n  white-space: pre-wrap;\r\n  \/\/width: 100%;\r\n  \/\/height: 100%;\r\n}\r\n\r\n<?php $app[$packagist]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_packagist-container\" class=\"<?= (APP_SELF == __FILE__ || (isset($_GET['app']) && $_GET['app'] == 'packagist') ? 'selected' : '') ?>\" style=\"border: 1px solid #000;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">Packagist.org Package (Search)<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_packagist-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n      <div style=\"display: inline-block; width: auto; padding-left: 10px;\">\r\n        <iframe src=\"<?= \/* basename(__FILE__) *\/ NULL; ?>\" style=\"height: 550px; width: 775px;\"><\/iframe>\r\n      <\/div>\r\n\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n\r\n  <\/div>\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$packagist]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$packagist]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php $app[$packagist]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\r\nis_dir(APP_PATH . APP_BASE['var']) or mkdir(APP_PATH . APP_BASE['var'], 0755);\r\nif (is_file(APP_PATH . APP_BASE['var'] . 'packagist.org.html')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime(APP_PATH . APP_BASE['var'] . '\/packagist.org.html'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/packagist.org\/';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($html = curl_exec($handle))) \r\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'packagist.org.html', $html) or $errors['COMPOSER_LATEST'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/packagist.org\/';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($html = curl_exec($handle))) \r\n    file_put_contents(APP_PATH . APP_BASE['var'] . 'packagist.org.html', $html) or $errors['COMPOSER_LATEST'] = $url . ' returned empty.';\r\n}\r\n\r\nlibxml_use_internal_errors(true); \/\/ Prevent HTML errors from displaying\r\n$dom = new DOMDocument(1.0, 'utf-8');\r\n$dom->loadHTML(file_get_contents(APP_PATH . APP_BASE['var'] . 'packagist.org.html'), LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD );   \r\n$xpath = new DOMXPath($dom);\r\n\r\n$destination = $xpath->query('\/\/head\/meta');\r\n$template = $dom->createDocumentFragment();\r\n$template->appendXML('<base href=\"https:\/\/packagist.org\/\" \/>');\r\n$destination[0]->parentNode->insertBefore($template, $destination[0]->nextSibling);\r\n\r\n\/*\r\n$dom = new DOMDocument(1.0, 'utf-8');\r\n$dom->loadHTML(file_get_contents(APP_PATH . APP_BASE['var'] . 'packagist.org.html'));\r\n\r\n$divs = $dom->getElementsByTagName('head');\r\n\r\n$element = $dom->createElement('test', 'This is the root element!');\r\n\r\n$elm = createElement($dom, 'foo', 'bar', array('attr_name'=>'attr_value'));\r\n\r\n$dom->appendChild($elm);\r\n*\/\r\n\r\n\/\/dd($divs);\r\n\r\n\/\/$content_node=$dom->getElementById(\"main\");\r\n\/\/$node=getElementsByClass($content_node, 'p', 'latest');\r\n\r\n\/\/$dom->saveHTML($dom->documentElement);\r\n \r\n\/\/echo file_get_contents(\"https:\/\/packagist.org\/\");\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'php' && APP_DEBUG)\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() use($dom) {\r\n      return $dom->saveHTML(); \/* eval('?>' . $project_code); \/\/ -wow *\/\r\n    })->shutdown(); \/\/ die();",
"public/app.pong.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"])) {\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('..\/config\/config.php'))) {\r\n      require_once $path;\r\n    }\r\n  } elseif (is_file($path = realpath('config\/config.php'))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n}\r\n\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\n\r\nif (!realpath($path = APP_BASE['resources'] . 'js\/pong\/'))\r\n  (@!mkdir(APP_PATH . $path, 0755, true) ?: $errors['APP_PONG'] = \"$path could not be created.\" );\r\n\r\nif ($path) {\r\n  if (!is_file($file = $path . 'ball.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nexport default class Ball {\r\n  constructor (ctx, x, y) {\r\n    this.ctx = ctx;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = 16;\r\n    this.height = 16;\r\n    this.xSpeed = 3;\r\n    this.ySpeed = 0;\r\n  }\r\n\r\n  draw () {\r\n    this.ctx.fillStyle = '#ff00ff';\r\n    this.ctx.fillRect(this.x, this.y, this.width, this.height);\r\n  }\r\n}\r\nEND\r\n);\r\n\r\n  if (!is_file($file = $path . 'board.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nexport default class Board {\r\n  constructor (ctx) {\r\n    this.ctx = ctx\r\n    this.left = 0;\r\n    this.right = 500;\r\n    this.top = 0;\r\n    this.bottom = 170\r\n  }\r\n\r\n  collisionDetected(ball) {\r\n    if (ball.x < this.left) {\r\n      \/\/ collide with left boundry\r\n      return 1\r\n    }\r\n\r\n    if (ball.x + ball.width > this.right) {\r\n      \/\/ collide with right boundry\r\n      return 2\r\n    }\r\n\r\n    if (ball.y < this.top) {\r\n      \/\/ collide with top boundry\r\n      return 3\r\n    }\r\n\r\n    if (ball.y + ball.height > this.bottom) {\r\n      \/\/ collide with bottom boundry\r\n      return 4\r\n    }\r\n\r\n    \/\/ no collision detected\r\n    return 0;\r\n  }\r\n\r\n  draw () {\r\n    this.ctx.fillStyle = \"#FFF\";\r\n    this.ctx.fillRect(this.right \/ 2, 15, 2, 40);\r\n    this.ctx.fillRect(this.right \/ 2, 65, 2, 40);\r\n    this.ctx.fillRect(this.right \/ 2, 115, 2, 40);\r\n    this.ctx.font = \"50px serif\"\r\n    this.ctx.fillStyle = \"#FFF\"\r\n    setTimeout(() => {this.ctx.fillText(\"READY?\", 150, 100)}, 2000)\r\n    \r\n    this.ctx.fillRect(this.right \/ 2 - 40, 40, 10, 10);\r\n    this.ctx.fillRect(this.right \/ 2 + 40, 40, 10, 10);\r\n  }\r\n\r\n  clear () {\r\n    this.ctx.clearRect(this.left, this.top, this.right, this.bottom);\r\n  }\r\n}\r\nEND\r\n);\r\n\r\n  if (!is_file($file = $path . 'game.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nimport Board from '.\/board.js'\r\nimport Paddle from '.\/paddle.js'\r\nimport Ball from '.\/ball.js'\r\nimport Score from '.\/score.js'\r\n\r\nclass Game {\r\n  constructor () {\r\n    const canvas = document.getElementById(\"pong_game\")\r\n    this.ctx = canvas.getContext(\"2d\")\r\n\r\n    this.score = new Score()\r\n  }\r\n\r\n  init () {\r\n    this.board = new Board(this.ctx)\r\n\r\n    this.board.ctx.font = \"50px serif\"\r\n    this.board.ctx.fillStyle = \"#FFF\"\r\n    setTimeout(() => {this.board.ctx.fillText(\"GO!\", 175, 100)}, 2000)\r\n\r\n    this.leftPaddle = new Paddle(this.ctx, 10, 65, '#3DA45C')\r\n    this.rightPaddle = new Paddle(this.ctx, 480, 65, '#2300ff')\r\n    this.ball = new Ball(this.ctx, this.leftPaddle.x + this.leftPaddle.width, this.leftPaddle.y + this.leftPaddle.height \/ 2 - 8)\r\n\r\n    this.board.draw()\r\n    this.leftPaddle.draw()\r\n    this.rightPaddle.draw()\r\n    this.ball.draw()\r\n  }\r\n\r\n  setController () {\r\n    const mousePad = document.getElementById('mousepad')\r\n    mousePad.addEventListener('mousemove', (e) => {\r\n      document.getElementById('xyposition').textContent = \"clientY: \" + (e.clientY - mousePad.offsetTop)\r\n\r\n      this.leftPaddle.y_prev = this.leftPaddle.y\r\n      this.rightPaddle.y_prev = this.rightPaddle.y\r\n\r\n      this.rightPaddle.y = e.clientY - mousePad.offsetTop - this.rightPaddle.height \/ 2\r\n      this.leftPaddle.y = e.clientY - mousePad.offsetTop - this.leftPaddle.height \/ 2\r\n    })\r\n  }\r\n  \r\n  bendBallOnCollision (that) {\r\n    if ([1,2].includes(that.leftPaddle.collisionDetected(that.ball)) || [1,2].includes(that.rightPaddle.collisionDetected(that.ball))) {\r\n      that.ball.xSpeed *= -1\r\n\r\n      const diff = that.rightPaddle.y - that.rightPaddle.y_prev\r\n      const absDiff = Math.abs(diff)\r\n      const sign = diff \/ absDiff\r\n      if (absDiff >= 5) {\r\n        that.ball.ySpeed = 3 * sign\r\n      } else if (absDiff >= 2) {\r\n        that.ball.ySpeed = 2 * sign\r\n      } else if (absDiff >= 1) {\r\n        that.ball.ySpeed = sign\r\n      } else {\r\n        that.ball.ySpeed = 0\r\n      }\r\n    }\r\n    \r\n    if ([3,4].includes(that.leftPaddle.collisionDetected(that.ball)) || [3,4].includes(that.rightPaddle.collisionDetected(that.ball))) {\r\n      that.ball.ySpeed *= -1\r\n    }\r\n  }\r\n\r\n  play () {\r\n    const that = this\r\n    function start () {\r\n      that.ball.x += that.ball.xSpeed      \r\n      that.ball.y += that.ball.ySpeed\r\n\r\n      that.board.clear()\r\n      that.board.draw()\r\n      that.leftPaddle.draw()\r\n      that.rightPaddle.draw()\r\n      that.ball.draw()\r\n\r\n      that.bendBallOnCollision(that)\r\n\r\n      const isRoundOver = that.board.collisionDetected(that.ball)\r\n\r\n      if ([1, 2].includes(isRoundOver)) {\r\n        isRoundOver !== 1 ? that.score.leftWin() : that.score.rightWin()\r\n\r\n        setTimeout(() => {\r\n          that.init()\r\n          that.play()\r\n        }, 2000)\r\n        return\r\n      } else if ([3, 4].includes(that.board.collisionDetected(that.ball))) {\r\n        that.ball.ySpeed *= -1\r\n      } \/\/ else { }\r\n\r\n      const requestAnimationFrame = window.mozRequestAnimationFrame || window.requestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame\r\n      requestAnimationFrame(start)\r\n    }\r\n    start()\r\n  }\r\n}\r\n\r\nexport default Game\r\nEND\r\n);\r\n\r\n  if (!is_file($file = $path . 'index.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nimport Game from '.\/game.js'\r\n\r\nwindow.onload = () => {\r\n  const game = new Game()\r\n  game.init()\r\n  game.setController()\r\n  game.play()\r\n}\r\nEND\r\n);\r\n\r\n  if (!is_file($file = $path . 'paddle.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nexport default class Paddle {\r\n  constructor (ctx, x, y, fillStyle) {\r\n    this.ctx = ctx;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.y_prev = y;\r\n    this.width = 10;\r\n    this.height = 40;\r\n    this.fillStyle = fillStyle;\r\n  }\r\n\r\n  collisionDetected (ball) {\r\n    if (this.x + this.width >= ball.x && this.x + this.width < ball.x + ball.width && ball.xSpeed < 0\r\n      && ((this.y < ball.y && this.y + this.height > ball.y) || (this.y < ball.y + ball.height && this.y + this.height > ball.y + ball.height))) {\r\n        \/\/ collide from right\r\n        return 1;\r\n    }\r\n\r\n    if (this.x <= ball.x + ball.width && this.x > ball.x && ball.xSpeed > 0\r\n      && ((this.y < ball.y && this.y + this.height > ball.y) || (this.y < ball.y + ball.height && this.y + this.height > ball.y + ball.height))) {\r\n        \/\/ collide from left\r\n        return 2;\r\n    }\r\n\r\n    if (this.y <= ball.y + ball.height && this.y > ball.y && ball.ySpeed > 0\r\n    && ((this.x < ball.x && this.x + this.width > ball.x) || (this.x < ball.x + ball.width && this.x + this.width > ball.x + ball.width))) {\r\n        \/\/ collide from top\r\n        return 3;\r\n    }\r\n\r\n    if (this.y + this.height >= ball.y && this.y + this.height < ball.y + ball.height && ball.ySpeed < 0\r\n    && ((this.x < ball.x && this.x + this.width > ball.x) || (this.x < ball.x + ball.width && this.x + this.width > ball.x + ball.width))) {\r\n        \/\/ collide from bottom\r\n        return 4;\r\n    }\r\n\r\n    \/\/ no collision detected\r\n    return 0;\r\n  }\r\n\r\n  draw () {\r\n    this.ctx.fillStyle = this.fillStyle;\r\n    this.ctx.fillRect(this.x, this.y, this.width, this.height);\r\n  }\r\n}\r\nEND\r\n);\r\n\r\n  if (!is_file($file = $path . 'score.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nexport default class Score {\r\n  constructor (left = 0, right = 0) {\r\n    this.left = left\r\n    this.right = right\r\n    this.leftScoreEl = document.getElementById('score_1')\r\n    this.rightScoreEl = document.getElementById('score_2')\r\n  }\r\n\r\n  leftWin() {\r\n    this.left++\r\n    this.leftScoreEl.textContent = this.left\r\n  }\r\n\r\n  rightWin() {\r\n    this.right++\r\n    this.rightScoreEl.textContent = this.right\r\n  }\r\n}\r\nEND\r\n);\r\n\r\n  if (!is_file($file = APP_BASE['resources'] . 'js\/' . 'app.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nimport '.\/bootstrap';\r\nimport '.\/pong';\r\nEND\r\n);\r\n\r\n\r\n  if (!is_file($file = APP_BASE['resources'] . 'js\/' . 'bootstrap.js'))\r\n    if (@touch($file))\r\n      file_put_contents($file, <<<END\r\nimport _ from 'lodash';\r\nwindow._ = _;\r\n\r\n\/**\r\n * We'll load the axios HTTP library which allows us to easily issue requests\r\n * to our Laravel back-end. This library automatically handles sending the\r\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\r\n *\/\r\n\r\nimport axios from 'axios';\r\nwindow.axios = axios;\r\n\r\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n\/**\r\n * Echo exposes an expressive API for subscribing to channels and listening\r\n * for events that are broadcast by Laravel. Echo and event broadcasting\r\n * allows your team to easily build robust real-time web applications.\r\n *\/\r\n\r\n\/\/ import Echo from 'laravel-echo';\r\n\r\n\/\/ import Pusher from 'pusher-js';\r\n\/\/ window.Pusher = Pusher;\r\n\r\n\/\/ window.Echo = new Echo({\r\n\/\/     broadcaster: 'pusher',\r\n\/\/     key: import.meta.env.VITE_PUSHER_APP_KEY,\r\n\/\/     cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER ?? 'mt1',\r\n\/\/     wsHost: import.meta.env.VITE_PUSHER_HOST ? import.meta.env.VITE_PUSHER_HOST : `ws-$\\{import.meta.env.VITE_PUSHER_APP_CLUSTER\\}.pusher.com`,\r\n\/\/     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,\r\n\/\/     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,\r\n\/\/     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',\r\n\/\/     enabledTransports: ['ws', 'wss'],\r\n\/\/ });\r\nEND\r\n);\r\n}\r\n\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_pong-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 400px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\n<?php $app[$pong]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_pong-container\" class=\"<?= (__FILE__ == get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'pong') ? 'selected' : '') ?>\" style=\"border: 1px solid #000; overflow-x: scroll;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">Pong<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_pong-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n      <div style=\"display: inline-block; width: auto;\">\r\n        <iframe src=\"<?= (is_dir($path = APP_PATH . APP_BASE['public']) && getcwd() == realpath($path) ? APP_BASE['public']:''  ) . basename(__FILE__) ?>\" style=\"height: 350px; width: 750px;\"><\/iframe>\r\n      <\/div>\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n  <\/div>\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$pong]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n\r\n\r\n<?php $app[$pong]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\/\/dd($_SERVER);\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta http-equiv=\"content-type\" content=\"text\/html; charset=UTF-8\">\r\n  <title>Pong 2.0<\/title>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <link rel=\"stylesheet\" href=\"resources\/css\/app.css\" \/>\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= \/*$appWhiteboard['style'];*\/ NULL; ?>\r\n* { margin: 0; padding: 0; } \/* to remove the top and left whitespace *\/\r\n\r\nhtml, body { width: 100%; height: 100%; <?= ($_SERVER['SCRIPT_FILENAME'] == __FILE__ ? 'overflow:hidden;' : '') ?> } \/* just to be sure these are full screen*\/\r\n<\/style>\r\n<\/head>\r\n\r\n<body class=\"bg-gray-300\">\r\n  <div class=\"h-screen flex justify-center items-center text-white\">\r\n    <div class=\"flex\">\r\n      <div class=\"w-40\"><\/div>\r\n      <div id=\"pong-panel\" class=\"bg-black mx-4 px-8 py-4 rounded-md shadow-[5px_5px_20px_rgba(0,0,0,.4)]\">\r\n        <div class=\"text-right mb-2\">\r\n          Speed:\r\n          <label class=\"mx-2\">\r\n            <input type=\"radio\" name=\"speed\" value=\"5\">\r\n            5x\r\n          <\/label>\r\n          <label class=\"mr-2\">\r\n            <input type=\"radio\" name=\"speed\" value=\"3\">\r\n            3x\r\n          <\/label>\r\n          <label>\r\n            <input type=\"radio\" name=\"speed\" value=\"1\" checked=\"checked\">\r\n            1x\r\n          <\/label>\r\n        <\/div>\r\n        <div class=\"flex justify-between\">\r\n          <h3>Player: Wang<\/h3>\r\n          <h3>Player: Barry<\/h3>\r\n        <\/div>\r\n        <canvas id=\"pong_game\" width=\"500\" height=\"170\" class=\"border border-neutral-300\">Canvas not supported<\/canvas>\r\n        <div class=\"grid grid-cols-2 justify-items-center\">\r\n          <div id=\"score_1\">0<\/div>\r\n          <div id=\"score_2\">0<\/div>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"right-panel\" class=\"w-80 px-8 pt-12 bg-black rounded-md shadow-[5px_5px_20px_rgba(0,0,0,.4)]\">\r\n        <div id=\"xyposition\" class=\"\">&nbsp;<\/div>\r\n        <div id=\"mousepad\" class=\"h-[170px] w-full border border-white\"><\/div>\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n  <script type=\"module\" src=\"resources\/js\/pong\/index.js\"><\/script>\r\n  <script type=\"module\" src=\"resources\/js\/bootstrap.js\"><\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $app[$pong]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]) || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'php' && APP_DEBUG )\r\n  die($app[$pong]['html']);\r\n",
"public/app.project.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == $_SERVER[\"SCRIPT_FILENAME\"]) {\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('..\/config\/config.php'))) {\r\n      require_once $path;\r\n    }\r\n  } elseif (is_file($path = realpath('config\/config.php'))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n}\r\n\r\nif (!$path = realpath(APP_PATH . 'projects\/index.php')) {\r\n  \/\/ file_put_contents($path, $_POST['contents']);\r\n  $errors['project.php'] = 'projects\/index.php was missing. Using template.' . \"\\n\";\r\n}\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  if (isset($_GET['app']) && $_GET['app'] == 'project')\r\n    if (isset($_POST['path']) && isset($_GET['file']) && $path = realpath($_POST['path'] . $_GET['file'])) {\r\n      file_put_contents($path, $_POST['contents']);\r\n      die(); \/\/header('Location: ' . APP_WWW)\r\n    }\r\n}\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n\r\nob_start(); ?>\r\n\r\n#app_project-container { position: absolute; height: auto; display: none; top: 40%; left: 50%; transform: translate(-50%, -50%); }\r\n#app_project-container.selected { display: block; z-index: 1; \r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75    #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n\r\nimg { display: inline; }\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n.splitter {\r\n  width: 100%;\r\n  height: 250px;  \r\n  position: relative;\r\n}\r\n\r\n#separator {\r\n  cursor: row-resize;\r\n  background-color: #aaa;\r\n  background-image: url(\"data:image\/svg+xml;utf8,<svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='100' height='3'><path d='M2 30 0 M5 0 v30 M8 0 v30' fill='none' stroke='black'\/><\/svg>\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  width: 100%;\r\n  height: 15px;\r\n  z-index: 2;\r\n  transform: translateZ(0);\r\n  \/* Prevent the browser's built-in drag from interfering *\/\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n#first {\r\n  background-color: #dde;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 10px;\r\n  z-index: 1;\r\n  transform: translateZ(0);\r\n}\r\n\r\n#second {\r\n  background-color: #eee;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 10px;\r\n  z-index: 1;\r\n  transform: translateZ(0);\r\n  overflow-x: hidden;\r\n}\r\n\r\n#ace-editor {\r\n  margin: 0;\r\n  position: relative;\r\n  resize: both;\r\n  overflow: auto;\r\n  white-space: pre-wrap;\r\n  \/\/width: 100%;\r\n  \/\/height: 100%;\r\n}\r\n\r\n\r\n<?php $app[$project]['style'] = ob_get_contents();\r\nob_end_clean(); \r\n\r\nob_start(); ?>\r\n  <div id=\"app_project-container\" class=\"absolute <?= (get_included_files()[0] == __FILE__ || (isset($_GET['project']) && !$_GET['project']) && !isset($_GET['path']) ? 'selected' : '') ?>\" style=\"z-index: 1; width: 724px; background-color: rgba(255,255,255,0.8); padding: 10px;\">\r\n    <div style=\"position: relative; margin: 0 auto; width: 704px; height: 506px; border: 3px dashed #DD0000; background-color: #FBF7F1;\">\r\n      <div class=\"absolute ui-widget-header\" style=\"position: absolute; display: inline-block; width: 100%; height: 25px; margin: -50px 0 25px 0; padding: 24px 0; border-bottom: 1px solid #000; z-index: 3;\">\r\n        <label class=\"npm-home\" style=\"cursor: pointer;\">\r\n          <div class=\"\" style=\"position: relative; display: inline-block; top: 0; left: 0; margin-top: -5px;\">\r\n            <img src=\"resources\/images\/code_icon.png\" width=\"40\" height=\"40\" \/>\r\n          <\/div>\r\n        <\/label>\r\n        <div style=\"display: inline;\">\r\n          <span style=\"background-color: white; color: #DD0000;\">Project <?= \/* (version_compare(NPM_LATEST, NPM_VERSION, '>') != 0 ? 'v'.substr(NPM_LATEST, 0, similar_text(NPM_LATEST, NPM_VERSION)) . '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . substr(NPM_LATEST, similar_text(NPM_LATEST, NPM_VERSION)) . '<\/span>' : 'v'.NPM_VERSION ); *\/ NULL; ?><\/span> <span style=\"background-color: #0078D7; color: white;\"><code class=\"text-sm\" style=\"background-color: white; color: #0078D7;\">$ <?= (defined('PHP_EXEC') ? 'projects\/index.php' : null); ?><\/code><\/span>\r\n        <\/div>\r\n        \r\n        <div style=\"display: inline; float: right; text-align: center; color: blue;\"><code style=\"background-color: white; color: #0078D7;\"><a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_project-container').style.display='none';\">[X]<\/a><\/code><\/div> \r\n      <\/div>\r\n      \r\n      <div class=\" ui-widget-content\" style=\"position: relative; display: block; width: 698px; background-color: rgba(251,247,241); z-index: 2; height: 500px; overflow: scroll;\">\r\n\r\n        <div class=\"splitter\">\r\n          <div id=\"first\">\r\n            <iframe id=\"app_project-iframe\" src=\"<?= basename(\/*'?project=show'*\/ 'project.php') ?>\" style=\"height: 100%; width: 100%;\"><\/iframe>\r\n          <\/div>\r\n          <form id=\"app_project-saveForm\" method=\"POST\">\r\n          <div id=\"separator\" style=\"height: 25px; text-align: center;\">\r\n            <pre style=\"display: inline;\">---Drag Bar---<\/pre>\r\n\r\n            <div style=\"display: inline; float: right; z-index: 1000;\">\r\n\r\n        <button type=\"submit\" style=\"background-color: white; cursor: pointer; border: 1px solid #000;\">&nbsp;&nbsp;Save&nbsp;&nbsp;<\/button>\r\n\r\n<!-- input type=\"submit\" name=\"save-submit\" value=\"&nbsp;&nbsp;Save&nbsp;&nbsp;\" style=\"background-color: white; cursor: pointer;\" onclick=\"document.getElementsByClassName('ace_text-input')[0].value = globalEditor.getSession().getValue(); document.getElementsByClassName('ace_text-input')[0].name = 'editor';\" \/ -->\r\n\r\n            <\/div>\r\n\r\n          <\/div>\r\n    \r\n          <div id=\"second\">\r\n\r\n<?php $path = realpath(getcwd() . (isset($_GET['path']) ? DIRECTORY_SEPARATOR . $_GET['path'] : '')) . DIRECTORY_SEPARATOR; ?>\r\n            <div id=\"app_project_editor\" class=\"editor\" style=\"display: <?= (isset($_GET['file']) && isset($_GET['path']) && is_file($_GET['path'] . $_GET['file']) ? 'block': 'block'); ?>; width: 778px; height: 287px; z-index: 2;\"><textarea name=\"contents\" class=\"ace_text-input\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"opacity: 0; font-size: 1px; height: 1px; width: 1px; top: 28px; left: 86px;\" wrap=\"off\"><?= htmlsanitize((is_file('projects\/index.php') ? file_get_contents('projects\/index.php') : '') ) \/*   'clientele\/' . $_GET['client'] . '\/' . $_GET['domain'] . '\/' .  *\/ ?><\/textarea><\/div>\r\n          <\/div>\r\n        <\/form>\r\n      <\/div>\r\n\r\n      <!-- \r\n      <div style=\"display: inline-block; width: auto; padding-left: 10px;\">\r\n        <iframe src=\"<?= basename(__FILE__) ?>\" style=\"height: 550px; width: 775px;\"><\/iframe>\r\n      <\/div>\r\n<pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n<?php $app[$project]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n\/\/ A function is used for dragging and moving\r\nfunction dragElement(element, direction) {\r\n  var md; \/\/ remember mouse down info\r\n  const first = document.getElementById(\"first\");\r\n  const second = document.getElementById(\"second\");\r\n\r\n  element.onmousedown = onMouseDown;\r\n\r\n  function onMouseDown(e) {\r\n    \/\/console.log(\"mouse down: \" + e.clientX);\r\n    md = {\r\n      e,\r\n      offsetLeft: element.offsetLeft,\r\n      offsetTop: element.offsetTop,\r\n      firstHeight: first.offsetHeight,\r\n      secondHeight: second.offsetHeight\r\n    };\r\n\r\n    document.onmousemove = onMouseMove;\r\n    document.onmouseup = () => {\r\n      \/\/console.log(\"mouse up\");\r\n      document.onmousemove = document.onmouseup = null;\r\n    }\r\n  }\r\n\r\n  function onMouseMove(e) {\r\n    \/\/console.log(\"mouse move: \" + e.clientX);\r\n    var delta = {\r\n      x: e.clientX - md.e.clientX,\r\n      y: e.clientY - md.e.clientY\r\n    };\r\n\r\n    if (direction === \"V\") \/\/ Vertical\r\n    {        \r\n      \/\/ Prevent negative-sized elements\r\n      delta.x = Math.min(Math.max(delta.y, -md.firstHeight),\r\n        md.secondHeight);\r\n\r\n      element.style.top = md.offsetTop + delta.x + \"px\";\r\n      first.style.height = (md.firstHeight + delta.x) + \"px\";\r\n      second.style.height = (md.secondHeight - delta.x) + \"px\";\r\n    }\r\n  }\r\n}\r\n\r\ndragElement(document.getElementById(\"separator\"), \"V\");\r\n\r\ndocument.getElementById('app_project-saveForm').addEventListener('submit', function(event) {\r\n  \/\/ Prevent the default form submission\r\n  event.preventDefault();\r\n\r\n  \/\/document.getElementsByClassName('ace_text-input')[0].value = globalEditor.getSession().getValue();\r\n  \/\/document.getElementsByClassName('ace_text-input')[0].name = 'editor';\r\n  \/\/var globalEditor = editor2;\r\n  console.log(globalEditor.getSession().getValue());\r\n\r\n      $.ajax({\r\n        url: '<?= basename(__FILE__); ?>?app=project&file=projects\/index.php',\r\n        type: 'POST',\r\n        data: { path: '', contents: globalEditor.getSession().getValue() },\r\n        \/\/dataType: 'json',\r\n        success: function (msg) {\r\n          \/\/console.log(msg);\r\n          document.getElementById('app_project-iframe').contentWindow.location.reload();\r\n          \/\/iframe refresh\r\n          console.log('window was reloaded');\r\n        },\r\n        error: function (jqXHR, textStatus) {\r\n          console.log(jqXHR.responseText);\r\n          \/\/let responseText = jQuery.parseJSON(jqXHR.responseText);\r\n          \/\/console.log(responseText);\r\n        }\r\n      });\r\n\r\n});\r\n\r\n<?php $app[$project]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\/\/header(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\n\/\/header(\"Pragma: no-cache\"); \r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/-->\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app[$project]['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app[$project]['body']; ?>\r\n\r\n  <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : \"{$path}jquery-3.7.1.min.js\" ?>\"><\/script>\r\n  <!-- You need to include jQueryUI for the extended easing options. -->\r\n<?php \/* https:\/\/stackoverflow.com\/questions\/12592279\/typeerror-p-easingthis-easing-is-not-a-function *\/ ?>\r\n  <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n\r\n\r\n  <script src=\"resources\/js\/ace\/src\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> \r\n  <script src=\"resources\/js\/ace\/src\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    \r\n  <script>\r\n    document.addEventListener(\"DOMContentLoaded\", function() {\r\n        var editor = ace.edit(\"app_project_editor\");\r\n        editor.setTheme(\"ace\/theme\/dracula\");\r\n        \/\/ (file_ext .js = javascript, .php = php)\r\n        editor.session.setMode(\"ace\/mode\/php\");\r\n        editor.setAutoScrollEditorIntoView(true);\r\n        editor.setShowPrintMargin(false);\r\n        editor.setOptions({\r\n            \/\/  resize: \"both\"\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: true\r\n        });\r\n\r\n    });\r\n\r\n<?= $app[$project]['script']; ?>\r\n  <\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $app[$project]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'project' && APP_DEBUG)\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() {\r\n      return eval('?>' . file_get_contents('projects\/index.php') ?? 'Template Replace' ); \/\/ -wow *\/\r\n    })->shutdown(); \/\/ die();ob_start(); ?>",
"public/app.timesheet.php" : "<?php\n\/*\ninclude('config.php'); \/\/\/ BAD ... causes errors due to requireing redunantly.\n\nhttps:\/\/stackoverflow.com\/questions\/17694894\/different-timezone-types-on-datetime-object\n\n*\/\n\n\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]))\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\n    if (is_file($path = realpath('index.php'))) {\n      require_once $path;\n    }\n  } else\n    die(var_dump(\"Path was not found. file=$path\"));\n\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\n  ${$matches[1]} = $matches[1];\n  \n$interval = new DateInterval('PT00H');\n\/\/echo $interval->format('%H:%I:%S');\n\n$interval = new DateTime('2023-09-15 00:00:00'); \/\/ Example DateTime\n\nlist($hrs, $min, $sec) = explode(':', '00:00:06');\n\n$dateInterval = new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\");\n\n\/\/ Convert DateInterval to seconds\n$totalSeconds = $dateInterval->s + $dateInterval->i * 60 + $dateInterval->h * 3600 + $dateInterval->d * 86400;\n\n\/\/ Increment DateInterval by one second\n\/\/$totalSeconds++;\n\n\/\/ Convert the updated total seconds back to a DateInterval\n$dateInterval = DateInterval::createFromDateString(\"$totalSeconds seconds\");\n\n$interval->add($dateInterval);\n\n\/\/dd($interval->format(\"H:i:s\"));\n\n\/\/ Define the time ranges for each period\n\n$timeRanges = [\n    ['Night', 0, 6],\n    ['Morning', 6, 12],\n    ['Afternoon', 12, 18],\n    ['Evening', 18, 22],\n    ['Night', 22, 24],\n];\n\n$today = new DateTime();\n$today->modify('last monday');\n\n$weeklyHours = [\n  $today->format('Y-m-d') => [\n    ['Morning', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')], \/\/ working | idleing\n    ['Afternoon', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Evening', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Night', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')]\n  ]\n];\n\n$totalHours = [\n    ['Morning', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Afternoon', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Evening', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Night', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')]\n];\n\n\/\/ json does not like excess commas ..,\n\/\/ does not like comments  \/* ... *\/\n$json_data = <<<END\n{\n    \"2023-09-18T12:00:00-14:00\": {\n        \"12:35:59\": \"00:00:12\",\n        \"12:46:44\": \"00:00:15\"\n    },\n    \"2023-09-19T18:00:00-22:00\": {\n        \"18:16:50\": \"00:00:21\",\n        \"18:24:21\": \"00:00:17\"\n    }\n}\nEND;\n\n!is_file(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json')\n  and @touch(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json');\n\n$json_data = json_decode(file_get_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json'), true);\n\nif (empty($json_data))\n  $json_data = json_decode('{' . '\"' . date('Y-m-d') . 'T' . date('H').':00:00-24:00' . '\": {' . '} }', true);\n\n$currentTime = new DateTime(); \/\/ Get current time\n$currentTime->setTime('12', '00');\n\nfunction int_pad($n, $len) {\n    $intPart = (int)$n;\n\n    if (!$intPart) return str_repeat('0', $len - 1) . $n;\n\n    return str_repeat('0', (int)max(0, $len - 1 - floor(log($intPart, 10)))) . $n;\n}\n\n\/*\nAddress possible bug ... [{\"2023-09-26T23:00:00-24:00\":[]}]\n*\/\n\n$matches = (array) [];\nif (!empty($json_data))\n  foreach ($json_data as $key => $idleTimes) {\n\n    if ($key)\n      if ($dateTime = new DateTime($key))\n        preg_match('\/^(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2})[-+](\\d{2}:\\d{2})$\/', $key, $matches);\n\n  $date = new DateTime();\n\n  if (!empty($matches)) {\n\n    $sevenDaysAfter = clone $today;\n    $sevenDaysAfter->modify('+7 days');\n\n    if (new DateTime($matches[1]) >= $today && new DateTime($matches[1]) <= $sevenDaysAfter) {\n      (isset($weeklyHours[$matches[1]]) ?:\n        $weeklyHours[$matches[1]] = [\n          ['Morning', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n          ['Afternoon', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n          ['Evening', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n          ['Night', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')]\n        ]);\n    } elseif (!isset($weeklyHours[$matches[1]])) \/\/ $today->format('Y-m-d')\n      continue;\n\n\n    $date = $matches[1];\n    $periodStart = $matches[2];\n    $periodEnd = $matches[3];\n\n    $firstPeriodStart = new DateTime($date . ' ' . $periodStart);\n    $firstPeriodEnd = new DateTime($date . ' ' . $periodEnd);\n\n      foreach ($timeRanges as $index => $range) {\n        $working_time = new DateInterval('PT0S'); \/\/ Initialize working time interval\n        $idle_time = new DateInterval('PT0S'); \/\/ Initialize idle time interval\n              \n        $rotationIndex = null;\n\n        if ($rotationIndex === null) \/\/{\n          $rotationIndex = ($index - 1 < 0 ? 0 : $index - 1);\n        else {\n          $rotationIndex = ($rotationIndex < 0 ? 0 : $rotationIndex);\n        }\n\n        \/\/ echo 'start \/ end: ' . int_pad($range[1], 2) . ' -> ' . int_pad($range[2], 2) . \"<br \/>\\n\";\n\n        $firstRangeStart = new DateTime($date . ' ' . int_pad($range[1], 2) . ':00:00'); \/\/ !DateInterval('PT' . int_pad($range[1], 2) . 'H00M00S' );\n        $firstRangeEnd = new DateTime($date . ' ' . int_pad($range[2], 2) . ':00:00'); \/\/ !DateInterval('PT' . int_pad($range[2], 2) . 'H00M00S' );\n\n        if ($firstRangeStart >= $firstPeriodStart) {\n\n          if ($firstPeriodEnd >= $firstRangeEnd) {\n            \/\/ echo 'this fits here ... ' . $firstRangeStart->format('H:i:s') . '>=' . $firstPeriodStart->format('H:i:s')  . ' START &amp;&amp; ' . $firstPeriodEnd->format('H:i:s') . '>=' . $firstRangeEnd->format('H:i:s')  . \" END<br \/>\\n\";\n            \n            $working_time = clone $weeklyHours[$date][$rotationIndex][1];\n\n\/\/ Subtract $firstRangeStart from $firstRangeEnd \n\nlist($hrs, $min, $sec) = explode(':', $firstRangeStart->format('H:i:s'));\n\n$endTime = clone $firstRangeEnd;\n\n$endTime->sub(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n\nlist($hrs, $min, $sec) = explode(':', $endTime->format('H:i:s'));\n\n$dateInterval = new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\");\n\n\/\/ Convert DateInterval to seconds\n$totalSeconds = $dateInterval->s + $dateInterval->i * 60 + $dateInterval->h * 3600 + $dateInterval->d * 86400;\n\n$workingSeconds = $working_time->s + $working_time->i * 60 + $working_time->h * 3600 + $working_time->d * 86400;\n\n$totalSeconds = $totalSeconds + $workingSeconds;\n\n\/*\nConvert seconds back into DateInterval HH:MM:SS\n*\/\n$addHrs = floor($totalSeconds \/ 3600);\n$addMin = floor(($totalSeconds % 3600) \/ 60);\n$addSec = $totalSeconds % 60;\n\n\/\/ Create a new DateInterval with the updated values\n\/\/ Create a new DateInterval with the updated values\n$endTime = new DateTime($date . ' ' . \"$hrs:$min:$sec\");\n$weeklyHours[$date][$rotationIndex][1] = new DateInterval(\"PT{$addHrs}H{$addMin}M{$addSec}S\"); \/\/ ::createFromDateString(\"$totalSeconds seconds\")\n\n\/\/ ---\n\n\/\/ Get the original values from the DateInterval\n$originalHours = $totalHours[$rotationIndex][1]->h;\n$originalMinutes = $totalHours[$rotationIndex][1]->i;\n$originalSeconds = $totalHours[$rotationIndex][1]->s;\n\n\/\/ Add the new values\n$newHours = $originalHours + $hrs;\n$newMinutes = $originalMinutes + $min;\n$newSeconds = $originalSeconds + $sec;\n\n\/\/ Calculate any carryovers\n$carryMinutes = floor($newSeconds \/ 60);\n$newSeconds = $newSeconds % 60;\n\n$carryHours = floor(($newMinutes + $carryMinutes) \/ 60);\n$newMinutes = ($newMinutes + $carryMinutes) % 60;\n\n$newHours += $carryHours;\n\n$errors['TIME'] = 'Total hours time has been appended ' . $newHours . '+=' . $hrs . '  index: (' . $rotationIndex . ')';\n\n\/\/ Create a new DateInterval\n$totalHours[$rotationIndex][1] = new DateInterval(\"PT{$newHours}H{$newMinutes}M{$newSeconds}S\");\n\n\/\/ Increment DateInterval by one second\n\/\/$totalSeconds++;\n\n            \/\/$endTime = clone $firstRangeEnd;\n\n            \/\/$endTime->sub(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n            \/\/echo 'endTime: ' . $endTime->format('H:i:s') . '  working_time: ' . $working_time->format('%H:%I:%S') . \"<br \/>\\n\";\n            continue;\n          }\n          if ($firstPeriodEnd >= $firstRangeStart && $firstPeriodEnd <= $firstRangeEnd) {\n            \/\/ echo 'and this fits here ... ' . $firstPeriodEnd->format('H:i:s') . '>=' . $firstRangeStart->format('H:i:s') . \" START  &amp;&amp; \";\n            \/\/ echo $firstPeriodEnd->format('H:i:s')  . '<=' . $firstRangeEnd->format('H:i:s') . \" END<br \/>\\n\";\n\n\/\/ $firstPeriodEnd - $firstRangeStart == 3hrs\n\n\n            $working_time = clone $weeklyHours[$date][$rotationIndex][1];\n\nlist($hrs, $min, $sec) = explode(':', $firstRangeStart->format('H:i:s'));\n\n$endTime = clone $firstPeriodEnd;\n$endTime->sub(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n\n   \/\/ $endTime->format('H:i:s') == 03:00:00\n\n\/\/append 3hrs to the working time\n\nlist($hrs, $min, $sec) = explode(':', $endTime->format('H:i:s'));\n\n$dateInterval = new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\");\n\n$totalSeconds = $dateInterval->s + $dateInterval->i * 60 + $dateInterval->h * 3600 + $dateInterval->d * 86400;\n\n$workingSeconds = $working_time->s + $working_time->i * 60 + $working_time->h * 3600 + $working_time->d * 86400;\n\n$totalSeconds = $totalSeconds + $workingSeconds;\n$addHrs = floor($totalSeconds \/ 3600);\n$addMin = floor(($totalSeconds % 3600) \/ 60);\n$addSec = $totalSeconds % 60;\n\n\/\/ Create a new DateInterval with the updated values\n$weeklyHours[$date][$rotationIndex][1] = new DateInterval(\"PT{$addHrs}H{$addMin}M{$addSec}S\"); \/\/ ::createFromDateString(\"$totalSeconds seconds\")\n\n\/\/ ---\n\n\/\/ Get the original values from the DateInterval\n$originalHours = $totalHours[$rotationIndex][1]->h;\n$originalMinutes = $totalHours[$rotationIndex][1]->i;\n$originalSeconds = $totalHours[$rotationIndex][1]->s;\n\n\/\/ Add the new values\n$newHours = $originalHours + $hrs;\n$newMinutes = $originalMinutes + $min;\n$newSeconds = $originalSeconds + $sec;\n\n\/\/ Calculate any carryovers\n$carryMinutes = floor($newSeconds \/ 60);\n$newSeconds = $newSeconds % 60;\n\n$carryHours = floor(($newMinutes + $carryMinutes) \/ 60);\n$newMinutes = ($newMinutes + $carryMinutes) % 60;\n\n$newHours += $carryHours;\n\n\/\/ Create a new DateInterval\n$totalHours[$rotationIndex][1] = new DateInterval(\"PT{$newHours}H{$newMinutes}M{$newSeconds}S\");\n\n\/\/ $working_time->format('%H:%I:%S') == 21:00:00\n            continue;\n          }\n\n\/*\n        [\"12:32:44\": \"00:00:06\"],\n        [\"12:32:22\": \"00:00:06\"],\n        [\"12:40:21\": \"00:00:59\"],\n*\/\n          \/\/ echo 'endTime: ' . $endTime->format('H:i:s') . '  working_time: ' . $working_time->format('%H:%I:%S') . \"<br \/>\\n\";\n        \/\/$endTime->setTime('00', '00');\n\/\/var_dump('Idle Count: ' . count($idleTimes));\n\n\n\/*\n          $firstRangeStart = new DateTime($date . ' ' . int_pad($range[1], 2) . ':00:00'); \/\/ !DateInterval('PT' . int_pad($range[1], 2) . 'H00M00S' );\n          $firstRangeEnd = new DateTime($date . ' ' . int_pad($range[2], 2) . ':00:00'); \/\/ !DateInterval('PT' . int_pad($range[2], 2) . 'H00M00S' );\n\n\n          if ($timestamp >= $firstRangeStart && $timestamp <= $firstRangeEnd) {\n\n            \/\/$it = DateTime::createFromFormat('Y-m-d H:i:s', $idleTime);\n\n            if ($idleTime = new DateTime($date . ' ' . $idleTime)) { \/\/ DateInterval(\"PT{$hrs}H{$min}M{$sec}S\")\n            \n              \/\/list($hrs, $min, $sec) = explode(':', $idleTime);\n\n              \/\/var_dump($idleTime);\n\n              \/\/list($hrs, $min, $sec) = explode(':', $timestamp->format('H:i:s'));\n\n              \/\/$timestamp->add(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n\n              list($hrs, $min, $sec) = explode(':', $timestamp->format('H:i:s'));\n\n              \/\/if ($timestamp = new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\")) {\n\n              $idleTime_init = $idleTime;\n\n              $idleTime->add(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n\n              if ($idleTime <= $firstRangeEnd)\n                \/\/var_dump('idleTime: ' . $idleTime->format('H:i:s'));\n              else {\n              \n              }\n\n                \/\/list($hrs, $min, $sec) = explode(':', $firstRangeEnd->format('H:i:s'));\n                \n                \/\/$idleTime->sub(\"PT{$hrs}H{$min}M{$sec}S\");\n                \n                \n\n              \/\/}\n\n\n            }\n          }\n*\/\n        }\n        \n      \n        }\n\n        \n      }\n\n\/*\n  2023-09-18T06:00:00-21:00\n\n  if the timestamp is the last one as apposed to one in a sequence\n  \n Night  start : 00 end:06\n Morning  start : 06 end:12\n  this fits here ... 21:00:00>=12:00:00 END\n Afternoon start : 12 end:18\n  this fits here ... 21:00:00>=18:00:00 END   OR   and this fits here ... 21:00:00>=18:00:00 START\n Evening start : 18 end:22\n  and this fits here ... 21:00:00>=18:00:00 START\n*\/\n\n\/*\n        if ( $firstRangeStart >= $firstPeriodStart && $firstPeriodEnd >= $firstRangeEnd  ) {\n          echo 'and here' . $firstRangeStart->format('H:i:s') . '>=' . $firstPeriodStart->format('H:i:s') . \"<br \/>\\n\";\n          continue;\n        }\n        && $firstRangeEnd <= $firstPeriodEnd) {\n          echo 'and ';\n        }\n*\/\n        \n        \/\/}\n\n      \/\/dd();\n\n      if (!empty($idleTimes))\n        foreach ($idleTimes as $timestamp => $idleTime) {\n          \/\/var_dump('Idle Time!' . $timestamp);\n          \n          \/\/dd($date);\n          $timestamp = new DateTime($timestamp); \/\/ DateInterval(\"PT{$hrs}H{$min}M{$sec}S\")\n\n          $rotationIndex = null;\n\n          \/\/ Get the current hour\n          $currentHour = (int) $timestamp->format('G');\n\n          if ($rotationIndex === null) \/\/{\n            $rotationIndex = \/*$index -*\/ 1;\n          else {\n            $rotationIndex = ($rotationIndex < 0 ? 0 : ($rotationIndex > 3 ? 0 : $rotationIndex)) - 1;\n          }\n\n          foreach ($timeRanges as $index => $range) {\n            if ($currentHour >= $range[1] && $currentHour < $range[2]) {\n              $rotationIndex = ($index < 0 ? 0 : ($index > 3 ? 0 : $index)); \/\/ $index - 1\n              break;\n            }\n          }\n          if (!is_array($idleTime)) {\n          if (preg_match('\/^\\d+\\:\\d+\\:\\d+$\/', $idleTime)) {\n            list($hrs, $min, $sec) = explode(':', $idleTime);\n          } else {\n            continue;\n          }\n          \n          $timestamp_add = clone $timestamp;\n          $timestamp_add->add(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n          \n          if ((int) $timestamp_add->format('G') < $range[2] && $timestamp_add > $timestamp) {\n            \/\/dd('Date: ' . $date . ' Idle: ' . \"{$hrs}:{$min}:{$sec}\" . '  Idle Time: ' . $timestamp_add->format('H:i:s') . '  Time: ' . $timestamp->format('H:i:s')  . '   Rotation: ' . $rotationIndex);\n\/\/var_dump('wtf index: ' . $rotationIndex . '  Time: ' . $timestamp->format('H:i:s'));\n\n\/\/$weeklyHours[$date][$rotationIndex][2];\n\/\/ Get the original values from the DateInterval\n$originalHours = $weeklyHours[$date][$rotationIndex][2]->h;\n$originalMinutes = $weeklyHours[$date][$rotationIndex][2]->i;\n$originalSeconds = $weeklyHours[$date][$rotationIndex][2]->s;\n\n\/\/ Add the new values\n$newHours = $originalHours + $hrs;\n$newMinutes = $originalMinutes + $min;\n$newSeconds = $originalSeconds + $sec;\n\n\/\/ Calculate any carryovers\n$carryMinutes = floor($newSeconds \/ 60);\n$newSeconds = $newSeconds % 60;\n\n$carryHours = floor(($newMinutes + $carryMinutes) \/ 60);\n$newMinutes = ($newMinutes + $carryMinutes) % 60;\n\n$newHours += $carryHours;\n\n\/\/ Create a new DateInterval\n$weeklyHours[$date][$rotationIndex][2] = new DateInterval(\"PT{$newHours}H{$newMinutes}M{$newSeconds}S\");\n\n\/\/$totalHours[$rotationIndex][2];\n\n\/\/ Get the original values from the DateInterval\n$originalHours = $totalHours[$rotationIndex][2]->h;\n$originalMinutes = $totalHours[$rotationIndex][2]->i;\n$originalSeconds = $totalHours[$rotationIndex][2]->s;\n\n\/\/ Add the new values\n$newHours = $originalHours + $hrs;\n$newMinutes = $originalMinutes + $min;\n$newSeconds = $originalSeconds + $sec;\n\n\/\/ Calculate any carryovers\n$carryMinutes = floor($newSeconds \/ 60);\n$newSeconds = $newSeconds % 60;\n\n$carryHours = floor(($newMinutes + $carryMinutes) \/ 60);\n$newMinutes = ($newMinutes + $carryMinutes) % 60;\n\n$newHours += $carryHours;\n\n\/\/ Create a new DateInterval\n$totalHours[$rotationIndex][2] = new DateInterval(\"PT{$newHours}H{$newMinutes}M{$newSeconds}S\");\n\n          }\n\n\/\/dd($rotationIndex);\n\/*            \n            $weeklyHours[$date][$rotationIndex][2]\n            \n            \n            How to append time to a DateInterval?\n$weeklyHours = [\n  $today->format('Y-m-d') => [\n    ['Morning', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')], \/\/ working | idleing\n    ['Afternoon', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Evening', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')],\n    ['Night', new DateInterval('PT00H00M00S'), new DateInterval('PT00H00M00S')]\n  ]\n];\n*\/\n\n          \/\/$idleTimes = null; \/\/break;\n        }\n      }\n  }\n  \/\/dd($totalHours);\n\n\/*\n    $today->modify('+1 day');\n\n    if($today->format('l') === 'Monday') {\n        break; \/\/ Exit the loop when it's Monday again\n    }\n\n*\/\n\/**\/\n\n\n        \/\/  echo 'firstPeriodStart: ' . $firstPeriodStart->format('H:i:s') . 'firstPeriodEnd: ' . $firstPeriodEnd->format('H:i:s') . '   firstRangeEnd: ' . $firstRangeEnd->format('H:i:s') . \"<br \/>\\n\";        \n        \n\/*\n        \/\/ Calculate working time for this range (based on your logic)\n        $working_time_for_range = ... \/\/ Calculate working time for this range\n\n        \/\/ Calculate idle time for this range (based on your logic)\n        $idle_time_for_range = ... \/\/ Calculate idle time for this range\n\n        \/\/ Add working time for this range to total working time\n        $working_time->add($working_time_for_range);\n\n        \/\/ Add idle time for this range to total idle time\n        $idle_time->add($idle_time_for_range);\n***\n        foreach ($idleTimes as $timestamp => $idleTime) {\n\n          list($hrs, $min, $sec) = explode(':', $timestamp);\n\n          if ($timestamp = new DateTime($date . ' ' . $timestamp)) \/\/ DateInterval(\"PT{$hrs}H{$min}M{$sec}S\")\n\n          if ($timestamp >= $firstRangeStart && $timestamp <= $firstRangeEnd) {\n\n            \/\/$it = DateTime::createFromFormat('Y-m-d H:i:s', $idleTime);\n\n            if ($idleTime = new DateTime($date . ' ' . $idleTime)) { \/\/ DateInterval(\"PT{$hrs}H{$min}M{$sec}S\")\n            \n              \/\/list($hrs, $min, $sec) = explode(':', $idleTime);\n\n              \/\/var_dump($idleTime);\n\n              \/\/list($hrs, $min, $sec) = explode(':', $timestamp->format('H:i:s'));\n\n              \/\/$timestamp->add(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n\n              list($hrs, $min, $sec) = explode(':', $timestamp->format('H:i:s'));\n\n              \/\/if ($timestamp = new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\")) {\n\n              $idleTime_init = $idleTime;\n\n              $idleTime->add(new DateInterval(\"PT{$hrs}H{$min}M{$sec}S\"));\n\n              if ($idleTime <= $firstRangeEnd)\n                dd('idleTime: ' . $idleTime->format('H:i:s'));\n              else {\n              \n              }\n\n                \/\/list($hrs, $min, $sec) = explode(':', $firstRangeEnd->format('H:i:s'));\n                \n                \/\/$idleTime->sub(\"PT{$hrs}H{$min}M{$sec}S\");\n                \n                \n\n              \/\/}\n\n\n            }\n\n\n            \/\/ How to \"convert\" idleTime, first add the $timestamp and\n            \/\/ minus it from the firstRangeEnd  if its a possitive number,\n            \/\/ than it gets appended to the idle time. Negative, cut it into \n            \/\/ piece where by if its possitive end, and append it to idle time.\n\n              \/\/dd('timestamp: ' . $timestamp->format('Y-m-d h:i:s') . '   idletime: ' . $idleTime->format('%H:%I:%S') ); \/\/ $timestamp = new DateTime($date . ' ' . $timestamp));\n\n                    \/\/ Process each idle time within the date\n\n                    \/\/ Compare $timestamp with the current time range and perform actions accordingly\n                \/\/if ($timestamp is within $range) { }\n                        \/\/ Perform actions for this combination of date, time range, and idle time\n                        \/\/ Adjust idle time to stay within range\n                        \/\/ $idle_time = ... \/\/ Adjust idle time\n\n\/\/            var_dump($idleTimes);\n            break; \/\/ Break out of the loop once a match is found\n          }\n        }\n      }\n  }\n}\n*\/\n\/\/dd();\n\n\n$Now = new DateTime(date('Y-m-d') . 'T' . date('H').':00:00', new DateTimeZone('-' . $timeRanges[4][2] . ':00')); \/\/ date('H') + 6 now\n\n\/\/dd($Now->format('Y-m-d H:i:s'));\n\n$json = (!is_file(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json') ? \n  (!@touch(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json') ? \n    (!file_get_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json', true) ? json_encode([$Now->format(DATE_RFC3339) => []]) : file_get_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json', true)) :\n    (!@file_put_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json', $json = json_encode([$Now->format(DATE_RFC3339) => []]), LOCK_EX) ?: $json)\n  ) :\n  (!file_get_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json', true) ? json_encode([$Now->format(DATE_RFC3339) => []]) : file_get_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date('Y-m') . '.json', true))\n);\n\n\/\/file_get_contents('var\/weekly-timesheet-' . date('Y-m') . '.json', true) :  : (!@touch('timesheet.json') ? '' . json_encode([$Now->format(DATE_RFC3339) => []]), 'timesheet.json', LOCK_EX) : file_get_contents('timesheet.json', true)));\n\n\/\/die(var_dump($json));\n\n$json_decode = json_decode($json, true);\n\nswitch ($_SERVER['REQUEST_METHOD']) {\n  case 'POST':\n    if (isset($_POST['idletime'])) { \n      $_POST['idletime']['time'] = trim($_POST['idletime']['time']);\n      $_POST['idletime']['idle'] = (is_null($_POST['idletime']['idle']) ? NULL : trim($_POST['idletime']['idle']));\n\n      if (!empty($json_decode))\n        foreach($json_decode as $weekday_key => $weekday) {\n          if (preg_match('\/(' . \/*\\d+\\-\\d+\\-\\d+*\/ date('Y-m-d') . ')T(\\d+:\\d+:\\d+)-(\\d+:\\d+)\/',$weekday_key,$matches)) {\n            if ($matches[1] == $Now->format('Y-m-d') && !empty($weekday)) {\n              foreach($weekday as $idletime_key => $idletime) {\n                if (strtotime($_POST['idletime']['time']) >= strtotime($idletime_key) && strtotime($idletime) == null) { \/\/ $Now->format('H:i:s')\n                  $json_decode[$weekday_key][$idletime_key] = $_POST['idletime']['idle']; \/\/ $Now->format('H:i:s')\n                  continue 2;\n                }\n              }\n              if (isset($json_decode[$weekday_key][$idletime_key]) && $json_decode[$weekday_key][$idletime_key] !== $_POST['idletime']['time']) \/\/ $Now->format('H:i:s')\n                if (!isset($json_decode[$weekday_key][$_POST['idletime']['time']])) \/\/ $Now->format('H:i:s')\n                  $json_decode[$weekday_key][$_POST['idletime']['time']] = (isset($_POST['idletime']['idle']) ? $_POST['idletime']['idle'] : NULL);  \/\/ $Now->format('H:i:s')\n            } else {\n              \/\/$json_decode[$Now->format(DATE_RFC3339)] = [$_POST['idletime']['time'] => (isset($_POST['idletime']['idle']) && !is_null($_POST['idletime']['idle']) ? $_POST['idletime']['idle'] : NULL)];\n              $json_decode[$weekday_key][$_POST['idletime']['time']] = (isset($_POST['idletime']['idle']) && !is_null($_POST['idletime']['idle']) ? $_POST['idletime']['idle'] : NULL); \/\/ $Now->format('H:i:s')\n            }\n          } else {\n            $json_decode[$Now->format('Y-m-d\\TH:i:sP')] = [date('H:i:s') => '']; \/\/ DATE_RFC3339\n          }\n        }\n      else \n        $json_decode[] = [$Now->format(DATE_RFC3339) => []];\n\n      $_POST['idletime'] = json_encode($_POST['idletime']); \n      \n      file_put_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date(\"Y-m\") . '.json', json_encode($json_decode), LOCK_EX);\n      \n      \/\/Shutdown::setEnabled(false)->setShutdownMessage()->shutdown(); \n      Shutdown::setEnabled(false)->setShutdownMessage(function() use($json_decode) {\n        return json_encode($json_decode);\n      })->shutdown();\n      \n      \/\/die(json_encode($json_decode));\n    }\n\n    \/\/Shutdown::setEnabled(false)->shutdown(json_encode($json_decode));\/\/ $_POST['idletime']\n    break;\n  case 'GET':\n    if (!is_file(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date(\"Y-m\") . '.json'))\n      file_put_contents(APP_PATH . APP_BASE['var'] . 'weekly-timesheet-' . date(\"Y-m\") . '.json', json_encode([$Now->format('Y-m-d\\TH:i:sP') => []]), LOCK_EX);\n    \/\/die(); \/\/ $Now->format('H:i:s') => null\n      break;\n}\n\nob_start(); ?>\n\n\/* Styles for the absolute div *\/\n#app_timesheet-container {\n    position: absolute;\n    top: 10%;\n    \/\/bottom: 60px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: auto;\n    height: 500px;\n    background-color: rgb(255, 255, 255);\n    color: black;\n    \/* text-align: center; *\/\n    padding: 10px;\n    z-index: 1;\n}\n\ninput {\n   border: 1px solid #000;\n}\n\ntd, tr {\n  border: none;\n}\n\n.hidden {\n  display: none;\n}\n\n\n<?php $app[$timesheet]['style'] = ob_get_contents();\nob_end_clean();\n\nob_start(); ?>\n\n  <div id=\"app_timesheet-container\" class=\"<?= (APP_SELF == __FILE__ || isset($_GET['app']) && $_GET['app'] == 'timesheet' ? 'selected' : '') ?>\" style=\"display: none; <?= \/* *\/ null; ?>border: 1px solid #000; width: 800px;\">\n    <div class=\"header ui-widget-header\" style=\" text-align: center;\">\n      <div style=\"display: inline-block;\">Weekly Time Sheet<\/div>\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_timesheet-container').style.display='none';\">X<\/a>]<\/div> \n    <\/div>\n<div style=\" overflow-x: scroll;\">\n    <form style=\"display: inline;\" action=\"<?= APP_URL_BASE . basename(APP_SELF) . '?' . http_build_query(APP_QUERY + array( 'app' => 'php')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') \/*  $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"GET\">\n      <div style=\"font-size: 12px;\">\n        <div style=\"float: left;\">NAME OF EMPLOYEE<br \/>\n        <input type=\"text\" style=\"width: 300px;\" \/>\n        <\/div><div style=\"float: right; text-align: right;\">FOR WEEK ENDING<br \/>\n        <input type=\"text\" style=\"width: 300px;\" \/>\n        <\/div>\n        <div style=\"clear: both;\"><\/div>\n        <div style=\"float: left;\">DEPARTMENT<br \/>\n        <input type=\"text\" style=\"width: 300px;\" \/><\/div><div style=\"float: right; text-align: right;\">EXEMPTIONS<br \/>\n        <input type=\"text\" style=\"width: 300px;\" \/><\/div>\n      <\/div>\n      <div style=\"clear: both;\"><\/div>\n<?php\n$today = new DateTime(date('Y-m-d H:i:s'));\n\n\/\/ Store the current time\n$current_time = $today->format('H:i:s');\n\n\/\/ Check if today is Monday\nif ($today->format('N') != 1)\n    \/\/ Get the last Monday    \n    $today->modify('last monday'); \/\/$today->modify('+7 days'); \/\/ Subtract 7 days\nelse \n  $today->modify('+' . $today->format('N') - 1 . ' days');\n\n\/\/ Set the time back to the current time\n$today->setTime(...explode(':', $current_time));\n\n$currentDate = new DateTime();\n\n\/\/ $currentDate->setTime('06', '30');\n\necho $today->format('Y-m-d H:i:s');\n\nwhile(true) { \/\/ $weekday <= 6\n\n\/\/echo $today->format('Y-m-d'); \/\/ Output will be the date of the last Monday\n$dayOfWeek = strtoupper($today->format('l'));\n\n\/\/ Get the current hour\n$currentHour = $currentDate->format('G');\n\n\/\/ Determine the rotation based on the current hour\n$rotationIndex = null;\n\n\/\/ If $rotationIndex is still null, use the last rotation (Night - Morning)\nif ($rotationIndex === null) {\n    $rotationIndex = count($timeRanges) - 1;\n} else {\n    $rotationIndex = ($rotationIndex < 0 ? 0 : ($rotationIndex >= 4 ? 0 : $rotationIndex)); \/\/  || \n    \/\/dd($rotationIndex); \/\/ $rotationIndex -= 1;\n}\n\n\n\/\/dd($rotationIndex);\n\nforeach ($timeRanges as $index => $range) {\n    if ($currentHour >= $range[1] && $currentHour < $range[2]) {\n        $rotationIndex = ($index < 0 ? 0 : ($index >= 4 ? 0 : $index));\n        break;\n    }\n}\n\n\/\/ Define the time periods for each rotation\n$timePeriods = [\n    ['NIGHT', 'MORNING'],\n    ['MORNING', 'AFTERNOON'],\n    ['AFTERNOON', 'EVENING'],\n    ['EVENING', 'NIGHT'],\n];\n\n\/\/ Use the selected rotation index to determine the time periods\nlist($firstPeriod, $secondPeriod) = $timePeriods[$rotationIndex];\n\n$currentTime = $currentDate;\n\n$periodTimes = [\n    'MORNING' => ['start' => '06:00:00', 'end' => '12:00:00'],\n    'AFTERNOON' => ['start' => '12:00:00', 'end' => '18:00:00'],\n    'EVENING' => ['start' => '18:00:00', 'end' => '22:00:00'],\n    'NIGHT' => ['start' => '22:00:00', 'end' => '23:59:59'],\n];\n\n$firstPeriodStart = new DateTime($periodTimes[$firstPeriod]['start']);\n$firstPeriodEnd = new DateTime($periodTimes[$firstPeriod]['end']);\n$secondPeriodStart = new DateTime($periodTimes[$secondPeriod]['start']);\n$secondPeriodEnd = new DateTime($periodTimes[$secondPeriod]['end']);\n\n\/\/ Determine the background color for the current time period\n$backgroundColorFirst = ($firstPeriod === $timePeriods[$rotationIndex][0]) ? '#00FF00' : 'white';\n$backgroundColorSecond = ($secondPeriod === $timePeriods[$rotationIndex][1]) ? '#FF0000' : 'white';\n\n\/\/ Determine if \"OUT\" should be highlighted in red\n$highlightOut = false;\nif ($firstPeriodStart <= $currentTime && $currentTime <= $firstPeriodEnd) {\n    \/\/ $highlightOut = ($currentTime->format('i') >= 1 && $currentTime->format('i') <= 59);\n    $remainingTime = $firstPeriodEnd->getTimestamp() - $currentTime->getTimestamp();\n    $highlightOut = ($remainingTime <= 3599); \/\/ 3599 seconds = 59 minutes and 59 seconds\n}\n\n\/* Debug statements\necho \"First Period Start: \" . $firstPeriodStart->format('Y-m-d H:i:s') . \"<br \/>\\n\";\necho \"First Period End: \" . $firstPeriodEnd->format('Y-m-d H:i:s') . \"<br \/>\\n\";\necho \"Second Period Start: \" . $secondPeriodStart->format('Y-m-d H:i:s') . \"<br \/>\\n\";\necho \"Second Period End: \" . $secondPeriodEnd->format('Y-m-d H:i:s') . \"<br \/>\\n\";\necho \"Current Time: \" . $currentTime->format('Y-m-d H:i:s') . \"<br \/>\\n\";\necho \"Highlight Out: \" . ($highlightOut ? 'true' : 'false') . \"<br \/>\\n\";\n*\/\n\/\/dd();\n\/\/if (($firstPeriodStart <= $currentTime && $currentTime <= $firstPeriodEnd) || ($secondPeriodStart <= $currentTime && $currentTime <= $secondPeriodEnd)) {\n\/\/    $highlightOut = true;\n\/\/}\n\n\/\/ Set background color for the highlighted column\nif (!$highlightOut) {\n    $backgroundColorFirst = '#00FF00'; \/\/ Green\n    $backgroundColorSecond = 'white';\n} else {\n    $backgroundColorFirst = 'white';\n    $backgroundColorSecond = '#FF0000'; \/\/ Red\n}\n\/**\/\n  if ($today->format('N') == 1)\necho <<<END\n      <div style=\"display: flex; align-items: center; justify-content: center; font-size: 14px; width: 775px; border: 1px solid #000;\">\n        <div style=\"display: inline-block; text-align: left; width: 145px; padding: 10px;\">DAYS OF WEEK<\/div>\n\n        <div style=\"display: inline-block; text-align: center; width: 175px;\">\n          <div style=\"background-color: #E6EAF6; border: 1px solid #000; padding: 10px; font-weight: bold;\">$firstPeriod<\/div>\n          <div style=\"display: inline-block; background-color: $backgroundColorFirst; border: 1px solid #000; text-align: center; padding-top: 7px; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\" title=\"{$firstPeriodStart->format('h:i:s')} - {$firstPeriodEnd->format('h:i:s')}\">Time<\/div>\n          <div style=\"display: inline-block; background-color: $backgroundColorSecond; border: 1px solid #000; text-align: center; padding-top: 7px; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\" title=\"{$firstPeriodStart->format('h:i:s')} - {$firstPeriodEnd->format('h:i:s')}\">Idle<\/div>\n        <\/div>        \n        <div style=\"display: inline-block; text-align: center; width: 175px;\">\n          <div style=\"background-color: #E6EAF6; border: 1px solid #000; padding: 10px; font-weight: bold;\">$secondPeriod<\/div>\n          <div style=\"display: inline-block; border: 1px solid #000; text-align: center; padding-top: 7px; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\" title=\"{$secondPeriodStart->format('h:i:s')} - {$secondPeriodEnd->format('h:i:s')}\">Time<\/div>\n          <div style=\"display: inline-block; border: 1px solid #000; text-align: center; padding-top: 7px; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\" title=\"{$secondPeriodStart->format('h:i:s')} - {$secondPeriodEnd->format('h:i:s')}\">Idle<\/div>\n        <\/div>\n\n\n        <div style=\"display: inline-block; text-align: center; width: 175px;\">\n          <div style=\"background-color: #E6EAF6; border: 1px solid #000; padding: 10px; font-weight: bold;\">OVERTIME<\/div>\n          <div style=\"display: inline-block; border: 1px solid #000; text-align: center; padding-top: 7px; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\">Time<\/div>\n          <div style=\"display: inline-block; border: 1px solid #000; text-align: center; padding-top: 7px; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\">Idle<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 300px;\">\n          <div style=\"background-color: #E6EAF6; border: 1px solid #000; padding: 10px; font-weight: bold;\">FOR OFFICE USE ONLY<\/div>\n          <div style=\"display: inline-block; border: 1px solid #000; font-size: 12px; text-align: center; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\">REGULAR<br \/>HOURS<\/div>\n          <div style=\"display: inline-block; border: 1px solid #000; font-size: 12px; text-align: center; margin: -2px; width: 50%; height: 40px; box-sizing: border-box;\">OVERTIME<br \/>HOURS<\/div>\n        <\/div>\n\n      <\/div>\n      <div style=\"height: 265px; overflow: scroll;\">\n\nEND;\n\n$defaultBackgroundColor = ($today->format('Y-m-d') === $currentDate->format('Y-m-d') ? '#FFFF00' : '#FFFFFF' );\n\n\/\/dd($highlightOut);\n\nif (!$highlightOut) {\n    $backgroundColorThird = '#BFFF3F'; \/\/ green\n    $backgroundColorFourth = $defaultBackgroundColor;\n} else {\n    $backgroundColorThird = $defaultBackgroundColor; \/\/ orange;\n    $backgroundColorFourth = '#FFBF3F';\n}\n\n\/\/$rotationIndex -= 1;\n\nif (!isset($weeklyHours[$today->format('Y-m-d')])) {\n  echo <<<END\n      <div style=\"font-size: 14px; width: 775px; border: 1px solid #000; background-color: $defaultBackgroundColor;\">\n        <div style=\"display: inline-block; text-align: left; width: 120px;\">\n          <div style=\"border: 1px solid #000; padding: 10px;\" title=\"{$today->format('Y-m-d')}\">{$dayOfWeek}<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 130px;\">\n          <div style=\"display: inline-block; background-color: $backgroundColorThird; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0.0<\/div>\n          <div style=\"display: inline-block; background-color: $backgroundColorFourth; border-left: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0:0<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 140px;\">\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0.0<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0:0<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 130px;\">\n          <div style=\"display: inline-block; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 238px;\">\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n        <\/div>\n      <\/div>\nEND;\n} else {\n  $date = $today->format('Y-m-d');\n  echo <<<END\n      <div style=\"font-size: 14px; width: 775px; border: 1px solid #000; background-color: $defaultBackgroundColor;\">\n        <div style=\"display: inline-block; text-align: left; width: 120px;\">\n          <div style=\"border: 1px solid #000; padding: 10px;\" title=\"{$today->format('Y-m-d')}\">{$dayOfWeek}<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 130px;\">\n          <div style=\"display: inline-block; background-color: $backgroundColorThird; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $weeklyHours[$date][$rotationIndex][1]->h . '.' . $weeklyHours[$date][$rotationIndex][1]->i;\necho <<<END\n<\/div>\n          <div style=\"display: inline-block; background-color: $backgroundColorFourth; border-left: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $weeklyHours[$date][$rotationIndex][2]->h . ':' . $weeklyHours[$date][$rotationIndex][2]->i . ':' . $weeklyHours[$date][$rotationIndex][2]->s;\necho <<<END\n<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 140px;\">\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\n\n$rotationNextIdx = ($rotationIndex + 1 < 0 ? 0 : ($rotationIndex + 1 > 3 ? 0 : $rotationIndex)) + 1;\n\necho $weeklyHours[$date][$rotationNextIdx][1]->h . '.' . $weeklyHours[$date][$rotationNextIdx][1]->i;\necho <<<END\n<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $weeklyHours[$date][$rotationNextIdx][2]->h . ':' . $weeklyHours[$date][$rotationNextIdx][2]->i . ':' . $weeklyHours[$date][$rotationNextIdx][2]->s;\necho <<<END\n<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 130px;\">\n          <div style=\"display: inline-block; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 238px;\">\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $weeklyHours[$date][0][1]->h + $weeklyHours[$date][1][1]->h + $weeklyHours[$date][2][1]->h + $weeklyHours[$date][3][1]->h;\necho <<<END\n<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n        <\/div>\n      <\/div>\n\nEND;\n}\n\n\/\/dd($totalHours[$rotationIndex][2]);\n\n\n  if ($today->format('N') == 7) {\/\/   $totalHours\n  echo <<<END\n      <\/div>\n      <div style=\"font-size: 14px; width: 775px; border: 1px solid #000; background-color: #E6EAF6; font-weight: bold;\">\n        <div style=\"display: inline-block; text-align: left; width: 120px;\">\n          <div style=\"border: 1px solid #000; padding: 10px; \">TOTAL HOURS<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 130px;\">\n          <div style=\"display: inline-block; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $totalHours[$rotationIndex][1]->h;\necho <<<END\n<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px;  height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $totalHours[$rotationIndex][2]->h . ':' . $totalHours[$rotationIndex][2]->i . ':' . $totalHours[$rotationIndex][2]->s;\necho <<<END\n<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 140px;\">\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\n\nEND;\n$rotationNextIdx = ($rotationIndex + 1 < 0 ? 0 : ($rotationIndex + 1 > 3 ? 0 : $rotationIndex)) + 1;\necho $totalHours[$rotationNextIdx][1]->h;\necho <<<END\n<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $totalHours[$rotationNextIdx][2]->h . ':' . $totalHours[$rotationNextIdx][2]->i . ':' . $totalHours[$rotationNextIdx][2]->s;\necho <<<END\n<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 130px;\">\n          <div style=\"display: inline-block; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n        <\/div>\n        <div style=\"display: inline-block; text-align: center; width: 238px;\">\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">\nEND;\necho $totalHours[0][1]->h + $totalHours[1][1]->h + $totalHours[2][1]->h + $totalHours[3][1]->h;\necho <<<END\n<\/div>\n          <div style=\"display: inline-block; border-left: 1px solid #000; border-right: 1px solid #000; text-align: center; padding: 10px; margin: 0 -2px; height: 100%; width: 50%; box-sizing: border-box;\">0<\/div>\n        <\/div>\n      <\/div>\n      <div style=\"clear: both;\"><\/div>\n\n    <\/form>\n  <\/div>\nEND;\n    }\n    $today->modify('+1 day');\n\n    if($today->format('l') === 'Monday') {\n        break; \/\/ Exit the loop when it's Monday again\n    }\n}\n\n\n?>\n\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\n\n  <\/div>\n\n<?php $app[$timesheet]['body'] = ob_get_contents();\nob_end_clean();\n\nob_start(); ?>\n\n    var idleTime = -1;\n    var intervalID = [0, 1];\n    var isIntervalActive = false;\n    var occupiedTime = 0;\n    var date = new Date();\n    var clock = new Date().toLocaleTimeString('en-US', { hour: '2-digit', hour12: true, minute: '2-digit', second: '2-digit'});\n    var time = new Date().toLocaleTimeString('en-US', { hour: '2-digit', hour12: true, minute: '2-digit', second: '2-digit'});\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    var month = months[date.getMonth()];\n\nif (typeof snd !== 'undefined') {\n    snd.loop = true;\n} else {\n    \/\/ Variable snd is not defined\n    console.log('Variable snd is not defined');\n}\n\nfunction play_beep() {\n    snd.play();\n}\n\nfunction stop_beep() {\n    snd.pause();\n}\n\nfunction clockIncrement() {\n    var time = new Date().toLocaleTimeString('en-US', { hour: '2-digit', hour12: true, minute: '2-digit', second: '2-digit'});\n    var clocktime = document.getElementById('clockTime');\n    var weekday=new Array(7);\n    weekday[0]=\"Sun,\";\n    weekday[1]=\"Mon,\";\n    weekday[2]=\"Tues,\";\n    weekday[3]=\"Wed,\";\n    weekday[4]=\"Thurs,\";\n    weekday[5]=\"Fri,\";\n    weekday[6]=\"Sat,\";\n    \n    \n    clocktime.innerHTML = '<i style=\"background-color: #0078D7; color: white;\">' + weekday[date.getDay()] + '  ' + time + '  ' + month + ' ' + date.getDate() + ' ' + date.getFullYear()  + '<\/i>';\n}\n\nfunction startInterval() {\n    if (!isIntervalActive) {\n        intervalID[1] = setInterval(timerIncrement, 1000);\n        isIntervalActive = true;\n        console.log('Interval started.');\n    } else {\n        console.log('Interval is already active.');\n    }\n}\n\nfunction stopInterval() {\n    if (isIntervalActive) {\n        clearInterval(intervalID[1]);\n        isIntervalActive = false;\n        console.log('Interval stopped.');\n    } else {\n        console.log('Interval is not active.');\n    }\n}\n        \n        \nvar typedInstances = [];\n\n    $(document).ready(function () {\n    \n        intervalID[0] = setInterval(clockIncrement, 1000); \/\/ 1 second\n    \n        $('#ts-status-light').click(function() {\n            \/\/ Pause the interval when the button is clicked\n            \n            if (isIntervalActive) {\n                stopInterval();\n                $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-R.gif');\n                $(\"#idleTime\").html('<i style=\"color: red;\">[Stopped] at: ' + toTime(occupiedTime)['time'] + '<\/i>');\n            } else {\n                startInterval();\n                $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-GG.gif');\n            }\n            \/\/console.log('Interval paused.');\n        });\n\n        \/\/ Increment the idle time counter every minute.\n        startInterval(); \/\/ intervalID = setInterval(timerIncrement, 1000); \/\/ 1 second\n        time = date.toLocaleTimeString('en-US', { hour: '2-digit', hour12: false,  minute: '2-digit', second: '2-digit'});\n\n        \/\/ Zero the idle timer on mouse movement.\n        $(this).mousemove(function (e) {\n            if (idleTime >= 11)\n              idlePenalty({idletime: {time:time,idle:toTime(idleTime)['time']}});\n            idleTime = -1;\n        });\n        $(this).keypress(function (e) {\n            if (idleTime >= 11)\n              idlePenalty({idletime: {time:time,idle:toTime(idleTime)['time']}});\n            idleTime = -1;\n        });\n        \/\/$(\"#idleTime\").text(month + ' ' + date.getDate() + ' ' + date.getFullYear() + '  '  + time);\n\n\n   });\n\n    \/* https:\/\/stackoverflow.com\/questions\/69264746\/how-to-convert-seconds-to-time-in-javascript *\/\n    function toTime(duration) {\n        \/\/if (duration < 0) return \"-\" + toTime(-duration);\n        \/\/return new Date(duration * 1000).toISOString().substr(11, 8);\n      \/\/ Hours, minutes and seconds\n      var time = new Array();\n      var hrs = ~~(duration \/ 3600);\n      var mins = ~~((duration % 3600) \/ 60);\n      var secs = ~~duration % 60;\n      let ret = String(hrs).padStart(2, '0') + \":\" + String(mins).padStart(2, '0') + \":\" + String(secs).padStart(2, '0');\n      time['hrs'] = hrs;\n      time['mins'] = mins;\n      time['secs'] = secs;\n      time['time'] = ret;\n      return time;\n    }\n\n    function idlePenalty(idletimeobj) {\n      console.log(snd);\n\nif (typeof snd !== 'undefined') {\n    snd.play();\n} \n\n\/*\n    var lyricIds = ['#lyric-1', '#lyric-2', '#lyric-3', '#lyric-4', '#lyric-5', '#lyric-6', '#lyric-7', '#lyric-8', '#lyric-9', '#lyric-10', '#lyric-11'];\n\n    function startTyped(index) {\n        if (index < lyricIds.length) {\n            var currentId = lyricIds[index];\n            var nextId = lyricIds[index + 1];\n\n            new Typed(currentId, {\n                strings: [document.querySelector(currentId).textContent],\n                typeSpeed: 10,\n                backSpeed: 0,\n                loop: false,\n                onComplete: function (self) {\n                    startTyped(index + 1);\n                }\n            });\n        }\n    }\n    startTyped(0);\n*\/\n\n\n\n\n\n\n    console.log('Current snd current time: ' + snd.currentTime);\n    document.getElementById('adhd_song-container').style.display='block';\n    \n      var jsonFile;\n      date = new Date();\n      time = date.toLocaleTimeString('en-US', { hour: '2-digit', hour12: false,  minute: '2-digit', second: '2-digit'}); \/\/ .replace(\/AM|PM\/,'')\n      console.log(\"File Recorded - Time: \" + idleTime);\n      $.ajax({\n        url: '<?= (is_dir($path = APP_PATH . APP_BASE['public']) && getcwd() == realpath($path) ? '1.'.APP_BASE['public'] : '' ) . basename(__FILE__) . '' ?>',\n        type: 'POST',\n        data: idletimeobj, \/\/ { idletime: { time: time, idle: toTime(idleTime)['time'], note: \"\" } }\n        dataType: 'json',\n        success: function (msg) {\n          console.log(msg);\n          $.getJSON(\"var\/weekly-timesheet-<?= date('Y-m'); ?>.json\", function(json_decode) {\n            var count_idle = 0;\n            console.log(json_decode); \/\/ this will show the info it in console\n            \/\/json_decode = \/\/JSON.parse(JSON.stringify(json));\n            Object.keys(json_decode).forEach(key=>{ Object.keys(json_decode[key]).forEach(key1=>{ count_idle += 1; }); });\n        \n            console.log(count_idle);\n            snd.stop();\n            $(\"#stats\").html('Idle: [' + count_idle + '] ' + '&nbsp;&nbsp;' + '' + ' <span style=\"color: red;\">01:00:00');\n\n            function myFunction(item, index, arr) {\n              console.log(item);\n            } \n          });\n          \/\/ fetch(\"var\/weekly-timesheet-<?= date('Y-m'); ?>.json\").then(res => res.json()).then(data => jsonFile = JSON.parse(data));\n        },\n        error: function (jqXHR, textStatus) {\n          console.log(jqXHR.responseText);\n          let responseText = jQuery.parseJSON(jqXHR.responseText);\n          console.log(responseText);\n        }\n      });\n\n    }\n\n    function timerIncrement() {\n      \/\/snd.play();\n\n         \/\/ for now\n        date = new Date();\n        time = date.toLocaleTimeString('en-US', { hour: '2-digit', hour12: true, minute: '2-digit', second: '2-digit'});\n        idleTime = idleTime + 1; \n        idleDateTime = new Date(idleTime * 1000).toISOString().substr(11, 8);\n        \n        console.log(((idleTime >= 1) ? 'Idle: ' + idleTime + '   ' : '') + 'Work: ' + occupiedTime);\n        \n        if (idleTime <= 0) {\n          $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-R.gif');\n        }\n        \n        if (idleTime > 1) { \/\/ 1 second\n            \/\/window.location.reload();\n          $(\"#idleTime\").html('<i style=\"color: blue;\">[Idling] for: ' + toTime(occupiedTime)['time'] + '<\/i>');\n\n          if (idleTime >= 10) { \/\/ 60 second\n          \n            $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-G.gif');\n\n             try {\n    \/\/ Attempt to play the media element\nif (typeof snd !== 'undefined') {\n    snd.play();\n}\n      \n} catch (error) {\n    \/\/ Check if the error is a DOMException\n    if (error instanceof DOMException && error.name === 'NotAllowedError') {\n        \/\/ Handle the error (e.g., show a message to the user)\n        console.error('The play method is not allowed by the user agent or the platform.');\n    } else {\n        \/\/ If it's a different type of error, rethrow it\n        throw error;\n    }\n}\n             \n             \n             \n             \/\/snd.pause();\n             \n             $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-Y.gif');\n             $(\"#idleTime\").html('<i style=\"color: blue;\">[Idled] for: '+ toTime(idleTime)['hrs'] + 'h ' + toTime(idleTime)['mins'] + 'm ' + toTime(idleTime)['secs'] + 's ' + '<\/i>');\n\n             \n             time = date.toLocaleTimeString('en-US', { hour: '2-digit', hour12: false, minute: '2-digit', second: '2-digit'});\n             if (idleTime == 10)\n               idlePenalty({idletime: {time:time,idle:null}}); \/\/ toTime(idleTime)['time']\n               \n          } else {\nif (typeof snd !== 'undefined') {\n    snd.pause();\n}\n            \n            $(\"#idleTime\").html('<i style=\"color: blue;\">[Idleing] for: '+ toTime(occupiedTime)['time'] + '<\/i>');\n            $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-G.gif');\n            occupiedTime = occupiedTime + 1;\n          }\n        } else {\nif (typeof snd !== 'undefined') {\n    snd.pause();\n}\n        document.getElementById('adhd_song-container').style.display='none';\n          $(\"#idleTime\").html('<i style=\"color: green;\">Working: '+ toTime(occupiedTime)['time'] + '<\/i>');\n            $(\"#ts-status-light\").attr('src', 'resources\/images\/timesheet-light-GG.gif');\n          occupiedTime = occupiedTime + 1;\n        }\n    }\n\n\n<?php $app[$timesheet]['script'] = ob_get_contents();\nob_end_clean();\n\nob_start(); ?>\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\n\n<?php\n\/\/ (check_http_status'https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\n    $url = 'https:\/\/cdn.tailwindcss.com';\n    $handle = curl_init($url);\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\n\n    if (!empty($js = curl_exec($handle))) \n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\n  }\n} else {\n  $url = 'https:\/\/cdn.tailwindcss.com';\n  $handle = curl_init($url);\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\n\n  if (!empty($js = curl_exec($handle))) \n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\n}\n?>\n\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\n\n<style type=\"text\/tailwindcss\">\n<?= $app[$timesheet]['style']; ?>\n<\/style>\n<\/head>\n<body>\n<?= $app[$timesheet]['body']; ?>\n\n  <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script>\n  <!-- <script src=\"resources\/js\/jquery\/jquery.min.js\"><\/script> -->\n  \n  <script src=\"resources\/js\/play_sound.js\"><\/script> \n<script>\n<?= $app[$timesheet]['script']; ?>\n<\/script>\n<\/body>\n<\/html>\n<?php $app[$timesheet]['html'] = ob_get_contents();\nob_end_clean();\n\n\/\/check if file is included or accessed directly\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'git' && APP_DEBUG)\n  die($app[$timesheet]['html']);",
"public/app.whiteboard.php" : "<?php\r\n\r\n\/*\r\n\r\nhttps:\/\/stackoverflow.com\/questions\/2368784\/draw-on-html5-canvas-using-a-mouse\r\n\r\nhttps:\/\/leimao.github.io\/blog\/HTML-Canvas-Mouse-Touch-Drawing\/\r\n\r\n*\/\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"])) {\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('..\/config\/config.php'))) {\r\n      require_once $path;\r\n    }\r\n  } elseif (is_file($path = realpath('config\/config.php'))) {\r\n    require_once $path;\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n} \r\n\r\n\/*\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/console_app.php') ? '..\/console_app.php' : (is_file('..\/config\/console_app.php') ? '..\/config\/console_app.php' : 'console_app.php'))\r\n    : (is_file('console_app.php') ? 'console_app.php' : (is_file('public\/console_app.php') ? 'public\/console_app.php' : null))) require_once $path; \r\nelse die(var_dump($path . ' path was not found. file=console_app.php'));\r\n*\/\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  if (isset($_GET['app']) && $_GET['app'] == 'php')\r\n    if (isset($_POST['path']) && isset($_GET['filename']) && $path = realpath($_POST['path'] . $_GET['filename']))\r\n      file_put_contents($path, $_POST['editor']);\r\n      \r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['filename'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['filename'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'sudo ' . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open('sudo ' . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n}\r\n\r\nif (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename(__FILE__), $matches))\r\n  ${$matches[1]} = $matches[1];\r\n  \r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_whiteboard-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 5%;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 500px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\n<?php $app[$whiteboard]['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_whiteboard-container\" class=\"<?= (APP_SELF == __FILE__ || (isset($_GET['app']) && $_GET['app'] == 'whiteboard') ? 'selected' : '') ?>\" style=\"border: 1px solid #000;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">Whiteboard<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_whiteboard-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n      <div style=\"display: inline-block; width: auto;\">\r\n        <iframe src=\"<?= (is_dir($path = APP_PATH . APP_BASE['public']) && getcwd() == realpath($path) ? APP_BASE['public'] : '' ) . basename(__FILE__) ?>\" style=\"height: 460px; width: 800px;\"><\/iframe>\r\n      <\/div>\r\n\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n\r\n  <\/div>\r\n<!-- <\/div> -->\r\n\r\n<?php $app[$whiteboard]['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n\/\/[[x,y],[x,y],[x,y],[x,y],[x,y],[x,y],[x,y]]\r\n\r\n$(document).ready(function () {\r\n  initialize();\r\n});\r\n\r\nvar prevent = false;\r\n\r\nvar postArr = new Array();\r\n\/\/ works out the X, Y position of the click INSIDE the canvas from the X, Y position on the page\r\nfunction getPosition(mouseEvent, element) {\r\n  var x, y;\r\n  if (mouseEvent.pageX != undefined && mouseEvent.pageY != undefined) {\r\n    x = mouseEvent.pageX;\r\n    y = mouseEvent.pageY;\r\n  } else {\r\n    x = mouseEvent.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n    y = mouseEvent.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n  }\r\n  x = x - element.offsetLeft;\r\n    return { X: x, Y: y - element.offsetTop };\r\n  }\r\n   \r\n  function requestData() {\r\n    if ($('#stop:checked').length > 0) return;\r\n \r\n    $.ajax({\r\n      url: 'http:\/\/localhost\/?update',\r\n      success: function(json) {\r\n\t\t\r\n\t\tconsole.log(json);\r\n\t\t  \r\n        $.each(json, function(key,value) { });\r\n\r\n        setTimeout(requestData, 2000); \r\n\r\n      }, \r\n      cache: false\r\n    });\r\n  }\r\n\r\n   function initialize() {\r\n         \/\/ get references to the canvas element as well as the 2D drawing context\r\n         var element = document.getElementById(\"canvas\");\r\n         var context = element.getContext(\"2d\");\r\n\r\n         \/\/ start drawing when the mousedown event fires, and attach handlers to \r\n         \/\/ draw a line to wherever the mouse moves to\r\n         $(\"#canvas\").mousedown(function (mouseEvent) {\r\n            var position = getPosition(mouseEvent, element);\r\n\r\n            context.moveTo(position.X, position.Y);\r\n            context.beginPath();\r\n            prevent = true;\r\n\r\n            \/\/ attach event handlers\r\n            $(this).mousemove(function (mouseEvent) {\r\n               drawLine(mouseEvent, element, context);\r\n            }).mouseup(function (mouseEvent) {\r\n               finishDrawing(mouseEvent, element, context);\r\n            }).mouseout(function (mouseEvent) {\r\n               finishDrawing(mouseEvent, element, context);\r\n            });\r\n         });\r\n\r\n         \/\/ Handle each resize\r\n         $(window).resize(function () {\r\n            var can = document.getElementById('canvas');\r\n\t\t\tcan.width = window.innerWidth;\r\n            can.height = window.innerHeight;\r\n         });\r\n\r\n         \/\/ Handle initial load size\r\n         var can = document.getElementById('canvas');\r\n\t\t can.width = window.innerWidth;\r\n         can.height = window.innerHeight;\r\n\r\n         \/\/ clear the content of the canvas by resizing the element\r\n         $(\"#btnClear\").click(function () {\r\n            \/\/ remember the current line width\r\n            var currentWidth = context.lineWidth;\r\n\r\n            element.width = element.width;\r\n            context.lineWidth = currentWidth;\r\n         });\r\n\r\n         document.addEventListener('touchmove', function (event) {\r\n            if (prevent) {\r\n               event.preventDefault();\r\n            }\r\n\r\n            return event;\r\n         }, false);\r\n      }\r\n\r\n   \/\/ draws a line to the x and y coordinates of the mouse event inside\r\n   \/\/ the specified element using the specified context\r\n   function drawLine(mouseEvent, element, context) {\r\n\r\n      var position = getPosition(mouseEvent, element);\r\n\t  \t  \r\n\t  \/\/console.log(position.X + ',' + position.Y);\r\n\t  postArr.push({X: position.X, Y: position.Y});\r\n\r\n      context.lineTo(position.X, position.Y);\r\n\r\n      context.stroke();\r\n   }\r\n\r\n   \/\/ draws a line from the last coordiantes in the path to the finishing\r\n   \/\/ coordinates and unbind any event handlers which need to be preceded\r\n   \/\/ by the mouse down event\r\n   function finishDrawing(mouseEvent, element, context) {\r\n      \/\/ draw the line to the finishing coordinates\r\n\t  \/\/var data = null;\r\n\t  \r\n\t  console.log(postArr);\r\n      \/\/data += '{[';\r\n\t  \/\/$.each(postArr, function(key, pos) { data += pos + (key < postArr.length - 1 ? \",\" : false); });\r\n      \/\/data += ']}';\r\n\t  $.ajax({\r\n        type: \"POST\",\r\n        url: 'http:\/\/localhost\/app.whiteboard.php',\r\n\t\tcontentType: \"application\/json\",\r\n        dataType: 'json',\r\n        data: JSON.stringify(postArr),\r\n        success: function() {\r\n          console.log('test'); \r\n        },\r\n\t\tcache: false\r\n      });\r\n\t  \r\n\t  postArr = new Array();\r\n\r\n      drawLine(mouseEvent, element, context);\r\n\r\n      context.closePath();\r\n\r\n      \/\/ unbind any events which could draw\r\n      $(element).unbind(\"mousemove\")\r\n                .unbind(\"mouseup\")\r\n                .unbind(\"mouseout\");\r\n      prevent = false;\r\n   }\r\n\r\n<?php $app[$whiteboard]['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\r\n\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= \/*$appWhiteboard['style'];*\/ NULL; ?>\r\n* { margin: 0; padding: 0; } \/* to remove the top and left whitespace *\/\r\n\r\nhtml, body { width: 100%; height: 100%; overflow:hidden; } \/* just to be sure these are full screen*\/\r\n\r\n#canvasDiv {\r\n\tposition: absolute;\r\n\tbackground-color: #E8E8E8;\r\n\ttop: 5px;\r\n\tleft: 5px;\r\n\twidth: 175px;\r\n\theight: 75px;\r\n\tborder: 1px solid Black;\r\n}\r\n\r\ncanvas\r\n{\r\n   display: block;\r\n   background-color: #FFFFFF;\r\n   border: 1px solid Black;\r\n   cursor: crosshair;\r\n   width: auto;\r\n   height: auto;\r\n}\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= \/* $appWhiteboard['body'];*\/ ''; ?>\r\n\r\n<?php\r\nif (isset($HTTP_RAW_POST_DATA) && !is_null($HTTP_RAW_POST_DATA)) {\r\n\/*\r\n\t$query = \"INSERT INTO `abatepai_abate`.`whiteboard` ( `id` , `board` , `date` , `php_sess` , `data` ) VALUES ( NULL , '\" . $_SESSION['board'] . \"', NULL, '\" . session_id() . \"', '\" . mysql_real_escape_string(stripcslashes($HTTP_RAW_POST_DATA)) . \"');\";\r\n\r\n\tif (!mysql_query($query)) {\r\n      die('Invalid query: ' . mysql_error());\r\n    };\r\n    echo $query;\r\n\tdie();\r\n\r\n*\/\r\n\r\nvar_dump(stripcslashes($HTTP_RAW_POST_DATA));\r\n}\r\n?>\r\n<div id=\"canvasDiv\" style=\"padding: 5px; border: #000000 thin dashed;\">\r\n  <p style=\"font-family: Tahoma, Geneva, sans-serif; font-weight: bold;\">WhiteBoard 0.1b<\/p>\r\n  <p>(C) Barry Dick<\/p>\r\n  <p>Participant: <?php echo session_id(); ?><\/p>\r\n  <p style=\"font-weight: bold;\">Board: <?= isset($_SESSION['board']) ? $_SESSION['board'] : '&lt;blank&gt;' ?><\/p>\r\n<\/div>\r\n<canvas id=\"canvas\"><\/canvas>\r\n\r\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script>\r\n  <!-- <script src=\"..\/resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n<script>\r\n<?= $app[$whiteboard]['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $app[$whiteboard]['html'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'php' && APP_DEBUG)\r\n  die($app[$whiteboard]['html']);\r\n\r\n",
"public/developer.php" : "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <style>\r\nbody {\r\n    background: rgba(255, 255, 255, 0.25) url(\"resources\/images\/developer.gif\");\r\n    background-repeat: no-repeat;\r\n    background-position: center 25px;\r\n    \/\/margin-top: 200px;\r\n    \/\/height: 100vh;\r\n    \/\/background-size: cover;\r\n}\r\n\r\n\r\ninput[type='checkbox'] {\r\n    \/\/-webkit-appearance:none;\r\n    width:20px;\r\n    height:20px;\r\n    background:white;\r\n    border-radius:5px;\r\n    border:2px solid #555;\r\n    margin-top: 6px;\r\n    margin-bottom: 22px;\r\n}\r\nform#fimprovdev{\r\n\r\n}\r\ninput[type='checkbox']:checked {\r\n    background: #abd;\r\n}\r\n<\/style>\r\n<\/head>\r\n\r\n<body>\r\n<div style=\"position: absolute; left: 25%; top: 4%; margin: 0px auto;\">\r\n  <div style=\"\">\r\n<form id=\"fimprovdev\" action method=\"POST\" style=\"width: 675px; height: 575px; padding: 210px 0px 0px 115px;\">\r\n<input style=\"\" type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/><br \/>\r\n<input type=\"checkbox\" name=\"\" value=\"\" checked \/>\r\n<\/form>\r\n  <\/div>\r\n  <!-- <p style=\"text-align: center;\"><img src=\"developer_1.jpg\" width=\"650\" height=\"800\" \/><\/p> -->\r\n<\/div>\r\n<\/body>\r\n<\/html>",
"public/ext.xdebug.php" : "<?php\r\n\/\/ test.php\r\n\r\n\r\n\/\/ php -dxdebug.profiler_enable=1 -dxdebug.profiler_output_dir=. public\/ui_complete.php\r\n\r\nphpinfo();\r\n\r\ndie();\r\n\r\nif (__FILE__ == get_required_files()[0])\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n\r\nfunction calculateSum($a, $b) {\r\n    return $a + $b;\r\n}\r\n\r\nfunction performComplexTask() {\r\n    for ($i = 0; $i < 1000000; $i++) {\r\n        \/\/ Some complex task\r\n    }\r\n}\r\n\r\n$a = 5;\r\n$b = 10;\r\n\r\nif (function_exists('xdebug_start_trace'))\r\n\/\/ Profiling starts here\r\n  xdebug_start_trace(APP_PATH . 'test_trace');\r\n\r\n$result = calculateSum($a, $b);\r\nperformComplexTask();\r\n\r\n\r\nif (function_exists('xdebug_stop_trace'))\r\n  \/\/ Profiling ends here\r\n  xdebug_stop_trace();\r\n\r\necho \"Result: $result\";\r\n?>",
"public/idx.develop.php" : "<?php\r\n\r\n\/**This Program Should be Disabled by default ... for debugging purposes only!**\/\r\nif (isset($_GET['src']) && is_readable($path = $_GET['src']) && filesize($path) > 0 ) {\r\n\r\n  Shutdown::setEnabled(false)->setShutdownMessage(function() use ($path) {\r\n    highlight_file($path); \/* return ''; eval('?>' . $project_code); \/\/ -wow *\/\r\n  })->shutdown();\r\n\r\n}\r\n  \/*\r\n  $_SERVER['REQUEST_SCHEME']\r\n  \r\n  DOMAIN\r\n  \r\n  dd(parse_url($_SERVER['REQUEST_URI'], PHP_URL_HOST));\r\n  *\/\r\n  \r\n  \r\n  \/*\r\n  \/\/use mso\\idna_convert;\r\n  \r\n  use phpWhois\\Whois;\r\n  \r\n  $whois = new Whois();\r\n  $whois->deepWhois = true;\r\n  \r\n  $query = isset($argv[1]) ? $argv[1] : 'google.com';\r\n  $result = $whois->lookup($query);\r\n  \r\n  $registered = isset($result['regrinfo']['registered']) && $result['regrinfo']['registered'] == 'yes';\r\n  if (!$registered) {\r\n      echo 'Domain: '.$query.' not registered.'.PHP_EOL;\r\n  } else {\r\n      if (isset($result['regrinfo']['domain']['expires'])) {\r\n          echo 'Domain: '.$query.PHP_EOL;\r\n          echo 'Expired: '.$result['regrinfo']['domain']['expires'].PHP_EOL;\r\n      } else {\r\n          echo 'Domain: '.$query.PHP_EOL;\r\n          echo 'Trying to find expires date...'.PHP_EOL;\r\n          foreach ($result['rawdata'] as $raw) {\r\n              if (strpos($raw, 'Expiry Date:') !== false) {\r\n                  echo 'Expired: '.trim(explode(':', $raw)[1]).PHP_EOL;\r\n              }\r\n          }\r\n      }\r\n  }\r\n  dd();\r\n  *\/\r\n\r\n\r\n\/** Loading Time: 4.77s **\/\r\n  \r\n  \/\/ dd(null, true);\r\n\r\n\r\n  use phpWhois\\Whois;\r\n  \/*\r\n  $whois = new Whois(); \/\/ Domain lookup \/ nserver (Domain lookup)\r\n  $query = 'example.com';\r\n  $result = $whois->lookup($query,false);\r\n  *\/\r\n  \/\/dd($result);\r\n\r\n  \/\/ composer require ipinfo\/ipinfo:^2.2.0 (^3.1+ req. php 8.2.5)\r\n  \/\/use ipinfo\\ipinfo\\IPinfo; \/\/ api \/ key service\r\n  \/\/--use ipinfo\\ipinfo\\IPinfoException;\r\n\r\n  \r\n\/** Loading Time: 4.84s **\/\r\n\r\n  \/\/dd(null, true);\r\n\r\n  \/\/die(basename(getcwd()) . ' ==' . 'public');\r\n  \r\n  \/\/ use Psr\\Log\\LogLevel;\r\n  \r\n  \/* *\/\r\n  \/*\r\n  symfony\/\r\n    console\r\n    filesystem\r\n    finder\r\n    process\r\n    service-contracts\r\n    string\r\n  \r\n  --deprecation-contracts    vendor\/symfony\/deprecation-contracts\/function.php\r\n  --polyfill-ctype           vendor\/symfony\/polyfill-ctype\/bootstrap[?:80].php\r\n  --polyfill-intl-grapheme   vendor\/symfony\/polyfill-intl-grapheme\/bootstrap[?:80].php\r\n  --polyfill-intl-normalizer vendor\/symfony\/polyfill-intl-normalizer\/bootstrap[?:80].php\r\n  --polyfill-mbstring        vendor\/symfony\/polyfill-mbstring\/bootstrap[?:80].php\r\n  --polyfill-php73           vendor\/symfony\/polyfill-php73\/bootstrap.php\r\n  --polyfill-php80           vendor\/symfony\/polyfill-php80\/bootstrap.php\r\n  \r\n  \r\n  Psr\/\r\n  --Log\/LogLevel   vendor\/psr\/log\/Psr\/Log\/LogLevel.php\r\n  *\/\r\n  \r\n  \/\/composer[config][require][]\r\n\r\n\r\n\/** Loading Time: 3.67s **\/\r\n  \r\n  \/\/ dd(null, true);\r\n\r\n\r\n\/\/echo getcwd();\r\n\/**\/\r\n  if (in_array(APP_PATH . APP_BASE['config'] . 'composer.php', get_required_files())) {\r\n    if (class_exists('LogLevel'))\r\n      if (null !== LogLevel::DEBUG) \/\/ isset() || \r\n        if (defined('LogLevel'))\r\n          $errors['LogLevel'] = 'Now let\\'s use LogLevel... ' . LogLevel::DEBUG . \"\\n\";\r\n  \r\n    \/\/if ($path = (basename(getcwd()) == 'public'))\r\n      \/\/? (is_file('public\/ui.composer.php') ? 'public\/ui.composer.php' : 'ui.composer.php') : (is_file('ui.composer.php') ? 'ui.composer.php' : 'public\/ui.composer.php'))\r\n      \/\/require_once($path); \r\n    $additionalPaths = [__DIR__ . DIRECTORY_SEPARATOR . 'ui.php.php', __DIR__ . DIRECTORY_SEPARATOR . 'ui.composer.php']; \/\/require_once('public\/ui.composer.php'); \r\n    \/\/else die(var_dump($path . ' was not found. file=ui.composer.php'));\r\n    \/\/dd('wtf');\r\n  }\r\n\r\n\/\/dd(__DIR__ . DIRECTORY_SEPARATOR); \r\n\r\n$globPaths = array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . 'ui.*.php'), 'is_file'); \/\/ public\/\r\n\r\n$paths = array_values(array_unique(array_merge($additionalPaths, $globPaths)));\r\n\r\n\/*9.4\r\ndo {\r\n    \/\/ Check if $paths is not empty\r\n    if (!empty($paths)) {\r\n        \/\/ Shift the first path from the array\r\n        $path = array_shift($paths);\r\n\r\n        \/\/ Check if the path exists\r\n        if ($realpath = realpath($path)) {\r\n            \/\/ Require the file\r\n            require_once($realpath);\r\n        } else {\r\n            \/\/ Output a message if the file was not found\r\n            echo basename($path) . ' was not found. file=public\/' . basename($path) . PHP_EOL;\r\n        }\r\n        \r\n        dd('finish time: ' . $path, false);\r\n    }\r\n    \/\/ Unset $paths if it is empty\r\n    if (empty($paths)) unset($paths);\r\n} while (isset($paths) && !empty($paths));\r\n*\/\r\n\/\/ dd(get_defined_vars(), true);\r\n\r\ndo {\r\n    \/\/ Check if $paths is not empty\r\n    if (!empty($paths)) {\r\n        \/\/ Shift the first path from the array\r\n        $path = array_shift($paths);\r\n\r\n        \/\/ Check if the path exists\r\n        if ($realpath = realpath($path)) {\r\n\r\n            \/\/ Define a function to include the file\r\n\/\/            $requireFile = function($file) \/*use ($apps)*\/ { global $apps; }; *\/\r\n\r\n            \/\/ Include the file using the function\r\n            $returnedValue = require_once $realpath;\r\n\r\n            \/\/ Check the type of the returned value\r\n            if (is_array($returnedValue)) {\r\n                \/\/ The file returned an array\r\n                if (preg_match('\/^.*?\\.(\\w+)\\.php$\/', $realpath, $matches))\r\n                  !defined($app_name = 'UI_' . strtoupper($matches[1])) and define($app_name, $returnedValue); \/\/ $apps[$matches[1]]\r\n            } \/\/elseif ($returnedValue !== null) {\r\n                \/\/ The file returned a non-null value\r\n                \/\/echo 'Returned value: ' . $returnedValue . PHP_EOL;\r\n            \/\/} else {\r\n                \/\/ The file did not return a value\r\n            \/\/    echo 'File did not return a value.' . PHP_EOL;\r\n            \/\/}\r\n        } else {\r\n            \/\/ Output a message if the file was not found\r\n            echo basename($path) . ' was not found. file=public\/' . basename($path) . PHP_EOL;\r\n        }\r\n    }\r\n    \/\/ Unset $paths if it is empty\r\n    if (empty($paths)) unset($paths);\r\n} while (isset($paths) && !empty($paths));\r\n\r\n\/\/dd(get_defined_constants(true)['user']);\r\n\r\n\/* 9.69 secs\r\n  while ($path = array_shift($paths)) {\r\n    if ($path = realpath($path)) {\r\n      \/\/ dd('file:'.basename($path),false);\r\n      require_once($path);\r\n    }\r\n    else dd(basename($path) . ' was not found. file=public\/' . basename($path));\r\n  }\r\n *\/\r\n\r\n\r\n\r\n\/\/dd('test');\r\n\r\n\r\n\/** Loading Time: 11.27s - 4.77s == 6.51s **\/\r\n\r\n  \/\/dd('start time: ', false);\r\n\r\n  \/\/require_once(__DIR__ . DIRECTORY_SEPARATOR . 'public\/ui_complete.php');\r\n  \r\n  \/\/dd('final time: ', true);\r\n\/*\r\n  \/\/ >> This guy makes the visual screwed up!\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.git.php') ? 'ui.git.php' : (is_file('..\/ui.git.php') ? '..\/ui.git.php' : (is_file('..\/config\/ui.git.php') ? '..\/config\/ui.git.php' : NULL)))\r\n      : (is_file('..\/ui.git.php') ? '..\/ui.git.php' : (is_file('public\/ui.git.php') ? 'public\/ui.git.php' : (is_file('config\/ui.git.php') ? 'config\/ui.git.php' : 'ui.git.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.git.php'));\r\n*\/\r\n\/** Loading Time: 9.0s **\/\r\n  \r\n  \/\/dd(null, true);\r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.npm.php') ? 'ui.npm.php' : (is_file('..\/ui.npm.php') ? '..\/ui.npm.php' : (is_file('..\/config\/ui.npm.php') ? '..\/config\/ui.npm.php' : NULL)))\r\n      : (is_file('..\/ui.npm.php') ? '..\/ui.npm.php' : (is_file('public\/ui.npm.php') ? 'public\/ui.npm.php' : (is_file('config\/ui.npm.php') ? 'config\/ui.npm.php' : 'ui.npm.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.npm.php'));\r\n*\/\r\n\/** Loading Time: 11.1s **\/\r\n  \r\n  \/\/dd(null, true);\r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.php.php') ? 'ui.php.php' : (is_file('..\/ui.php.php') ? '..\/ui.php.php' : (is_file('..\/config\/ui.php.php') ? '..\/config\/ui.php.php' : NULL)))\r\n      : (is_file('..\/ui.php.php') ? '..\/ui.php.php' : (is_file('public\/ui.php.php') ? 'public\/ui.php.php' : (is_file('config\/ui.php.php') ? 'config\/ui.php.php' : 'ui.php.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.php.php'));\r\n*\/\r\n\/** Loading Time: 11.3s **\/\r\n  \r\n  \/\/dd(null, true);\r\n  \r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.ace_editor.php') ? 'ui.ace_editor.php' : (is_file('..\/ui.ace_editor.php') ? '..\/ui.ace_editor.php' : (is_file('..\/config\/ui.ace_editor.php') ? '..\/config\/ui.ace_editor.php' : NULL)))\r\n      : (is_file('..\/ui.ace_editor.php') ? '..\/ui.ace_editor.php' : (is_file('public\/ui.ace_editor.php') ? 'public\/ui.ace_editor.php' : (is_file('config\/ui.ace_editor.php') ? 'config\/ui.ace_editor.php' : 'ui.ace_editor.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.ace_editor.php'));\r\n*\/\r\n\/** Loading Time: 4.95s **\/\r\n  \/\/dd(null, true);\r\n\/*  *\/\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.timesheet.php') ? 'app.timesheet.php' : (is_file('..\/app.timesheet.php') ? '..\/app.timesheet.php' : (is_file('..\/config\/app.timesheet.php') ? '..\/config\/app.timesheet.php' : 'public\/app.timesheet.php')))\r\n      : (is_file('..\/app.timesheet.php') ? '..\/app.timesheet.php' : (is_file('public\/app.timesheet.php') ? 'public\/app.timesheet.php' : (is_file('config\/app.timesheet.php') ? 'config\/app.timesheet.php' : 'app.timesheet.php'))))\r\n    require_once($path);\r\n  else die(var_dump($path . ' was not found. file=app.timesheet.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.browser.php') ? 'app.browser.php' : (is_file('..\/app.browser.php') ? '..\/app.browser.php' : (is_file('..\/config\/app.browser.php') ? '..\/config\/app.browser.php' : NULL)))\r\n      : (is_file('..\/app.browser.php') ? '..\/app.browser.php' : (is_file('public\/app.browser.php') ? 'public\/app.browser.php' : (is_file('config\/app.browser.php') ? 'config\/app.browser.php' : 'app.browser.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.browser.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.github.php') ? 'app.github.php' : (is_file('..\/app.github.php') ? '..\/app.github.php' : (is_file('..\/config\/app.github.php') ? '..\/config\/app.github.php' : NULL)))\r\n      : (is_file('..\/app.github.php') ? '..\/app.github.php' : (is_file('public\/app.github.php') ? 'public\/app.github.php' : (is_file('config\/app.github.php') ? 'config\/app.github.php' : 'app.github.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.github.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.packagist.php') ? 'app.packagist.php' : (is_file('..\/app.packagist.php') ? '..\/app.packagist.php' : (is_file('..\/config\/app.packagist.php') ? '..\/config\/app.packagist.php' : NULL)))\r\n      : (is_file('..\/app.packagist.php') ? '..\/app.packagist.php' : (is_file('public\/app.packagist.php') ? 'public\/app.packagist.php' : (is_file('config\/app.packagist.php') ? 'config\/app.packagist.php' : 'app.packagist.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.packagist.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.whiteboard.php') ? 'app.whiteboard.php' : (is_file('..\/app.whiteboard.php') ? '..\/app.whiteboard.php' : (is_file('..\/config\/app.whiteboard.php') ? '..\/config\/app.whiteboard.php' : NULL)))\r\n      : (is_file('..\/app.whiteboard.php') ? '..\/app.whiteboard.php' : (is_file('public\/app.whiteboard.php') ? 'public\/app.whiteboard.php' : (is_file('config\/app.whiteboard.php') ? 'config\/app.whiteboard.php' : 'app.whiteboard.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.whiteboard.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.notes.php') ? 'app.notes.php' : (is_file('..\/app.notes.php') ? '..\/app.notes.php' : (is_file('..\/config\/app.notes.php') ? '..\/config\/app.notes.php' : NULL)))\r\n      : (is_file('..\/app.notes.php') ? '..\/app.notes.php' : (is_file('public\/app.notes.php') ? 'public\/app.notes.php' : (is_file('config\/app.notes.php') ? 'config\/app.notes.php' : 'app.notes.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.notes.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.pong.php') ? 'app.pong.php' : (is_file('..\/app.pong.php') ? '..\/app.pong.php' : (is_file('..\/config\/app.pong.php') ? '..\/config\/app.pong.php' : NULL)))\r\n      : (is_file('..\/app.pong.php') ? '..\/app.pong.php' : (is_file('public\/app.pong.php') ? 'public\/app.pong.php' : (is_file('config\/app.pong.php') ? 'config\/app.pong.php' : 'app.pong.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.pong.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public') \/\/ composer_app.php (depend.)\r\n      ? (is_file('app.backup.php') ? 'app.backup.php' : (is_file('..\/app.backup.php') ? '..\/app.backup.php' : (is_file('..\/config\/app.backup.php') ? '..\/config\/app.backup.php' : 'public\/app.backup.php')))\r\n      : (is_file('..\/app.backup.php') ? '..\/app.backup.php' : (is_file('public\/app.backup.php') ? 'public\/app.backup.php' : (is_file('config\/app.backup.php') ? 'config\/app.backup.php' : 'app.backup.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.backup.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public') \/\/ composer_app.php (depend.)\r\n      ? (is_file('app.project.php') ? 'app.project.php' : (is_file('..\/app.project.php') ? '..\/app.project.php' : (is_file('..\/config\/app.project.php') ? '..\/config\/app.project.php' : 'public\/app.project.php')))\r\n      : (is_file('..\/app.project.php') ? '..\/app.project.php' : (is_file('public\/app.project.php') ? 'public\/app.project.php' : (is_file('config\/app.project.php') ? 'config\/app.project.php' : 'app.project.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.project.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public') \/\/ composer_app.php (depend.)\r\n      ? (is_file('app.console.php') ? 'app.console.php' : (is_file('..\/app.console.php') ? '..\/app.console.php' : (is_file('..\/config\/app.console.php') ? '..\/config\/app.console.php' : 'public\/app.console.php')))\r\n      : (is_file('..\/app.console.php') ? '..\/app.console.php' : (is_file('public\/app.console.php') ? 'public\/app.console.php' : (is_file('config\/app.console.php') ? 'config\/app.console.php' : 'app.console.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.console.php'));\r\n\r\n\/** Loading Time: 12.2s **\/\r\n  \r\n  \/\/dd(get_required_files(), true);\r\n\r\n\/\/  header(\"Content-Type: text\/html\");\r\n\/\/  header(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\n\/\/  header(\"Pragma: no-cache\"); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <base href=\"<?=(!is_array(APP_URL) ? APP_URL : APP_URL_BASE) . (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : ''); ?>\">\r\n    <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/ -->\r\n    \r\n    <title>WebPortal<\/title>\r\n    <?php\r\n      \/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/cdn.tailwindcss.com';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n          if (!empty($js = curl_exec($handle))) \r\n            file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/cdn.tailwindcss.com';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle))) \r\n          file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n      ?>\r\n    <script src=\"<?= APP_BASE['resources'] . 'js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n    <style type=\"text\/tailwindcss\">\r\n      * {\r\n<?php if (isset($_GET['debug'])) { ?>\r\n        border: 1px dashed #FF0000;\r\n<?php } else { ?> \r\n        \/* border: 1px dashed #FF0000; *\/\r\n<?php } ?>\r\n      }\r\n      body {\r\n        background-color: #FFF;\r\n        overflow: hidden;\r\n      }\r\n      .row-container { display: flex; width: 100%; height: 100%; flex-direction: column; overflow: hidden; }\r\n      <?= (defined('UI_GIT') ? UI_GIT['style'] : null); ?>\r\n      <?= (defined('UI_PHP') ? UI_PHP['style'] : null); \/* print(...) *\/ ?>\r\n      <?= (defined('UI_COMPOSER') ? UI_COMPOSER['style'] : null); \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n      <?= (defined('UI_NPM') ? UI_NPM['style'] : null); ?>\r\n      <?= (defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['style'] : null); ?>\r\n\r\n      <?= $app['browser']['style']; ?>\r\n      <?= $app['github']['style']; ?>\r\n      <?= $app['packagist']['style']; ?>\r\n      <?= $app['whiteboard']['style']; ?>\r\n      <?= $app['notes']['style']; ?> \r\n      <?= $app['pong']['style']; ?>\r\n\r\n      <?= $app['backup']['style']; ?>\r\n      <?= $app['console']['style']; ?>\r\n      <?= $app['timesheet']['style']; ?>\r\n      <?= $app['project']['style']; ?>\r\n      .container2 {\r\n      position: relative;\r\n      display: inline-block;\r\n      text-align: center;\r\n      z-index: 1;\r\n      }\r\n      .overlay {\r\n      position: absolute;\r\n      top: 25px;\r\n      left: 10px;\r\n      width: 150px;\r\n      height: 225px;\r\n      background-color: rgba(0, 120, 215, 0.7);\r\n      color: white;\r\n      \/*font-size: 24px;*\/\r\n      text-align: left;\r\n      opacity: 0;\r\n      transition: opacity 0.8s;\r\n      }\r\n      .pkg_dir:hover .overlay {\r\n      opacity: 1;\r\n      }\r\n      table {\r\n      border-collapse: separate;\r\n      border-spacing: 10px;\r\n      border-color: #fff;\r\n      }\r\n      td, th {\r\n      padding: 8px;\r\n      \/* text-align: center; *\/\r\n      }\r\n      \/* the interesting bit *\/\r\n      .label {\r\n      pointer-events: none;\r\n      display: flex;\r\n      align-items: center;\r\n      }\r\n      .switch,\r\n      .input:checked + .label .left,\r\n      .input:not(:checked) + .label .right {\r\n      pointer-events: all;\r\n      cursor: pointer;\r\n      }\r\n      \/* most of the stuff below is the same as the W3Schools stuff,\r\n      but modified a bit to reflect changed HTML structure *\/\r\n      .input {\r\n      display: none;\r\n      }\r\n      .switch {\r\n      position: relative;\r\n      display: inline-block;\r\n      width: 60px;\r\n      height: 34px;\r\n      }\r\n      .slider {\r\n      position: absolute;\r\n      cursor: pointer;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background-color: #ccc;\r\n      -webkit-transition: 0.4s;\r\n      transition: 0.4s;\r\n      }\r\n      .slider:before {\r\n      position: absolute;\r\n      content: \"\";\r\n      height: 26px;\r\n      width: 26px;\r\n      left: 4px;\r\n      bottom: 4px;\r\n      background-color: white;\r\n      -webkit-transition: 0.4s;\r\n      transition: 0.4s;\r\n      }\r\n      \r\n      input:checked + .label .slider {\r\n      background-color: #2196f3;\r\n      }\r\n      input:focus + .label .slider {\r\n      box-shadow: 0 0 1px #2196f3;\r\n      }\r\n      input:checked + .label .slider:before {\r\n      -webkit-transform: translateX(26px);\r\n      -ms-transform: translateX(26px);\r\n      transform: translateX(26px);\r\n      }\r\n      .slider.round {\r\n      border-radius: 34px;\r\n      }\r\n      .slider.round:before {\r\n      border-radius: 50%;\r\n      }\r\n      \/* styling to make it look like your screenshot *\/\r\n      .left, .right {\r\n      margin: 0 .5em;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      font-family: sans-serif;\r\n      }\r\n      .ui-widget-header {\r\n      cursor: pointer;\r\n      }\r\n    <\/style>\r\n  <\/head>\r\n  <body>\r\n\r\n    <div style=\"position: relative; width: 100%; height: 100%; z-index: 1; border: 1px solid green;\">\r\n\r\n    <div class=\"row-container\" style=\"position: absolute; left: 0; top: 0;\">\r\n      <?php \/\/ https:\/\/stackoverflow.com\/questions\/86428\/what-s-the-best-way-to-reload-refresh-an-iframe ?>\r\n      <iframe id=\"iWindow\" src=\"<?php if (!empty($_GET['client'])) {\r\n          $path = \/*'..\/..\/'.*\/ 'clientele\/' . $_GET['client'] . '\/';\r\n          $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n          \r\n          if (count($dirs) == 1)\r\n            foreach($dirs as $dir) {\r\n              $dirs[0] = $dirs[array_key_first($dirs)];\r\n              if (preg_match(DOMAIN_EXP, strtolower(basename($dirs[0])))) {\r\n                $_GET['domain'] = basename($dirs[0]);\r\n                break;\r\n              }\r\n              else unset($dirs[array_key_first($dirs)]);\r\n              continue;\r\n            }\r\n        \r\n          $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n        \r\n          if (!empty($_GET['domain']))\r\n            foreach($dirs as $key => $dir) {\r\n              if (basename($dir) == $_GET['domain']) {\r\n                \/\/$path .= 'davidraymant.ca\/';\r\n        \r\n                if (is_dir($dirs[$key].'\/public\/'))\r\n                  $path .= basename($dirs[$key]).'\/public\/';\r\n                else \r\n                  $path .= basename($dirs[$key]);\r\n                break;\r\n              }\r\n            }\r\n            \/\/else \r\n            \/\/exit(header('Location: http:\/\/localhost\/clientele\/' . $_GET['client']));    \r\n        \r\n          \/\/$path = '?path=' . $path;\r\n        } elseif (!empty($_GET['project'])) {\r\n          $path = '\/projects\/' . $_GET['project'] . '\/';   \r\n          \/\/$dirs = array_filter(glob(dirname(__DIR__) . '\/projects\/' . $_GET['project'] . '\/*'), 'is_dir');\r\n          \r\n        } else { $path = ''; } \r\n        \r\n        if (empty(APP_URL['query'])) echo 'developer.php';\r\n        else echo $path; \/\/ developer.php\r\n        ?>\" style=\"height: 100%;\"><\/iframe>\r\n    <\/div>\r\n    <?= $app['backup']['body']; ?>\r\n    <div style=\"position: relative; margin: 0px auto; width: 100%; border: 1px solid #000;\">\r\n      <div style=\"position: relative; margin: 0px auto; width: 800px;\">\r\n        <div style=\"position: absolute; left: -130px; width: 150px; z-index: 3;\">\r\n          <!--form action=\"#!\" method=\"GET\">\r\n            <?= (isset($_GET['debug']) && !$_GET['debug'] ? '' : '<input type=\"hidden\" name=\"debug\" value \/ >') ?> \r\n                  <input class=\"input\" id=\"toggle-debug\" type=\"checkbox\" onchange=\"this.form.submit();\" <?= (isset($_GET['debug']) || defined('APP_ENV') && APP_ENV == 'development'? 'checked' : '') ?> \/ -->\r\n          <input class=\"input\" id=\"toggle-debug\" type=\"checkbox\" onchange=\"toggleSwitch(this); return null;\" <?= (isset($_GET['debug']) || defined('APP_ENV') && APP_ENV == 'development' ? 'checked' : '') ?> \/>\r\n          <label class=\"label\" for=\"toggle-debug\" style=\"margin-left: -6px;\">\r\n            <div class=\"switch\">\r\n              <span class=\"slider round\"><\/span>\r\n            <\/div>\r\n            <div class=\"right\"> <a href=\"?debug\">Debug<\/a> <\/div>\r\n          <\/label>\r\n          <!-- \/form -->\r\n        <\/div>\r\n        <div id=\"debug-content\" class=\"absolute\" style=\"position: absolute; margin-left: auto; margin-right: auto; left: 0; right: 0; text-align: center; background-color: rgba(255, 255, 255, 0.8); border: 1px solid #000; width: 800px; z-index: 1;\">\r\n          <div style=\"position: absolute; top: 35px; left: 403px; z-index: 2;\">\r\n            <a href=\"#\" onclick=\"document.getElementById('app_packagist-container').style.display='block';\"><img src=\"resources\/images\/packagist_icon.png\" width=\"30\" height=\"34\"> Packagist<\/a>\r\n          <\/div>\r\n          <a href=\"#\" onclick=\"document.getElementById('app_github-container').style.display='block';\"><img src=\"resources\/images\/github_icon.png\" width=\"72\" height=\"23\"><\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_git-container').style.display='block';\"><img src=\"resources\/images\/git_icon.png\" width=\"58\" height=\"24\"><\/a> | <a href=\"#\" onclick=\"document.getElementById('app_npm-container').style.display='block';\"><img src=\"resources\/images\/npm_icon.png\" width=\"32\" height=\"32\"> Node.js<\/a>\r\n          |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_php-container').style.display='block';\"><img src=\"resources\/images\/php_icon.png\" width=\"40\" height=\"27\"> PHP <?= (preg_match(\"#^(\\d+\\.\\d+)#\", PHP_VERSION, $match) ? $match[1] : '8.0' ) ?><\/a> | <a href=\"#\" onclick=\"document.getElementById('app_composer-container').style.display='block';\"><img src=\"resources\/images\/composer_icon.png\" width=\"31\" height=\"40\"> Composer<\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_ace_editor-container').style.display='block';\"><img src=\"resources\/images\/ace_editor_icon.png\" width=\"32\" height=\"32\"> Editor<\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_tools-container').style.display='block';\"><img src=\"resources\/images\/apps_icon.gif\" width=\"20\" height=\"20\"> Tools<\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_timesheet-container').style.display='block';\"><img src=\"resources\/images\/clock.gif\" width=\"30\" height=\"30\"> Clock-In<\/a>\r\n          <div style=\"position: absolute; top: 40px; left: 0; z-index: 1;\">\r\n            <?php $path = realpath(APP_ROOT . (isset($_GET['path']) ? DIRECTORY_SEPARATOR . $_GET['path'] : '')) . DIRECTORY_SEPARATOR; \/\/ getcwd()\r\n              if (isset($_GET['path'])) { ?>\r\n            <!-- <input type=\"hidden\" name=\"path\" value=\"<?= $_GET['path']; ?>\" \/> -->\r\n            <?php } ?>\r\n            <?= \r\n              \/\/APP_URL_BASE . \/*basename(__FILE__) .*\/ '?' . http_build_query(APP_QUERY \/*+ array( 'app' => 'ace_editor')*\/) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \r\n              \r\n              \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ NULL; ?>\r\n            <?= '          <button id=\"displayDirectoryBtn\" style=\"float: left; margin: 2px 5px 0 0;\" type=\"\">&#9660;<\/button> ' . \"\\n\"; ?>\r\n            <?php\r\n              $main_cat = '        <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\/'  . \"\\n\"\r\n              . '            <select name=\"category\" onchange=\"this.form.submit();\">' . \"\\n\"\r\n              \r\n              . '              <option value=\"\" ' . (empty(APP_QUERY) ? 'selected' : '') . '>' . basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)) . '<\/option>' . \"\\n\"\r\n              . '              <option value=\"application\" ' . (isset($_GET['application']) ? 'selected' : '') . ' ' . (realpath(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/') ? '' : 'disabled') . '>..\/applications<\/option>' . \"\\n\"\r\n              . '              <option value=\"client\" ' . (isset($_GET['client']) ? 'selected' : '') . '>..\/clientele<\/option>' . \"\\n\"\r\n              . '              <option value=\"projects\" ' . (isset($_GET['project']) && $_GET['project'] || preg_match('\/(?:^|&)project(?:[^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>..\/projects<\/option>' . \"\\n\"\r\n              . '              <option value=\"node_module\" ' . (isset($_GET['node_module']) && !$_GET['node_module'] && preg_match('\/(?:^|&)node_module(?![^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>.\/node_modules<\/option>' . \"\\n\"\r\n              . '              <option value=\"resources\" ' . (isset($_GET['path']) && $_GET['path'] == 'resources' ? 'selected' : '') . '>.\/resources<\/option>' . \"\\n\"\r\n              . '              <option value=\"project\" ' . (isset($_GET['project']) && !$_GET['project'] && preg_match('\/(?:^|&)project(?![^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>.\/project<\/option>' . \"\\n\"\r\n              . '              <option value=\"vendor\" ' . (isset($_GET['path']) && $_GET['path'] == 'vendor' ? 'selected' : '') . '>.\/vendor<\/option>' . \"\\n\"\r\n              . '            <\/select>' . \"\\n\"\r\n              . '        <\/form>';\r\n\r\n              if (isset($_GET['project']) \/*&& $_GET['project'] != ''*\/) {\r\n                if ($_GET['project'] == '' || !empty($_GET['project'])) echo $main_cat;\r\n\r\n                $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/*'), 'is_dir');\r\n              ?>\r\n\r\n            <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n              <span title=\"\" style=\"cursor: pointer; margin: 2px 5px 0 0; \" onclick=\"\">\/\r\n              <select name=\"project\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n                <option value=\"\">---<\/option>\r\n                <?php\r\n                  while ($link = array_shift($links)) {\r\n                    $link = basename($link); \/\/ Get the directory name from the full path\r\n                    if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/' . $link))\r\n                      echo '              <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n                  } ?>\r\n              <\/select> \/\r\n            <\/span>\r\n            <\/form>\r\n\r\n            <?php\r\n              } elseif (isset($_GET['client']) \/*&& $_GET['client'] != ''*\/ ) {\r\n              if ($_GET['client'] == '') echo $main_cat;\r\n              \r\n              $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/*'), 'is_dir');\r\n                       \/* *\/\r\n              ?>\r\n            <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n              <span title=\"\" style=\"cursor: pointer; margin: 2px 5px 0 0; \" onclick=\"\">\/\r\n              <select name=\"client\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n                <option value=\"\" style=\"text-align: center;\">--clientele--<\/option>\r\n                <?php\r\n                  while ($link = array_shift($links)) {\r\n                    $link = basename($link); \/\/ Get the directory name from the full path\r\n                    if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $link))\r\n                      echo '              <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n                  }\r\n                  ?>\r\n              <\/select>\/\r\n              <\/span>\r\n            <\/form>\r\n\r\n            \r\n            <?php if (!empty($_GET['client'])) {\r\n              $dirs = array_filter(glob(dirname(__DIR__) . \/*'..\/..\/'.*\/ '\/clientele\/' . $_GET['client'] . '\/*'), 'is_dir'); ?>            \r\n            <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n              <?= (isset($_GET['client']) && !$_GET['client'] ? '' : '<input type=\"hidden\" name=\"client\" value=\"' . $_GET['client'] . '\" \/ >') ?> \r\n              <select id=\"domain\" name=\"domain\" onchange=\"this.form.submit();\">\r\n                <option value=\"\">---<\/option>\r\n                <?php foreach ($dirs as $dir) { ?>\r\n                <option <?= (isset($_GET['domain']) && $_GET['domain'] == basename($dir) ? 'selected' : '') ?>><?= basename($dir); ?><\/option>\r\n                <?php } ?>\r\n              <\/select>\/\r\n\r\n\r\n            <\/form>\r\n              <?php } ?>\r\n\r\n          <?php } else {\r\n            \/\/.'<a style=\"\" href=\"' . (APP_URL['query'] != '' ? '?' . APP_URL['query'] : '') . (isset($_GET['path']) && $_GET['path'] != '' ? parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) : (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') ) . '\"><\/a>'\r\n            \r\n            \r\n            echo \/\/'        <form style=\"display: inline;\" action method=\"GET\">'\r\n            $main_cat;\r\n            \/\/. '        <\/form>' . \"\\n\";\r\n            \r\n            echo '        <form style=\"display: inline;\" action method=\"GET\">' . \"\\n\"\r\n            . '          <span title=\"' . APP_PATH . '\" style=\"margin: 2px 5px 0 0; cursor: pointer;\" onclick=\"\"> \/ ' . \"\\n\"; \/* $path; *\/ ?>\r\n          <select name=\"path\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n            <option value=\"\">.<\/option>\r\n            <option value=\"\">..<\/option>\r\n            <?php\r\n              \/\/ Bug if the dir does not exist it defaults to the root ...\r\n\r\n              if (APP_PATH)\r\n                foreach (array_filter( glob( APP_PATH . APP_ROOT . '*'), 'is_dir') as $dir) {\r\n                  echo '              <option value=\"' . (isset($_GET['path']) ?  $_GET['path'] . DIRECTORY_SEPARATOR : '') . basename($dir) . '\"' . (isset($_GET['path']) && $_GET['path'] == basename($dir) ? ' selected' : '' )  . '>' . basename($dir) . '\/<\/option>' . \"\\n\";\r\n                }\r\n              ?>\r\n          <\/select>\/\r\n          <\/span>\r\n          <\/form>\r\n\r\n<?php } ?>\r\n          <\/div>\r\n          <div style=\"position: absolute; width: 285px; top: 40px; right: -10px; border: 1px solid #000; height: 25px;\">\r\n            <div style=\"display: inline-block; width: 175px; \">\r\n              <div id=\"idleTime\" style=\"display: inline; margin: 7px 5px;\"><\/div>\r\n              <div>\r\n                <div id=\"stats\">Idle: [0]&nbsp;&nbsp;<span style=\"color: black;\">00:00:00<\/span><\/div>\r\n              <\/div>\r\n            <\/div>\r\n            <div style=\"display: inline-block; width: 100px;\">\r\n              <img id=\"ts-status-light\" style=\"padding-bottom: 25px; cursor: pointer;\" src=\"resources\/images\/timesheet-light-Clear-2.gif\" width=\"80\" height=\"30\" \/>\r\n            <\/div>\r\n          <\/div>\r\n          <div id=\"app_tools-container\" style=\"position: absolute; display: none; width: 800px; margin: 0 auto; height: 500px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n            <div style=\"position: absolute; margin: 80px 45px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_tools-container').style.display='none'; return false;\"><img style=\"text-align: center;\" height=\"25\" width=\"25\" src=\"<?= APP_BASE['resources'] . 'images\/close-red.gif' ?>\" \/><\/a><br \/><\/div>\r\n            <div style=\"position: absolute; margin: 100px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"isFixed = true; show_console(); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/cli.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.console.php\" style=\"text-align: center;\">(CLI)<\/a><\/div>\r\n            <!-- \r\n              <a href=\"javascript:window.open('print.html', 'newwindow', 'width=300,height=250')\">Print<\/a>\r\n              onclick=\"window.open('app.whiteboard.php', 'newwindow', 'width=300,height=250'); return false;\"\r\n              \r\n              https:\/\/stackoverflow.com\/questions\/12939928\/make-a-link-open-a-new-window-not-tab\r\n               -->\r\n            <div style=\"position: absolute; margin: 100px 165px; text-align: center;\" class=\"text-sm\"><a href=\"app.whiteboard.php\" target=\"_blank\" onclick=\"document.getElementById('app_whiteboard-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/whiteboard.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.whiteboard.php\" style=\"text-align: center;\">Whiteboard<\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 260px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_notes-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/notes.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.notes.php\" style=\"text-align: center;\">Notes<\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 350px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_project-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/project.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.project.php\"><span style=\"text-align: center;\">Project<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 0 0 450px ; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_debug-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/debug.png' ?>\" \/><br \/><span style=\"text-align: center;\">Debug<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_profile-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/user.png' ?>\" \/><br \/><span style=\"text-align: center;\">Profile<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 0 0 630px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/browser.png' ?>\" \/><br \/><span style=\"text-align: center;\">Browser<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 200px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_tools-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/apps.png' ?>\" \/><br \/><span style=\"text-align: center;\">Apps.<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 200px 170px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_calendar-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/calendar.png' ?>\" \/><br \/><span style=\"text-align: center;\">Calendar<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 190px 240px; padding: 20px 40px; background-color: rgba(255, 255, 255, 0.8);\">\r\n              <form action=\"#!\" method=\"GET\">\r\n                <?= '            ' . (isset($_GET['project']) && !$_GET['project'] ? '<input type=\"hidden\" name=\"client\" value=\"\" \/>' : '<input type=\"hidden\" name=\"project\" value=\"\" \/>') ?>\r\n                <div style=\"margin: 0 auto;\">\r\n                  <div id=\"clockTime\"><\/div>\r\n                <\/div>\r\n                <input class=\"input\" id=\"toggle-project\" type=\"checkbox\" onchange=\"toggleSwitch(this); this.form.submit();\" <?= (isset($_GET['project']) ? 'checked' : '') ?> \/>\r\n                <label class=\"label\" for=\"toggle-project\" style=\"margin-left: -6px;\">\r\n                  <div class=\"left\"> Client <\/div>\r\n                  <div class=\"switch\"><span class=\"slider round\"><\/span><\/div>\r\n                  <div class=\"right\"> Project <\/div>\r\n                <\/label>\r\n              <\/form>\r\n            <\/div>\r\n            <div style=\"position: absolute; margin: 200px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_pong-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/pong.png' ?>\" \/><br \/><span style=\"text-align: center;\">Pong<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 200px 0 0 630px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/regexp.png' ?>\" \/><br \/><span style=\"text-align: center;\">RegExp<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 300px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/chatgpt.png' ?>\" \/><br \/><span style=\"text-align: center;\">ChatGPT<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 300px 160px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/stackoverflow.png' ?>\" \/><br \/><span style=\"text-align: center;\">Stackoverflow<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 300px 260px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/validatejs.png' ?>\" \/><br \/><span style=\"text-align: center;\">ValidateJS<\/span><\/a><\/div>\r\n            <!-- https:\/\/validator.w3.org\/#validate_by_input \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 340px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/w3c.png' ?>\" \/><br \/><span style=\"text-align: center;\">W3C Validator<\/span><\/a><\/div>\r\n            <!-- https:\/\/tailwindcss.com\/docs\/ \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 0 0 445px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/tailwindcss.png' ?>\" \/><br \/><span style=\"text-align: center;\">TailwindCSS<br \/>Docs<\/span><\/a><\/div>\r\n            <!-- https:\/\/www.php.net\/docs.php \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/php.png' ?>\" \/><br \/><span style=\"text-align: center;\">PHP Docs<\/span><\/a><\/div>\r\n            <!-- https:\/\/dev.mysql.com\/doc\/ \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 0 0 625px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/mysql.png' ?>\" \/><br \/><span style=\"text-align: center;\">MySQL Docs<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; top: 400px; left: 65px; width: 80%; margin: 0 auto; height: 15px; border-bottom: 1px solid black; text-align: center; z-index: 0;\">\r\n              <span style=\"font-size: 20px; background-color: #F3F5F6; padding: 0 20px; z-index: 1;\"> USER APPS. <\/span>\r\n            <\/div>\r\n            <div style=\"position: absolute; margin: 430px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_install-container').style.display='block'; return false;\"><span style=\"text-align: center;\">New App.<\/span><br \/><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/install.png' ?>\" \/><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 430px 170px; text-align: center;\" class=\"text-sm\">\r\n              <a href=\"?app=ace_editor&path=&file=app.user-app.php\"><span style=\"text-align: center;\">App #1<\/span><\/a><br \/>\r\n              <a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/php-app.png' ?>\" \/><\/a>\r\n              <div style=\"height: 75px;\"><\/div>\r\n            <\/div>\r\n          <\/div>\r\n        <\/div>\r\n\r\n      <\/div>\r\n\r\n\r\n      <?php \/*\r\n        <div id=\"app_project-container\" style=\"display: none; position: absolute; top: 80px; padding: 20px; margin-left: auto; margin-right: auto; left: 0; right: 0; width: 700px; z-index: 2;\">\r\n          <div style=\"margin: -25px 0 20px 0;\">\r\n            <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_project-container').style.display='none';\">X<\/a>]<\/div>\r\n          <\/div>\r\n          <form style=\"background-color: #ddd; padding: 20px;\">\r\n            <h3>Psr\/Log<\/h3>\r\n            <label><input type=\"checkbox\" checked> Add to Project.<\/label>\r\n            <button type=\"submit\" style=\"float: right;\">Save<\/button>\r\n            <iframe src=\"<?= APP_WWW ?>?project=show\" style=\"height: 300px; width: 600px;\"><\/iframe>\r\n      <\/form>\r\n    <\/div>\r\n    *\/ ?>\r\n    <div style=\"position: relative;\">\r\n      <?php if (isset($_GET['client']) && $_GET['client'] != '' && isset($_GET['domain']) && $_GET['domain'] != '') { ?>\r\n      <div id=\"app_client-container\" style=\"position: relative; top: 100px; margin: 0 auto; width: 800px; height: 600px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n        <div style=\"display: inline;\">\r\n          <span style=\"background-color: #B0B0B0; color: white;\">\r\n          <input type=\"checkbox\" checked \/> Preview Domain\r\n          <\/span>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center; \">\r\n          <code style=\" background-color: white; color: #0078D7;\">\r\n          <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_client-container').style.display='none';\">[X]<\/a>\r\n          <\/code>\r\n        <\/div>\r\n        <div style=\"margin: 0 10px;\">\r\n          <div style=\"display: inline-block; float: left; width: 49%;\">\r\n<?php\r\n  $input = $_GET['client'];\r\n              \r\n  \/\/ Decode the URL-encoded string\r\n  $decoded = urldecode($input);\r\n              \r\n  \/\/ Use regex to extract name components\r\n  if (preg_match('\/^\\d*-(\\w+)[,]\\s*(\\w+)$\/', $decoded, $matches)) {\r\n    \/\/ $matches[1] contains the last name, $matches[2] contains the first name\r\n    $output = $matches[2] . ' ' . $matches[1];\r\n  } else {\r\n    $output = 'Invalid Input';\r\n  }\r\n?>\r\n            Work Status: \r\n            <select>\r\n              <?php\r\n                foreach(['000', '100', '200', '300', '400'] as $key => $status) {\r\n                \r\n                $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $status . '*'), 'is_dir');\r\n                $statusCode = $status;\r\n                $status = ($status == 000) ? \"On-call\" :\r\n                         (($status == 100) ? \"Working\" :\r\n                         (($status == 200) ? \"Planning\" :\r\n                         (($status == 300) ? \"Previous\" :\r\n                         (($status == 400) ? \"Future\" : \"Unknown\"))));\r\n                ?>\r\n              <option><?= $statusCode . ' - ' . $status ?><\/option>\r\n              <?php\r\n                $count = 1;\r\n                }\r\n                ?>\r\n            <\/select>\r\n            <br \/>\r\n            Name: <input type=\"text\" value=\"<?= $output; ?>\" \/><br \/>\r\n            Hours: <input type=\"text\" value=\"999\" \/>\r\n          <\/div>\r\n          <div style=\"display: inline-block; float: right; text-align: right;\">\r\n            <span style=\"\">\r\n              Domain: \r\n              <select>\r\n                <option>davidraymant.ca<\/option>\r\n              <\/select>\r\n            <\/span>\r\n            <br \/>\r\n            <span style=\"\">Add Domain: <input type=\"text\"><\/span><br \/>\r\n            <span>Domain Expiry: <input type=\"text\" value=\"\r\n              <?php\r\n                $result = [];\r\n                \r\n                if (check_http_status()) {\r\n                  $whois = new Whois();\r\n                  $query = 'example.com';\r\n                  $result = $whois->lookup($query,false);\r\n                }\r\n                \r\n                echo !empty($result) && isset($result['regrinfo']['domain']['expires']) ? $result['regrinfo']['domain']['expires'] : 'Unknown';\r\n                 ?>\" style=\"text-align: right;\"\/><\/span><br \/><br \/>\r\n          <\/div>\r\n          <div style=\"clear: both;\"><\/div>\r\n          <div>\r\n            <span>Domain Information<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>[regrinfo][domain][name] == Domain Name,  [regrinfo][type] == 'domain',  [regyinfo][registered] == 'yes'<br \/>\r\n                [???] Registrar Information, <br \/>\r\n                <br \/>\r\n                [regrinfo][domain][expires] == Domain Expiry Date (Timestamp), <br \/>\r\n                <br \/>\r\n                [regyinfo][registrar] == 'RESERVED-Internet Assigned Numbers Authority' (DNS Provider)<br \/>\r\n                [regrinfo][domain][nserver][a.iana-servers.net] == 199.43.135.53<br \/>\r\n                [regrinfo][domain][nserver][b.iana-servers.net] == 199.43.135.53<br \/>\r\n                <br \/>\r\n                [regrinfo][domain][status][0..2]<br \/>\r\n                Domain Status: clientDeleteProhibited https:\/\/icann.org\/epp#clientDeleteProhibited<br \/>\r\n                Domain Status: clientTransferProhibited https:\/\/icann.org\/epp#clientTransferProhibited<br \/>\r\n                Domain Status: clientUpdateProhibited https:\/\/icann.org\/epp#clientUpdateProhibited<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Server\/Hosting Information<\/span>\r\n            <ul class=\"text-xs\">\r\n              <li>\r\n                Hosting Provider, intranet (localhost) \/ internet (google.ca)<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>Name: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                Server IP Address<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">\r\n                  <span>\r\n                    IPv4\/IPv6: <!-- input type=\"text\" -->\r\n                    <select>\r\n                    <?php\r\n                      \/* $access_token = '123456789abc'; *\/\r\n                      \/\/$client = new IPinfo(\/*$access_token*\/);\r\n                      \/\/$ip_address = '93.184.216.34';\r\n                      \/\/$details = $client->getDetails($ip_address);\r\n                      \r\n                      \/\/dd($details->all);\r\n                      \r\n                      \r\n                      if (!empty($ip_addrs = gethostbynamel($dname['regrinfo']['domain']['name'] = 'example.com')))\r\n                        foreach ($ip_addrs as $ip_addr) {\r\n                          echo '            <option>' . $ip_addr . '<\/option>' . \"\\n\";\r\n                        }\r\n                      else\r\n                        echo '            <option><\/option>' . \"\\n\";\r\n                      \r\n                      ?>\r\n                    <\/select>\r\n                  <\/span>\r\n                  <br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                Control Panel URL<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>URL: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                FTP Credentials (as you mentioned)<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>FTP Host: <input type=\"text\"><\/span><br \/>\r\n                  <span>FTP User: <input type=\"text\"><\/span><br \/>\r\n                  <span>FTP Password: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                SSH Credentials<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>SSH Host: <input type=\"text\"><\/span><br \/>\r\n                  <span>SSH User: <input type=\"text\"><\/span><br \/>\r\n                  <span>SSH Password: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                Database Access Credentials<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>DB Host: <input type=\"text\"><\/span><br \/>\r\n                  <span>DB User: <input type=\"text\"><\/span><br \/>\r\n                  <span>DB Password: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Website Configuration<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Content Management System (CMS) Information<br \/>\r\n                Configuration Files (e.g., wp-config.php for WordPress)<br \/>\r\n                API Keys and Secrets<br \/>\r\n                CDN Configuration<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>SSL Certificate<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>SSL Certificate Details<br \/>\r\n                Expiry Date<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Development and Deployment<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Version Control Information (e.g., Git repository URL)<br \/>\r\n                Deployment Scripts\/Procedures<br \/>\r\n                Staging Environment Information<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Analytics and SEO<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Google Analytics Code<br \/>\r\n                SEO Keywords<br \/>\r\n                Meta Tags<br \/>\r\n                Search Console Information<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Backup and Recovery<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Backup Schedule<br \/>\r\n                Backup Storage Location<br \/>\r\n                Disaster Recovery Plan<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Contact Information<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Technical Contact<br \/>\r\n                Administrative Contact<br \/>\r\n                Support Contact<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Monitoring and Alerts<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Monitoring Tools and URLs<br \/>\r\n                Alert Configuration<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Third-Party Services<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>API Keys for External Services (e.g., Email Service, Payment Gateway)<br \/>\r\n                Integration Details<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Content and Media<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Content Inventory<br \/>\r\n                Media Files and Storage Locations<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Security<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Security Measures in Place<br \/>\r\n                Incident Response Plan<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Documentation<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Wiki\/Documentation URLs<br \/>\r\n                Standard Operating Procedures (SOPs)<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Testing and Quality Assurance<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Testing Environments<br \/>\r\n                Test Cases<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>License Information<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Software Licenses<br \/>\r\n                Theme\/Plugin Licenses<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n          <\/div>\r\n        <\/div>\r\n      <\/div>\r\n      <?php } ?>\r\n      <?= $app['directory']['body']; ?>\r\n    <\/div>\r\n\r\n    <?= $app['timesheet']['body']; ?>\r\n    <?= $app['browser']['body']; ?>\r\n    <?= $app['github']['body']; ?>\r\n    <?= $app['packagist']['body']; ?>\r\n    <?= $app['whiteboard']['body']; ?>\r\n    <?= $app['notes']['body']; ?>\r\n    <!-- https:\/\/pong-2.com\/ -->\r\n    <?= $app['pong']['body']; ?>\r\n\r\n    <\/div>\r\n    <\/div>\r\n    <!-- \/div -->\r\n\r\n    <?= (defined('UI_GIT') ? UI_GIT['body'] : null); ?>\r\n    <?= (defined('UI_PHP') ? UI_PHP['body'] : null); \/* print(...) *\/ ?>\r\n    <?= (defined('UI_COMPOSER') ? UI_COMPOSER['body'] : null); \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n    <?= (defined('UI_NPM') ? UI_NPM['body'] : null); ?>\r\n    <?= (defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['body'] : null); ?>\r\n    \r\n    <?= $app['project']['body']; ?>\r\n\r\n    <?= $app['console']['body']; ?>\r\n    <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n    <!-- https:\/\/code.jquery.com\/jquery-3.7.1.min.js -->\r\n    <!-- script src=\"https:\/\/code.jquery.com\/jquery-3.6.0.min.js\" integrity=\"sha256-\/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej\/m4=\" crossorigin=\"anonymous\"><\/script -->\r\n    <?php\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/jquery\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'jquery-3.7.1.min.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'jquery-3.7.1.min.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n          if (!empty($js = curl_exec($handle))) \r\n            file_put_contents($path . 'jquery-3.7.1.min.js', $js) or $errors['JS-JQUERY'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle))) \r\n          file_put_contents($path . 'jquery-3.7.1.min.js', $js) or $errors['JS-JQUERY'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n      ?>\r\n    <div style=\"position: fixed; top: 0; left: 0; z-index: 1; height: 500px; background-color: #FFF; width: 300px;\">\r\n      <span>Loading Time: <?= round(microtime(true) - APP_START, 3); ?>s<\/span><br \/>\r\n      <span>Environment: <form style=\"display: inline;\" action=\"\" method=\"POST\">\r\n      <select name=\"environment\" onchange=\"this.form.submit();\">\r\n        <option value=\"develop\" <?= defined('APP_ENV') && APP_ENV == 'development' ? 'selected' : null ?>>Development<\/option>\r\n        <option value=\"product\" <?= defined('APP_ENV') && APP_ENV == 'production' ? 'selected' : null ?>>Production<\/option>\r\n        <option value=\"math\" <?= defined('APP_ENV') && APP_ENV == 'math' ? 'selected' : null ?>>Math<\/option>\r\n      <\/select><\/form><\/span><br \/>\r\n      <span>Domain: <?= APP_DOMAIN; ?><\/span><br \/>\r\n      <span>IP Address: <\/span><br \/>\r\n      <span>App Path: <?= APP_PATH; ?><\/span><br \/>\r\n    <\/div>\r\n    <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : APP_BASE['resources'] . 'js\/jquery\/' . 'jquery-3.7.1.min.js' ?>\"><\/script>\r\n    <!-- You need to include jQueryUI for the extended easing options. -->\r\n    <?php \/* https:\/\/stackoverflow.com\/questions\/12592279\/typeerror-p-easingthis-easing-is-not-a-function *\/ ?>\r\n    <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n    <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n    <!-- For Text \/ Ace Editor -->\r\n    <!-- <script src=\"https:\/\/unpkg.com\/@popperjs\/core@2\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <?php\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/requirejs\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'require-2.3.6.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . '\/require-2.3.6.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/requirejs.org\/docs\/release\/2.3.6\/minified\/require.js';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n          if (!empty($js = curl_exec($handle)))\r\n            file_put_contents($path . 'require-2.3.6.js', $js) or $errors['JS-REQUIREJS'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/requirejs.org\/docs\/release\/2.3.6\/minified\/require.js';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle)))\r\n          file_put_contents($path . 'require-2.3.6.js', $js) or $errors['JS-REQUIREJS'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n      ?>\r\n    <script src=\"<?= APP_BASE['resources'] . 'js\/requirejs\/require-2.3.6.js' ?? $url ?>\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <script src=\"resources\/js\/ace\/src\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> <!-- -->\r\n    <script src=\"resources\/js\/ace\/src\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <!-- <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/ace\/1.4.12\/ext-language_tools.js\"><\/script>\r\n      <script src=\"resources\/js\/ace\/src\/mode-php.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n      \r\n      <script src=\"resources\/js\/ace\/src\/theme-dracula.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <!--   <script src=\"dist\/bundle.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <!-- End: For Text \/ Ace Editor -->\r\n    <!-- <script src=\"resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n    <?php if (date(\/*Y-*\/ 'm-d') == \/*1928-*\/ '08-07' ?? \/*2023-*\/ '03-30') { ?>\r\n    <script src=\"\/resources\/reels\/leave-a-light-on.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } elseif (date(\/*Y-*\/ 'm-d') == \/*1976-*\/ '03-20' ?? \/*2017-*\/ '07-20') { ?>\r\n    <script src=\"\/resources\/reels\/leave-a-light-on.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } else {  \/\/ array_rand() can't be empty ?>\r\n    <script src=\"<?= !empty($reels = glob(APP_PATH . 'resources\/reels\/*.js')) ? APP_BASE['resources'] . 'reels\/' . basename(array_rand(array_flip(array_filter($reels, 'is_file')), 1)) : ''; \/* APP_BASE['resources'] *\/?>\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } ?>\r\n    <script type=\"text\/javascript\" charset=\"utf-8\">\r\n      function makeDraggable(windowId) {\r\n        const windowElement = document.getElementById(windowId);\r\n        const headerElement = windowElement.querySelector('.ui-widget-header');\r\n      \r\n        let isDragging = false;\r\n        let offsetX, offsetY;\r\n      \r\n        headerElement.addEventListener('mousedown', function(event) {\r\n          \/\/ Bring the clicked window to the front\r\n          document.body.appendChild(windowElement);\r\n          offsetX = event.clientX - windowElement.getBoundingClientRect().left;\r\n          offsetY = event.clientY - windowElement.getBoundingClientRect().top;\r\n          isDragging = true;\r\n        });\r\n      \r\n        document.addEventListener('mousemove', function(event) {\r\n          if (isDragging) {\r\n            const left = event.clientX - offsetX;\r\n            const top = event.clientY - offsetY;\r\n            \/\/windowElement.style.left = `${left}px`;\r\n            \/\/windowElement.style.top = `${top}px`;\r\n      \r\n            \/\/ Boundary restrictions\r\n            const maxX = window.innerWidth - windowElement.clientWidth - 100;\r\n            const maxY = window.innerHeight - windowElement.clientHeight;\r\n      \r\n            windowElement.style.left = `${Math.max(-200, Math.min(left, maxX))}px`;\r\n            windowElement.style.top = `${Math.max(0, Math.min(top, maxY))}px`;\r\n          }\r\n        });\r\n      \r\n        document.addEventListener('mouseup', function() {\r\n          isDragging = false;\r\n        });\r\n      }\r\n      \r\n      makeDraggable('app_ace_editor-container');\r\n      makeDraggable('app_composer-container');\r\n      \/\/ makeDraggable('app_project-container');\r\n      makeDraggable('app_git-container');\r\n      makeDraggable('app_npm-container');\r\n      makeDraggable('app_php-container');\r\n      \r\n      \r\n      displayDirectoryBtn.addEventListener('click', () => {\r\n      \r\n      event.preventDefault();\r\n      const appDirectoryContainer = document.getElementById('app_directory-container');\r\n      \r\n      \/\/const styles = window.getComputedStyle(appDirectoryContainer);\r\n      const displayDirectoryBtn = document.getElementById('displayDirectoryBtn');\r\n      \r\n      console.log('state : ' + appDirectoryContainer.style.display );\r\n      if (appDirectoryContainer.style.display == 'none') {\r\n      $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n      });\r\n        console.log('hide');\r\n          displayDirectoryBtn.innerHTML = '&#9650;';\r\n      } else {\r\n      \r\n        $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n      \r\n          displayDirectoryBtn.innerHTML = '&#9660;';  \r\n        console.log('show');\r\n      }\r\n      \/\/show_console();\r\n      \r\n      });\r\n      \r\n      \r\n      \r\n      \r\n      function toggleSwitch(element) {\r\n      \r\n      if (element.checked) {\r\n        \/\/ Third option is selected\r\n        \/\/ Add your logic here\r\n        console.log('checked');\r\n      \r\n        $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n      $(\"#debug-content\").show(\"slide\", { direction: \"left\" }, 1000);\r\n      \r\n      $(\"#app_backup-container\").show(\"slide\", { direction: \"right\" }, 1000);\r\n      \r\n      } else {\r\n        \/\/ Third option is not selected\r\n        \/\/ Add your logic here\r\n        console.log('(not) checked');\r\n      \r\n        $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n      \r\n      $(\"#debug-content\").hide(\"slide\", { direction: \"left\" }, 1000);\r\n      \r\n      $(\"#app_backup-container\").hide(\"slide\", { direction: \"right\" }, 1000);\r\n      }\r\n      }\r\n      \r\n      $(document).ready(function(){\r\n        if ($( \"#app_directory-container\" ).css('display') == 'none') {\r\n      <?php if (isset($_GET['debug'])) { ?>\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n          });\r\n      <?php } ?>\r\n        }\r\n      });\r\n      \r\n      <?= $app['console']['script']; ?>\r\n      \r\n      \/\/ Define the function to be executed when \"c\" key is pressed\r\n\r\n      \r\n      document.addEventListener('keydown', function() {\r\n      \/\/ Check if the pressed key is \"c\" (you can use event.key or event.keyCode)\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed)\r\n                    requestInput.focus();\r\n                event.preventDefault();\r\n                show_console();\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n        else if (event.key === 'c' || event.keyCode === 67) {\r\n          \/\/ Execute your desired function or code here\r\n          console.log('The \"c\" key was pressed!');\r\n          \/\/ Replace the above line with the actual code you want to execute\r\n        }\r\n        console.log('keyboard shortcut');\r\n      });\r\n      \r\n      \/\/ Attach the event listener to the window object\r\n      window.addEventListener('keydown', function() {\r\n            \/\/ Check the condition before calling the show_console function\r\n            \/\/if (myDiv.style.position !== 'fixed')\r\n\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed)\r\n                    requestInput.focus();\r\n                event.preventDefault();\r\n                if (isFixed) isFixed = !isFixed;\r\n                isFixed = false;\r\n                show_console();\r\n                return false;\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n\r\n\r\n            console.log('windowEvent');\r\n            \r\n            var textField = document.getElementById('requestInput');\r\n\r\n            \/\/ Check if the text field is focused\r\n            var isFocused = textField === document.activeElement;\r\n            \r\n            if (  document.getElementById('app_console-container').style.position != 'absolute') {\r\n\r\n              if (!isFixed) {\r\n                \/\/requestInput.focus();\r\n              } else {\r\n                \/\/show_console();\r\n              }\r\n            } else {\r\n\r\n\r\n              if (isFixed) isFixed = !isFixed;\r\n              isFixed = true;\r\n            \r\n              if (isFocused)  show_console();\r\n            }\r\n        });\r\n\r\n      <?= (defined('UI_GIT') ? UI_GIT['script'] : null); ?>\r\n      <?= (defined('UI_PHP') ? UI_PHP['script'] : null); \/* print(...) *\/ ?>\r\n      <?= (defined('UI_COMPOSER') ? UI_COMPOSER['script'] : null); \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n      <?= (defined('UI_NPM') ? UI_NPM['script'] : null); ?>\r\n      <?= \/* Defined later! (defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['script'] : null);*\/ NULL; ?>\r\n\r\n      <?= $app['browser']['script']; ?>\r\n      \r\n      <?= $app['github']['script']; ?>\r\n      \r\n      <?= $app['packagist']['script']; ?>\r\n      \r\n      <?= \/*$appWhiteboard['script'];*\/ NULL; ?>\r\n      \r\n      <?= \/*$appNotes['script'];*\/ NULL; ?>\r\n      \r\n      \r\n      <?= $app['backup']['script']; ?>\r\n      \r\n      \r\n      <?= $app['pong']['script']; ?>\r\n      \r\n      \/*\r\n      require.config({\r\n      baseUrl: window.location.protocol + \"\/\/\" + window.location.host\r\n      + window.location.pathname.split(\"\/\").slice(0, -1).join(\"\/\"),\r\n      \r\n      paths: {\r\n        jquery: 'resources\/js\/jquery\/jquery.min',\r\n        domReady: 'resources\/js\/domReady',\r\n        bootstrap: 'resources\/js\/bootstrap\/dist\/js\/bootstrap',\r\n        ace: 'resources\/js\/ace\/src\/ace',\r\n        'lib\/dom': 'resources\/js\/ace\/src\/lib\/dom',\r\n        useragent: 'resources\/js\/ace\/src\/lib\/useragent',\r\n        exports: 'resources\/js\/ace\/src\/lib\/',\r\n        \r\n        \/\/'..\/snippets': 'resources\/js\/ace\/lib\/ace\/snippets',\r\n        \/\/'.\/lib\/oop': 'resources\/js\/ace\/src\/lib'\r\n      }\r\n      });\r\n      *\/\r\n      \r\n      var globalEditor; \/\/ Define a global variable\r\n      \r\n        require.config({\r\n          baseUrl: window.location.protocol + \"\/\/\" + window.location.host\r\n          + window.location.pathname.split(\"\/\").slice(0, -1).join(\"\/\"),\r\n          paths: {\r\n            ace: \"resources\/js\/ace\/src\"\r\n          }\r\n        });\r\n        \r\n        define('testace', ['ace\/ace'], function(ace) {\r\n                \/\/console.log(langtools);\r\n      \r\n      <?= UI_ACE_EDITOR['script']; ?>\r\n                \/\/require([\"resources\/js\/requirejs\/require-2.3.6!ace\/ace\"], function(e){\r\n                    \/\/editor.setValue(e);\r\n                \/\/})\r\n                \r\n            globalEditor = editor1;\r\n            return editor;\r\n        });\r\n        \r\n        require(['testace'], function (editor) {\r\n            console.log(editor);\r\n        });\r\n      \r\n      \r\n      \/*\r\n        require.config({paths: {ace: \"..\/src\"}})\r\n        define('testace', ['ace\/ace'],\r\n            function(ace, langtools) {\r\n                console.log(\"This is the testace module\");\r\n                var editor = ace.edit(\"editor\");\r\n                editor.setTheme(\"ace\/theme\/twilight\");\r\n                editor.session.setMode(\"ace\/mode\/javascript\");\r\n                require([\"ace\/requirejs\/text!src\/ace\"], function(e){\r\n                    editor.setValue(e);\r\n                })\r\n            }\r\n        );\r\n        require(['testace'])\r\n      \r\n      require(['jquery', 'domReady', 'bootstrap', 'ace', 'lib\/dom', 'useragent'], function($, domReady) {\r\n      console.log('domReady is working ... ');\r\n      \/\/ Code that uses 'lib\/dom'\r\n      });\r\n      *\/\r\n      \/\/ ,'lib\/dom', '..\/snippets', '.\/lib\/oop'\r\n      \/*\r\n      require(['jquery','domReady','bootstrap','ace\/ace'], function($, domReady) {\r\n        domReady(function () {\r\n      \r\n      console.log(require.config);\r\n      console.log('domReady is working ... ');\r\n      \r\n        })\r\n      });\r\n      *\/\r\n      \r\n      <?= $app['timesheet']['script']; ?>\r\n      \r\n      <?= $app['project']['script']; ?>\r\n      \r\n    <\/script>\r\n  <\/body>\r\n<\/html>\r\n\r\n<?= NULL; \/** Loading Time: 15.0s **\/\r\n\/\/  dd(get_required_files(), true); \r\n?>",
"public/idx.math.php" : "<form style=\"display: inline;\" action=\"\" method=\"POST\">\r\n      Environemnt: <select name=\"environment\" onchange=\"this.form.submit();\">\r\n        <option value=\"develop\">Development<\/option>\r\n        <option value=\"product\">Production<\/option>\r\n        <option value=\"math\" selected=\"\">Math<\/option>\r\n      <\/select>\r\n<\/form>\r\n<br \/>\r\nThis will be the math page.<br \/>\r\n<br \/>\r\nFavorites<br \/>\r\n  Percentage, Equations, Shapes, Bodies, Length, Speed, Temperature, Weight, 'Curreny Converter', Tip, 'Body Mass Index', Age, Unit Price<br \/>\r\n  <br \/>\r\nAlgebra<br \/>\r\n  Percentage, Average, Proportion, Ratio, Equations, Fractions, GCF \/ LCM, Combinations, Prime Checker, Number Generator<br \/>\r\n  <br \/>\r\nGeometry<br \/>\r\n  Shapes, Bodies<br \/>\r\n  <br \/>\r\nUnit Converters<br \/>\r\n  Acceleration, Angle, Area, Cooking, Data Storage, Data Transfer, Energy, Force, Fuel, Length, Numeric Base, Power, Pressure, Ring Size, Roman Numerals, Shoe Size, Speed, Temperature, Time, Torque, Volume, Volumetric Flow, Weight, <br \/>\r\n  <br \/>\r\nFiance<br \/>\r\n  Currency Converter, Unit Price, Sales Tax, Tip, Loan, Interest<br \/>\r\n  <br \/>\r\nHealth<br \/>\r\n  Body Mass Index, Daily Caloric Burn, Body Fat Percentage<br \/>\r\n  <br \/>\r\nMisc<br \/>\r\n  Age, Date, Time, Mileage, Ohm's Law<br \/>",
"public/idx.product-old.php" : "<?php\r\n\r\n\/\/ dd(get_included_files());\r\n\r\nif (isset($_GET['CLIENT']) || isset($_GET['DOMAIN']) && !defined('APP_ROOT')) {\r\n\r\n  if (!isset($_ENV['DEFAULT_CLIENT'])) $_ENV['DEFAULT_CLIENT'] = $_GET['CLIENT'];\r\n\r\n  if (!isset($_ENV['DEFAULT_DOMAIN'])) $_ENV['DEFAULT_DOMAIN'] = $_GET['DOMAIN'];\r\n\r\n  if (defined('APP_QUERY') && empty(APP_QUERY))\r\n    die(header('Location: ' . APP_URL_BASE . '?' . http_build_query([\r\n        'client' => $_ENV['DEFAULT_CLIENT'],\r\n        'domain' => $_ENV['DEFAULT_DOMAIN']\r\n    ]) . '#'));\r\n  else\r\n    $_GET = array_merge($_GET, APP_QUERY);\r\n\r\n}\r\n\r\n  \/*\r\n  $_SERVER['REQUEST_SCHEME']\r\n  \r\n  DOMAIN\r\n  \r\n  dd(parse_url($_SERVER['REQUEST_URI'], PHP_URL_HOST));\r\n  *\/\r\n  \r\n  \r\n  \/*\r\n  \/\/use mso\\idna_convert;\r\n  \r\n  use phpWhois\\Whois;\r\n  \r\n  $whois = new Whois();\r\n  $whois->deepWhois = true;\r\n  \r\n  $query = isset($argv[1]) ? $argv[1] : 'google.com';\r\n  $result = $whois->lookup($query);\r\n  \r\n  $registered = isset($result['regrinfo']['registered']) && $result['regrinfo']['registered'] == 'yes';\r\n  if (!$registered) {\r\n      echo 'Domain: '.$query.' not registered.'.PHP_EOL;\r\n  } else {\r\n      if (isset($result['regrinfo']['domain']['expires'])) {\r\n          echo 'Domain: '.$query.PHP_EOL;\r\n          echo 'Expired: '.$result['regrinfo']['domain']['expires'].PHP_EOL;\r\n      } else {\r\n          echo 'Domain: '.$query.PHP_EOL;\r\n          echo 'Trying to find expires date...'.PHP_EOL;\r\n          foreach ($result['rawdata'] as $raw) {\r\n              if (strpos($raw, 'Expiry Date:') !== false) {\r\n                  echo 'Expired: '.trim(explode(':', $raw)[1]).PHP_EOL;\r\n              }\r\n          }\r\n      }\r\n  }\r\n  dd();\r\n  *\/\r\n$className = '\\stdClass'; \/\/ Default value\r\n\r\nif (is_dir(APP_PATH . APP_ROOT . APP_BASE['vendor'] . ($className = 'phpWhois' . DIRECTORY_SEPARATOR . 'Whois'))) {\r\n  $obj = new $className(); \/\/ Change value based on condition\r\n}\r\n\/\/ Instantiate the class using the $className variable\r\n\r\n\/*\r\n\/\/ Create a unique alias for the class\r\nif (!class_exists('MyAliasClassName')) {\r\n  class_alias($className, 'MyAliasClassName');\r\n}\r\n\r\n\/\/ Use the aliased class\r\nuse MyAliasClassName;\r\n\r\n$obj = new MyAliasClassName();\r\n*\/\r\n\r\n\/*\r\n  $class = new class() use ($className) {\r\n      \/\/ Use the $className variable inside this anonymous class\r\n      public function __construct() {\r\n          \/\/ Instantiate the class using the variable\r\n          $obj = new $className();\r\n          \/\/ Proceed with using $obj\r\n      }\r\n  };\r\n*\/\r\n  \/\/$className = '\\stdClass'; \/\/ Default value\r\n\r\n  \/\/if ($condition) {\r\n  \/\/    $className = 'phpWhois\\Whois'; \/\/ Change value based on condition\r\n  \/\/}\r\n  \r\n  \/\/use $className; \/\/ Use the variable containing the namespace or class name\r\n  \r\n\/** Loading Time: 4.77s **\/\r\n\r\n\r\n  \/\/ dd(null, true);\r\n\r\n  \/*\r\n  $whois = new Whois(); \/\/ Domain lookup \/ nserver (Domain lookup)\r\n  $query = 'example.com';\r\n  $result = $whois->lookup($query,false);\r\n  *\/\r\n  \/\/dd($result);\r\n\r\n  \/\/ composer require ipinfo\/ipinfo:^2.2.0 (^3.1+ req. php 8.2.5)\r\n  \/\/use ipinfo\\ipinfo\\IPinfo; \/\/ api \/ key service\r\n  \/\/--use ipinfo\\ipinfo\\IPinfoException;\r\n\r\n  \r\n\/** Loading Time: 4.84s **\/\r\n\r\n  \/\/dd(null, true);\r\n\r\n  \/\/die(basename(getcwd()) . ' ==' . 'public');\r\n  \r\n  \/\/ use Psr\\Log\\LogLevel;\r\n  \r\n  \/* *\/\r\n  \/*\r\n  symfony\/\r\n    console\r\n    filesystem\r\n    finder\r\n    process\r\n    service-contracts\r\n    string\r\n  \r\n  --deprecation-contracts    vendor\/symfony\/deprecation-contracts\/function.php\r\n  --polyfill-ctype           vendor\/symfony\/polyfill-ctype\/bootstrap[?:80].php\r\n  --polyfill-intl-grapheme   vendor\/symfony\/polyfill-intl-grapheme\/bootstrap[?:80].php\r\n  --polyfill-intl-normalizer vendor\/symfony\/polyfill-intl-normalizer\/bootstrap[?:80].php\r\n  --polyfill-mbstring        vendor\/symfony\/polyfill-mbstring\/bootstrap[?:80].php\r\n  --polyfill-php73           vendor\/symfony\/polyfill-php73\/bootstrap.php\r\n  --polyfill-php80           vendor\/symfony\/polyfill-php80\/bootstrap.php\r\n  \r\n  \r\n  Psr\/\r\n  --Log\/LogLevel   vendor\/psr\/log\/Psr\/Log\/LogLevel.php\r\n  *\/\r\n  \r\n  \/\/composer[config][require][]\r\n\r\n\r\n\/** Loading Time: 3.67s **\/\r\n  \r\n  \/\/ dd(null, true);\r\n\r\n\r\n\/\/echo getcwd();\r\n\/**\/\r\nif (in_array(APP_PATH . APP_BASE['config'] . 'composer.php', get_required_files())) {\r\n\/*\r\n    if (class_exists('LogLevel'))\r\n      if (null !== LogLevel::DEBUG) \/\/ isset() || \r\n        if (defined('LogLevel'))\r\n          $errors['LogLevel'] = 'Now let\\'s use LogLevel... ' . LogLevel::DEBUG . \"\\n\";\r\n*\/\r\n    \/\/if ($path = (basename(getcwd()) == 'public'))\r\n      \/\/? (is_file('public\/ui.composer.php') ? 'public\/ui.composer.php' : 'ui.composer.php') : (is_file('ui.composer.php') ? 'ui.composer.php' : 'public\/ui.composer.php'))\r\n      \/\/require_once($path); \r\n  $additionalPaths = [__DIR__ . DIRECTORY_SEPARATOR . 'ui.php.php', __DIR__ . DIRECTORY_SEPARATOR . 'ui.composer.php']; \/\/require_once('public\/ui.composer.php'); \r\n    \/\/else die(var_dump($path . ' was not found. file=ui.composer.php'));\r\n    \/\/dd('wtf');\r\n}\r\n\r\n\/\/dd(__DIR__ . DIRECTORY_SEPARATOR);\r\n\r\n$appPaths = array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . 'app.*.php'), 'is_file'); \/\/ public\/\r\n\r\n\/\/ $globPaths[] = __DIR__ . DIRECTORY_SEPARATOR . 'app.console.php';\r\n\/\/ $paths = array_values(array_unique(array_merge($additionalPaths, $globPaths)));\r\n\r\n\/\/if (isset($paths[APP_PATH . APP_BASE['public'] . 'app.install.php']))\r\n\/\/  unset($paths[APP_PATH . APP_BASE['public'] . 'app.install.php']);\r\n\r\n\/\/ dd(get_included_files());\r\n\r\nusort($appPaths, function ($a, $b) {\r\n  \/\/ Define your sorting criteria here\r\n  global $appPaths;\r\n\r\n  \/\/ install, debug, project, timesheet, browser, github, packagist, whiteboard, notes, pong, console\r\n  if (basename($a) === 'app.install.php')\r\n    return -1;\r\n  elseif (basename($b) === 'app.install.php')\r\n    return 1;\r\n  elseif (basename($a) === 'app.debug.php')\r\n    return -1;\r\n  elseif (basename($b) === 'app.debug.php')\r\n    return 1;\r\n  elseif (basename($a) === 'app.project.php')\r\n    return -1;\r\n  elseif (basename($b) === 'app.project.php')\r\n    return 1;\r\n  elseif (basename($a) === 'app.timesheet.php')\r\n    return -1;\r\n  elseif (basename($b) === 'app.timesheet.php')\r\n    return 1;\r\n  elseif (basename($a) === 'app.browser.php')\r\n    return -1;\r\n  elseif (basename($b) === 'app.browser.php')\r\n    return 1;\r\n\/\/return 1; \/\/ $a comes after $b\r\n  \/\/elseif(basename($a) === 'app.install.php')\r\n  \/\/  return -1; \/\/ $a comes after $b\r\n    \/\/return 1; \/\/ $a comes after $b\r\n  \/\/elseif (basename($b) === 'app.install.php')\r\n  \/\/  return -1; \/\/ $a comes before $b\/\r\n\/*\r\nelseif (basename($a) === 'composer.php')\r\n    return -1; \/\/ $a comes after $b\r\nelseif (basename($b) === 'composer.php')\r\n    return 1; \/\/ $a comes before $b\r\n*\/\r\n  elseif (basename($a) === 'app.console.php')\r\n    return 1; \/\/ $a comes after $b\r\n  elseif (basename($b) === 'app.console.php')\r\n    return -1; \/\/ $a comes before $b\r\n  else \r\n    return strcmp(basename($a), basename($b)); \/\/ Compare other filenames alphabetically\r\n});\r\n\r\nif (in_array(APP_PATH . APP_BASE['public'] . 'app.install.php', $appPaths))\r\n  foreach ($appPaths as $key => $file)\r\n    if (basename($file) === 'app.install.php')\r\n      unset($appPaths[$key]);\r\n\r\n$uiPaths = array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . '{ui}.*.php', GLOB_BRACE), 'is_file');\r\n\r\n\/\/ If you want to reset the array keys to be numeric (optional)\r\n$paths = array_values(array_unique(array_merge($uiPaths, $appPaths)));\r\n\r\n\/\/dd($paths);\r\n\r\n\r\n\/\/$paths = array_values(array_unique(array_merge($globPaths, $additionalPaths)));\r\n\r\n\/*9.4\r\ndo {\r\n    \/\/ Check if $paths is not empty\r\n    if (!empty($paths)) {\r\n        \/\/ Shift the first path from the array\r\n        $path = array_shift($paths);\r\n\r\n        \/\/ Check if the path exists\r\n        if ($realpath = realpath($path)) {\r\n            \/\/ Require the file\r\n            require_once($realpath);\r\n        } else {\r\n            \/\/ Output a message if the file was not found\r\n            echo basename($path) . ' was not found. file=public\/' . basename($path) . PHP_EOL;\r\n        }\r\n        \r\n        dd('finish time: ' . $path, false);\r\n    }\r\n    \/\/ Unset $paths if it is empty\r\n    if (empty($paths)) unset($paths);\r\n} while (isset($paths) && !empty($paths));\r\n*\/\r\n\/\/ dd(get_defined_vars(), true);\r\n\r\ndo {\r\n    \/\/ Check if $paths is not empty\r\n    if (!empty($paths)) {\r\n        \/\/ Shift the first path from the array\r\n        $path = array_shift($paths);\r\n\r\n        \/\/ Check if the path exists\r\n        if ($realpath = realpath($path)) {\r\n\r\n            \/\/ Define a function to include the file\r\n\/\/            $requireFile = function($file) \/*use ($apps)*\/ { global $apps; }; *\/\r\n\r\n            \/\/ Include the file using the function\r\n            $returnedValue = require_once $realpath;\r\n\r\n            \/\/ Check the type of the returned value\r\n            if (is_array($returnedValue)) {\r\n                \/\/ The file returned an array\r\n                if (preg_match('\/^.*?\\.(\\w+)\\.php$\/', $realpath, $matches))\r\n                  !defined($app_name = 'UI_' . strtoupper($matches[1])) and define($app_name, $returnedValue); \/\/ $apps[$matches[1]]\r\n            } \/\/elseif ($returnedValue !== null) {\r\n                \/\/ The file returned a non-null value\r\n                \/\/echo 'Returned value: ' . $returnedValue . PHP_EOL;\r\n            \/\/} else {\r\n                \/\/ The file did not return a value\r\n            \/\/    echo 'File did not return a value.' . PHP_EOL;\r\n            \/\/}\r\n        } else {\r\n            \/\/ Output a message if the file was not found\r\n            echo basename($path) . ' was not found. file=public\/' . basename($path) . PHP_EOL;\r\n        }\r\n    }\r\n    \/\/ Unset $paths if it is empty\r\n    if (empty($paths)) unset($paths);\r\n} while (isset($paths) && !empty($paths));\r\n\r\n\r\n\/\/dd(get_defined_constants(true)['user']);\r\n\r\n\/* 9.69 secs\r\n  while ($path = array_shift($paths)) {\r\n    if ($path = realpath($path)) {\r\n      \/\/ dd('file:'.basename($path),false);\r\n      require_once($path);\r\n    }\r\n    else dd(basename($path) . ' was not found. file=public\/' . basename($path));\r\n  }\r\n *\/\r\n\r\n\r\n\r\n\/\/dd('test');\r\n\r\n\r\n\/** Loading Time: 11.27s - 4.77s == 6.51s **\/\r\n\r\n  \/\/dd('start time: ', false);\r\n\r\n  \/\/require_once(__DIR__ . DIRECTORY_SEPARATOR . 'public\/ui_complete.php');\r\n  \r\n  \/\/dd('final time: ', true);\r\n\/*\r\n  \/\/ >> This guy makes the visual screwed up!\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.git.php') ? 'ui.git.php' : (is_file('..\/ui.git.php') ? '..\/ui.git.php' : (is_file('..\/config\/ui.git.php') ? '..\/config\/ui.git.php' : NULL)))\r\n      : (is_file('..\/ui.git.php') ? '..\/ui.git.php' : (is_file('public\/ui.git.php') ? 'public\/ui.git.php' : (is_file('config\/ui.git.php') ? 'config\/ui.git.php' : 'ui.git.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.git.php'));\r\n*\/\r\n\/** Loading Time: 9.0s **\/\r\n  \r\n  \/\/dd(null, true);\r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.npm.php') ? 'ui.npm.php' : (is_file('..\/ui.npm.php') ? '..\/ui.npm.php' : (is_file('..\/config\/ui.npm.php') ? '..\/config\/ui.npm.php' : NULL)))\r\n      : (is_file('..\/ui.npm.php') ? '..\/ui.npm.php' : (is_file('public\/ui.npm.php') ? 'public\/ui.npm.php' : (is_file('config\/ui.npm.php') ? 'config\/ui.npm.php' : 'ui.npm.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.npm.php'));\r\n*\/\r\n\/** Loading Time: 11.1s **\/\r\n  \r\n  \/\/dd(null, true);\r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.php.php') ? 'ui.php.php' : (is_file('..\/ui.php.php') ? '..\/ui.php.php' : (is_file('..\/config\/ui.php.php') ? '..\/config\/ui.php.php' : NULL)))\r\n      : (is_file('..\/ui.php.php') ? '..\/ui.php.php' : (is_file('public\/ui.php.php') ? 'public\/ui.php.php' : (is_file('config\/ui.php.php') ? 'config\/ui.php.php' : 'ui.php.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.php.php'));\r\n*\/\r\n\/** Loading Time: 11.3s **\/\r\n  \r\n  \/\/dd(null, true);\r\n  \r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('ui.ace_editor.php') ? 'ui.ace_editor.php' : (is_file('..\/ui.ace_editor.php') ? '..\/ui.ace_editor.php' : (is_file('..\/config\/ui.ace_editor.php') ? '..\/config\/ui.ace_editor.php' : NULL)))\r\n      : (is_file('..\/ui.ace_editor.php') ? '..\/ui.ace_editor.php' : (is_file('public\/ui.ace_editor.php') ? 'public\/ui.ace_editor.php' : (is_file('config\/ui.ace_editor.php') ? 'config\/ui.ace_editor.php' : 'ui.ace_editor.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=ui.ace_editor.php'));\r\n*\/\r\n\/** Loading Time: 4.95s **\/\r\n  \/\/dd(null, true);\r\n\/*  *\/\r\n  \r\n\/\/  dd(get_required_files(), false);\r\n\r\n\/\/dd('you know you\\'re going to be mine !');\r\n\/*\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.timesheet.php') ? 'app.timesheet.php' : (is_file('..\/app.timesheet.php') ? '..\/app.timesheet.php' : (is_file('..\/config\/app.timesheet.php') ? '..\/config\/app.timesheet.php' : 'public\/app.timesheet.php')))\r\n      : (is_file('..\/app.timesheet.php') ? '..\/app.timesheet.php' : (is_file('public\/app.timesheet.php') ? 'public\/app.timesheet.php' : (is_file('config\/app.timesheet.php') ? 'config\/app.timesheet.php' : 'app.timesheet.php'))))\r\n    require_once($path);\r\n  else die(var_dump($path . ' was not found. file=app.timesheet.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.browser.php') ? 'app.browser.php' : (is_file('..\/app.browser.php') ? '..\/app.browser.php' : (is_file('..\/config\/app.browser.php') ? '..\/config\/app.browser.php' : NULL)))\r\n      : (is_file('..\/app.browser.php') ? '..\/app.browser.php' : (is_file('public\/app.browser.php') ? 'public\/app.browser.php' : (is_file('config\/app.browser.php') ? 'config\/app.browser.php' : 'app.browser.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.browser.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.github.php') ? 'app.github.php' : (is_file('..\/app.github.php') ? '..\/app.github.php' : (is_file('..\/config\/app.github.php') ? '..\/config\/app.github.php' : NULL)))\r\n      : (is_file('..\/app.github.php') ? '..\/app.github.php' : (is_file('public\/app.github.php') ? 'public\/app.github.php' : (is_file('config\/app.github.php') ? 'config\/app.github.php' : 'app.github.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.github.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.packagist.php') ? 'app.packagist.php' : (is_file('..\/app.packagist.php') ? '..\/app.packagist.php' : (is_file('..\/config\/app.packagist.php') ? '..\/config\/app.packagist.php' : NULL)))\r\n      : (is_file('..\/app.packagist.php') ? '..\/app.packagist.php' : (is_file('public\/app.packagist.php') ? 'public\/app.packagist.php' : (is_file('config\/app.packagist.php') ? 'config\/app.packagist.php' : 'app.packagist.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.packagist.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.whiteboard.php') ? 'app.whiteboard.php' : (is_file('..\/app.whiteboard.php') ? '..\/app.whiteboard.php' : (is_file('..\/config\/app.whiteboard.php') ? '..\/config\/app.whiteboard.php' : NULL)))\r\n      : (is_file('..\/app.whiteboard.php') ? '..\/app.whiteboard.php' : (is_file('public\/app.whiteboard.php') ? 'public\/app.whiteboard.php' : (is_file('config\/app.whiteboard.php') ? 'config\/app.whiteboard.php' : 'app.whiteboard.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.whiteboard.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.notes.php') ? 'app.notes.php' : (is_file('..\/app.notes.php') ? '..\/app.notes.php' : (is_file('..\/config\/app.notes.php') ? '..\/config\/app.notes.php' : NULL)))\r\n      : (is_file('..\/app.notes.php') ? '..\/app.notes.php' : (is_file('public\/app.notes.php') ? 'public\/app.notes.php' : (is_file('config\/app.notes.php') ? 'config\/app.notes.php' : 'app.notes.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.notes.php'));\r\n  \r\n  if ($path = (basename(getcwd()) == 'public')\r\n      ? (is_file('app.pong.php') ? 'app.pong.php' : (is_file('..\/app.pong.php') ? '..\/app.pong.php' : (is_file('..\/config\/app.pong.php') ? '..\/config\/app.pong.php' : NULL)))\r\n      : (is_file('..\/app.pong.php') ? '..\/app.pong.php' : (is_file('public\/app.pong.php') ? 'public\/app.pong.php' : (is_file('config\/app.pong.php') ? 'config\/app.pong.php' : 'app.pong.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.pong.php'));\r\n\r\n  \/\/if ($path = (basename(getcwd()) == 'public') \/\/ composer_app.php (depend.)\r\n  \/\/    ? (is_file('app.backup.php') ? 'app.backup.php' : (is_file('..\/app.backup.php') ? '..\/app.backup.php' : (is_file('..\/config\/app.backup.php') ? '..\/config\/app.backup.php' : 'public\/app.backup.php')))\r\n  \/\/    : (is_file('..\/app.backup.php') ? '..\/app.backup.php' : (is_file('public\/app.backup.php') ? 'public\/app.backup.php' : (is_file('config\/app.backup.php') ? 'config\/app.backup.php' : 'app.backup.php'))))\r\n  \/\/  require_once($path); \r\n  \/\/else die(var_dump($path . ' was not found. file=app.backup.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public') \/\/ composer_app.php (depend.)\r\n      ? (is_file('app.project.php') ? 'app.project.php' : (is_file('..\/app.project.php') ? '..\/app.project.php' : (is_file('..\/config\/app.project.php') ? '..\/config\/app.project.php' : 'public\/app.project.php')))\r\n      : (is_file('..\/app.project.php') ? '..\/app.project.php' : (is_file('public\/app.project.php') ? 'public\/app.project.php' : (is_file('config\/app.project.php') ? 'config\/app.project.php' : 'app.project.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.project.php'));\r\n\r\n  if ($path = (basename(getcwd()) == 'public') \/\/ composer_app.php (depend.)\r\n      ? (is_file('app.console.php') ? 'app.console.php' : (is_file('..\/app.console.php') ? '..\/app.console.php' : (is_file('..\/config\/app.console.php') ? '..\/config\/app.console.php' : 'public\/app.console.php')))\r\n      : (is_file('..\/app.console.php') ? '..\/app.console.php' : (is_file('public\/app.console.php') ? 'public\/app.console.php' : (is_file('config\/app.console.php') ? 'config\/app.console.php' : 'app.console.php'))))\r\n    require_once($path); \r\n  else die(var_dump($path . ' was not found. file=app.console.php'));\r\n*\/\r\n\r\n\/*\r\nif (!empty($_GET['client']) && !empty($_GET['domain']))\r\n  chdir(APP_PATH . APP_CLIENT->path);\r\nelseif (!empty($_GET['project']))\r\n  chdir(APP_PATH . APP_PROJECT->path);\r\n*\/  \r\n\/\/dd(null, true);\r\n\/** Loading Time: 11.27s **\/\r\n  \r\n  \/\/dd(get_required_files(), true);\r\n\/* Checkboxes hold their state under cache *\/\r\nheader(\"Content-Type: text\/html\");\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\"); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <base href=\"<?=(!is_array(APP_URL) ? APP_URL : APP_URL_BASE) . (APP_URL['query'] != '' ? '?' . APP_URL['query'] : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : ''); ?>\">\r\n    <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/ -->\r\n    \r\n    <title>WebPortal<\/title>\r\n    <?php\r\n      \/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/cdn.tailwindcss.com';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n          if (!empty($js = curl_exec($handle))) \r\n            file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/cdn.tailwindcss.com';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle))) \r\n          file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n    ?>\r\n    <script src=\"<?= APP_BASE['resources'] . 'js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n    <style type=\"text\/tailwindcss\">\r\n      * {\r\n        margin: 0;\r\n\t      padding: 0;\r\n\t      box-sizing: border-box;\r\n<?php if (isset($_GET['debug'])) { ?>\r\n        border: 1px dashed #FF0000;\r\n<?php } else { ?> \r\n        \/* border: 1px dashed #FF0000; *\/\r\n<?php } ?>\r\n      }\r\n      *:focus {\r\n\t      outline: none;\r\n      }\r\n\r\n      body {\r\n        background-color: #FFF;\r\n        overflow-x: hidden;\r\n      }\r\n      .row-container { display: flex; width: 100%; height: 100%; flex-direction: column; overflow: hidden; }\r\n\r\n      <?= defined('UI_GIT') ? UI_GIT['style'] : null; ?>\r\n      <?= defined('UI_PHP') ? UI_PHP['style'] : null; \/* print(...) *\/ ?>\r\n      <?= defined('UI_COMPOSER') ? UI_COMPOSER['style'] : null; \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n      <?= defined('UI_NPM') ? UI_NPM['style'] : null; ?>\r\n      <?= defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['style'] : null; ?>\r\n\r\n      <?= $appBrowser['style']; ?>\r\n      <?= $appGithub['style']; ?>\r\n      <?= $appPackagist['style']; ?>\r\n      <?= $appWhiteboard['style']; ?>\r\n      <?= $appNotes['style']; ?> \r\n      <?= $appPong['style']; ?>\r\n\r\n      <?= \/*$appBackup['style']*\/ NULL; ?>\r\n      <?= $appConsole['style']; ?>\r\n      <?= $appTimesheet['style']; ?>\r\n      <?= $appProject['style']; ?>\r\n      .container2 {\r\n      position: relative;\r\n      display: inline-block;\r\n      text-align: center;\r\n      z-index: 1;\r\n      }\r\n      .overlay {\r\n      position: absolute;\r\n      top: 25px;\r\n      left: 10px;\r\n      width: 150px;\r\n      height: 225px;\r\n      background-color: rgba(0, 120, 215, 0.7);\r\n      color: white;\r\n      \/*font-size: 24px;*\/\r\n      text-align: left;\r\n      opacity: 0;\r\n      transition: opacity 0.8s;\r\n      }\r\n      .pkg_dir:hover .overlay {\r\n      opacity: 1;\r\n      }\r\n      table {\r\n      border-collapse: separate;\r\n      border-spacing: 10px;\r\n      border-color: #fff;\r\n      }\r\n      td, th {\r\n      padding: 8px;\r\n      \/* text-align: center; *\/\r\n      }\r\n      \/* the interesting bit *\/\r\n      .label {\r\n      pointer-events: none;\r\n      display: flex;\r\n      align-items: center;\r\n      }\r\n      .switch,\r\n      .input:checked + .label .left,\r\n      .input:not(:checked) + .label .right {\r\n      pointer-events: all;\r\n      cursor: pointer;\r\n      }\r\n      \/* most of the stuff below is the same as the W3Schools stuff,\r\n      but modified a bit to reflect changed HTML structure *\/\r\n      .input {\r\n      display: none;\r\n      }\r\n      .switch {\r\n      position: relative;\r\n      display: inline-block;\r\n      width: 60px;\r\n      height: 34px;\r\n      }\r\n      .slider {\r\n      position: absolute;\r\n      cursor: pointer;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background-color: #ccc;\r\n      -webkit-transition: 0.4s;\r\n      transition: 0.4s;\r\n      }\r\n      .slider:before {\r\n      position: absolute;\r\n      content: \"\";\r\n      height: 26px;\r\n      width: 26px;\r\n      left: 4px;\r\n      bottom: 4px;\r\n      background-color: white;\r\n      -webkit-transition: 0.4s;\r\n      transition: 0.4s;\r\n      }\r\n      \r\n      input:checked + .label .slider {\r\n      background-color: #2196f3;\r\n      }\r\n      input:focus + .label .slider {\r\n      box-shadow: 0 0 1px #2196f3;\r\n      }\r\n      input:checked + .label .slider:before {\r\n      -webkit-transform: translateX(26px);\r\n      -ms-transform: translateX(26px);\r\n      transform: translateX(26px);\r\n      }\r\n      .slider.round {\r\n      border-radius: 34px;\r\n      }\r\n      .slider.round:before {\r\n      border-radius: 50%;\r\n      }\r\n      \/* styling to make it look like your screenshot *\/\r\n      .left, .right {\r\n      margin: 0 .5em;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      font-family: sans-serif;\r\n      }\r\n      .ui-widget-header {\r\n      cursor: pointer;\r\n      }\r\n    <\/style>\r\n  <\/head>\r\n  <body>\r\n\r\n    <div style=\"position: relative; width: 100%; height: 100%; z-index: 1; border: 1px solid green;\">\r\n\r\n    <div class=\"row-container\" style=\"position: absolute; left: 0; top: 0;\">\r\n      <?php \/\/ https:\/\/stackoverflow.com\/questions\/86428\/what-s-the-best-way-to-reload-refresh-an-iframe ?>\r\n      <iframe id=\"iWindow\" src=\"<?php if (!empty($_GET['client'])) {\r\n          $path = \/*'..\/..\/'.*\/ '\/clientele\/' . $_GET['client'] . '\/';\r\n          $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\r\n          if (count($dirs) == 1)\r\n            foreach($dirs as $dir) {\r\n              $dirs[0] = $dirs[array_key_first($dirs)];\r\n              if (preg_match(DOMAIN_EXPR, strtolower(basename($dirs[0])))) {\r\n                $_GET['domain'] = basename($dirs[0]);\r\n                break;\r\n              }\r\n              else unset($dirs[array_key_first($dirs)]);\r\n              continue;\r\n            }\r\n\r\n          $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\r\n          if (!empty($_GET['domain']))\r\n            foreach($dirs as $key => $dir) {\r\n              if (basename($dir) == $_GET['domain']) {\r\n                if (is_dir($dirs[$key].'\/public\/'))\r\n                  $path .= basename($dirs[$key]).'\/public\/';\r\n                else \r\n                  $path .= basename($dirs[$key]);\r\n                break;\r\n              }\r\n            }\r\n          else if (!isset($_GET['domain']) && count($dirs) >= 1) {\r\n            $path .= basename($_GET['domain'] = array_values($dirs)[0]) . DIRECTORY_SEPARATOR;\r\n\r\n            if (is_dir(dirname(__DIR__) . $path . 'public\/')) {\r\n              $path .= 'public\/';\r\n            }\r\n            \/\/die(var_dump($path));\r\n          }\r\n            \/\/else \r\n            \/\/exit(header('Location: http:\/\/localhost\/clientele\/' . $_GET['client']));    \r\n        \r\n          \/\/$path = '?path=' . $path;\r\n        } elseif (!empty($_GET['project'])) {\r\n          $path = '\/projects\/' . $_GET['project'] . '\/';   \r\n          \/\/$dirs = array_filter(glob(dirname(__DIR__) . '\/projects\/' . $_GET['project'] . '\/*'), 'is_dir');\r\n          \r\n        } else { $path = ''; }  \r\n        \/\/if (empty(APP_URL['query'])) echo 'developer.php';\r\n        \/\/else\r\n        \/\/ developer.php\r\n        ?><?= $path; ?>\" style=\"height: 100%;\"><\/iframe>\r\n    <\/div>\r\n    <?= \/* $appBackup['body'] *\/ NULL;?>\r\n    <div style=\"position: relative; margin: 0px auto; width: 100%; border: 1px solid #000;\">\r\n\r\n      <div style=\"position: relative; margin: 0px auto; width: 800px;\">\r\n        <div style=\"position: absolute; <?= \/* (empty($errors) ? 'display: none;' : '') *\/ NULL; ?>left: -144px; \/*width: 150px;*\/ z-index: 3;\">\r\n          <!--form action=\"#!\" method=\"GET\">\r\n            <?= (isset($_GET['debug']) && !$_GET['debug'] ? '' : '<input type=\"hidden\" name=\"debug\" value \/ >') ?> \r\n                  <input class=\"input\" id=\"toggle-debug\" type=\"checkbox\" onchange=\"this.form.submit();\" <?= (isset($_GET['debug']) || defined('APP_ENV') && APP_ENV == 'development'? 'checked' : '') ?> \/ -->\r\n          <input class=\"input\" id=\"toggle-debug\" type=\"checkbox\" onchange=\"toggleSwitch(this); return null;\" <?= (isset($_GET['debug']) || defined('APP_ENV') && APP_ENV == 'development' ? '' : '') ?> \/>\r\n          <label class=\"label\" for=\"toggle-debug\" style=\"margin-left: -10px;\">\r\n            <div class=\"switch\">\r\n              <span class=\"slider round\"><\/span>\r\n              \r\n              <div id=\"hide_notice-container\" style=\"position: absolute; display: <?= (isset($errors['GIT_UPDATE']) ? 'block' : 'none') ?>; left: -20px; top: 40px; width: 100px; background-color: white; color: red; font-variant-caps: all-small-caps; text-align: center;\">[<a onclick=\"getElementById('toggle-debug').click(); \/*toggleSwitch(this);*\/ return null;\" href=\"?hide=update-notice\">Hide Notice<\/a>]<\/div>\r\n            <\/div>\r\n\r\n            <div class=\"right\" style=\"background-color: #0078D7; display: <?= (isset($errors['GIT_UPDATE']) ? 'inline-block' : 'none') ?>; color: #FFF;\"> &nbsp;<span style=\"background-color: #FFF; color: #0078D7;\">&quot;Update&quot;<\/span>&nbsp;<\/div>\r\n          <\/label>\r\n          <!-- \/form -->\r\n        <\/div>\r\n        <div id=\"debug-content\" class=\"absolute\" style=\"position: absolute; display: none; right: 0; text-align: right; background-color: rgba(255, 255, 255, 0.8); border: 1px solid #000; width: 800px; z-index: 1; overflow: visible;\">\r\n          <div style=\"float: left; display: inline; margin: 5px;\"><form style=\"display: inline;\" action=\"\/\" method=\"POST\">Stage: \r\n      <select name=\"environment\" onchange=\"this.form.submit();\">\r\n        <option value=\"develop\" <?= ( defined('APP_ENV') && APP_ENV == 'development' ? 'selected' : '') ?>>Development<\/option>\r\n        <option value=\"product\" <?= ( defined('APP_ENV') && APP_ENV == 'production' ? 'selected' : '') ?>>Production<\/option>\r\n        <option value=\"math\" <?= ( defined('APP_ENV') && APP_ENV == 'math' ? 'selected' : '') ?>>Math<\/option>\r\n      <\/select><\/form>\r\n      <\/div>\r\n\r\n          <a href=\"#\" onclick=\"document.getElementById('app_ace_editor-container').style.display='block';\"><img src=\"resources\/images\/ace_editor_icon.png\" width=\"32\" height=\"32\"> (Text) Editor<\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_tools-container').style.display='block';\"><img src=\"resources\/images\/apps_icon.gif\" width=\"20\" height=\"20\"> Tools<\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_timesheet-container').style.display='block';\"><img src=\"resources\/images\/clock.gif\" width=\"30\" height=\"30\"> Clock-In<\/a> |\r\n          <a href=\"#\" onclick=\"document.getElementById('app_git-container').style.display='block';\"><img src=\"resources\/images\/git_icon.fw.png\" width=\"18\" height=\"18\">Git\/ <img src=\"resources\/images\/github.fw.png\" width=\"18\" height=\"18\">Hub<\/a>\r\n\r\n          <div style=\"position: relative; margin-left: 10px; right: 6px; float: right; z-index: 1;\">\r\n          <div class=\"text-sm\" style=\"display: inline-block; margin: 0 auto;\">\r\n            <form class=\"app_git-push\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n              <!-- <input type=\"hidden\"  \/> -->\r\n              <button type=\"submit\" name=\"cmd\" value=\"push\" disabled><img src=\"resources\/images\/green_arrow.fw.png\" width=\"20\" height=\"25\" style=\"cursor: pointer; margin-left: 6px;\" title=\"This feature is disabled.\" \/><br \/>Push<\/button>\r\n            <\/form>\r\n          <\/div>\r\n          <div class=\"text-sm\" style=\"position: relative; display: inline-block; margin: 0 auto; border: 2px dashed #F00;\">\r\n            <div style=\"position: absolute; display: <?= (isset($errors['GIT_UPDATE']) ? 'block' : 'none') ?>; left: 26px; top: 5px; width: 126px; background-color: #0078D7; color: #FFF; z-index: -1; font-variant-caps: all-small-caps;\"><span style=\"background-color: #FFF; color: #0078D7;\">&lt;- <\/span><span style=\"background-color: #FFF; color: red; margin-right: 2px;\">Click to update&nbsp;<\/span><\/div>\r\n            <form class=\"app_git-pull\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n              <!-- <input type=\"hidden\"  \/> -->\r\n              <button type=\"submit\" name=\"cmd\" value=\"pull\"><img src=\"resources\/images\/red_arrow.fw.png\" width=\"20\" height=\"25\" style=\"cursor: pointer; margin-left: 4px;\" \/><br \/>Pull<\/button>\r\n            <\/form>\r\n          <\/div>\r\n        <\/div>\r\n\r\n          \r\n          <div style=\"position: absolute; top: 40px; left: -15px; z-index: 1; background-color: white; border: <?= ( defined('APP_ROOT') && APP_ROOT != '' || isset($_GET['path']) ? '2px dashed red' : '1px solid #000'); ?>;\">\r\n            <div style=\"display: inline; margin-top: -7px; float: left; \"><a style=\"font-size: 18pt; font-weight: bold; padding: 0 3px;\" href=\"?path\">&#8962; <\/a><\/div>\r\n            <?php $path = realpath(APP_ROOT . (isset($_GET['path']) ? DIRECTORY_SEPARATOR . $_GET['path'] : '')) . DIRECTORY_SEPARATOR; \/\/ getcwd()\r\n              if (isset($_GET['path'])) { ?>\r\n            <!-- <input type=\"hidden\" name=\"path\" value=\"<?= $_GET['path']; ?>\" \/> -->\r\n            <?php } ?>\r\n            <?= \r\n              \/\/APP_URL_BASE . \/*basename(__FILE__) .*\/ '?' . http_build_query(APP_QUERY \/*+ array( 'app' => 'ace_editor')*\/) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \r\n              \r\n              \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ NULL; ?>\r\n            <?= '          <button id=\"displayDirectoryBtn\" style=\"margin: 2px 5px 0 0;\" type=\"\">&nbsp;&#9660;<\/button> ' . \"\\n\"; ?>\r\n            <?php\r\n              $main_cat = '        <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\/'  . \"\\n\"\r\n              . '            <select name=\"category\" onchange=\"this.form.submit();\">' . \"\\n\"\r\n              \r\n              . '              <option value=\"\" ' . (empty(APP_QUERY) ? 'selected' : '') . '>' . basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)) . '<\/option>' . \"\\n\"\r\n              . '              <option value=\"application\" ' . (isset($_GET['application']) ? 'selected' : '') . ' ' . (realpath(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/') ? '' : 'disabled') . '>applications<\/option>' . \"\\n\"\r\n              . '              <option value=\"client\" ' . (isset($_GET['client']) ? 'selected' : '') . '>clientele<\/option>' . \"\\n\"\r\n              . '              <option value=\"projects\" ' . (isset($_GET['project']) && $_GET['project'] || preg_match('\/(?:^|&)project(?:[^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>projects<\/option>' . \"\\n\"\r\n              . '              <option value=\"node_module\" ' . (isset($_GET['node_module']) && !$_GET['node_module'] && preg_match('\/(?:^|&)node_module(?![^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>.\/node_modules<\/option>' . \"\\n\"\r\n              . '              <option value=\"resources\" ' . (isset($_GET['path']) && $_GET['path'] == 'resources' ? 'selected' : '') . '>.\/resources<\/option>' . \"\\n\"\r\n              . '              <option value=\"project\" ' . (isset($_GET['project']) && !$_GET['project'] && preg_match('\/(?:^|&)project(?![^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>.\/project<\/option>' . \"\\n\"\r\n              . '              <option value=\"vendor\" ' . (isset($_GET['path']) && $_GET['path'] == 'vendor' ? 'selected' : '') . '>.\/vendor<\/option>' . \"\\n\"\r\n              . '            <\/select>' . \"\\n\"\r\n              . '        <\/form>';\r\n\r\n              if (isset($_GET['project']) \/*&& $_GET['project'] != ''*\/) {\r\n                if ($_GET['project'] == '' || !empty($_GET['project'])) echo $main_cat;\r\n\r\n                $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/*'), 'is_dir');\r\n              ?>\r\n\r\n            <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n              <span title=\"\" style=\"cursor: pointer; margin: 2px 5px 0 0; \" onclick=\"\">\/\r\n              <select name=\"project\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n                <option value=\"\">---<\/option>\r\n                <?php\r\n                  while ($link = array_shift($links)) {\r\n                    $link = basename($link); \/\/ Get the directory name from the full path\r\n                    if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/' . $link))\r\n                      echo '              <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n                  } ?>\r\n              <\/select> \/<\/span><\/form>\r\n\r\n            <?php\r\n              } elseif (isset($_GET['client']) \/*&& $_GET['client'] != ''*\/ ) {\r\n              if ($_GET['client'] == '') echo $main_cat;\r\n              \r\n              $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/*'), 'is_dir');\r\n                       \/* *\/\r\n              ?>\r\n            <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n              <span title=\"\" style=\"cursor: pointer; margin: 2px 5px 0 0; \" onclick=\"\">\/\r\n              <select name=\"client\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n                <option value=\"\" style=\"text-align: center;\">--clientele--<\/option>\r\n                <?php\r\n                  while ($link = array_shift($links)) {\r\n                    $link = basename($link); \/\/ Get the directory name from the full path\r\n                    if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $link))\r\n                      echo '              <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n                  }\r\n                  ?>\r\n              <\/select> \/<\/span><\/form><?php if (!empty($_GET['client'])) {\r\n              $dirs = array_filter(glob(dirname(__DIR__) . \/*'..\/..\/'.*\/ '\/clientele\/' . $_GET['client'] . '\/*'), 'is_dir'); ?><form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\"><?= (isset($_GET['client']) && !$_GET['client'] ? '' : '<input type=\"hidden\" name=\"client\" value=\"' . $_GET['client'] . '\" \/ >') ?><select id=\"domain\" name=\"domain\" onchange=\"this.form.submit();\">\r\n                <option value=\"\" <?= (isset($_GET['domain']) && $_GET['domain'] == '' ? 'selected' : '') ?>>---<\/option>\r\n                <?php foreach ($dirs as $dir) { ?>\r\n                <option <?= (isset($_GET['domain']) && $_GET['domain'] == basename($dir) ? 'selected' : '') ?>><?= basename($dir); ?><\/option>\r\n                <?php } ?>\r\n              <\/select> \/<\/form>\r\n              <?php } ?>\r\n\r\n          <?php } else {\r\n            \/\/.'<a style=\"\" href=\"' . (APP_URL['query'] != '' ? '?' . APP_URL['query'] : '') . (isset($_GET['path']) && $_GET['path'] != '' ? parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) : (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') ) . '\"><\/a>'\r\n            \r\n            \r\n            echo \/\/'        <form style=\"display: inline;\" action method=\"GET\">'\r\n            $main_cat;\r\n            \/\/. '        <\/form>' . \"\\n\";\r\n            \r\n            echo '        <form style=\"display: inline;\" action method=\"GET\">' . \"\\n\"\r\n            . '          <span title=\"' . APP_PATH . '\" style=\"margin: 2px 5px 0 0; cursor: pointer;\" onclick=\"\"> \/ ' . \"\\n\"; \/* $path; *\/ ?>\r\n          <select name=\"path\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n            <option value=\"\">.<\/option>\r\n            <option value=\"\">..<\/option>\r\n            <?php\r\n              \/\/ Bug if the dir does not exist it defaults to the root ...\r\n\r\n              if (APP_PATH)\r\n                foreach (array_filter( glob( APP_PATH . APP_ROOT . '*'), 'is_dir') as $dir) {\r\n                  echo '              <option value=\"' . (isset($_GET['path']) ?  $_GET['path'] . DIRECTORY_SEPARATOR : '') . basename($dir) . '\"' . (isset($_GET['path']) && $_GET['path'] == basename($dir) ? ' selected' : '' )  . '>' . basename($dir) . '\/<\/option>' . \"\\n\";\r\n                }\r\n              ?>\r\n          <\/select> \/\r\n          <\/span>\r\n          <\/form>\r\n\r\n<?php } ?>\r\n          <\/div>\r\n          <div style=\"position: absolute; width: auto; top: 40px; right: -10px; border: 1px dashed green; height: 25px;\">\r\n            <div id=\"clockTime\"><\/div>\r\n          <\/div>\r\n          <div id=\"app_tools-container\" style=\"position: absolute; display: none; width: 800px; margin: 0 auto; height: 500px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n            <div style=\"position: absolute; margin: 80px 45px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_tools-container').style.display='none'; return false;\"><img style=\"text-align: center;\" height=\"25\" width=\"25\" src=\"<?= APP_BASE['resources'] . 'images\/close-red.gif' ?>\" \/><\/a><br \/><\/div>\r\n            <div style=\"position: absolute; margin: 100px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"isFixed = true; show_console(); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/cli.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.console.php\" style=\"text-align: center;\">(CLI)<\/a><\/div>\r\n            <!-- \r\n              <a href=\"javascript:window.open('print.html', 'newwindow', 'width=300,height=250')\">Print<\/a>\r\n              onclick=\"window.open('app.whiteboard.php', 'newwindow', 'width=300,height=250'); return false;\"\r\n              \r\n              https:\/\/stackoverflow.com\/questions\/12939928\/make-a-link-open-a-new-window-not-tab\r\n               -->\r\n            <div style=\"position: absolute; margin: 100px 165px; text-align: center;\" class=\"text-sm\"><a href=\"#\" target=\"_blank\" onclick=\"toggleIframeUrl('app.whiteboard.php'); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/whiteboard.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.whiteboard.php\" style=\"text-align: center;\">Whiteboard<\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 260px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_notes-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/notes.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.notes.php\" style=\"text-align: center;\">Notes<\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 350px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_project-container').style.display='block'; document.getElementById('toggle-debug').checked = false; toggleSwitch(document.getElementById('toggle-debug')); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/project.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.project.php\"><span style=\"text-align: center;\">Project<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 0 0 450px ; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_debug-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/debug.png' ?>\" \/><br \/><span style=\"text-align: center;\">Debug<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_profile-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/user.png' ?>\" \/><br \/><span style=\"text-align: center;\">Profile<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 100px 0 0 630px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/browser.png' ?>\" \/><br \/><span style=\"text-align: center;\">Browser<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 200px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_tools-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/apps.png' ?>\" \/><br \/><span style=\"text-align: center;\">Apps.<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 200px 170px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_calendar-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/calendar.png' ?>\" \/><br \/><span style=\"text-align: center;\">Calendar<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 190px 240px; padding: 20px 40px; background-color: rgba(255, 255, 255, 0.8);\">\r\n              <form action=\"#!\" method=\"GET\">\r\n                <?= '            ' . (isset($_GET['project']) && !$_GET['project'] ? '<input type=\"hidden\" name=\"client\" value=\"\" \/>' : '<input type=\"hidden\" name=\"project\" value=\"\" \/>') ?>\r\n                <div style=\"margin: 0 auto;\">\r\n                  <div id=\"clockTime\"><\/div>\r\n                <\/div>\r\n                <input class=\"input\" id=\"toggle-project\" type=\"checkbox\" onchange=\"toggleSwitch(this); this.form.submit();\" <?= (isset($_GET['project']) ? 'checked' : '') ?> \/>\r\n                <label class=\"label\" for=\"toggle-project\" style=\"margin-left: -6px;\">\r\n                  <div class=\"left\"> Client <\/div>\r\n                  <div class=\"switch\" style=\"position: relative;\"><span class=\"slider round\"><\/span><\/div>\r\n                  <div class=\"right\"> Project <\/div>\r\n                <\/label>\r\n              <\/form>\r\n            <\/div>\r\n            <div style=\"position: absolute; margin: 200px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"toggleIframeUrl('app.pong.php'); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/pong.png' ?>\" \/><br \/><span style=\"text-align: center;\">Pong<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 200px 0 0 630px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/regexp.png' ?>\" \/><br \/><span style=\"text-align: center;\">RegExp<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 300px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/chatgpt.png' ?>\" \/><br \/><span style=\"text-align: center;\">ChatGPT<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 300px 160px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/stackoverflow.png' ?>\" \/><br \/><span style=\"text-align: center;\">Stackoverflow<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 300px 260px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/validatejs.png' ?>\" \/><br \/><span style=\"text-align: center;\">ValidateJS<\/span><\/a><\/div>\r\n            <!-- https:\/\/validator.w3.org\/#validate_by_input \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 340px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/w3c.png' ?>\" \/><br \/><span style=\"text-align: center;\">W3C Validator<\/span><\/a><\/div>\r\n            <!-- https:\/\/tailwindcss.com\/docs\/ \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 0 0 445px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/tailwindcss.png' ?>\" \/><br \/><span style=\"text-align: center;\">TailwindCSS<br \/>Docs<\/span><\/a><\/div>\r\n            <!-- https:\/\/www.php.net\/docs.php \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/php.png' ?>\" \/><br \/><span style=\"text-align: center;\">PHP Docs<\/span><\/a><\/div>\r\n            <!-- https:\/\/dev.mysql.com\/doc\/ \/\/ -->\r\n            <div style=\"position: absolute; margin: 300px 0 0 625px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/mysql.png' ?>\" \/><br \/><span style=\"text-align: center;\">MySQL Docs<\/span><\/a><\/div>\r\n            <div style=\"position: absolute; top: 400px; left: 65px; width: 80%; margin: 0 auto; height: 15px; border-bottom: 1px solid black; text-align: center; z-index: 0;\">\r\n              <span style=\"font-size: 20px; background-color: #F3F5F6; padding: 0 20px; z-index: 1;\"> USER APPS. <\/span>\r\n            <\/div>\r\n            <div style=\"position: absolute; margin: 430px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_install-container').style.display='block'; return false;\"><span style=\"text-align: center;\">New App.<\/span><br \/><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/install.png' ?>\" \/><\/a><\/div>\r\n            <div style=\"position: absolute; margin: 430px 170px; text-align: center;\" class=\"text-sm\">\r\n              <a href=\"?app=ace_editor&path=&file=app.user-app.php\"><span style=\"text-align: center;\">App #1<\/span><\/a><br \/>\r\n              <a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/php-app.png' ?>\" \/><\/a>\r\n              <div style=\"height: 75px;\"><\/div>\r\n            <\/div>\r\n          <\/div>\r\n        <\/div>\r\n\r\n      <\/div>\r\n\r\n\r\n      <?php \/*\r\n        <div id=\"app_project-container\" style=\"display: none; position: absolute; top: 80px; padding: 20px; margin-left: auto; margin-right: auto; left: 0; right: 0; width: 700px; z-index: 2;\">\r\n          <div style=\"margin: -25px 0 20px 0;\">\r\n            <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_project-container').style.display='none';\">X<\/a>]<\/div>\r\n          <\/div>\r\n          <form style=\"background-color: #ddd; padding: 20px;\">\r\n            <h3>Psr\/Log<\/h3>\r\n            <label><input type=\"checkbox\" checked> Add to Project.<\/label>\r\n            <button type=\"submit\" style=\"float: right;\">Save<\/button>\r\n            <iframe src=\"<?= APP_WWW ?>?project=show\" style=\"height: 300px; width: 600px;\"><\/iframe>\r\n      <\/form>\r\n    <\/div>\r\n    *\/ ?>\r\n    <div style=\"position: relative;\">\r\n      <?php if (isset($_GET['client']) && $_GET['client'] != '') { ?>\r\n      <div id=\"app_client-container\" style=\"position: relative; display: none; top: 100px; margin: 0 auto; width: 800px; height: 600px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n        <div style=\"display: inline;\">\r\n          <span style=\"background-color: #B0B0B0; color: white;\">\r\n          <input type=\"checkbox\" checked \/> Preview Domain\r\n          <\/span>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center; \">\r\n          <code style=\" background-color: white; color: #0078D7;\">\r\n          <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_client-container').style.display='none';\">[X]<\/a>\r\n          <\/code>\r\n        <\/div>\r\n        <div style=\"margin: 0 10px;\">\r\n          <div style=\"display: inline-block; float: left; width: 49%;\">\r\n<?php\r\n  $input = $_GET['client'];\r\n              \r\n  \/\/ Decode the URL-encoded string\r\n  $decoded = urldecode($input);\r\n              \r\n  \/\/ Use regex to extract name components\r\n  if (preg_match('\/^\\d*-(\\w+)[,]\\s*(\\w+)$\/', $decoded, $matches)) {\r\n    \/\/ $matches[1] contains the last name, $matches[2] contains the first name\r\n    $output = $matches[2] . ' ' . $matches[1];\r\n  } else {\r\n    $output = 'Invalid Input';\r\n  }\r\n?>\r\n            Work Status: \r\n            <select>\r\n              <?php\r\n                foreach(['000', '100', '200', '300', '400'] as $key => $status) {\r\n                \r\n                $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $status . '*'), 'is_dir');\r\n                $statusCode = $status;\r\n                $status = ($status == 000) ? \"On-call\" :\r\n                         (($status == 100) ? \"Working\" :\r\n                         (($status == 200) ? \"Planning\" :\r\n                         (($status == 300) ? \"Previous\" :\r\n                         (($status == 400) ? \"Future\" : \"Unknown\"))));\r\n                ?>\r\n              <option><?= $statusCode . ' - ' . $status ?><\/option>\r\n              <?php\r\n                $count = 1;\r\n                }\r\n                ?>\r\n            <\/select>\r\n            <br \/>\r\n            Name: <input type=\"text\" value=\"<?= $output; ?>\" \/><br \/>\r\n            Hours: <input type=\"text\" value=\"999\" \/>\r\n          <\/div>\r\n          <div style=\"display: inline-block; float: right; text-align: right;\">\r\n            <span style=\"\">\r\n              Domain: \r\n              <select>\r\n                <option>example.com<\/option>\r\n              <\/select>\r\n            <\/span>\r\n            <br \/>\r\n            <span style=\"\">Add Domain: <input type=\"text\"><\/span><br \/>\r\n            <span>Domain Expiry: <input type=\"text\" value=\"\r\n              <?php\r\n                $result = [];\r\n                \r\n                if (check_http_status() && class_exists('Whois')) {\r\n                  $whois = new Whois();\r\n                  $query = 'example.com';\r\n                  $result = $whois->lookup($query,false);\r\n                }\r\n                \r\n                echo !empty($result) && isset($result['regrinfo']['domain']['expires']) ? $result['regrinfo']['domain']['expires'] : 'Unknown';\r\n                 ?>\" style=\"text-align: right;\"\/><\/span><br \/><br \/>\r\n          <\/div>\r\n          <div style=\"clear: both;\"><\/div>\r\n          <div>\r\n            <span>Domain Information<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>[regrinfo][domain][name] == Domain Name,  [regrinfo][type] == 'domain',  [regyinfo][registered] == 'yes'<br \/>\r\n                [???] Registrar Information, <br \/>\r\n                <br \/>\r\n                [regrinfo][domain][expires] == Domain Expiry Date (Timestamp), <br \/>\r\n                <br \/>\r\n                [regyinfo][registrar] == 'RESERVED-Internet Assigned Numbers Authority' (DNS Provider)<br \/>\r\n                [regrinfo][domain][nserver][a.iana-servers.net] == 199.43.135.53<br \/>\r\n                [regrinfo][domain][nserver][b.iana-servers.net] == 199.43.135.53<br \/>\r\n                <br \/>\r\n                [regrinfo][domain][status][0..2]<br \/>\r\n                Domain Status: clientDeleteProhibited https:\/\/icann.org\/epp#clientDeleteProhibited<br \/>\r\n                Domain Status: clientTransferProhibited https:\/\/icann.org\/epp#clientTransferProhibited<br \/>\r\n                Domain Status: clientUpdateProhibited https:\/\/icann.org\/epp#clientUpdateProhibited<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Server\/Hosting Information<\/span>\r\n            <ul class=\"text-xs\">\r\n              <li>\r\n                Hosting Provider, intranet (localhost) \/ internet (google.ca)<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>Name: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                Server IP Address<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">\r\n                  <span>\r\n                    IPv4\/IPv6: <!-- input type=\"text\" -->\r\n                    <select>\r\n                    <?php\r\n                      \/* $access_token = '123456789abc'; *\/\r\n                      \/\/$client = new IPinfo(\/*$access_token*\/);\r\n                      \/\/$ip_address = '93.184.216.34';\r\n                      \/\/$details = $client->getDetails($ip_address);\r\n                      \r\n                      \/\/dd($details->all);\r\n                      \r\n                      \r\n                      if (!empty($ip_addrs = gethostbynamel($dname['regrinfo']['domain']['name'] = 'example.com')))\r\n                        foreach ($ip_addrs as $ip_addr) {\r\n                          echo '            <option>' . $ip_addr . '<\/option>' . \"\\n\";\r\n                        }\r\n                      else\r\n                        echo '            <option><\/option>' . \"\\n\";\r\n                      \r\n                      ?>\r\n                    <\/select>\r\n                  <\/span>\r\n                  <br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                Control Panel URL<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>URL: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                FTP Credentials (as you mentioned)<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>FTP Host: <input type=\"text\"><\/span><br \/>\r\n                  <span>FTP User: <input type=\"text\"><\/span><br \/>\r\n                  <span>FTP Password: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                SSH Credentials<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>SSH Host: <input type=\"text\"><\/span><br \/>\r\n                  <span>SSH User: <input type=\"text\"><\/span><br \/>\r\n                  <span>SSH Password: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n                Database Access Credentials<br \/>\r\n                <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n                  <span>DB Host: <input type=\"text\"><\/span><br \/>\r\n                  <span>DB User: <input type=\"text\"><\/span><br \/>\r\n                  <span>DB Password: <input type=\"text\"><\/span><br \/>\r\n                <\/div>\r\n                <div style=\"clear: both;\"><\/div>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Website Configuration<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Content Management System (CMS) Information<br \/>\r\n                Configuration Files (e.g., wp-config.php for WordPress)<br \/>\r\n                API Keys and Secrets<br \/>\r\n                CDN Configuration<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>SSL Certificate<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>SSL Certificate Details<br \/>\r\n                Expiry Date<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Development and Deployment<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Version Control Information (e.g., Git repository URL)<br \/>\r\n                Deployment Scripts\/Procedures<br \/>\r\n                Staging Environment Information<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Analytics and SEO<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Google Analytics Code<br \/>\r\n                SEO Keywords<br \/>\r\n                Meta Tags<br \/>\r\n                Search Console Information<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Backup and Recovery<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Backup Schedule<br \/>\r\n                Backup Storage Location<br \/>\r\n                Disaster Recovery Plan<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Contact Information<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Technical Contact<br \/>\r\n                Administrative Contact<br \/>\r\n                Support Contact<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Monitoring and Alerts<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Monitoring Tools and URLs<br \/>\r\n                Alert Configuration<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Third-Party Services<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>API Keys for External Services (e.g., Email Service, Payment Gateway)<br \/>\r\n                Integration Details<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Content and Media<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Content Inventory<br \/>\r\n                Media Files and Storage Locations<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Security<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Security Measures in Place<br \/>\r\n                Incident Response Plan<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Documentation<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Wiki\/Documentation URLs<br \/>\r\n                Standard Operating Procedures (SOPs)<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>Testing and Quality Assurance<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Testing Environments<br \/>\r\n                Test Cases<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n            <span>License Information<\/span><br \/>\r\n            <ul class=\"text-xs\">\r\n              <li>Software Licenses<br \/>\r\n                Theme\/Plugin Licenses<br \/>\r\n              <\/li>\r\n            <\/ul>\r\n            <br \/>\r\n          <\/div>\r\n        <\/div>\r\n      <\/div>\r\n      <?php } ?>\r\n      <div id=\"app_directory-container\" style=\"position: absolute; display: <?= ( isset($_GET['debug']) || isset($_GET['project']) || isset($_GET['path'])  ? \/*'block'*\/ 'none' : 'none'); ?>; background-color: white; height: 580px; position: absolute; top: 100px; margin-left: auto; margin-right: auto; left: 0; right: 0; width: 700px;\">\r\n        <?php if (isset($_GET['path']) && preg_match('\/^vendor$\/', $_GET['path'])) { ?>\r\n        <!-- iframe src=\"composer_pkg.php\" style=\"height: 500px; width: 700px;\"><\/iframe -->\r\n        <div style=\"width: 700px;\">\r\n          <div style=\"display: inline-block; width: 350px;\">Composers Vendor Packages [Installed] List<\/div>\r\n          <div style=\"display: inline-block; text-align: right; width: 300px;\">\r\n            <form action=\"<?= (!defined('APP_URL_BASE') ? '\/\/' . APP_DOMAIN . APP_URL_PATH . '?' . http_build_query(APP_QUERY, '', '&amp;') : APP_URL_BASE . '?' . http_build_query(APP_QUERY, '', '&amp;')) ?>\" method=\"POST\">\r\n              <input id=\"RequirePkg\" type=\"text\" title=\"Enter Text and onSelect\" list=\"RequirePkgs\" placeholder=\"[vendor]\/[package]\" name=\"composer[package]\" value onselect=\"get_package(this);\" autocomplete=\"off\" style=\" margin-top: 4px;\">\r\n              <button type=\"submit\" style=\"border: 1px solid #000; margin-top: 4px;\"> Add <\/button>\r\n              <div style=\"display: inline-block; float: right; text-align: left; margin-left: 10px;\" class=\"text-xs\">\r\n                <input type=\"checkbox\" name=\"composer[install]\" value=\"\" \/> Install<br \/>\r\n                <input type=\"checkbox\" name=\"composer[update]\" value=\"\" \/> Update\r\n              <\/div>\r\n              <datalist id=\"RequirePkgs\">\r\n                <option value=\"\"><\/option>\r\n              <\/datalist>\r\n            <\/form>\r\n          <\/div>\r\n        <\/div>\r\n        <table style=\"width: inherit; border: none;\">\r\n          <tr style=\" border: none;\">\r\n<?php\r\n              \/\/$paths = glob($path . '\/*');\r\n              $paths = COMPOSER_VENDORS;\r\n              \r\n              \/\/dd(urldecode($_GET['path']));\r\n              \/*\r\n              $paths = ['0' => ...];\r\n              usort($paths, function ($a, $b) {\r\n                  $aIsDir = is_dir('vendor\/'.$a);\r\n                  $bIsDir = is_dir('vendor\/'.$b);\r\n                  \r\n                  \/\/ Directories go first, then files\r\n                  if ($aIsDir && !$bIsDir) {\r\n                      return -1;\r\n                  } elseif (!$aIsDir && $bIsDir) {\r\n                      return 1;\r\n                  }\r\n                  \r\n                  \/\/ If both are directories or both are files, sort alphabetically\r\n                  return strcasecmp($a, $b);\r\n              });\r\n              *\/\r\n              if (is_file(APP_PATH . 'projects\/index.php'))\r\n                $handle = fopen(APP_PATH . 'projects\/index.php', 'r');\r\n              $pkgs_matched = [];\r\n              \r\n              if (@$handle) {\r\n                  while (($line = fgets($handle)) !== false) {\r\n                      if (preg_match('\/^use\\s+(.+?);\/', $line, $matches)) {\r\n                          $pkgs_matched[] = addslashes($matches[1]);\r\n                      }\r\n                  }\r\n                  fclose($handle);\r\n              } else {\r\n                  echo \"Error opening the projects\/index.php file.\";\r\n              }\r\n              \r\n              \r\n              $dirs = [];\r\n              \r\n              foreach (array_filter( glob( APP_PATH . APP_BASE['var'] . 'packages' . DIRECTORY_SEPARATOR . '*.php'), 'is_file') as $key => $dir) {\r\n                if (preg_match('\/^(.*)-(.*).php$\/', basename($dir), $matches)) {\r\n                    $name = $matches[1];\r\n                    if (!isset($uniqueNames[$name])) {\r\n                        $uniqueNames[$name] = true;\r\n                        $dirs[] = $name;\r\n                    }\r\n                }\r\n              }\r\n              \r\n              $count = 1;\r\n              if (!empty($paths))\r\n                foreach ($paths as $vendor => $packages) {\r\n              \r\n                  echo '          <td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\"\r\n                  . '            <div class=\"container2\">' . \"\\n\";\r\n              \r\n                  $show_notice = true;\r\n              \r\n                  \/\/var_dump(preg_grep('\/^Psr\\\\\\\\Log\/', ['Psr\\\\Log\\\\LogLevel']));\r\n                  \r\n                  \/\/var_dump($dirs);\r\n              \r\n                  foreach ($packages as $package) {\r\n                      \/\/var_dump('\/^' . ucfirst($vendor) . '\\\\\\\\' . ucFirst($package) . '\/'); \/\/ $pkgs_matched[0]\r\n                  \/\/var_dump(preg_grep($grep = '\/^'. ucfirst($vendor) . '\\\\\\\\\\\\\\\\' . ucFirst($package) . '\/', $pkgs_matched));\r\n                          \/\/if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files())) { break; }\r\n                      \/\/if (isset($pkgs_matched) && !empty($pkgs_matched) && class_exists($pkgs_matched[0])) {\r\n                      \r\n                      \/\/$grep = '\/^' . ucfirst($vendor) . '\\\\\\\\' . ucFirst($package) . '\/';\r\n                      \/\/dd(get_declared_classes());\r\n                      \/\/$arr = preg_grep($grep, get_declared_classes());\r\n                      \/\/$show_notice = (!empty($arr) ? true : false);\r\n                      \/\/if (!empty($arr)) {}\r\n                      \r\n                        \r\n                     \/\/ $arr = ;\r\n                      \/\/$show_notice = (!empty($arr) ? true : false);\r\n                      \/\/if (!empty($arr)) { }\r\n              \r\n                      if ($show_notice)\r\n                        $show_notice = (isset($pkgs_matched) && !empty($pkgs_matched) && !empty(preg_grep($grep = '\/^'. ucfirst($vendor) . '\\\\\\\\\\\\\\\\' . ucFirst($package) . '\/', $pkgs_matched)) ? false : (in_array($vendor, $dirs) ? true : false)); \/\/ $arr[0] class_exists() $pkgs_matched[0]\r\n                        \r\n                        \/\/ (!in_array($vendor, $dirs) ? true : false) \r\n                        \r\n                        \r\n                      \/\/var_dump($show_notice);\r\n                      \/\/var_dump($grep);\r\n                      \/\/var_dump(!empty(preg_grep($grep, $pkgs_matched)));\r\n                      \/\/}\r\n                  }\r\n                  if ($show_notice)\r\n                      echo '<div style=\"position: absolute; left: -12px; top: -12px; color: red; font-weight: bold;\">[1]<\/div>';\r\n              \r\n                    if (is_dir('vendor\/'.$vendor) || !is_dir('vendor\/'.$vendor))\r\n                      \/\/if ($vendor == 'barrydit') continue;\r\n                      if ($vendor == 'symfony') {\r\n                        echo '<a class=\"pkg_dir\" href=\"?path=vendor\/' . $vendor . '\">'\r\n                        . '<img src=\"resources\/images\/directory-symfony.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{$vendor . '\/' . $package}) || isset(COMPOSER->{'require-dev'}->{$vendor . '\/' . $package})?: 'opacity:0.4;filter:alpha(opacity=40);') . '\" \/><\/a><br \/>'\r\n                        . '<div class=\"overlay\">';\r\n                        foreach ($packages as $package) {\r\n                          if (in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/bootstrap.php', get_required_files()))\r\n                            echo '<a href=\"?app=ace_editor&path=vendor\/'.$vendor.'\/'.$package.'\/&file=bootstrap.php\"><code style=\"background-color: white; color: #0078D7; font-size: 9px;\">' . $package. '<\/code><\/a><br \/>';\r\n                          elseif (in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/function.php', get_required_files()))\r\n                            echo '<a href=\"?app=ace_editor&path=vendor\/'.$vendor.'\/'.$package.'\/&file=function.php\"><code style=\"background-color: white; color: #0078D7; font-size: 9px;\">' . $package. '<\/code><\/a><br \/>';\r\n                          else \r\n                            echo '<p style=\"background-color: #0078D7;\">' . $package . '<\/p>' . PHP_EOL;\r\n                          \/\/echo APP_PATH.'vendor\/'.$vendor.'\/'.$package;\r\n              \r\n                          \/\/ \/mnt\/c\/www\/public\/composer\/vendor\/symfony\/deprecation-contracts\r\n                        }\r\n                        echo '<\/div>' . '<a href=\"?path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>';\r\n                  \r\n                      } elseif ($vendor == 'composer') {\r\n                        foreach ($packages as $package) {\r\n                          if (is_file(APP_BASE['var'] . 'packages' . DIRECTORY_SEPARATOR . $vendor . '-' . $package . '.php'))\r\n                            $app['composer'][$vendor][$package]['body'] = file_get_contents(APP_BASE['var'] . 'packages' . DIRECTORY_SEPARATOR . $vendor . '-' . $package . '.php');\r\n                          \/\/if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files())) {\r\n                            \/\/echo '<div style=\"position: absolute; left: -12px; top: -12px; color: red; font-weight: bold;\">[1]<\/div>';\r\n                          \/\/  break;\r\n                          \/\/}\r\n                        }\r\n                        echo '<a class=\"pkg_dir\" href=\"#!\" onclick=\"document.getElementById(\\'app_composer-container\\').style.display=\\'block\\';\">' \/\/ ?app=ace_editor&path=vendor\/' . $vendor . '\r\n                        . '<img src=\"resources\/images\/directory-composer.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{$vendor . '\/' . 'composer'}) || isset(COMPOSER->{'require-dev'}->{$vendor . '\/' . $package})? '' : 'opacity:0.4;filter:alpha(opacity=40);') . '\" \/><\/a><br \/>'\r\n                        . '<div class=\"pkg_dir overlay\">';\r\n                        foreach ($packages as $package) {\r\n                          if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files()) && $package == 'log') {\r\n                            echo '<a href=\"?app=ace_editor&path=vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/&file=LogLevel.php\"><code style=\"background-color: white; color: #0078D7; font-size: 10px;\">' . $package. '<\/code><\/a>';\r\n                            continue;\r\n                          }\r\n                          echo '<p style=\"background-color: #0078D7;\">' . $package. '<\/p>' . PHP_EOL;\r\n                        }\r\n                        echo '<\/div>' . '<a href=\"?path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>' . \"\\n\";    \r\n                      } elseif ($vendor == 'psr') {\r\n                        echo '<a class=\"pkg_dir\" href=\"#!\" onclick=\"document.getElementById(\\'app_project-container\\').style.display=\\'block\\';\">' \/\/ ?app=ace_editor&path=vendor\/' . $vendor . '\r\n                        . '<img src=\"resources\/images\/directory-psr.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{$vendor . '\/' . $package}) || isset(COMPOSER->{'require-dev'}->{$vendor . '\/' . $package}) ? '' : (!$show_notice ? '' : 'opacity:0.4;filter:alpha(opacity=40);')) . '\" \/>' . '<\/a><br \/>'\r\n                        . '<div class=\"overlay\">';\r\n                        foreach ($packages as $package) {\r\n                          if (!in_array(APP_PATH.'vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/LogLevel.php', get_required_files()) && $package == 'log') {\r\n                            echo '<a href=\"?app=ace_editor&path=vendor\/'.$vendor.'\/'.$package.'\/Psr\/Log\/&file=LogLevel.php\"><code style=\"background-color: white; color: #0078D7; font-size: 10px;\">' . $package. '<\/code><\/a>';\r\n                            continue;\r\n                          }\r\n                          \r\n                          echo '<p style=\"background-color: #0078D7;\">' . $package. '<\/p>' . PHP_EOL;\r\n                        }\r\n                        echo '<\/div>' . '<a href=\"?path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>' . \"\\n\";    \r\n                      } else {\r\n              \r\n                        echo '<a class=\"pkg_dir\" href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'path=vendor\/' . $vendor . '\">'\r\n                        . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" style=\"' . (isset(COMPOSER->{'require'}->{$vendor . '\/' . $package}) || isset(COMPOSER->{'require-dev'}->{$vendor . '\/' . $package})?: 'opacity:0.4;filter:alpha(opacity=40);') . '\" \/>' . '<\/a><br \/>'\r\n                        . '<div class=\"overlay\">';\r\n                        foreach ($packages as $package) {\r\n                          echo '<code style=\"background-color: white; color: #0078D7;\">' . $package. '<\/code><br \/>' . PHP_EOL;\r\n                        }\r\n                        echo '<\/div>' . '<a href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'path=vendor\/' . $vendor . '\">' . ucfirst($vendor) . '<\/a>' . \"\\n\";\r\n                      }\r\n                    echo  '<\/div>' . \"\\n\"\r\n                    . '<\/td>' . \"\\n\";\r\n              \r\n                    if ($count >= 6) echo '<\/tr><tr>';\r\n                    elseif ($vendor == end($paths)) echo '<\/tr>';\r\n              \r\n                    if (isset($count) && $count >= 6) $count = 1;\r\n                    else $count++;\r\n              \r\n                }\r\n              \r\n              foreach (COMPOSER_VENDORS as $vendor => $packages) {\r\n                  $dirs_diff[] = $vendor;\r\n              }\r\n              \r\n              $result = array_diff($dirs, $dirs_diff);\r\n              \r\n              \/\/dd($result);\r\n              if (!empty($result))\r\n                foreach ($result as $install) {\r\n                  echo '<td style=\"border: none; text-align: center;\" class=\"text-xs\">' . \"\\n\"\r\n                  . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_git-container\\').style.display=\\'block\\';\">' \/\/ \"?path=' . basename($path) . '\" \r\n                  . '<img src=\"resources\/images\/directory-install.png\" width=\"50\" height=\"32\" ' . \/*style=\"opacity:0.4;filter:alpha(opacity=40);\"*\/' \/><br \/>' . $install . '\/<\/a>' . \"\\n\";\r\n                  echo '<\/td>' . \"\\n\";\r\n              \r\n                  if ($count >= 6) echo '<\/tr><tr>';\r\n                  elseif ($install == end($result)) echo '<\/tr>';\r\n              \r\n                  if (isset($count) && $count >= 6) $count = 1;\r\n                  else $count++;\r\n                }\r\n              \r\n              ?>\r\n            <!-- \/tr -->\r\n        <\/table>\r\n        <?php } elseif (isset($_GET['project']) && empty($_GET['project'])) { ?> \r\n        <?php if (readlinkToEnd($_SERVER['HOME'] . '\/projects') == '\/mnt\/c\/www\/projects' || realpath(APP_PATH . 'projects')) { ?>\r\n        <div style=\"text-align: center; border: none;\" class=\"text-xs\">\r\n          <a class=\"pkg_dir\" href=\"#\" onclick=\"document.getElementById('app_project-container').style.display='block';\">\r\n          <img src=\"resources\/images\/project-icon.png\" width=\"50\" height=\"32\" style=\"\" \/><\/a><br \/><a href=\"?project\">.\/project\/<\/a>\r\n        <\/div>\r\n        <table width=\"\" style=\"border: none;\">\r\n          <tr style=\" border: none;\">\r\n            <?php\r\n              $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/*'), 'is_dir'); \r\n              \r\n              $count = 1;\r\n              ?>\r\n            <?php\r\n              if (empty($links)) {\r\n                echo '<hr \/>' . \"\\n\"; \/\/ label=\"     \"\r\n              } else  \/\/dd($links);\r\n                $old_links = $links;\r\n              while ($link = array_shift($links)) {\r\n                $old_link = $link;\r\n                $link = basename($link);\r\n              \r\n              \r\n                echo '<td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\";\r\n                echo '<a class=\"pkg_dir\" href=\"?project=' . $link . '\">'\r\n                . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" style=\"\" \/><br \/>' . $link . '<\/a><br \/>'\r\n                . '<\/td>' . \"\\n\";        \r\n                if ($count >= 7) echo '<\/tr><tr>';\r\n                elseif ($old_link == end($old_links)) echo '<\/tr>';\r\n              \r\n                if (isset($count) && $count >= 7) $count = 1;\r\n                else $count++;\r\n              }\r\n              \r\n              }\r\n              \r\n              ?>\r\n        <\/table>\r\n        <!--\r\n          <li>\r\n          <?php if (readlinkToEnd('\/var\/www\/projects') == '\/mnt\/c\/www\/projects' || realpath(APP_PATH . 'projects')) { ?>\r\n          <a href=\"projects\/\">project\/<\/a>\r\n            <ul style=\"padding-left: 10px;\">\r\n              <form action method=\"GET\">\r\n                <select id=\"sproject\" name=\"project\" style=\"color: #000;\">\r\n          <?php\r\n            while ($link = array_shift($links)) {\r\n              $link = basename($link); \/\/ Get the directory name from the full path\r\n              if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/' . $link))\r\n                echo '  <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n            }\r\n            ?>\r\n                <\/select>\r\n              <\/form>\r\n          <\/ul>\r\n          <?php } ?><\/li>\r\n          -->\r\n        <?php } elseif(isset($_GET['application'])) { ?>\r\n\r\n        <?php if (readlinkToEnd('\/var\/www\/applications') == '\/mnt\/c\/www\/applications') {\r\n        if ($_GET['application']) {\r\n\r\n          $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/' . $_GET['application']), 'is_file');\r\n          \r\n          echo '<h3>Application: 7-Zip<\/h3>';\r\n          \r\n          \r\n          echo '<br \/><div style=\"text-align: center; margin: 0 auto;\"><a href=\"https:\/\/www.7-zip.org\/download.html\"><img width=\"110\" height=\"63\" src=\"http:\/\/www.7-zip.org\/7ziplogo.png\" alt=\"7-Zip\" border=\"0\" \/><br \/>'. basename($links[0]) . ' =&gt; <a href=\"https:\/\/www.7-zip.org\/a\/7z2301-x64.exe\">7z2301-x64.exe<\/a><\/a><\/div>' . \"<br \/>\";\r\n          \r\n          \r\n        } else {\r\n          $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/*'), 'is_file'); ?>\r\n        <h3>Applications:<\/h3>\r\n        <table width=\"\" style=\"border: none;\">\r\n          <tr style=\" border: none;\">\r\n            <?php\r\n              \/\/if (empty($links)) {\r\n              \/\/  echo '<option value=\"\" selected>---<\/option>' . \"\\n\"; \/\/ label=\"     \"\r\n              \/\/} else  \/\/dd($links);\r\n              $count = 1; \r\n              $old_links = $links;\r\n              while ($link = array_shift($links)) {\r\n                $old_link = $link;\r\n                $link = basename($link);\r\n              \r\n              \r\n                echo '<td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\";\r\n              \r\n                echo '<a class=\"pkg_dir\" href=\"?application=' . $link . '\">'\r\n                . '<img src=\"resources\/images\/app_file.png\" width=\"50\" height=\"32\" style=\"\" \/><br \/>' . $link . '<\/a><br \/>'\r\n                . '<\/td>' . \"\\n\";\r\n              \r\n                if ($count >= 3) echo '<\/tr><tr>';\r\n                elseif ( $old_link == end($old_links)) echo '<\/tr>';\r\n              \r\n                if (isset($count) && $count >= 3) $count = 1;\r\n                else $count++;\r\n              }\r\n              \r\n              ?>\r\n        <\/table>\r\n        <?php } } } elseif(isset($_GET['node_module']) && empty($_GET['node_module'])) { ?> \r\n        <?php \/\/if (readlinkToEnd('\/var\/www\/applications') == '\/mnt\/c\/www\/applications') { }\r\n          $links = array_filter(glob(APP_PATH . 'node_modules\/*'), 'is_dir'); ?>\r\n        <div style=\"display: inline-block; width: 350px;\">Node Modules [Installed] List<\/div>\r\n        <div style=\"display: inline-block; text-align: right; width: 300px; \">\r\n          <form action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'composer', 'path' => 'vendor'))  ?>\" method=\"POST\">\r\n            <input id=\"RequirePkg\" type=\"text\" title=\"Enter Text and onSelect\" list=\"RequirePkgs\" placeholder=\"[vendor]\/[package]\" name=\"composer[package]\" value=\"\" onselect=\"get_package(this);\" autocomplete=\"off\" style=\" margin-top: 4px;\">\r\n            <button type=\"submit\" style=\"border: 1px solid #000; margin-top: 4px;\"> Add <\/button>\r\n            <div style=\"display: inline-block; float: right; text-align: left; margin-left: 10px;\" class=\"text-xs\">\r\n              <input type=\"checkbox\" name=\"composer[install]\" value=\"\"> Install<br>\r\n              <input type=\"checkbox\" name=\"composer[update]\" value=\"\"> Update\r\n            <\/div>\r\n            <datalist id=\"RequirePkgs\">\r\n              <option value=\"\"><\/option>\r\n            <\/datalist>\r\n          <\/form>\r\n        <\/div>\r\n        <table width=\"\" style=\"border: none;\">\r\n          <tr style=\" border: none;\">\r\n            <?php\r\n              \/\/if (empty($links)) {\r\n              \/\/  echo '<option value=\"\" selected>---<\/option>' . \"\\n\"; \/\/ label=\"     \"\r\n              \/\/} else  \/\/dd($links);\r\n              $count = 1; \r\n              $old_links = $links;\r\n              while ($link = array_shift($links)) {\r\n                $old_link = $link;\r\n                $link = basename($link);\r\n              \r\n              \r\n                echo '<td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\";\r\n              \r\n                echo '<a class=\"pkg_dir\" href=\"?application=' . $link . '\">'\r\n                . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" style=\"\" \/><br \/>' . $link . '<\/a><br \/>'\r\n                . '<\/td>' . \"\\n\";\r\n                \r\n                if ($count >= 3) echo '<\/tr><tr>';\r\n                elseif ($old_link == end($old_links)) echo '<\/tr>';\r\n              \r\n                if (isset($count) && $count >= 3) $count = 1;\r\n                else $count++;\r\n              }\r\n              \r\n              ?>\r\n        <\/table>\r\n        <?php } elseif(isset($_GET['client']) && empty($_GET['client'])) { ?> \r\n        <?php if (readlinkToEnd('\/var\/www\/clientele') == '\/mnt\/c\/www\/clientele' || realpath(APP_PATH . 'clientele')) { ?>\r\n\r\n<?php     foreach(['000', '100', '200', '300', '400'] as $key => $status) {\r\n          \r\n          if ($key != 0) echo '<\/table>'.\"\\n\\n\\n\";\r\n          \r\n          $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $status . '*'), 'is_dir');\r\n          $statusCode = $status;\r\n          $status = ($status == 000) ? \"On-call\" :\r\n                   (($status == 100) ? \"Working\" :\r\n                   (($status == 200) ? \"Planning\" :\r\n                   (($status == 300) ? \"Previous\" :\r\n                   (($status == 400) ? \"Future\" : \"Unknown\")))); ?>\r\n        <h3>&#9660; Stage: <?= $status ?> (<?= $statusCode ?>)<\/h3>\r\n        <table width=\"\" style=\"border: none;\">\r\n          <tr style=\" border: none;\">\r\n            <?php\r\n              $count = 1;\r\n              ?>\r\n            <?php\r\n              \/\/if (empty($links)) {\r\n              \/\/  echo '<option value=\"\" selected>---<\/option>' . \"\\n\"; \/\/ label=\"     \"\r\n              \/\/} else  \/\/dd($links);\r\n              $old_links = $links;\r\n              while ($link = array_shift($links)) {\r\n                $old_link = $link;\r\n                $link = basename($link);\r\n              \r\n              \r\n                echo '<td style=\"text-align: center; border: none;\" class=\"text-xs\">' . \"\\n\";\r\n              \r\n                echo '<a class=\"pkg_dir\" href=\"?client=' . $link . '\">'\r\n                . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" style=\"\" \/><br \/>' . $link . '<\/a><br \/>'\r\n                . '<\/td>' . \"\\n\";\r\n              \r\n                if ($count >= 6) echo '<\/tr><tr>';\r\n                elseif ($old_link == end($old_links)) echo '<\/tr>';\r\n              \r\n                if (isset($count) && $count >= 6) $count = 1;\r\n                else $count++;\r\n              }\r\n            } ?>\r\n        <\/table>\r\n        <?php } else { ?>\r\n\r\n        <div style=\"position: absolute; top: 100px; width: 200px; left: 36%; right: 64%; text-align: center; border: 1px solid #000;\">\r\n                <?php echo '<a class=\"pkg_dir\" style=\"border: 1px dashed blue;\" href=\"?client=' . '\">'\r\n                . 'Missing directory.<br\/>'\r\n                . '<img src=\"resources\/images\/directory.png\" width=\"60\" height=\"42\" style=\"\" \/><br \/>Create <input type=\"text\" style=\"text-align: right;\"size=\"7\" name=\"clientele\" value=\"clientele\/\"><\/a><br \/>' . \"\\n\"; ?>\r\n\r\n        <\/div>\r\n\r\n        <?php } } else {\r\n          if(isset($_GET['client']) && !empty($_GET['client']))\r\n            $path .= \/*'..\/..\/'.*\/ 'clientele\/' . $_GET['client'] . '\/' . (isset($_GET['domain']) && !empty($_GET['domain']) ? $_GET['domain'] . '\/' : '');\r\n          \r\n          elseif(isset($_GET['project']) && !empty($_GET['project']))\r\n            $path .= \/*'..\/..\/'.*\/ 'projects\/' . $_GET['project'] . '\/';\r\n          \r\n          ob_start(); \r\n          \r\n          echo APP_PATH . APP_ROOT . (isset($_GET['path']) ? $_GET['path'] : '' ) ?>\r\n\r\n        <?php \r\n        if (!realpath(APP_PATH . APP_ROOT . (isset($_GET['path']) ? $_GET['path'] : '' ))) { ?>\r\n        \r\n          <br \/><br \/>Missing directory\r\n      \r\n        <?php } else { ?>\r\n        <table style=\"width: inherit; border: 0 solid #000;\">\r\n          <tr>\r\n            <?php\r\n              $paths = glob(APP_PATH . APP_ROOT . (isset($_GET['path']) ? $_GET['path'] . '\/' : '' ) . '{.[!.]*,*}', GLOB_BRACE | GLOB_MARK);\r\n              \/\/dd(urldecode($_GET['path']));\r\n              \r\n              usort($paths, function ($a, $b) {\r\n                  $aIsDir = is_dir($a);\r\n                  $bIsDir = is_dir($b);\r\n              \r\n                  \/\/ Check if either $a or $b is the \"project.php\" file\r\n                  $aIsProjectFile = !$aIsDir && basename($a) === 'project.php';\r\n                  $bIsProjectFile = !$bIsDir && basename($b) === 'project.php';\r\n              \r\n                  \/\/ Handle the case when either $a or $b is the \"project.php\" file\r\n                  if ($aIsProjectFile || $bIsProjectFile) {\r\n                      if ($aIsProjectFile && $bIsProjectFile) {   \/\/ -1 0 1\r\n                          return -1; \/\/ Both are \"project.php\" files, no change in order\r\n                      } elseif ($aIsProjectFile) {\r\n                          return 0; \/\/ $a is \"project.php\", move it down\r\n                      } else {\r\n                          return 1; \/\/ $b is \"project.php\", move it up\r\n                      }\r\n                  }\r\n              \r\n                  \/\/ Directories go first, then files\r\n                  if ($aIsDir && !$bIsDir) {\r\n                      return -1;\r\n                  } elseif (!$aIsDir && $bIsDir) {\r\n                      return 1;\r\n                  }\r\n              \r\n                  \/\/ If both are directories or both are files, sort alphabetically\r\n                  return strcasecmp($a, $b);\r\n              });\r\n              \/*\r\n              usort($paths, function ($a, $b) {\r\n                  $aIsDir = is_dir($a);\r\n                  $bIsDir = is_dir($b);\r\n                  \r\n                  \/\/ Directories go first, then files\r\n                  if ($aIsDir && !$bIsDir) {\r\n                      return -1;\r\n                  } elseif (!$aIsDir && $bIsDir) {\r\n                      return 1;\r\n                  }\r\n              \r\n                  \/\/ If both are directories or both are files, sort alphabetically\r\n                  return strcasecmp($a, $b);\r\n              });\r\n              *\/\r\n              $count = 1;\r\n              if (!empty($paths))\r\n                foreach($paths as $key => $path) {\r\n                    echo '<td style=\"border: 0 solid #000; text-align: center;\" class=\"text-xs\">' . \"\\n\";\r\n                    if (is_dir($path))\r\n                      if (basename($path) == '.git')\r\n                        echo '<a href=\"#!\" onclick=\"document.getElementById(\\'app_git-container\\').style.display=\\'block\\';\">' \/\/ \"?path=' . basename($path) . '\" \r\n                        . '<img src=\"resources\/images\/directory-git.png\" width=\"50\" height=\"32\" \/><br \/>' . basename($path) . '\/<\/a>' . \"\\n\";\r\n                      elseif (basename($path) == 'applications')\r\n                        echo '<div style=\"position: relative;\">'\r\n                        . '<a href=\"?application\" onclick=\"document.getElementById(\\'app_application-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-application.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                        . '<a href=\"?path=' . basename($path) . '\" onclick=\"\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"         \r\n                        . '\/<\/a><\/div>' . \"\\n\";\r\n                      elseif (basename($path) == 'node_modules')\r\n                        echo '<div style=\"position: relative;\">'\r\n                        . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_npm-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-npm.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                        . '<a href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'path=' . basename($path) . '\" onclick=\"\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"         \r\n                        . '\/<\/a><\/div>' . \"\\n\";\r\n                      elseif (basename($path) == 'projects')\r\n                        echo '<div style=\"position: relative;\">'\r\n                        . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_project-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-project.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                        . '<a href=\"?category=' . basename($path) . '\" onclick=\"\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"\r\n                        . '\/<\/a><\/div>' . \"\\n\";\r\n                      elseif (basename($path) == 'vendor')\r\n                        echo '<div style=\"position: relative;\">'\r\n                        . '<a href=\"#!\" onclick=\"document.getElementById(\\'app_composer-container\\').style.display=\\'block\\';\"><img src=\"resources\/images\/directory-composer.png\" width=\"50\" height=\"32\" \/><\/a><br \/>'\r\n                        . '<a href=\"?' . (APP_ROOT != '' ? array_key_first($_GET) . '=' . $_GET[array_key_first($_GET)] . '&' : '') . 'app=composer&path=' . basename($path) . '\" onclick=\"\">' . basename($path)  \/\/ \"?path=' . basename($path) . '\"         \r\n                        . '\/<\/a><\/div>' . \"\\n\";\r\n                      else\r\n                        echo '<a href=\"?' . (!defined('APP_ROOT') || empty(APP_ROOT) ? '' : 'client=' . $_GET['client'] . '&') . 'path=' . (!isset($_GET['path']) ? '' : $_GET['path'] ) . basename($path) . '\">'\r\n                        . '<img src=\"resources\/images\/directory.png\" width=\"50\" height=\"32\" \/><br \/>' . basename($path) . '\/<\/a>';\r\n                    elseif (is_file($path)) {\r\n              \r\n                      if (preg_match('\/^\\..*\/', basename($path))) {\r\n              \r\n                        if (basename($path) == '.htaccess')\r\n                          echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/htaccess_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . '<\/a>'\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                          . '<\/div>' . \"\\n\";\r\n                      \r\n                        elseif(basename($path) == '.babelrc')\r\n                          echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/babelrc_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . '<\/a>'\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                          . '<\/div>' . \"\\n\";\r\n                        \r\n                        elseif (basename($path) == '.gitignore')\r\n                          echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/gitignore_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . '<\/a>'\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                          . '<\/div>' . \"\\n\";\r\n                        \r\n                        elseif (basename($path) == '.env')\r\n                          echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/env_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                        . '<\/a>'\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                        \r\n                        else\r\n                          echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/htaccess_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . '<\/a>'\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                          . '<\/div>' . \"\\n\";\r\n              \r\n                      }  elseif (preg_match('\/package(?:-lock)?\\.(json)\/', basename($path))) {\r\n                        echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\">';\r\n              \r\n                        if (basename($path) == 'package.json')\r\n                          echo '<div style=\"position: relative;\"><img src=\"resources\/images\/package_json_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . (isset($errors['COMPOSER-VALIDATE-JSON']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' )\r\n                          . '<\/a><\/div>' . \"\\n\";\r\n                        elseif (basename($path) == 'package-lock.json')\r\n                          echo '<div style=\"position: relative;\"><img src=\"resources\/images\/package-lock_json_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . (isset($errors['COMPOSER-VALIDATE-JSON']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' )\r\n                          . '<\/a><\/div>' . \"\\n\";\r\n                        \r\n                      } elseif (preg_match('\/composer(?:-setup)?\\.(json|lock|php|phar)\/', basename($path))) {\r\n                        echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\">';\r\n              \r\n                        if (basename($path) == 'composer.json')\r\n                          echo '<img src=\"resources\/images\/composer_json_file.gif\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                        . (isset($errors['COMPOSER-VALIDATE-JSON']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' )\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n              \r\n                        elseif (basename($path) == 'composer.lock')\r\n              \r\n                          \/\/$errors['COMPOSER-VALIDATE-LOCK']\r\n              \r\n                          echo '<img src=\"resources\/images\/composer_lock_file.gif\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . (isset($errors['COMPOSER-VALIDATE-LOCK']) ? '<div style=\"position: absolute; right: 8px; top: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' )\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                          . '<\/a><\/div>' . \"\\n\";\r\n              \r\n                        elseif (basename($path) == 'composer.phar')\r\n                          echo '<img src=\"resources\/images\/phar_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/a><\/div>' . \"\\n\";\r\n                        else\r\n                          echo '<img src=\"resources\/images\/composer_php_file.gif\" width=\"40\" height=\"50\" \/><br \/>' . basename($path)\r\n                          . '<\/a><\/div>' . \"\\n\";\r\n                      } elseif (preg_match('\/.*\\.js$\/', basename($path))) {\r\n                        if  (basename($path) == 'webpack.config.js')\r\n                          echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/webpack_config_js_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>';\r\n                        else\r\n                          echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/js_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>';\r\n\r\n                      } elseif (preg_match('\/.*\\.md$\/', basename($path))) {\r\n                        echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/md_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>';\r\n              \r\n                      } elseif (preg_match('\/.*\\.php$\/', basename($path))) {\r\n                        if (preg_match('\/^project\\.php\/', basename($path)))\r\n                          echo '<a style=\"position: relative;\" href=\"' . (isset($_GET['project']) ? '?project#!' : '#') . '\" onclick=\"document.getElementById(\\'app_project-container\\').style.display=\\'block\\';\"><div style=\"position: absolute; left: -60px; top: -20px; color: red; font-weight: bold;\">' . (isset($_GET['project']) ? '' : '') . '<\/div><img src=\"resources\/images\/project-icon.png\" width=\"40\" height=\"50\" \/><\/a><br \/><a href=\"' . (isset($_GET['project']) ? '?project#!' : '?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path)) . '\" ' . (isset($_GET['project']) ? 'onclick=\"document.getElementById(\\'app_ace_editor-container\\').style.display=\\'block\\';\"' : '') . '>' . basename($path) . '<\/a>';\r\n                        elseif (basename($path) == 'phpunit.php') echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/phpunit_php_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>';\r\n                        else echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/php_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>';\r\n              \r\n                      } elseif (basename($path) == 'LICENSE') {\r\n                        \/* https:\/\/github.com\/unlicense *\/\r\n                          echo '<div style=\"position: relative;\"><a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/license_file.png\" width=\"40\" height=\"50\" \/><br \/>un' . basename($path)\r\n                        . '.org<\/a>'\r\n              \/*            . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' ) *\/\r\n                        . '<\/div>' . \"\\n\";\r\n                      } elseif (basename($path) == basename(ini_get('error_log')))\r\n                        echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\">'\r\n                        . '<div style=\"position: relative;\"><img src=\"resources\/images\/error_log.png\" width=\"40\" height=\"50\" \/><\/a><br \/><a id=\"app_php-error-log\" href=\"' . (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') . \/* '?' . basename(ini_get('error_log')) . '=unlink' *\/ '\" style=\"text-decoration: line-through; background-color: red; color: white;\">' . basename($path)\r\n                        . (is_readable($path = ini_get('error_log')) && filesize($path) > 0 ? '<\/a><div style=\"position: absolute; right: 8px; bottom: -6px; color: red; font-weight: bold;\">[1]<\/div>' : '' )\r\n                        . '<\/div>' . \"\\n\";\r\n                      else\r\n                        echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\"><img src=\"resources\/images\/php_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>';\r\n                    }\r\n                    echo '<\/td>' . \"\\n\";\r\n                    if ($count >= 6) echo '<\/tr><tr>';\r\n                    elseif ($path == end($paths)) echo '<\/tr>';\r\n              \r\n                    if (isset($count) && $count >= 6) $count = 1;\r\n                    else $count++;\r\n                }\r\n              ?>\r\n         <!-- - \/tr -->\r\n        <\/table> <?php } ?>\r\n        <?php\r\n          $cwd_table = ob_get_contents();\r\n          ob_end_clean();\r\n\r\n          echo $cwd_table;\r\n        } ?>\r\n      <\/div>\r\n    <\/div>\r\n\r\n    <?= $appTimesheet['body']; ?>\r\n    <?= $appBrowser['body']; ?>\r\n    <?= $appGithub['body']; ?>\r\n    <?= $appPackagist['body']; ?>\r\n    <?= $appWhiteboard['body']; ?>\r\n    <?= $appNotes['body']; ?>\r\n    <!-- https:\/\/pong-2.com\/ -->\r\n    <?= $appPong['body']; ?>\r\n\r\n    <\/div>\r\n    <\/div>\r\n    <!-- \/div -->\r\n\r\n    <?= (defined('UI_GIT') ? UI_GIT['body'] : null); ?>\r\n    <?= (defined('UI_PHP') ? UI_PHP['body'] : null); \/* print(...) *\/ ?>\r\n    <?= (defined('UI_COMPOSER') ? UI_COMPOSER['body'] : null); \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n    <?= (defined('UI_NPM') ? UI_NPM['body'] : null); ?>\r\n    <?= (defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['body'] : null); ?>\r\n    \r\n    <?= $appProject['body']; ?>\r\n    \r\n    <?= $appConsole['body']; ?>\r\n    <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n    <!-- https:\/\/code.jquery.com\/jquery-3.7.1.min.js -->\r\n    <!-- script src=\"https:\/\/code.jquery.com\/jquery-3.6.0.min.js\" integrity=\"sha256-\/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej\/m4=\" crossorigin=\"anonymous\"><\/script -->\r\n    <?php\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/jquery\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'jquery-3.7.1.min.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'jquery-3.7.1.min.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n          if (!empty($js = curl_exec($handle))) \r\n            file_put_contents($path . 'jquery-3.7.1.min.js', $js) or $errors['JS-JQUERY'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle))) \r\n          file_put_contents($path . 'jquery-3.7.1.min.js', $js) or $errors['JS-JQUERY'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n      ?>\r\n    <div style=\"position: fixed; display: none; top: 0; left: 0; z-index: 1; height: 500px; background-color: #FFF; width: 300px;\">\r\n      <span>Loading Time: <?= round(microtime(true) - APP_START, 3); ?>s<\/span><br \/>\r\n      <span>Environment: <\/span><br \/>\r\n      <span>Domain: <?= APP_DOMAIN; ?><\/span><br \/>\r\n      <span>IP Address: <\/span><br \/>\r\n      <span>App Path: <?= APP_PATH; ?><\/span><br \/>\r\n    <\/div>\r\n    \r\n    <div id=\"adhd_song-container\" style=\"position: fixed; display: none; bottom: 0; right: 0; z-index: 1;\">\r\n      <img src=\"\/resources\/reels\/adhd_song.gif\" \/>\r\n    <\/div>\r\n\r\n<!--\r\n    <div id=\"ui_ace_editor\" class=\"editor\">This is the first editor.<\/div>\r\n    <div id=\"app_project_editor\" class=\"editor\">This is the second editor.<\/div>\r\n-->\r\n\r\n\r\n    <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : APP_BASE['resources'] . 'js\/jquery\/' . 'jquery-3.7.1.min.js' ?>\"><\/script>\r\n    <!-- You need to include jQueryUI for the extended easing options. -->\r\n    <?php \/* https:\/\/stackoverflow.com\/questions\/12592279\/typeerror-p-easingthis-easing-is-not-a-function *\/ ?>\r\n    <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n    \r\n<?php\r\n      \/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')? [[jquery-ui]-[1.12.1].js]\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/jquery-ui\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'jquery-ui-1.12.1.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'jquery-ui-1.12.1.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n          if (!empty($js = curl_exec($handle))) \r\n            file_put_contents($path . 'jquery-ui-1.12.1.js', $js) or $errors['JS-JQUERY-UI'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle))) \r\n          file_put_contents($path . 'jquery-ui-1.12.1.js', $js) or $errors['JS-JQUERY-UI'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n?>\r\n    <script src=\"<?= (realpath(APP_PATH . ($path = APP_BASE['resources'] . 'js\/jquery-ui\/jquery-ui-1.12.1.js')) ? $path : (check_http_status($url) ? substr($url, strpos($url, parse_url($url)['host']) + strlen(parse_url($url)['host'])) : '')) ?>\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n    \r\n    <!-- For Text \/ Ace Editor -->\r\n    <!-- <script src=\"https:\/\/unpkg.com\/@popperjs\/core@2\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <?php\r\n      is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/requirejs\/') or mkdir($path, 0755, true);\r\n      if (is_file($path . 'require-2.3.6.js')) {\r\n        if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . '\/require-2.3.6.js'))))) \/ 86400)) <= 0 ) {\r\n          $url = 'https:\/\/requirejs.org\/docs\/release\/2.3.6\/minified\/require.js';\r\n          $handle = curl_init($url);\r\n          curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n          if (!empty($js = curl_exec($handle)))\r\n            file_put_contents($path . 'require-2.3.6.js', $js) or $errors['JS-REQUIREJS'] = $url . ' returned empty.';\r\n        }\r\n      } else {\r\n        $url = 'https:\/\/requirejs.org\/docs\/release\/2.3.6\/minified\/require.js';\r\n        $handle = curl_init($url);\r\n        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n      \r\n        if (!empty($js = curl_exec($handle)))\r\n          file_put_contents($path . 'require-2.3.6.js', $js) or $errors['JS-REQUIREJS'] = $url . ' returned empty.';\r\n      }\r\n      unset($path);\r\n      ?>\r\n\r\n    <script src=\"<?= APP_BASE['resources'] . 'js\/requirejs\/require-2.3.6.js' ?? $url ?>\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n\r\n<?php if (is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/ace')) { ?>\r\n\r\n    <script src=\"resources\/js\/ace\/src\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> <!-- -->\r\n    <script src=\"resources\/js\/ace\/src\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n\r\n<script>\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n                \r\n      <?= $appProject['script']; ?>\r\n\r\n\/*\r\n            var editor1 = ace.edit(\"editor1\");\r\n            editor1.setTheme(\"ace\/theme\/monokai\");\r\n            editor1.session.setMode(\"ace\/mode\/javascript\");\r\n\r\n            var editor2 = ace.edit(\"editor2\");\r\n            editor2.setTheme(\"ace\/theme\/github\");\r\n            editor2.session.setMode(\"ace\/mode\/html\");\r\n*\/\r\n        });\r\n\r\n\r\n  <\/script>\r\n\r\n<?php } ?>\r\n    <!-- <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/ace\/1.4.12\/ext-language_tools.js\"><\/script>\r\n      <script src=\"resources\/js\/ace\/src\/mode-php.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n      \r\n      <script src=\"resources\/js\/ace\/src\/theme-dracula.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <!--   <script src=\"dist\/bundle.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <!-- End: For Text \/ Ace Editor -->\r\n    <!-- <script src=\"resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n    <?php if (date(\/*Y-*\/ 'm-d') == \/*1928-*\/ '08-07' ?? \/*2023-*\/ '03-30') { ?>\r\n    <script src=\"resources\/reels\/leave-a-light-on.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } elseif (date(\/*Y-*\/ 'm-d') == \/*1976-*\/ '03-20' ?? \/*2017-*\/ '07-20') { ?>\r\n    <script src=\"resources\/reels\/leave-a-light-on.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } else {  \/\/ array_rand() can't be empty ?>\r\n    <script src=\"<?= APP_BASE['resources'] . 'reels\/' . 'adhd_song.js'; \/* !empty($reels = glob(APP_PATH . 'resources\/reels\/*.js')) ? APP_BASE['resources'] . 'reels\/' . basename(array_rand(array_flip(array_filter($reels, 'is_file')), 1)) : ''; APP_BASE['resources'] *\/?>\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } ?>\r\n    <script type=\"text\/javascript\" charset=\"utf-8\">\r\n\r\nlet isDragging = false;\r\nlet activeWindow = null;\r\n\r\nfunction makeDraggable(windowId) {\r\n    const windowElement = document.getElementById(windowId);\r\n    const headerElement = windowElement.querySelector('.ui-widget-header');\r\n    let offsetX, offsetY;\r\n\r\n    headerElement.addEventListener('mousedown', function(event) {\r\n        if (!isDragging) {\r\n            \/\/ Bring the clicked window to the front\r\n            document.body.appendChild(windowElement);\r\n            offsetX = event.clientX - windowElement.getBoundingClientRect().left;\r\n            offsetY = event.clientY - windowElement.getBoundingClientRect().top;\r\n            isDragging = true;\r\n            activeWindow = windowElement;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mousemove', function(event) {\r\n        if (isDragging && activeWindow === windowElement) {\r\n            const left = event.clientX - offsetX;\r\n            const top = event.clientY - offsetY;\r\n\r\n            \/\/ Boundary restrictions\r\n            const maxX = window.innerWidth - windowElement.clientWidth - 100;\r\n            const maxY = window.innerHeight - windowElement.clientHeight;\r\n\r\n            windowElement.style.left = `${Math.max(-200, Math.min(left, maxX))}px`;\r\n            windowElement.style.top = `${Math.max(0, Math.min(top, maxY))}px`;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mouseup', function() {\r\n        if (activeWindow === windowElement) {\r\n            isDragging = false;\r\n            activeWindow = null;\r\n        }\r\n    });\r\n}\r\n      \r\n      makeDraggable('app_ace_editor-container');\r\n      makeDraggable('app_composer-container');\r\n      \/\/ makeDraggable('app_project-container');\r\n      makeDraggable('app_git-container');\r\n      makeDraggable('app_npm-container');\r\n      makeDraggable('app_php-container');\r\n      \r\n      \r\n      displayDirectoryBtn.addEventListener('click', () => {\r\n      \r\n      event.preventDefault();\r\n      const appDirectoryContainer = document.getElementById('app_directory-container');\r\n      \r\n      \/\/const styles = window.getComputedStyle(appDirectoryContainer);\r\n      const displayDirectoryBtn = document.getElementById('displayDirectoryBtn');\r\n      \r\n      console.log('state : ' + appDirectoryContainer.style.display );\r\n\r\n\r\n\r\n\/**\/\r\n      if (appDirectoryContainer.style.display == 'none') {   \r\n\r\n<?php if (isset($_GET['client']) && !$_GET['client']) { ?>\r\n      if (confirm('Do you wish to display clients?')) {\r\n    \/\/ User clicked OK\r\n    console.log('User clicked OK');\r\n    $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n    });\r\n} else {\r\n    \/\/ User clicked Cancel\r\n    console.log('User clicked Cancel');\r\n    $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n    });\r\n}<?php } else { ?>\r\n      $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n     });\r\n     <?php } ?>\r\n        console.log('hide');\r\n          displayDirectoryBtn.innerHTML = '&nbsp;&#9650;';\r\n      } else {\r\n \r\n\r\n        $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n      \r\n          displayDirectoryBtn.innerHTML = '&nbsp;&#9660;';  \r\n        console.log('show');\r\n      }\r\n\r\n      \/\/show_console();\r\n      \r\n      });\r\n      \r\n      \r\n      \r\n      \r\n      function toggleSwitch(element) {\r\n      \r\n      if (element.checked) {\r\n        \/\/ Third option is selected\r\n        \/\/ Add your logic here\r\n        console.log('checked');\r\n\r\n        \/\/getElementById('hide_notice-container');\r\n        \r\n        \r\n        \r\n        <?php if (isset($errors['GIT_UPDATE'])) { ?> \r\n        $( '#hide_notice-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        <?php } ?>\r\n      \r\n        $( '#app_console-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n\r\n        <?php if (isset($_GET['client']) && $_GET['client'] != '') { ?>\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n          });\r\n         <?php } ?>\r\n\r\n        \r\n        $(\"#debug-content\").css('overflow', 'visible');\r\n        \r\n      $(\"#debug-content\").show(\"slide\", { direction: \"up\" }, 1000);\r\n      \r\n      \/\/$(\"#app_backup-container\").show(\"slide\", { direction: \"right\" }, 1000);\r\n      \r\n      } else {\r\n\r\n        $( '#hide_notice-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n        $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n         \/\/ Animation complete.\r\n        });\r\n        \r\n        \/\/ Third option is not selected\r\n        \/\/ Add your logic here\r\n        console.log('(not) checked');\r\n\r\n        $( '#app_console-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n<?= (!empty($errors) ? ' show_console();' : 'show_console();' ) ?>\r\n\r\n        $('#requestInput').attr('autofocus', true);\r\n            \r\n      $(\"#debug-content\").hide(\"slide\", { direction: \"up\" }, 1000);\r\n      \r\n      \/\/$(\"#app_backup-container\").hide(\"slide\", { direction: \"right\" }, 1000);\r\n      }\r\n      }\r\n      \r\n      function toggleIframeUrl(uri_location) {\r\n            \/\/ Uncheck the checkbox\r\n            document.getElementById('toggle-debug').checked = false;\r\n            \r\n            toggleSwitch(document.getElementById('toggle-debug'));\r\n\r\n            \/\/ Set the src attribute of the iframe\r\n            document.getElementById('iWindow').src = uri_location;\r\n        }\r\n      \r\n      $(document).ready(function(){\r\n        $( \"#app_console-container\").css('display', 'none');\r\n        if ($( \"#app_directory-container\" ).css('display') == 'none') {\r\n      <?php if (isset($_GET['debug'])) { ?>\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n          });\r\n      <?php } else if (isset($_GET['path'])) { ?>\r\n        document.getElementById('toggle-debug').checked = true;\r\n\r\n        toggleSwitch(document.getElementById('toggle-debug'));\r\n\/**\/\r\n        $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n         \/\/ Animation complete.\r\n        });\r\n\r\n      <?php } else if (isset($_GET['project'])) { ?>\r\n        document.getElementById('toggle-debug').checked = true;\r\n\r\n        toggleSwitch(document.getElementById('toggle-debug'));\r\n\/**\/\r\n        $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n         \/\/ Animation complete.\r\n        });\r\n\r\n      <?php } else if (defined('APP_ROOT') && APP_ROOT != '' && isset($errors['GIT_UPDATE']) && isset($_ENV['HIDE_UPDATE_NOTICE']) && $_ENV['HIDE_UPDATE_NOTICE'] != true ) { \/\/  isset($_GET['client'])  !$_GET['client'] \r\n      \r\n        \r\n      if ($_GET['client'] != '') { ?>\r\n          document.getElementById('toggle-debug').checked = true;\r\n\r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n\/*\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n          });\r\n*\/\r\n        <?php } else if (!empty($_GET)) { ?>\r\n\r\n          document.getElementById('toggle-debug').checked = true;\r\n            \r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n          \r\n          <?php } else { ?>\r\n      \r\n      <?php if (!isset($_GET['domain'])) { \/\/ !$_GET['client'] ?>\r\n\r\n          document.getElementById('toggle-debug').checked = true;\r\n            \r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n          \r\n      <?php }  }  } else { if (isset($_GET['client']) && !$_GET['client']) { ?>\r\n\r\n\r\n        if (confirm('Do you wish to display clients?')) {\r\n\/\/ User clicked OK\r\nconsole.log('User clicked OK');\r\n$( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n       \/\/ Animation complete.\r\n});\r\n} else {\r\n\/\/ User clicked Cancel\r\nconsole.log('User clicked Cancel');\r\n$( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n       \/\/ Animation complete.\r\n});\r\n}\r\n\r\n\r\n\r\n          <?php  if (!isset($_GET['domain'])) { \/\/ !$_GET['client'] ?>\r\n\r\n          document.getElementById('toggle-debug').checked = true;\r\n            \r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n          \r\n      <?php } else {?>\r\n\/*\r\n          document.getElementById('toggle-debug').checked = true;\r\n\r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n          });\r\n*\/\r\n        <?php } } else if (isset($_GET['client']) && $_GET['client'] != '') { ?>\r\n          document.getElementById('toggle-debug').checked = false;\r\n\r\n\r\n          \/\/toggleSwitch(document.getElementById('toggle-debug'));\r\n\r\n          \/\/$( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n          \/\/});\r\n\r\n          <?php } } ?>\r\n        }\r\n      });\r\n      \r\n      <?= $appConsole['script']; ?>\r\n      \r\n      \/\/ Define the function to be executed when \"c\" key is pressed\r\n\r\n      \r\n      document.addEventListener('keydown', function() {\r\n      \/\/ Check if the pressed key is \"c\" (you can use event.key or event.keyCode)\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed)\r\n                    requestInput.focus();\r\n                event.preventDefault();\r\n                show_console();\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n        else if (event.key === 'c' || event.keyCode === 67) {\r\n          \/\/ Execute your desired function or code here\r\n          console.log('The \"c\" key was pressed!');\r\n          \/\/ Replace the above line with the actual code you want to execute\r\n        }\r\n        console.log('keyboard shortcut');\r\n      });\r\n      \r\n      \/\/ Attach the event listener to the window object\r\n      window.addEventListener('keydown', function() {\r\n            \/\/ Check the condition before calling the show_console function\r\n            \/\/if (myDiv.style.position !== 'fixed')\r\n\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed)\r\n                    requestInput.focus();\r\n                event.preventDefault();\r\n                if (isFixed) isFixed = !isFixed;\r\n                isFixed = false;\r\n                show_console();\r\n                return false;\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n\r\n\r\n            console.log('windowEvent');\r\n            \r\n            var textField = document.getElementById('requestInput');\r\n\r\n            \/\/ Check if the text field is focused\r\n            var isFocused = textField === document.activeElement;\r\n            \r\n            if (  document.getElementById('app_console-container').style.position != 'absolute') {\r\n\r\n              if (!isFixed) {\r\n                \/\/requestInput.focus();\r\n              } else {\r\n                \/\/show_console();\r\n              }\r\n            } else {\r\n\r\n\r\n              if (isFixed) isFixed = !isFixed;\r\n              isFixed = true;\r\n            \r\n              if (isFocused)  show_console();\r\n            }\r\n        });\r\n\r\n      <?= (defined('UI_GIT') ? UI_GIT['script'] : null); ?>\r\n      <?= (defined('UI_PHP') ? UI_PHP['script'] : null); \/* print(...) *\/ ?>\r\n      <?= (defined('UI_COMPOSER') ? UI_COMPOSER['script'] : null); \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n      <?= (defined('UI_NPM') ? UI_NPM['script'] : null); ?>\r\n\r\n      \r\n      <?= \/* (defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['script'] : null); *\/ NULL;?>\r\n\r\n\r\n      <?= $appBrowser['script']; ?>\r\n      \r\n      <?= $appGithub['script']; ?>\r\n      \r\n      <?= $appPackagist['script']; ?>\r\n      \r\n      <?= \/*$appWhiteboard['script'];*\/ NULL; ?>\r\n      \r\n      <?= \/*$appNotes['script'];*\/ NULL; ?>\r\n      \r\n      \r\n      <?= \/*$appBackup['script']*\/ NULL; ?>\r\n      \r\n      \r\n      <?= $appPong['script']; ?>\r\n      \r\n      \/*\r\n      require.config({\r\n      baseUrl: window.location.protocol + \"\/\/\" + window.location.host\r\n      + window.location.pathname.split(\"\/\").slice(0, -1).join(\"\/\"),\r\n      \r\n      paths: {\r\n        jquery: 'resources\/js\/jquery\/jquery.min',\r\n        domReady: 'resources\/js\/domReady',\r\n        bootstrap: 'resources\/js\/bootstrap\/dist\/js\/bootstrap',\r\n        ace: 'resources\/js\/ace\/src\/ace',\r\n        'lib\/dom': 'resources\/js\/ace\/src\/lib\/dom',\r\n        useragent: 'resources\/js\/ace\/src\/lib\/useragent',\r\n        exports: 'resources\/js\/ace\/src\/lib\/',\r\n        \r\n        \/\/'..\/snippets': 'resources\/js\/ace\/lib\/ace\/snippets',\r\n        \/\/'.\/lib\/oop': 'resources\/js\/ace\/src\/lib'\r\n      }\r\n      });\r\n      *\/\r\n<?php \r\nif (is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/ace')) { ?>\r\n      var globalEditor; \/\/ Define a global variable\r\n      \r\n        require.config({\r\n          baseUrl: window.location.protocol + \"\/\/\" + window.location.host\r\n          + window.location.pathname.split(\"\/\").slice(0, -1).join(\"\/\"),\r\n          paths: {\r\n            ace: \"resources\/js\/ace\/src\"\r\n          }\r\n        });\r\n        \r\n        define('testace', ['ace\/ace'], function(ace) {\r\n                \/\/console.log(langtools);\r\n      \r\n      <?= UI_ACE_EDITOR['script']; ?>\r\n                \/\/require([\"resources\/js\/requirejs\/require-2.3.6!ace\/ace\"], function(e){\r\n                    \/\/editor.setValue(e);\r\n                \/\/})\r\n                \r\n            globalEditor = appEditor;\r\n            return appEditor;\r\n        });\r\n        \r\n        require(['testace'], function (appEditor) {\r\n            console.log(appEditor);\r\n        });\r\n<?php } ?>\r\n      \/*\r\n        require.config({paths: {ace: \"..\/src\"}})\r\n        define('testace', ['ace\/ace'],\r\n            function(ace, langtools) {\r\n                console.log(\"This is the testace module\");\r\n                var editor = ace.edit(\"editor\");\r\n                editor.setTheme(\"ace\/theme\/twilight\");\r\n                editor.session.setMode(\"ace\/mode\/javascript\");\r\n                require([\"ace\/requirejs\/text!src\/ace\"], function(e){\r\n                    editor.setValue(e);\r\n                })\r\n            }\r\n        );\r\n        require(['testace'])\r\n\r\n      require(['jquery', 'domReady', 'bootstrap', 'ace', 'lib\/dom', 'useragent'], function($, domReady) {\r\n      console.log('domReady is working ... ');\r\n      \/\/ Code that uses 'lib\/dom'\r\n      });\r\n      *\/\r\n      \/\/ ,'lib\/dom', '..\/snippets', '.\/lib\/oop'\r\n      \/*\r\n      require(['jquery','domReady','bootstrap','ace\/ace'], function($, domReady) {\r\n        domReady(function () {\r\n      \r\n      console.log(require.config);\r\n      console.log('domReady is working ... ');\r\n      \r\n        })\r\n      });\r\n      *\/\r\n      \r\n      <?= $appTimesheet['script']; ?>\r\n      \r\n    <\/script>\r\n  <\/body>\r\n<\/html>\r\n\r\n<?= \r\n NULL; \/** Loading Time: 15.0s **\/\r\n\/\/  dd(get_required_files(), true); \r\n?>",
"public/idx.product.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]))\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('config.php'))) {\r\n      require_once $path;\r\n    }\r\n  }\r\n  else\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n\r\nheader(\"Content-Type: text\/html\");\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\");\r\n\r\nif (isset($_GET['path']) && $_GET['path'] != '' && realpath($_GET['path']) && is_dir($_GET['path']))\r\n  $_GET['path'] = rtrim(ltrim($_GET['path'], '\/'), '\/'); ?>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n    <script src=\"https:\/\/d3js.org\/d3.v7.min.js\"><\/script>\r\n\r\n    <base href=\"<?=(!is_array(APP_URL) ? APP_URL : APP_URL_BASE) . (preg_match('\/^\\\/(?!\\?)$\/', $_SERVER['REQUEST_URI']) ? '?' : '') . (!defined('APP_DEBUG') ? '#' : '?' . (APP_URL['query'] != '' ? APP_URL['query'] : '')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : ''); ?>\">\r\n\r\n    <title>Multiple Ace Editor Instances<\/title>\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\n\r\n\/\/ <link rel=\"stylesheet\" href=\"https:\/\/code.jquery.com\/ui\/1.12.1\/themes\/base\/jquery-ui.css\">\r\n\/\/ <link rel=\"stylesheet\" href=\"resources\/css\/output.css\">\r\n\r\nif (!is_file($path = APP_PATH . APP_BASE['resources'] . 'js\/tailwindcss-3.3.5.js') || ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path))))) \/ 86400)) <= 0  ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle)))\r\n        file_put_contents($path, $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n\r\nif (is_file($path)) { ?>\r\n    <script src=\"<?= APP_BASE['resources'] . 'js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n<?php }\r\nunset($path);\r\n?>\r\n\r\n    <style type=\"text\/tailwindcss\">\r\n        .editor {\r\n            width: 500px;\r\n            height: 200px;\r\n            margin-bottom: 20px;\r\n        }\r\n        * {\r\n        margin: 0;\r\n\t      padding: 0;\r\n\t      box-sizing: border-box;\r\n<?php if (isset($_GET['debug'])) { ?>\r\n        border: 1px dashed #FF0000;\r\n<?php } else { ?> \r\n        \/* border: 1px dashed #FF0000; *\/\r\n<?php } ?>\r\n      }\r\n      *:focus {\r\n\t      outline: none;\r\n      }\r\n\r\n      body {\r\n        background-color: #FFF;\r\n        overflow-x: hidden;\r\n      }\r\n      .row-container { display: flex; width: 100%; height: 100%; flex-direction: column; overflow: hidden; }\r\n\r\n      <?= defined('UI_GIT') ? UI_GIT['style'] : null; ?>\r\n      <?= defined('UI_PHP') ? UI_PHP['style'] : null; \/* print(...) *\/ ?>\r\n      <?= defined('UI_COMPOSER') ? UI_COMPOSER['style'] : null; \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n      <?= defined('UI_NPM') ? UI_NPM['style'] : null; ?>\r\n      <?= defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['style'] : null; ?>\r\n      <?= defined('UI_NODES') ? UI_NODES['style'] : null; ?>\r\n\r\n      <?= $apps['browser']['style']; ?>\r\n      <?= $apps['github']['style']; ?>\r\n      <?= $apps['packagist']['style']; ?>\r\n      <?= $apps['whiteboard']['style']; ?>\r\n      <?= $apps['notes']['style']; ?> \r\n      <?= $apps['pong']['style']; ?>\r\n\r\n      <?= \/*$appBackup['style']*\/ NULL; ?>\r\n      <?= $apps['console']['style']; ?>\r\n      <?= $apps['timesheet']['style']; ?>\r\n      <?= $apps['project']['style']; ?>\r\n      .container2 {\r\n      position: relative;\r\n      display: inline-block;\r\n      text-align: center;\r\n      z-index: 1;\r\n      }\r\n      .overlay {\r\n      position: absolute;\r\n      top: 25px;\r\n      left: 10px;\r\n      width: 150px;\r\n      height: 225px;\r\n      background-color: rgba(0, 120, 215, 0.7);\r\n      color: white;\r\n      \/*font-size: 24px;*\/\r\n      text-align: left;\r\n      opacity: 0;\r\n      transition: opacity 0.8s;\r\n      }\r\n      .pkg_dir:hover .overlay {\r\n      opacity: 1;\r\n      }\r\n      table {\r\n      border-collapse: separate;\r\n      border-spacing: 10px;\r\n      border-color: #fff;\r\n      }\r\n\r\n      td, th {\r\n      padding: 8px;\r\n      max-width: 100px;\r\n      \/* text-align: center; *\/\r\n      }\r\n      \/* the interesting bit *\/\r\n      .label {\r\n      pointer-events: none;\r\n      display: flex;\r\n      align-items: center;\r\n      }\r\n      .switch,\r\n      .input:checked + .label .left,\r\n      .input:not(:checked) + .label .right {\r\n      pointer-events: all;\r\n      cursor: pointer;\r\n      }\r\n      \/* most of the stuff below is the same as the W3Schools stuff,\r\n      but modified a bit to reflect changed HTML structure *\/\r\n      .input {\r\n      display: none;\r\n      }\r\n      .switch {\r\n      position: relative;\r\n      display: inline-block;\r\n      width: 60px;\r\n      height: 34px;\r\n      }\r\n      .slider {\r\n      position: absolute;\r\n      cursor: pointer;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background-color: #ccc;\r\n      -webkit-transition: 0.4s;\r\n      transition: 0.4s;\r\n      }\r\n      .slider:before {\r\n      position: absolute;\r\n      content: \"\";\r\n      height: 26px;\r\n      width: 26px;\r\n      left: 4px;\r\n      bottom: 4px;\r\n      background-color: white;\r\n      -webkit-transition: 0.4s;\r\n      transition: 0.4s;\r\n      }\r\n      \r\n      input:checked + .label .slider {\r\n      background-color: #2196f3;\r\n      }\r\n      input:focus + .label .slider {\r\n      box-shadow: 0 0 1px #2196f3;\r\n      }\r\n      input:checked + .label .slider:before {\r\n      -webkit-transform: translateX(26px);\r\n      -ms-transform: translateX(26px);\r\n      transform: translateX(26px);\r\n      }\r\n      .slider.round {\r\n      border-radius: 34px;\r\n      }\r\n      .slider.round:before {\r\n      border-radius: 50%;\r\n      }\r\n      \/* styling to make it look like your screenshot *\/\r\n      .left, .right {\r\n      margin: 0 .5em;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      font-family: sans-serif;\r\n      }\r\n      .ui-widget-header {\r\n      cursor: pointer;\r\n      }\r\n    <\/style>\r\n<\/head>\r\n<body>\r\n\r\n<div style=\"position: relative; width: 100%; height: 100%; z-index: 1; border: 1px solid green;\">\r\n\r\n<div class=\"row-container\" style=\"position: absolute; left: 0; top: 0;\">\r\n  <?php \/\/ https:\/\/stackoverflow.com\/questions\/86428\/what-s-the-best-way-to-reload-refresh-an-iframe ?>\r\n  <iframe id=\"iWindow\" src=\"<?php if (!empty($_GET['client'])) {\r\n      $path = \/*'..\/..\/'.*\/ '\/clientele\/' . $_GET['client'] . '\/';\r\n      $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\r\n      if (count($dirs) == 1)\r\n        foreach($dirs as $dir) {\r\n          $dirs[0] = $dirs[array_key_first($dirs)];\r\n          if (preg_match(DOMAIN_EXPR, strtolower(basename($dirs[0])))) {\r\n            $_GET['domain'] = basename($dirs[0]);\r\n            break;\r\n          }\r\n          else unset($dirs[array_key_first($dirs)]);\r\n          continue;\r\n        }\r\n\r\n      $dirs = array_filter(glob(dirname(__DIR__) . '\/' . $path . '*'), 'is_dir');\r\n\r\n      if (!empty($_GET['domain']))\r\n        foreach($dirs as $key => $dir) {\r\n          if (basename($dir) == $_GET['domain']) {\r\n            if (is_dir($dirs[$key].'\/public\/'))\r\n              $path .= basename($dirs[$key]).'\/public\/';\r\n            else \r\n              $path .= basename($dirs[$key]);\r\n            break;\r\n          }\r\n        }\r\n      else if (!isset($_GET['domain']) && count($dirs) >= 1) {\r\n        $path .= basename($_GET['domain'] = array_values($dirs)[0]) . DIRECTORY_SEPARATOR;\r\n\r\n        if (is_dir(dirname(__DIR__) . $path . 'public\/')) {\r\n          $path .= 'public\/';\r\n        }\r\n        \/\/die(var_dump($path));\r\n      }\r\n        \/\/else \r\n        \/\/exit(header('Location: http:\/\/localhost\/clientele\/' . $_GET['client']));    \r\n    \r\n      \/\/$path = '?path=' . $path;\r\n    } elseif (!empty($_GET['project'])) {\r\n      $path = '\/projects\/' . $_GET['project'] . '\/';   \r\n      \/\/$dirs = array_filter(glob(dirname(__DIR__) . '\/projects\/' . $_GET['project'] . '\/*'), 'is_dir');\r\n      \r\n    } else { $path = ''; }  \r\n    \/\/if (empty(APP_URL['query'])) echo 'developer.php';\r\n    \/\/else\r\n    \/\/ developer.php\r\n    echo $path; ?>\" style=\"height: 100%;\"><\/iframe>\r\n<\/div>\r\n<?= \/* $apps['backup']['body'] *\/ NULL;?>\r\n<div style=\"position: relative; margin: 0px auto; width: 100%; border: 1px solid #000;\">\r\n\r\n  <div style=\"position: relative; margin: 0px auto; width: 800px;\">\r\n    <div style=\"position: absolute; <?= \/* (empty($errors) ? 'display: none;' : '') *\/ NULL; ?>left: -144px; \/*width: 150px;*\/ z-index: 3;\">\r\n      <!--form action=\"#!\" method=\"GET\">\r\n        <?= isset($_GET['debug']) && !$_GET['debug'] ? '' : '<input type=\"hidden\" name=\"debug\" value \/ >' ?> \r\n              <input class=\"input\" id=\"toggle-debug\" type=\"checkbox\" onchange=\"this.form.submit();\" <?= isset($_GET['debug']) || defined('APP_ENV') && APP_ENV == 'development' ? 'checked' : '' ?> \/ -->\r\n      <input class=\"input\" id=\"toggle-debug\" type=\"checkbox\" onchange=\"toggleSwitch(this); return null;\" <?= isset($_GET['debug']) || defined('APP_ENV') && APP_ENV == 'development' ? 'checked' : '' ?> \/>\r\n      <label class=\"label\" for=\"toggle-debug\" style=\"margin-left: -10px;\">\r\n        <div class=\"switch\">\r\n          <span class=\"slider round\"><\/span>\r\n          \r\n          <div id=\"hide_notice-container\" style=\"position: absolute; display: <?= (isset($errors['GIT_UPDATE']) ? 'block' : 'none') ?>; left: -20px; top: 40px; width: 100px; background-color: white; color: red; font-variant-caps: all-small-caps; text-align: center;\">[<a onclick=\"getElementById('toggle-debug').click(); \/*toggleSwitch(this);*\/ return null;\" href=\"?hide=update-notice\">Hide Notice<\/a>]<\/div>\r\n        <\/div>\r\n\r\n        <div class=\"right\" style=\"background-color: #0078D7; display: <?= (isset($errors['GIT_UPDATE']) ? 'inline-block' : 'none') ?>; color: #FFF;\"> &nbsp;<span style=\"background-color: #FFF; color: #0078D7;\">&quot;Update&quot;<\/span>&nbsp;<\/div>\r\n      <\/label>\r\n      <!-- \/form -->\r\n    <\/div>\r\n    <div id=\"debug-content\" class=\"absolute\" style=\"position: absolute; display: none; right: 0; text-align: right; background-color: rgba(255, 255, 255, 0.8); border: 1px solid #000; width: 800px; z-index: 1; overflow: visible;\">\r\n      <div style=\"float: left; display: inline; margin: 5px;\"><form style=\"display: inline;\" action=\"\/\" method=\"POST\">Stage: \r\n  <select name=\"environment\" onchange=\"this.form.submit();\">\r\n    <option value=\"develop\" <?= defined('APP_ENV') && APP_ENV == 'development' ? 'selected' : '' ?>>Development<\/option>\r\n    <option value=\"product\" <?= defined('APP_ENV') && APP_ENV == 'production' ? 'selected' : '' ?>>Production<\/option>\r\n    <option value=\"math\" <?= defined('APP_ENV') && APP_ENV == 'math' ? 'selected' : '' ?>>Math<\/option>\r\n  <\/select><\/form>\r\n  <\/div>\r\n\r\n      <a href=\"#\" onclick=\"document.getElementById('app_ace_editor-container').style.display='block';\"><img src=\"resources\/images\/ace_editor_icon.png\" width=\"32\" height=\"32\">ACE Editor<\/a> |\r\n      <a href=\"#\" onclick=\"document.getElementById('app_tools-container').style.display='block';\"><img src=\"resources\/images\/apps_icon.gif\" width=\"20\" height=\"20\"> Tools<\/a> |\r\n      <a href=\"#\" onclick=\"document.getElementById('app_timesheet-container').style.display='block';\"><img src=\"resources\/images\/clock.gif\" width=\"30\" height=\"30\"> Clock-In<\/a> |\r\n      <a href=\"#\" onclick=\"document.getElementById('app_git-container').style.display='block';\"><img src=\"resources\/images\/git_icon.fw.png\" width=\"18\" height=\"18\">Git\/ <img src=\"resources\/images\/github.fw.png\" width=\"18\" height=\"18\">Hub<\/a>\r\n\r\n      <div style=\"position: relative; margin-left: 10px; right: 6px; float: right; z-index: 1;\">\r\n      <div class=\"text-sm\" style=\"display: inline-block; margin: 0 auto;\">\r\n        <form class=\"app_git-push\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n          <!-- <input type=\"hidden\"  \/> -->\r\n          <button type=\"submit\" name=\"cmd\" value=\"push\" disabled><img src=\"resources\/images\/green_arrow.fw.png\" width=\"20\" height=\"25\" style=\"cursor: pointer; margin-left: 6px;\" title=\"This feature is disabled.\" \/><br \/>Push<\/button>\r\n        <\/form>\r\n      <\/div>\r\n      <div class=\"text-sm\" style=\"position: relative; display: inline-block; margin: 0 auto; border: 2px dashed #F00;\">\r\n        <div style=\"position: absolute; display: <?= (isset($errors['GIT_UPDATE']) ? 'block' : 'none') ?>; left: 26px; top: 5px; width: 126px; background-color: #0078D7; color: #FFF; z-index: -1; font-variant-caps: all-small-caps;\"><span style=\"background-color: #FFF; color: #0078D7;\">&lt;- <\/span><span style=\"background-color: #FFF; color: red; margin-right: 2px;\">Click to update&nbsp;<\/span><\/div>\r\n        <form class=\"app_git-pull\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n          <!-- <input type=\"hidden\"  \/> -->\r\n          <button type=\"submit\" name=\"cmd\" value=\"pull\"><img src=\"resources\/images\/red_arrow.fw.png\" width=\"20\" height=\"25\" style=\"cursor: pointer; margin-left: 4px;\" \/><br \/>Pull<\/button>\r\n        <\/form>\r\n      <\/div>\r\n    <\/div>\r\n\r\n      \r\n      <div style=\"position: absolute; top: 40px; left: -15px; z-index: 1; background-color: white; border: <?= defined('APP_ROOT') && APP_ROOT != '' || isset($_GET['path']) ? '2px dashed red' : '1px solid #000'; ?>;\">\r\n        <div style=\"display: inline; margin-top: -7px; float: left; \"><a style=\"font-size: 18pt; font-weight: bold; padding: 0 3px;\" href=\"?path\" onclick=\"handleClick(event, '\/')\">&#8962; <\/a><\/div>\r\n        <?php $path = realpath(APP_ROOT . (isset($_GET['path']) ? DIRECTORY_SEPARATOR . $_GET['path'] : '')) . DIRECTORY_SEPARATOR; \/\/ getcwd()\r\n          if (isset($_GET['path'])) { ?>\r\n        <!-- <input type=\"hidden\" name=\"path\" value=\"<?= $_GET['path']; ?>\" \/> -->\r\n        <?php } ?>\r\n        <?= \r\n          \/\/APP_URL_BASE . \/*basename(__FILE__) .*\/ '?' . http_build_query(APP_QUERY \/*+ array( 'app' => 'ace_editor')*\/) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \r\n          \r\n          \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ NULL; ?>\r\n        <?= '          <button id=\"displayDirectoryBtn\" style=\"margin: 2px 5px 0 0;\" type=\"\">&nbsp;&#9660;<\/button> ' . \"\\n\"; ?>\r\n        <?php\r\n          $main_cat = '        <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\/'  . \"\\n\"\r\n          . '            <select name=\"category\" onchange=\"this.form.submit();\">' . \"\\n\"\r\n          \r\n          . '              <option value=\"\" ' . (empty(APP_QUERY) ? 'selected' : '') . '>' . basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)) . '<\/option>' . \"\\n\"\r\n          . '              <option value=\"application\" ' . (isset($_GET['application']) ? 'selected' : '') . ' ' . (realpath(APP_PATH . \/*'..\/..\/'.*\/ 'applications\/') ? '' : 'disabled') . '>applications<\/option>' . \"\\n\"\r\n          . '              <option value=\"client\" ' . (isset($_GET['client']) ? 'selected' : '') . '>clientele<\/option>' . \"\\n\"\r\n          . '              <option value=\"projects\" ' . (isset($_GET['project']) && $_GET['project'] || preg_match('\/(?:^|&)project(?:[^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>projects<\/option>' . \"\\n\"\r\n          . '              <option value=\"node_module\" ' . (isset($_GET['node_module']) && !$_GET['node_module'] && preg_match('\/(?:^|&)node_module(?![^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>.\/node_modules<\/option>' . \"\\n\"\r\n          . '              <option value=\"resources\" ' . (isset($_GET['path']) && $_GET['path'] == 'resources' ? 'selected' : '') . '>.\/resources<\/option>' . \"\\n\"\r\n          . '              <option value=\"project\" ' . (isset($_GET['project']) && !$_GET['project'] && preg_match('\/(?:^|&)project(?![^&]*=)\/', $_SERVER['QUERY_STRING']) ? 'selected' : '') . '>.\/project<\/option>' . \"\\n\"\r\n          . '              <option value=\"vendor\" ' . (isset($_GET['path']) && $_GET['path'] == 'vendor' ? 'selected' : '') . '>.\/vendor<\/option>' . \"\\n\"\r\n          . '            <\/select>' . \"\\n\"\r\n          . '        <\/form>';\r\n\r\n          if (isset($_GET['project']) \/*&& $_GET['project'] != ''*\/) {\r\n            if ($_GET['project'] == '' || !empty($_GET['project'])) echo $main_cat;\r\n\r\n            $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/*'), 'is_dir');\r\n          ?>\r\n\r\n        <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n          <span title=\"\" style=\"cursor: pointer; margin: 2px 5px 0 0; \" onclick=\"\">\/\r\n          <select name=\"project\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n            <option value=\"\">---<\/option>\r\n            <?php\r\n              while ($link = array_shift($links)) {\r\n                $link = basename($link); \/\/ Get the directory name from the full path\r\n                if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'projects\/' . $link))\r\n                  echo '              <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n              } ?>\r\n          <\/select> \/<\/span><\/form>\r\n\r\n        <?php\r\n          } elseif (isset($_GET['client']) \/*&& $_GET['client'] != ''*\/ ) {\r\n          if ($_GET['client'] == '') echo $main_cat;\r\n          \r\n          $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/*'), 'is_dir');\r\n                   \/* *\/\r\n          ?>\r\n        <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\">\r\n          <span title=\"\" style=\"cursor: pointer; margin: 2px 5px 0 0; \" onclick=\"\">\/\r\n          <select name=\"client\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n            <option value=\"\" style=\"text-align: center;\">--clientele--<\/option>\r\n            <?php\r\n              while ($link = array_shift($links)) {\r\n                $link = basename($link); \/\/ Get the directory name from the full path\r\n                if (is_dir(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $link))\r\n                  echo '              <option value=\"' . $link . '\" ' . (current($_GET) == $link ? 'selected' : '') . '>' . $link . '<\/option>' . \"\\n\";\r\n              }\r\n              ?>\r\n          <\/select> \/<\/span><\/form><?php if (!empty($_GET['client'])) {\r\n          $dirs = array_filter(glob(dirname(__DIR__) . \/*'..\/..\/'.*\/ '\/clientele\/' . $_GET['client'] . '\/*'), 'is_dir'); ?><form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"\" method=\"GET\"><?= (isset($_GET['client']) && !$_GET['client'] ? '' : '<input type=\"hidden\" name=\"client\" value=\"' . $_GET['client'] . '\" \/ >') ?><select id=\"domain\" name=\"domain\" onchange=\"this.form.submit();\">\r\n            <option value=\"\" <?= (isset($_GET['domain']) && $_GET['domain'] == '' ? 'selected' : '') ?>>---<\/option>\r\n            <?php foreach ($dirs as $dir) { ?>\r\n            <option <?= (isset($_GET['domain']) && $_GET['domain'] == basename($dir) ? 'selected' : '') ?>><?= basename($dir); ?><\/option>\r\n            <?php } ?>\r\n          <\/select> \/<\/form>\r\n          <?php } ?>\r\n\r\n      <?php } else {\r\n        \/\/.'<a style=\"\" href=\"' . (APP_URL['query'] != '' ? '?' . APP_URL['query'] : '') . (isset($_GET['path']) && $_GET['path'] != '' ? parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) : (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') ) . '\"><\/a>'\r\n        \r\n        \r\n        echo \/\/'        <form style=\"display: inline;\" action method=\"GET\">'\r\n        $main_cat;\r\n        \/\/. '        <\/form>' . \"\\n\";\r\n        \r\n        echo '        <form style=\"display: inline;\" action method=\"GET\">' . \"\\n\"\r\n        . '          <span title=\"' . APP_PATH . '\" style=\"margin: 2px 5px 0 0; cursor: pointer;\" onclick=\"\"> \/ ' . \"\\n\"; \/* $path; *\/ ?>\r\n      <select name=\"path\" style=\"\" onchange=\"this.form.submit(); return false;\">\r\n        <option value=\"\">.<\/option>\r\n        <option value=\"\">..<\/option>\r\n        <?php\r\n          \/\/ Bug if the dir does not exist it defaults to the root ...\r\n\r\n          if (APP_PATH)\r\n            foreach (array_filter( glob( APP_PATH . APP_ROOT . '*'), 'is_dir') as $dir) {\r\n              echo '              <option value=\"' . (isset($_GET['path']) ?  $_GET['path'] . DIRECTORY_SEPARATOR : '') . basename($dir) . '\"' . (isset($_GET['path']) && $_GET['path'] == basename($dir) ? ' selected' : '' )  . '>' . basename($dir) . '\/<\/option>' . \"\\n\";\r\n            }\r\n          ?>\r\n      <\/select> \/ <a href=\"#test\">+<\/a>\r\n      <\/span>\r\n      <\/form>\r\n\r\n<?php } ?>\r\n      <\/div>\r\n      <div style=\"position: absolute; width: auto; top: 40px; right: -10px; border: 1px dashed green; height: 25px;\">\r\n        <div id=\"clockTime\"><\/div>\r\n      <\/div>\r\n      <div id=\"app_tools-container\" style=\"position: absolute; display: none; width: 800px; margin: 0 auto; height: 500px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n        <div style=\"position: absolute; margin: 80px 45px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_tools-container').style.display='none'; return false;\"><img style=\"text-align: center;\" height=\"25\" width=\"25\" src=\"<?= APP_BASE['resources'] . 'images\/close-red.gif' ?>\" \/><\/a><br \/><\/div>\r\n        <div style=\"position: absolute; margin: 100px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"isFixed = true; show_console(); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/cli.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.console.php\" style=\"text-align: center;\">(CLI)<\/a><\/div>\r\n        <!-- \r\n          <a href=\"javascript:window.open('print.html', 'newwindow', 'width=300,height=250')\">Print<\/a>\r\n          onclick=\"window.open('app.whiteboard.php', 'newwindow', 'width=300,height=250'); return false;\"\r\n          \r\n          https:\/\/stackoverflow.com\/questions\/12939928\/make-a-link-open-a-new-window-not-tab\r\n           -->\r\n        <div style=\"position: absolute; margin: 100px 165px; text-align: center;\" class=\"text-sm\"><a href=\"#\" target=\"_blank\" onclick=\"toggleIframeUrl('app.whiteboard.php'); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/whiteboard.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.whiteboard.php\" style=\"text-align: center;\">Whiteboard<\/a><\/div>\r\n        <div style=\"position: absolute; margin: 100px 260px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_notes-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/notes.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.notes.php\" style=\"text-align: center;\">Notes<\/a><\/div>\r\n        <div style=\"position: absolute; margin: 100px 350px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_project-container').style.display='block'; document.getElementById('toggle-debug').checked = false; toggleSwitch(document.getElementById('toggle-debug')); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/project.png' ?>\" \/><\/a><br \/><a href=\"?app=ace_editor&path=&file=app.project.php\"><span style=\"text-align: center;\">Project<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 100px 0 0 450px ; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_debug-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/debug.png' ?>\" \/><br \/><span style=\"text-align: center;\">Debug<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 100px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_profile-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/user.png' ?>\" \/><br \/><span style=\"text-align: center;\">Profile<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 100px 0 0 630px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/browser.png' ?>\" \/><br \/><span style=\"text-align: center;\">Browser<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 200px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_tools-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/apps.png' ?>\" \/><br \/><span style=\"text-align: center;\">Apps.<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 200px 170px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_calendar-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/calendar.png' ?>\" \/><br \/><span style=\"text-align: center;\">Calendar<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 190px 240px; padding: 20px 40px; background-color: rgba(255, 255, 255, 0.8);\">\r\n          <form action=\"#!\" method=\"GET\">\r\n            <?= '            ' . (isset($_GET['project']) && !$_GET['project'] ? '<input type=\"hidden\" name=\"client\" value=\"\" \/>' : '<input type=\"hidden\" name=\"project\" value=\"\" \/>') ?>\r\n            <div style=\"margin: 0 auto;\">\r\n              <div id=\"clockTime\"><\/div>\r\n            <\/div>\r\n            <input class=\"input\" id=\"toggle-project\" type=\"checkbox\" onchange=\"toggleSwitch(this); this.form.submit();\" <?= isset($_GET['project']) ? 'checked' : '' ?> \/>\r\n            <label class=\"label\" for=\"toggle-project\" style=\"margin-left: -6px;\">\r\n              <div class=\"left\"> Client <\/div>\r\n              <div class=\"switch\" style=\"position: relative;\"><span class=\"slider round\"><\/span><\/div>\r\n              <div class=\"right\"> Project <\/div>\r\n            <\/label>\r\n          <\/form>\r\n        <\/div>\r\n        <div style=\"position: absolute; margin: 200px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"toggleIframeUrl('app.pong.php'); return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/pong.png' ?>\" \/><br \/><span style=\"text-align: center;\">Pong<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 200px 0 0 630px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/regexp.png' ?>\" \/><br \/><span style=\"text-align: center;\">RegExp<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 300px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/chatgpt.png' ?>\" \/><br \/><span style=\"text-align: center;\">ChatGPT<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 300px 160px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/stackoverflow.png' ?>\" \/><br \/><span style=\"text-align: center;\">Stackoverflow<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 300px 260px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/validatejs.png' ?>\" \/><br \/><span style=\"text-align: center;\">ValidateJS<\/span><\/a><\/div>\r\n        <!-- https:\/\/validator.w3.org\/#validate_by_input \/\/ -->\r\n        <div style=\"position: absolute; margin: 300px 340px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/w3c.png' ?>\" \/><br \/><span style=\"text-align: center;\">W3C Validator<\/span><\/a><\/div>\r\n        <!-- https:\/\/tailwindcss.com\/docs\/ \/\/ -->\r\n        <div style=\"position: absolute; margin: 300px 0 0 445px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/tailwindcss.png' ?>\" \/><br \/><span style=\"text-align: center;\">TailwindCSS<br \/>Docs<\/span><\/a><\/div>\r\n        <!-- https:\/\/www.php.net\/docs.php \/\/ -->\r\n        <div style=\"position: absolute; margin: 300px 0 0 540px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/php.png' ?>\" \/><br \/><span style=\"text-align: center;\">PHP Docs<\/span><\/a><\/div>\r\n        <!-- https:\/\/dev.mysql.com\/doc\/ \/\/ -->\r\n        <div style=\"position: absolute; margin: 300px 0 0 625px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/mysql.png' ?>\" \/><br \/><span style=\"text-align: center;\">MySQL Docs<\/span><\/a><\/div>\r\n        <div style=\"position: absolute; top: 400px; left: 65px; width: 80%; margin: 0 auto; height: 15px; border-bottom: 1px solid black; text-align: center; z-index: 0;\">\r\n          <span style=\"font-size: 20px; background-color: #F3F5F6; padding: 0 20px; z-index: 1;\"> USER APPS. <\/span>\r\n        <\/div>\r\n        <div style=\"position: absolute; margin: 430px 75px; text-align: center;\" class=\"text-sm\"><a href=\"#!\" onclick=\"document.getElementById('app_install-container').style.display='block'; return false;\"><span style=\"text-align: center;\">New App.<\/span><br \/><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/install.png' ?>\" \/><\/a><\/div>\r\n        <div style=\"position: absolute; margin: 430px 170px; text-align: center;\" class=\"text-sm\">\r\n          <a href=\"?app=ace_editor&path=&file=app.user-app.php\"><span style=\"text-align: center;\">App #1<\/span><\/a><br \/>\r\n          <a href=\"#!\" onclick=\"document.getElementById('app_browser-container').style.display='block'; return false;\"><img style=\"text-align: center;\" src=\"<?= APP_BASE['resources'] . 'images\/php-app.png' ?>\" \/><\/a>\r\n          <div style=\"height: 75px;\"><\/div>\r\n        <\/div>\r\n      <\/div>\r\n    <\/div>\r\n\r\n  <\/div>\r\n\r\n\r\n  <?php \/*\r\n    <div id=\"app_project-container\" style=\"display: none; position: absolute; top: 80px; padding: 20px; margin-left: auto; margin-right: auto; left: 0; right: 0; width: 700px; z-index: 2;\">\r\n      <div style=\"margin: -25px 0 20px 0;\">\r\n        <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_project-container').style.display='none';\">X<\/a>]<\/div>\r\n      <\/div>\r\n      <form style=\"background-color: #ddd; padding: 20px;\">\r\n        <h3>Psr\/Log<\/h3>\r\n        <label><input type=\"checkbox\" checked> Add to Project.<\/label>\r\n        <button type=\"submit\" style=\"float: right;\">Save<\/button>\r\n        <iframe src=\"<?= APP_WWW ?>?project=show\" style=\"height: 300px; width: 600px;\"><\/iframe>\r\n  <\/form>\r\n<\/div>\r\n*\/ ?>\r\n<div style=\"position: relative;\">\r\n  <?php if (isset($_GET['client']) && $_GET['client'] != '') { ?>\r\n  <div id=\"app_client-container\" style=\"position: relative; display: none; top: 100px; margin: 0 auto; width: 800px; height: 600px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n    <div style=\"display: inline;\">\r\n      <span style=\"background-color: #B0B0B0; color: white;\">\r\n      <input type=\"checkbox\" checked \/> Preview Domain\r\n      <\/span>\r\n    <\/div>\r\n    <div style=\"display: inline; float: right; text-align: center; \">\r\n      <code style=\" background-color: white; color: #0078D7;\">\r\n      <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_client-container').style.display='none';\">[X]<\/a>\r\n      <\/code>\r\n    <\/div>\r\n    <div style=\"margin: 0 10px;\">\r\n      <div style=\"display: inline-block; float: left; width: 49%;\">\r\n<?php\r\n$input = $_GET['client'];\r\n          \r\n\/\/ Decode the URL-encoded string\r\n$decoded = urldecode($input);\r\n          \r\n\/\/ Use regex to extract name components\r\nif (preg_match('\/^\\d*-(\\w+)[,]\\s*(\\w+)$\/', $decoded, $matches)) {\r\n\/\/ $matches[1] contains the last name, $matches[2] contains the first name\r\n$output = $matches[2] . ' ' . $matches[1];\r\n} else {\r\n$output = 'Invalid Input';\r\n}\r\n?>\r\n        Work Status: \r\n        <select>\r\n          <?php\r\n            foreach(['000', '100', '200', '300', '400'] as $key => $status) {\r\n            \r\n            $links = array_filter(glob(APP_PATH . \/*'..\/..\/'.*\/ 'clientele\/' . $status . '*'), 'is_dir');\r\n            $statusCode = $status;\r\n            $status = ($status == 000) ? \"On-call\" :\r\n                     (($status == 100) ? \"Working\" :\r\n                     (($status == 200) ? \"Planning\" :\r\n                     (($status == 300) ? \"Previous\" :\r\n                     (($status == 400) ? \"Future\" : \"Unknown\"))));\r\n            ?>\r\n          <option><?= $statusCode . ' - ' . $status ?><\/option>\r\n          <?php\r\n            $count = 1;\r\n            }\r\n            ?>\r\n        <\/select>\r\n        <br \/>\r\n        Name: <input type=\"text\" value=\"<?= $output; ?>\" \/><br \/>\r\n        Hours: <input type=\"text\" value=\"999\" \/>\r\n      <\/div>\r\n      <div style=\"display: inline-block; float: right; text-align: right;\">\r\n        <span style=\"\">\r\n          Domain: \r\n          <select>\r\n            <option>example.com<\/option>\r\n          <\/select>\r\n        <\/span>\r\n        <br \/>\r\n        <span style=\"\">Add Domain: <input type=\"text\"><\/span><br \/>\r\n        <span>Domain Expiry: <input type=\"text\" value=\"\r\n          <?php\r\n            $result = [];\r\n            \r\n            if (check_http_status() && class_exists('Whois')) {\r\n              $whois = new Whois();\r\n              $query = 'example.com';\r\n              $result = $whois->lookup($query,false);\r\n            }\r\n            \r\n            echo !empty($result) && isset($result['regrinfo']['domain']['expires']) ? $result['regrinfo']['domain']['expires'] : 'Unknown';\r\n             ?>\" style=\"text-align: right;\"\/><\/span><br \/><br \/>\r\n      <\/div>\r\n      <div style=\"clear: both;\"><\/div>\r\n      <div>\r\n        <span>Domain Information<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>[regrinfo][domain][name] == Domain Name,  [regrinfo][type] == 'domain',  [regyinfo][registered] == 'yes'<br \/>\r\n            [???] Registrar Information, <br \/>\r\n            <br \/>\r\n            [regrinfo][domain][expires] == Domain Expiry Date (Timestamp), <br \/>\r\n            <br \/>\r\n            [regyinfo][registrar] == 'RESERVED-Internet Assigned Numbers Authority' (DNS Provider)<br \/>\r\n            [regrinfo][domain][nserver][a.iana-servers.net] == 199.43.135.53<br \/>\r\n            [regrinfo][domain][nserver][b.iana-servers.net] == 199.43.135.53<br \/>\r\n            <br \/>\r\n            [regrinfo][domain][status][0..2]<br \/>\r\n            Domain Status: clientDeleteProhibited https:\/\/icann.org\/epp#clientDeleteProhibited<br \/>\r\n            Domain Status: clientTransferProhibited https:\/\/icann.org\/epp#clientTransferProhibited<br \/>\r\n            Domain Status: clientUpdateProhibited https:\/\/icann.org\/epp#clientUpdateProhibited<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Server\/Hosting Information<\/span>\r\n        <ul class=\"text-xs\">\r\n          <li>\r\n            Hosting Provider, intranet (localhost) \/ internet (google.ca)<br \/>\r\n            <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n              <span>Name: <input type=\"text\"><\/span><br \/>\r\n            <\/div>\r\n            <div style=\"clear: both;\"><\/div>\r\n            Server IP Address<br \/>\r\n            <div style=\"display: inline-block; float: right; text-align: right;\">\r\n              <span>\r\n                IPv4\/IPv6: <!-- input type=\"text\" -->\r\n                <select>\r\n                <?php\r\n                  \/* $access_token = '123456789abc'; *\/\r\n                  \/\/$client = new IPinfo(\/*$access_token*\/);\r\n                  \/\/$ip_address = '93.184.216.34';\r\n                  \/\/$details = $client->getDetails($ip_address);\r\n                  \r\n                  \/\/dd($details->all);\r\n                  \r\n                  \r\n                  if (!empty($ip_addrs = gethostbynamel($dname['regrinfo']['domain']['name'] = 'example.com')))\r\n                    foreach ($ip_addrs as $ip_addr) {\r\n                      echo '            <option>' . $ip_addr . '<\/option>' . \"\\n\";\r\n                    }\r\n                  else\r\n                    echo '            <option><\/option>' . \"\\n\";\r\n                  \r\n                  ?>\r\n                <\/select>\r\n              <\/span>\r\n              <br \/>\r\n            <\/div>\r\n            <div style=\"clear: both;\"><\/div>\r\n            Control Panel URL<br \/>\r\n            <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n              <span>URL: <input type=\"text\"><\/span><br \/>\r\n            <\/div>\r\n            <div style=\"clear: both;\"><\/div>\r\n            FTP Credentials (as you mentioned)<br \/>\r\n            <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n              <span>FTP Host: <input type=\"text\"><\/span><br \/>\r\n              <span>FTP User: <input type=\"text\"><\/span><br \/>\r\n              <span>FTP Password: <input type=\"text\"><\/span><br \/>\r\n            <\/div>\r\n            <div style=\"clear: both;\"><\/div>\r\n            SSH Credentials<br \/>\r\n            <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n              <span>SSH Host: <input type=\"text\"><\/span><br \/>\r\n              <span>SSH User: <input type=\"text\"><\/span><br \/>\r\n              <span>SSH Password: <input type=\"text\"><\/span><br \/>\r\n            <\/div>\r\n            <div style=\"clear: both;\"><\/div>\r\n            Database Access Credentials<br \/>\r\n            <div style=\"display: inline-block; float: right; text-align: right;\">        \r\n              <span>DB Host: <input type=\"text\"><\/span><br \/>\r\n              <span>DB User: <input type=\"text\"><\/span><br \/>\r\n              <span>DB Password: <input type=\"text\"><\/span><br \/>\r\n            <\/div>\r\n            <div style=\"clear: both;\"><\/div>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Website Configuration<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Content Management System (CMS) Information<br \/>\r\n            Configuration Files (e.g., wp-config.php for WordPress)<br \/>\r\n            API Keys and Secrets<br \/>\r\n            CDN Configuration<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>SSL Certificate<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>SSL Certificate Details<br \/>\r\n            Expiry Date<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Development and Deployment<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Version Control Information (e.g., Git repository URL)<br \/>\r\n            Deployment Scripts\/Procedures<br \/>\r\n            Staging Environment Information<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Analytics and SEO<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Google Analytics Code<br \/>\r\n            SEO Keywords<br \/>\r\n            Meta Tags<br \/>\r\n            Search Console Information<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Backup and Recovery<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Backup Schedule<br \/>\r\n            Backup Storage Location<br \/>\r\n            Disaster Recovery Plan<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Contact Information<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Technical Contact<br \/>\r\n            Administrative Contact<br \/>\r\n            Support Contact<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Monitoring and Alerts<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Monitoring Tools and URLs<br \/>\r\n            Alert Configuration<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Third-Party Services<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>API Keys for External Services (e.g., Email Service, Payment Gateway)<br \/>\r\n            Integration Details<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Content and Media<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Content Inventory<br \/>\r\n            Media Files and Storage Locations<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Security<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Security Measures in Place<br \/>\r\n            Incident Response Plan<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Documentation<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Wiki\/Documentation URLs<br \/>\r\n            Standard Operating Procedures (SOPs)<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>Testing and Quality Assurance<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Testing Environments<br \/>\r\n            Test Cases<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n        <span>License Information<\/span><br \/>\r\n        <ul class=\"text-xs\">\r\n          <li>Software Licenses<br \/>\r\n            Theme\/Plugin Licenses<br \/>\r\n          <\/li>\r\n        <\/ul>\r\n        <br \/>\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n  <?php } echo $apps['directory']['body']; ?>\r\n  \r\n  <div id=\"app_notes-container\" style=\"position: absolute; display: none; top: 100px; margin: 0 auto; width: 800px; height: 600px; background-color: rgba(255, 255, 255, 0.9); overflow-x: scroll;\">\r\n    <div style=\"display: inline;\">\r\n      <span style=\"background-color: #B0B0B0; color: white;\">\r\n      <input type=\"checkbox\" checked \/> Preview Domain\r\n      <\/span>\r\n    <\/div>\r\n    <div style=\"display: inline; float: right; text-align: center; \">\r\n      <code style=\" background-color: white; color: #0078D7;\">\r\n      <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_notes-container').style.display='none';\">[X]<\/a>\r\n      <\/code>\r\n    <\/div>\r\n    <div style=\"margin: 0 10px;\">\r\n      <div style=\"display: inline-block; float: left; width: 49%;\">\r\n        <h3>Notes<\/h3>\r\n        <textarea style=\"width: 100%; height: 300px;\"><\/textarea>\r\n      <\/div>\r\n      <div style=\"display: inline-block; float: right; text-align: right;\">\r\n        <h3>Notes<\/h3>\r\n        <textarea style=\"width: 100%; height: 300px;\"><\/textarea>\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>\r\n\r\n<?= $apps['timesheet']['body']; ?>\r\n<?= $apps['browser']['body']; ?>\r\n<?= $apps['github']['body']; ?>\r\n<?= $apps['packagist']['body']; ?>\r\n<?= $apps['whiteboard']['body']; ?>\r\n<?= $apps['notes']['body']; ?>\r\n<!-- https:\/\/pong-2.com\/ -->\r\n<?= $apps['pong']['body']; ?>\r\n\r\n<\/div>\r\n<\/div>\r\n<!-- \/div -->\r\n\r\n<?= defined('UI_GIT') ? UI_GIT['body'] : null; ?>\r\n<?= defined('UI_PHP') ? UI_PHP['body'] : null; \/* print(...) *\/ ?>\r\n<?= defined('UI_COMPOSER') ? UI_COMPOSER['body'] : null; \/* (isset($appComposer) ? $appComposer['script'] : null); *\/ ?>\r\n<?= defined('UI_NPM') ? UI_NPM['body'] : null; ?>\r\n<?= defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['body'] : null; ?>\r\n<?= defined('UI_NODES') ? UI_NODES['body'] : null; ?>\r\n\r\n<?= $apps['project']['body']; ?>\r\n\r\n<?= $apps['console']['body']; ?>\r\n<!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n<!-- https:\/\/code.jquery.com\/jquery-3.7.1.min.js -->\r\n<!-- script src=\"https:\/\/code.jquery.com\/jquery-3.6.0.min.js\" integrity=\"sha256-\/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej\/m4=\" crossorigin=\"anonymous\"><\/script -->\r\n<?php\r\n  is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/jquery\/') or mkdir($path, 0755, true);\r\n  if (is_file($path . 'jquery-3.7.1.min.js')) {\r\n    if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'jquery-3.7.1.min.js'))))) \/ 86400)) <= 0 ) {\r\n      $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n      $handle = curl_init($url);\r\n      curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n  \r\n      if (!empty($js = curl_exec($handle))) \r\n        file_put_contents($path . 'jquery-3.7.1.min.js', $js) or $errors['JS-JQUERY'] = $url . ' returned empty.';\r\n    }\r\n  } else {\r\n    $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n  \r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'jquery-3.7.1.min.js', $js) or $errors['JS-JQUERY'] = $url . ' returned empty.';\r\n  }\r\n  unset($path);\r\ninclude('app.debug.php');\r\n  ?>\r\n<div id=\"details-container\" style=\"position: fixed; display: none; top: 0; left: 0; z-index: 1; border: 1px solid #000; height: auto; background-color: #FFF; width: 250px;\">\r\n  <span>Loading Time: <?= round(microtime(true) - APP_START, 3); ?>s<\/span><br \/>\r\n  <span>Environment: <?= PHP_OS; ?><\/span><br \/>\r\n  <span>Domain: <?= APP_DOMAIN; ?><\/span><br \/>\r\n  <span>IP Address: <?= APP_HOST; ?><\/span><br \/>\r\n  <span>App Path: <?= APP_PATH; ?><\/span><br \/>\r\n  <span>Memory: <em ><b style=\"color: green;\"><?= formatSizeUnits(memory_get_usage()) . '<\/b> @ <b>' . formatSizeUnits(convertToBytes(ini_get('memory_limit'))); ?><\/b><\/em><\/span><br \/>\r\n  <span>Source (code): <em style=\"font-size: 13px;\"><?= '[<b>' . formatSizeUnits($total_filesize) . '<\/b>] <b style=\"color: red;\">' . $total_filesize - 1000000 . '<\/b>' ?><\/em><\/span>\r\n  <div style=\"position: relative; display: block;\"><div style=\"position: absolute; display: block; float: right; right: 10px; width: 165px; text-align: right;\"><?= ' [(<b style=\"color: green;\">' . $total_include_files . ' loaded<\/b>) <b>'. $total_files . '<\/b> files] <br \/> [<b style=\"color: green;\">' . $total_include_lines . '<\/b> @ <b>' . $total_lines . '<\/b> lines]'; ?><\/div><\/div>\r\n<\/div>\r\n\r\n<div id=\"adhd_song-container\" style=\"position: fixed; display: none; bottom: 0; right: 0; z-index: 1;\">\r\n  <img src=\"\/resources\/reels\/adhd_song.gif\" \/>\r\n<\/div>\r\n<!--\r\n    <div id=\"ui_ace_editor\" class=\"editor\">This is the first editor.<\/div>\r\n    <div id=\"app_project_editor\" class=\"editor\">This is the second editor.<\/div>\r\n-->\r\n\r\n    <script src=\"<?= (check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : APP_BASE['resources'] . 'js\/jquery\/' . 'jquery-3.7.1.min.js') ?>\"><\/script>\r\n    <!-- You need to include jQueryUI for the extended easing options. -->\r\n        <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n    \r\n    <script src=\"<?= (check_http_status('https:\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.min.js') ? 'https:\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.min.js' : APP_BASE['resources'] . 'js\/jquery-ui\/' . 'jquery-ui-1.12.1.js') ?>\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n    \r\n    <!-- <script src=\"resources\/js\/ace\/src\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> \r\n    <script src=\"resources\/js\/ace\/src\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n    <!-- For Text \/ Ace Editor -->\r\n    <!-- <script src=\"https:\/\/unpkg.com\/@popperjs\/core@2\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n\r\n<!--\r\n    <script>\r\n$(document).ready(function() {\r\n    var editor = ace.edit(\"ui_ace_editor\");\r\n    \/\/ Rest of your initialization code\r\n});\r\n    <\/script>\r\n<\/body>\r\n<\/html>\r\n-->\r\n<?php\r\n\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\n\/\/!is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\n\r\nif (!is_file($path = APP_PATH . APP_BASE['resources'] . 'js\/requirejs\/require.js') || ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path))))) \/ 86400)) <= 0  ) {\r\n  !is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/requirejs') or @mkdir($path, 0755, true);\r\n  !is_dir($path) and $errors['JS-REQUIREJS'] = 'JS-REQUIREJS - Failed to create directory: ' . $path;\r\n  $url = 'https:\/\/requirejs.org\/docs\/release\/2.3.6\/minified\/require.js';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle)))\r\n    file_put_contents($path, $js) or $errors['JS-REQUIREJS'] = $url . ' returned empty.';\r\n}\r\n\r\nif (!is_file($path)) { ?>\r\n  \r\n    <script src=\"<?= APP_BASE['resources']; ?>js\/requirejs\/require.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n\r\n    <script>\r\n    var globalEditor;\r\n    require.config({\r\n        baseUrl: window.location.protocol + \"\/\/\" + window.location.host + window.location.pathname.split(\"\/\").slice(0, -1).join(\"\/\"),\r\n        paths: {\r\n            jquery: 'resources\/js\/jquery\/jquery-3.7.1.min',\r\n            'jquery-ui': 'resources\/js\/jquery-ui\/jquery-ui-1.12.1',\r\n            \/\/domReady: 'resources\/js\/domReady',\r\n            \/\/bootstrap: 'resources\/js\/bootstrap\/dist\/js\/bootstrap',\r\n            ace: 'resources\/js\/ace\/src\/ace',\r\n            'ace\/ext-language_tools': 'resources\/js\/ace\/src\/ext-language_tools',\r\n            'ace\/mode\/javascript': 'resources\/js\/ace\/src\/mode-javascript',\r\n            'ace\/mode\/html': 'resources\/js\/ace\/src\/mode-html',\r\n            'ace\/mode\/php': 'resources\/js\/ace\/src\/mode-php',\r\n            'ace\/theme\/monokai': 'resources\/js\/ace\/src\/theme-monokai',\r\n            'ace\/theme\/github': 'resources\/js\/ace\/src\/theme-github'\r\n        },\r\n        shim: {\r\n            'ace': {\r\n                deps: ['ace\/ext-language_tools'],\r\n                exports: 'ace'\r\n            },\r\n            \/\/'ace\/ext-language_tools': ['ace'],\r\n            'ace\/mode\/javascript': ['ace'],\r\n            'ace\/mode\/html': ['ace'],\r\n            'ace\/mode\/php': ['ace'],\r\n            'ace\/theme\/monokai': ['ace'],\r\n            'ace\/theme\/github': ['ace']\r\n        }\r\n    });\r\n\r\n    \/\/require(['jquery', 'domReady', 'ace', 'ace\/ext-language_tools', 'ace\/mode\/javascript', 'ace\/mode\/html', 'ace\/theme\/monokai', 'ace\/theme\/github'], function($, domReady, ace) {\r\n    \/\/    domReady(function() {}\r\n    \/\/});\r\n\r\n    require(['ace', 'ace\/ext-language_tools', 'ace\/mode\/php', 'ace\/mode\/javascript', 'ace\/mode\/html', 'ace\/theme\/monokai', 'ace\/theme\/github'], function () {\r\n        if (!ace) {\r\n                console.error(\"Ace editor not loaded\");\r\n                return;\r\n        }\r\n\r\n        var editor1 = ace.edit(\"ui_ace_editor\");\r\n        \/\/var JavaScriptMode = ace.require(\"ace\/mode\/javascript\").Mode;\r\n        editor1.setTheme(\"ace\/theme\/monokai\");\r\n        editor1.session.setMode(\"ace\/mode\/php\");\r\n        editor1.setAutoScrollEditorIntoView(true);\r\n        editor1.setShowPrintMargin(false);\r\n        editor1.setOptions({\r\n            \/\/  resize: \"both\"\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: true\r\n        });\r\n\r\n        var editor2 = ace.edit(\"app_project_editor\");\r\n        editor2.setTheme(\"ace\/theme\/dracula\");\r\n        \/\/ (file_ext .js = javascript, .php = php)\r\n        editor2.session.setMode(\"ace\/mode\/php\");\r\n        editor2.setAutoScrollEditorIntoView(true);\r\n        editor2.setShowPrintMargin(false);\r\n        editor2.setOptions({\r\n            \/\/  resize: \"both\"\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: true\r\n        });\r\n        \r\n        globalEditor = editor2;\r\n    }, function (err) {\r\n        console.error(\"Error loading Ace modules: \", err.requireModules);\r\n        console.error(err);\r\n    });\r\n    <\/script>\r\n<?php\r\n} elseif (is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/ace')) { ?>\r\n\r\n    <script src=\"resources\/js\/ace\/src\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> \r\n    <script src=\"resources\/js\/ace\/src\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    \r\n    <script>\r\n    var globalEditor;\r\n    var editor1, editor2;\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n<?php if (!$_SERVER['SOCKET']) { ?>\r\n   if (confirm('(Re)Start Server?')) {\r\n    $('#requestInput').val('server start');\r\n    $('#requestSubmit').click();\r\n   } else {\r\n    console.log('Cancel (Re)Start.');\r\n   }\r\n<?php } ?>\r\n\/**\/\r\n        editor1 = ace.edit(\"ui_ace_editor\");\r\n        \/\/var JavaScriptMode = ace.require(\"ace\/mode\/javascript\").Mode;\r\n        editor1.setTheme(\"ace\/theme\/monokai\"); \/\/ github\r\n        editor1.session.setMode(\"ace\/mode\/php\");\r\n        editor1.setAutoScrollEditorIntoView(true);\r\n        editor1.setShowPrintMargin(false);\r\n        editor1.setOptions({\r\n            \/\/  resize: \"both\"\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: true\r\n        });\r\n\r\n        var editor2 = ace.edit(\"app_project_editor\");\r\n        editor2.setTheme(\"ace\/theme\/dracula\");\r\n        \/\/ (file_ext .js = javascript, .php = php)\r\n        editor2.session.setMode(\"ace\/mode\/php\");\r\n        editor2.setAutoScrollEditorIntoView(true);\r\n        editor2.setShowPrintMargin(false);\r\n        editor2.setOptions({\r\n            \/\/  resize: \"both\"\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: true\r\n        });\r\n        globalEditor = editor2;\r\n    });\r\n    <\/script>\r\n\r\n<?php\r\n}\r\nunset($path);\r\n\r\nif (date(\/*Y-*\/ 'm-d') == \/*1928-*\/ '08-07' ?? \/*2023-*\/ '03-30') { ?>\r\n    <script src=\"resources\/reels\/leave-a-light-on.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } elseif (date(\/*Y-*\/ 'm-d') == \/*1976-*\/ '03-20' ?? \/*2017-*\/ '07-20') { ?>\r\n    <script src=\"resources\/reels\/leave-a-light-on.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } else {  \/\/ array_rand() can't be empty ?>\r\n    <script src=\"<?= APP_BASE['resources'] . 'reels\/' . 'disturbed_-_it_wasnt_me.js'; \/* adhd_song.js !empty($reels = glob(APP_PATH . 'resources\/reels\/*.js')) ? APP_BASE['resources'] . 'reels\/' . basename(array_rand(array_flip(array_filter($reels, 'is_file')), 1)) : ''; APP_BASE['resources'] *\/?>\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n    <?php } ?>\r\n    <script type=\"text\/javascript\" charset=\"utf-8\">\r\n\r\nlet isDragging = false;\r\nlet activeWindow = null;\r\n\r\nfunction makeDraggable(windowId) {\r\n    const windowElement = document.getElementById(windowId);\r\n    const headerElement = windowElement.querySelector('.ui-widget-header');\r\n    let offsetX, offsetY;\r\n\r\n    headerElement.addEventListener('mousedown', function(event) {\r\n        if (!isDragging) {\r\n            \/\/ Bring the clicked window to the front\r\n            document.body.appendChild(windowElement);\r\n            offsetX = event.clientX - windowElement.getBoundingClientRect().left;\r\n            offsetY = event.clientY - windowElement.getBoundingClientRect().top;\r\n            isDragging = true;\r\n            activeWindow = windowElement;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mousemove', function(event) {\r\n        if (isDragging && activeWindow === windowElement) {\r\n            const left = event.clientX - offsetX;\r\n            const top = event.clientY - offsetY;\r\n\r\n            \/\/ Boundary restrictions\r\n            const maxX = window.innerWidth - windowElement.clientWidth; \/\/  - 100\r\n            const maxY = window.innerHeight - windowElement.clientHeight;\r\n\r\n            windowElement.style.left = `${Math.max(0, Math.min(left, maxX))}px`;\r\n            windowElement.style.top = `${Math.max(0, Math.min(top, maxY))}px`;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mouseup', function() {\r\n        if (activeWindow === windowElement) {\r\n            isDragging = false;\r\n            activeWindow = null;\r\n        }\r\n    });\r\n}\r\n      \r\n      makeDraggable('app_ace_editor-container');\r\n      makeDraggable('app_composer-container');\r\n      \/\/ makeDraggable('app_project-container');\r\n      makeDraggable('app_git-container');\r\n      makeDraggable('app_npm-container');\r\n      makeDraggable('app_php-container');\r\n      makeDraggable('app_nodes-container');\r\n      makeDraggable('app_timesheet-container');\r\n      \/\/makeDraggable('console-settings');\r\n\r\n      displayDirectoryBtn.addEventListener('click', () => {\r\n      \r\n      event.preventDefault();\r\n      const appDirectoryContainer = document.getElementById('app_directory-container');\r\n      \r\n      \/\/const styles = window.getComputedStyle(appDirectoryContainer);\r\n      const displayDirectoryBtn = document.getElementById('displayDirectoryBtn');\r\n      \r\n      console.log('state : ' + appDirectoryContainer.style.display );\r\n\r\n\/**\/\r\n      if (appDirectoryContainer.style.display == 'none') {   \r\n\r\n<?php if (isset($_GET['client']) && !$_GET['client']) { ?>\r\n      if (confirm('Do you wish to display clients?')) {\r\n    \/\/ User clicked OK\r\n    console.log('User clicked OK');\r\n    $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n    });\r\n} else {\r\n    \/\/ User clicked Cancel\r\n    console.log('User clicked Cancel');\r\n\r\n    $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n    });\r\n}<?php } else { ?>\r\n      $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n     });\r\n     <?php } ?>\r\n        console.log('hide');\r\n          displayDirectoryBtn.innerHTML = '&nbsp;&#9650;';\r\n      } else {\r\n \r\n\r\n        $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n      \r\n          displayDirectoryBtn.innerHTML = '&nbsp;&#9660;';  \r\n        console.log('show');\r\n      }\r\n\r\n      \/\/show_console();\r\n      \r\n      });\r\n      \r\n      \r\n      \r\n      \r\n      function toggleSwitch(element) {\r\n      \r\n      if (element.checked) {\r\n        \/\/ Third option is selected\r\n        \/\/ Add your logic here\r\n        console.log('checked');\r\n\r\n        \/\/getElementById('hide_notice-container');\r\n        \r\n        $( '#details-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n        <?php if (isset($errors['GIT_UPDATE'])) { ?> \r\n        $( '#hide_notice-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        <?php } ?>\r\n      \r\n        $( '#app_console-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n\r\n        <?php if (isset($_GET['client']) && $_GET['client']) { ?>\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n          });\r\n         <?php } ?>\r\n\r\n        \r\n        $(\"#debug-content\").css('overflow', 'visible');\r\n        \r\n      $(\"#debug-content\").show(\"slide\", { direction: \"up\" }, 1000);\r\n      \r\n      \/\/$(\"#app_backup-container\").show(\"slide\", { direction: \"right\" }, 1000);\r\n      \r\n      } else {\r\n        \r\n        $( '#details-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n        $( '#hide_notice-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n        $( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n         \/\/ Animation complete.\r\n        });\r\n        \r\n        \/\/ Third option is not selected\r\n        \/\/ Add your logic here\r\n        console.log('(not) checked');\r\n\r\n        $( '#app_console-container' ).slideUp( \"slow\", function() {\r\n          \/\/ Animation complete.\r\n        });\r\n        \r\n<?= !empty($errors) ? ' show_console();' : 'show_console();' ?>\r\n\r\n        $('#requestInput').attr('autofocus', true);\r\n            \r\n      $(\"#debug-content\").hide(\"slide\", { direction: \"up\" }, 1000);\r\n      \r\n      \/\/$(\"#app_backup-container\").hide(\"slide\", { direction: \"right\" }, 1000);\r\n      }\r\n      }\r\n      \r\n      function toggleIframeUrl(uri_location) {\r\n            \/\/ Uncheck the checkbox\r\n            document.getElementById('toggle-debug').checked = false;\r\n            \r\n            toggleSwitch(document.getElementById('toggle-debug'));\r\n\r\n            \/\/ Set the src attribute of the iframe\r\n            document.getElementById('iWindow').src = uri_location;\r\n        }\r\n      \r\n      $(document).ready(function(){\r\n        $( \"#app_console-container\").css('display', 'none');\r\n        if ($( \"#app_directory-container\" ).css('display') == 'none') {\r\n      <?php if (isset($_GET['path']) || !empty(APP_URL['query']) || isset($_GET['debug']) || (defined(APP_DEBUG) && APP_DEBUG)) { ?>\r\n\r\n        document.getElementById('toggle-debug').checked = true;\r\n\r\n        toggleSwitch(document.getElementById('toggle-debug'));\r\n\/**\/\r\n        $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n         \/\/ Animation complete.\r\n        });\r\n\r\n      <?php } else if (isset($_GET['project'])) { ?>\r\n        document.getElementById('toggle-debug').checked = true;\r\n\r\n        toggleSwitch(document.getElementById('toggle-debug'));\r\n\/**\/\r\n        $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n         \/\/ Animation complete.\r\n        });\r\n\r\n      <?php } else if (defined('APP_ROOT') && APP_ROOT != '' && isset($errors['GIT_UPDATE']) && isset($_ENV['HIDE_UPDATE_NOTICE']) && $_ENV['HIDE_UPDATE_NOTICE'] != true ) { \/\/  isset($_GET['client'])  !$_GET['client'] \r\n      \r\n        \r\n      if ($_GET['client'] != '') { ?>\r\n          document.getElementById('toggle-debug').checked = true;\r\n\r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n\/*\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n          });\r\n*\/\r\n        <?php } else if (!empty($_GET)) { ?>\r\n\r\n          document.getElementById('toggle-debug').checked = true;\r\n            \r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n          \r\n          <?php } else { ?>\r\n      \r\n      <?php if (!isset($_GET['domain'])) { \/\/ !$_GET['client'] ?>\r\n\r\n          document.getElementById('toggle-debug').checked = true;\r\n            \r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n          \r\n      <?php }  }  } else { if (isset($_GET['client']) && !$_GET['client']) { ?>\r\n\r\n\r\n        if (confirm('Do you wish to display clients?')) {\r\n\/\/ User clicked OK\r\nconsole.log('User clicked OK');\r\n$( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n       \/\/ Animation complete.\r\n});\r\n} else {\r\n\/\/ User clicked Cancel\r\nconsole.log('User clicked Cancel');\r\n$( '#app_directory-container' ).slideUp( \"slow\", function() {\r\n       \/\/ Animation complete.\r\n});\r\n}\r\n\r\n\r\n\r\n          <?php  if (!isset($_GET['domain'])) { \/\/ !$_GET['client'] ?>\r\n\r\n          document.getElementById('toggle-debug').checked = true;\r\n            \r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n          \r\n      <?php } else {?>\r\n\/*\r\n          document.getElementById('toggle-debug').checked = true;\r\n\r\n          toggleSwitch(document.getElementById('toggle-debug'));\r\n\r\n          $( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n          });\r\n*\/\r\n        <?php } } else if (isset($_GET['client']) && $_GET['client'] != '') { ?>\r\n          document.getElementById('toggle-debug').checked = false;\r\n\r\n\r\n          \/\/toggleSwitch(document.getElementById('toggle-debug'));\r\n\r\n          \/\/$( '#app_directory-container' ).slideDown( \"slow\", function() {\r\n           \/\/ Animation complete.\r\n          \/\/});\r\n\r\n          <?php } } ?>\r\n        }\r\n      });\r\n      \r\n      <?= !isset($apps['console']['script'])?: $apps['console']['script']; ?>\r\n      \r\n      \/\/ Define the function to be executed when \"c\" key is pressed\r\n\r\n      \r\n      document.addEventListener('keydown', function() {\r\n      \/\/ Check if the pressed key is \"c\" (you can use event.key or event.keyCode)\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed)\r\n                    requestInput.focus();\r\n                event.preventDefault();\r\n                show_console();\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n        else if (event.key === 'c' || event.keyCode === 67) {\r\n          \/\/ Execute your desired function or code here\r\n          console.log('The \"c\" key was pressed!');\r\n          \/\/ Replace the above line with the actual code you want to execute\r\n        }\r\n        console.log('keyboard shortcut');\r\n      });\r\n      \r\n      \/\/ Attach the event listener to the window object\r\n      window.addEventListener('keydown', function() {\r\n            \/\/ Check the condition before calling the show_console function\r\n            \/\/if (myDiv.style.position !== 'fixed')\r\n\r\n        if (event.key === '`' || event.keyCode === 192) \/\/ c||67\r\n            if (document.activeElement !== requestInput) {\r\n                \/\/ Replace the following line with your desired function\r\n                \/\/ If it's currently absolute, change to fixed\r\n                if (!isFixed)\r\n                    requestInput.focus();\r\n                event.preventDefault();\r\n                if (isFixed) isFixed = !isFixed;\r\n                isFixed = false;\r\n                show_console();\r\n                return false;\r\n            } else {\r\n                document.activeElement = null;\r\n                return false;\r\n            }\r\n\r\n\r\n            console.log('windowEvent');\r\n            \r\n            var textField = document.getElementById('requestInput');\r\n\r\n            \/\/ Check if the text field is focused\r\n            var isFocused = textField === document.activeElement;\r\n            \r\n            if (  document.getElementById('app_console-container').style.position != 'absolute') {\r\n\r\n              if (!isFixed) {\r\n                \/\/requestInput.focus();\r\n              } else {\r\n                \/\/show_console();\r\n              }\r\n            } else {\r\n\r\n\r\n              if (isFixed) isFixed = !isFixed;\r\n              isFixed = true;\r\n            \r\n              if (isFocused)  show_console();\r\n            }\r\n        });\r\n\r\n      <?= defined('UI_GIT') ? UI_GIT['script'] : null; ?>\r\n      <?= defined('UI_PHP') ? UI_PHP['script'] : null; \/* print(...) *\/ ?>\r\n      <?= defined('UI_COMPOSER') ? UI_COMPOSER['script'] : null; \/* (isset($app['composer']) ? $app['composer']['script'] : null); *\/ ?>\r\n      <?= defined('UI_NPM') ? UI_NPM['script'] : null; ?>\r\n      <?= defined('UI_NODES') ? UI_NODES['script'] : null; ?>\r\n\r\n      \r\n      <?= \/* (defined('UI_ACE_EDITOR') ? UI_ACE_EDITOR['script'] : null); *\/ NULL;?>\r\n      \r\n      <?= !isset($apps['directory']['script'])?: $apps['directory']['script']; ?>\r\n\r\n      <?= !isset($apps['browser']['script'])?: $apps['browser']['script']; ?>\r\n      \r\n      <?= !isset($apps['github']['script'])?: $apps['github']['script']; ?>\r\n      \r\n      <?= !isset($apps['packagist']['script'])?: $apps['packagist']['script']; ?>\r\n      \r\n      <?= \/*$app['whiteboard']['script'];*\/ NULL; ?>\r\n      \r\n      <?= \/*$app['notes']['script'];*\/ NULL; ?>\r\n      \r\n      \r\n      <?= \/*$app['backup']['script']*\/ NULL; ?>\r\n      \r\n      \r\n      <?= !isset($apps['pong']['script'])?: $apps['pong']['script']; ?>\r\n      \r\n      \/*\r\n      require.config({\r\n      baseUrl: window.location.protocol + \"\/\/\" + window.location.host\r\n      + window.location.pathname.split(\"\/\").slice(0, -1).join(\"\/\"),\r\n      \r\n      paths: {\r\n        jquery: 'resources\/js\/jquery\/jquery.min',\r\n        domReady: 'resources\/js\/domReady',\r\n        bootstrap: 'resources\/js\/bootstrap\/dist\/js\/bootstrap',\r\n        ace: 'resources\/js\/ace\/src\/ace',\r\n        'lib\/dom': 'resources\/js\/ace\/src\/lib\/dom',\r\n        useragent: 'resources\/js\/ace\/src\/lib\/useragent',\r\n        exports: 'resources\/js\/ace\/src\/lib\/',\r\n        \r\n        \/\/'..\/snippets': 'resources\/js\/ace\/lib\/ace\/snippets',\r\n        \/\/'.\/lib\/oop': 'resources\/js\/ace\/src\/lib'\r\n      }\r\n      });\r\n      *\/\r\n      \r\n      <?= !isset($apps['timesheet']['script'])?: $apps['timesheet']['script']; ?>\r\n      <?= !isset($apps['project']['script'])?: $apps['project']['script']; ?>\r\n      \r\n    <\/script>\r\n  <\/body>\r\n<\/html>\r\n\r\n<?= \r\n NULL; \/** Loading Time: 15.0s **\/\r\n\/\/  dd(get_required_files(), true); \r\n?>",
"public/index.php" : "<?php\r\n\r\n  \/\/ if ($path = (basename(getcwd()) == 'public') chdir('..');\r\n\/\/APP_PATH == dirname(APP_PUBLIC) \r\nif ($path = (basename(getcwd()) == 'public') ? (is_file('..\/config\/config.php') ? '..\/config\/config.php' : 'config.php') :\r\n  (is_file('config.php') ? 'config.php' : dirname(__DIR__, 1) . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'config.php' ))\r\n  require_once $path;\r\nelse\r\n  die(var_dump(\"$path was not found. file=config.php\"));\r\n\r\n    \/\/? (is_file('..\/config.php') ? '..\/config.php' : 'config.php')\r\n    \/\/: (is_file('config.php') ? 'config.php' : (is_file('config\/config.php') ? 'config\/config.php' : null)))\r\n\r\nif (APP_DEBUG) {\r\n  defined('PHP_ZTS') and $errors['PHP_ZTS'] = \"PHP was built with ZTS enabled.\\n\";\r\n  defined('PHP_DEBUG') and $errors['PHP_DEBUG'] = \"PHP was built with DEBUG enabled.\\n\";\r\n  defined('PHP_VERSION') and $errors['PHP_VERSION'] = \"PHP Version: \" . PHP_VERSION . \"\\n\";\r\n  defined('PHP_OS') and $errors['PHP_OS'] = \"PHP_OS: \" . PHP_OS . \"\\n\";\r\n  defined('PHP_SAPI') and $errors['PHP_SAPI'] = \"PHP_SAPI: \" . PHP_SAPI . \"\\n\";\r\n  defined('PHP_BINARY') and $errors['PHP_BINARY'] = \"PHP_BINARY: \" . PHP_BINARY . \"\\n\";\r\n  defined('PHP_BINDIR') and $errors['PHP_BINDIR'] = \"PHP_BINDIR: \" . PHP_BINDIR . \"\\n\";\r\n  defined('PHP_CONFIG_FILE_PATH') and $errors['PHP_CONFIG_FILE_PATH'] = \"PHP_CONFIG_FILE_PATH: \" . PHP_CONFIG_FILE_PATH . \"\\n\";\r\n  defined('PHP_CONFIG_FILE_SCAN_DIR') and $errors['PHP_CONFIG_FILE_SCAN_DIR'] = \"PHP_CONFIG_FILE_SCAN_DIR: \" . PHP_CONFIG_FILE_SCAN_DIR . \"\\n\";\r\n  defined('PHP_SHLIB_SUFFIX') and $errors['PHP_SHLIB_SUFFIX'] = \"PHP_SHLIB_SUFFIX: \" . PHP_SHLIB_SUFFIX . \"\\n\";\r\n  defined('PHP_EOL') and $errors['PHP_EOL'] = 'PHP_EOL: ' . json_encode(PHP_EOL) . \"\\n\";\r\n  defined('PHP_INT_MIN') and $errors['PHP_INT_MIN'] = \"PHP_INT_MIN: \" . PHP_INT_MIN . \"\\n\"; \/\/ -\/+ 2147483648 32-bit\r\n  defined('PHP_INT_MAX') and $errors['PHP_INT_MAX'] = \"PHP_INT_MAX: \" . PHP_INT_MAX . \"\\n\"; \/\/ -\/+ 9223372036854775808 64-bit\r\n  defined('PHP_FLOAT_DIG') and $errors['PHP_FLOAT_DIG'] = \"PHP_FLOAT_DIG: \" . PHP_FLOAT_DIG . \"\\n\";\r\n  defined('PHP_FLOAT_EPSILON') and $errors['PHP_FLOAT_EPSILON'] = \"PHP_FLOAT_EPSILON: \" . PHP_FLOAT_EPSILON . \"\\n\";\r\n  defined('PHP_FLOAT_MIN') and $errors['PHP_FLOAT_MIN'] = \"PHP_FLOAT_MIN: \" . PHP_FLOAT_MIN . \"\\n\";\r\n  defined('PHP_FLOAT_MAX') and $errors['PHP_FLOAT_MAX'] = \"PHP_FLOAT_MAX: \" . PHP_FLOAT_MAX . \"\\n\";\r\n}\r\n\r\n\r\nif (APP_SELF != APP_SERVER)\r\n  require_once dirname(__DIR__) . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'classes' . DIRECTORY_SEPARATOR . 'class.sockets.php';\r\n\/\/dd(get_defined_constants(true)['user']);\r\n\r\n\/\/$path = \"\/path\/to\/your\/logfile.log\"; \/\/ Replace with your actual log file path\r\nif (is_readable($path = APP_PATH . APP_ROOT . $_ENV['ERROR_LOG_FILE']) && filesize($path) >= 0 ) {\r\n  $errors['ERROR_PATH'] = \"$path\\n\";\r\n  \/\/if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\r\n  \/\/  $errors['ERROR_LOG'] = shell_exec(\"powershell Get-Content -Tail 10 $path\") . \"\\n\";\r\n  \/\/} else {\r\n  \/\/  $errors['ERROR_LOG'] = shell_exec(APP_SUDO . \" tail $path\") . \"\\n\";\r\n  \/\/}\r\n\r\n  $shellOutput = shell_exec(stripos(PHP_OS, 'LIN') === 0 ? \"tail $path\" : \"powershell Get-Content -Tail 10 $path\");\r\n    \r\n  $pattern = '\/^\\[\\d+-\\w*-\\d*\\s+\\d+:\\d+:\\d+\\s+\\w*\\\/\\w+\\]\\s+Shutdown\\s+constructor\\s+called.$\/';\r\n  $matches = [];\r\n    \r\n  \/\/ Parse the shell output line by line\r\n  foreach (explode(\"\\n\", (string) $shellOutput) as $line) {\r\n    if ($line == '') continue;\r\n    elseif (preg_match($pattern, $line)) {\r\n      $matches[] = $line;\r\n    } else {\r\n      \/\/ If the line doesn't match the pattern, reset the matches array\r\n      $log_matches[] = $line;\r\n    }\r\n  }\r\n    \r\n  $log_matches[] = end($matches) . ' [x' . count($matches) . ']';\r\n\r\n  if (count($matches) >= 10 && count($log_matches) <= 2) unlink($path) and $errors['ERROR_PATH'] = (!is_file($path) ? trim($errors['ERROR_PATH']) . ' was completely removed.' : 'Error_log failed to be removed completely.') . \"\\n\"; \/\/ header('Location: ' . APP_WWW);\r\n\r\n  $errors['ERROR_LOG'] = implode(\"\\n\", $log_matches) . \"\\n\\n\";\r\n\r\n  if (isset($_GET[$error_log = basename($path)]) && $_GET[$error_log] == 'unlink') \r\n    unlink($path);\r\n}\r\n\r\n$previousFilename = '';\r\n\r\n!isset($_GET['app']) || $_GET['app'] != 'git' ? \r\n  (APP_SELF == APP_PUBLIC ? (!defined('APP_ROOT') || empty(APP_ROOT) ?: $dirs[] = APP_PATH . APP_BASE['config'] . 'git.php') :\r\n    $dirs[] = APP_PATH . APP_BASE['config'] . 'git.php') :\r\n  $dirs[] = APP_PATH . APP_BASE['config'] . 'git.php';\r\n\r\n!isset($_GET['app']) || $_GET['app'] != 'composer' ? (APP_SELF == APP_PUBLIC ? (!defined('APP_ROOT') || empty(APP_ROOT) ? (!is_file($autoload = APP_PATH . APP_BASE['vendor'] . 'autoload.php') ?: $dirs[] = $autoload) : $dirs[] = APP_PATH . APP_ROOT . APP_BASE['vendor'] . 'autoload.php') : $dirs[] = APP_PATH . APP_BASE['config'] . 'composer.php') :\r\n  $dirs[] = APP_PATH . APP_BASE['config'] . 'composer.php';\r\n\r\n$dirs[] = APP_PATH . APP_BASE['config'] . 'npm.php';\r\n\r\n  \/\/$dirs = [\r\n    \/\/0 => APP_PATH . APP_BASE['config'] . 'git.php',\r\n    \/\/1 => APP_PATH . APP_BASE['config'] . 'composer.php',\r\n    \/\/2 => APP_PATH . APP_BASE['config'] . 'npm.php',\r\n    \/\/2 => APP_PATH . 'composer-setup.php',\r\n    \/\/1 => APP_PATH . 'config.php',\r\n    \/\/1 => APP_PATH . 'constants.php',\r\n    \/\/2 => APP_PATH . 'functions.php',\r\n    \/\/4 => APP_PATH . APP_BASE['vendor'] . 'autoload.php',\r\n  \/\/]; \/\/ array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . '*.php'), 'is_file');\r\n\r\n  usort($dirs, function ($a, $b) {\r\n      \/\/ Define your sorting criteria here\r\n    \/\/if (basename($a) === 'composer-setup.php')\r\n    \/\/    return 1; \/\/ $a comes after $b\r\n    \/\/elseif (basename($b) === 'composer-setup.php')\r\n    \/\/    return -1; \/\/ $a comes before $b\/\r\n\/*\r\n    \/\/elseif (basename($a) === 'composer.php')\r\n    \/\/    return -1; \/\/ $a comes after $b\r\n    \/\/elseif (basename($b) === 'composer.php')\r\n    \/\/    return 1; \/\/ $a comes before $b\r\n*\/\r\n    if (basename($a) === 'git.php')\r\n        return -1; \/\/ $a comes after $b\r\n    elseif (basename($b) === 'git.php')\r\n        return 1; \/\/ $a comes before $b\r\n    else \r\n        return strcmp(basename($a), basename($b)); \/\/ Compare other filenames alphabetically\r\n  });\r\n\r\n  foreach ($dirs as $includeFile) {\r\n    \/\/dd('Trying file: ' . basename($includeFile), false);\r\n    $path = dirname($includeFile);\r\n\r\n    if (in_array($includeFile, get_required_files())) continue; \/\/ $includeFile == __FILE__\r\n\r\n    if (basename($includeFile) === 'composer-setup.php') continue;\r\n\r\n    if (!file_exists($includeFile)) {\r\n      error_log(\"Failed to load a necessary file: \" . $includeFile . PHP_EOL);\r\n      break;\r\n    }\r\n\r\n    $currentFilename = substr(basename($includeFile), 0, -4);\r\n    \r\n    \/\/ $pattern = '\/^' . preg_quote($previousFilename, '\/')  . \/*_[a-zA-Z0-9-]*\/'(_\\.+)?\\.php$\/'; \/\/ preg_match($pattern, $currentFilename)\r\n\r\n    if (!empty($previousFilename) && strpos($currentFilename, $previousFilename) !== false) continue;\r\n\r\n    \/\/ dd('file:'.$currentFilename,false);\r\n\r\n    require_once $includeFile;\r\n\r\n    $previousFilename = $currentFilename;\r\n  }\r\n\r\n\/** Loading Time: 0.638s **\/\r\n\r\n  \/\/ dd(null, true);\r\n\r\n  \/\/dd($_SERVER); php_self, script_name, request_uri \/folder\/\r\n\r\n  \/\/ dd(getenv('PATH'));\r\n  if (isset($_SERVER['REQUEST_METHOD']))\r\n  switch ($_SERVER['REQUEST_METHOD']) {\r\n    case 'POST':    \r\n      \/\/dd(get_required_files(), false);\r\n      \/\/dd($_ENV);\r\n      if (isset($_POST['environment'])) {\r\n        switch ($_POST['environment']) {\r\n          case 'develop':\r\n            define('APP_ENV', 'development');\r\n            break;\r\n          case 'math':\r\n            define('APP_ENV', 'math');\r\n            break;\r\n          case 'product':\r\n          default:\r\n            define('APP_ENV', 'production');\r\n            break;\r\n        }\r\n        $_ENV['APP_ENV'] = APP_ENV;\r\n        Shutdown::setEnabled(false)->setShutdownMessage(function() {\r\n          return header('Location: ' . APP_WWW); \/\/ -wow\r\n        })->shutdown();\r\n      }\r\n\r\n    break;\r\n  case 'GET':\r\n      if (isset($_ENV['APP_ENV']) && !empty($_ENV)) define('APP_ENV', $_ENV['APP_ENV']);\r\n      \/\/if (!empty($_GET['path']) && !isset($_GET['app'])) !!infinite loop\r\n      \/\/  exit(header('Location: ' . APP_WWW . $_GET['path']));\r\n\/\/ http:\/\/localhost\/?app=composer&path=vendor\r\n\r\n\/\/ Parse the URL and extract the query string\r\n\r\n\/\/ Convert the query string into an associative array\r\n\r\n\/\/ Now $queryArray contains the parsed query parameters as an array\r\n\/\/dd($_SERVER);\r\n      if (preg_match('\/^\\\/(?!\\?)$\/', $_SERVER['REQUEST_URI'])) exit(header('Location: ' . APP_WWW . '?'));\r\n\r\n      if (isset($_SERVER['HTTP_REFERER'])) {\r\n        parse_str(parse_url($_SERVER['HTTP_REFERER'])['query'] ?? '', $queryRefererArray);\r\n        if (array_key_exists('debug', $queryRefererArray)) {\r\n          parse_str(parse_url($_SERVER['REQUEST_URI'])['query'] ?? '', $queryArray);\r\n          if (!array_key_exists('debug', $queryArray)) {\r\n            Shutdown::setEnabled(true)->setShutdownMessage(function() use ($queryArray) {\r\n              return header('Location: ' . APP_WWW . '?debug&' . http_build_query($queryArray, '', '&')); \/\/$_SERVER['HTTP_REFERER'] -wow\r\n            })->shutdown();\r\n          } \/\/else << NO ELSE!!\r\n        }\r\n      }\r\n\r\n      if (isset($_GET['hide']) && $_GET['hide'] == 'update-notice') {\r\n        $_ENV['HIDE_UPDATE_NOTICE'] = true; \/\/ var_export(true, true); \/\/ true\r\n        Shutdown::setEnabled(true)->setShutdownMessage(function() {\r\n          return header('Location: ' . APP_WWW); \/\/ -wow\r\n        })->shutdown();\r\n      }\r\n        \r\n\r\n      if (isset($_GET['category']) && !empty($_GET['category'])) {\r\n        \r\n        if ($_GET['category'] == 'projects')\r\n          exit(header('Location: ' . APP_WWW . '?project='));\r\n        if ($_GET['category'] == 'vendor')\r\n          exit(header('Location: ' . APP_WWW . '?app=composer&path=' . $_GET['category']));\r\n        \/\/if ($_GET['category'] == 'applications')\r\n        \/\/  exit(header('Location: ' . APP_WWW . '?path=' . $_GET['category']));\r\n        exit(header('Location: ' . APP_WWW . '?' . $_GET['category']));\r\n      } elseif (isset($_GET['category']) && empty($_GET['category']))\r\n        exit(header('Location: ' . APP_WWW . '?path'));\r\n        \r\n      if (isset($_GET['path']) && !is_dir(APP_PATH . APP_ROOT)) {\r\n        \/\/dd(APP_PATH . APP_ROOT . ' test');\r\n        die(header('Location: ' . APP_URL_BASE));\r\n      }\r\n      break;\r\n  }\r\n  \/\/dd(APP_PATH . APP_ROOT);\r\n  \/*\r\n  switch ($_SERVER['REQUEST_METHOD']) {\r\n    case 'POST':    \r\n      \/\/dd($_POST);\r\n  \r\n      $_POST = filter_input_array(INPUT_POST, FILTER_SANITIZE_FULL_SPECIAL_CHARS | FILTER_SANITIZE_ENCODED, FILTER_REQUIRE_ARRAY ) ?? [];\r\n  \r\n      break;\r\n    case 'GET':\r\n      $_GET = filter_input_array(INPUT_GET, FILTER_SANITIZE_FULL_SPECIAL_CHARS | FILTER_SANITIZE_ENCODED, FILTER_REQUIRE_ARRAY ) ?? [];\r\n      break;\r\n    default:\r\n      foreach(${'_'.$_SERVER['REQUEST_METHOD']} as $key => $value) {\r\n        ${'_'.$_SERVER['REQUEST_METHOD']}[$key] = filter_var($value, (\r\n          is_string($value) ? FILTER_SANITIZE_STRING : (\r\n            is_int($value) ? FILTER_VALIDATE_INT : FILTER_SANITIZE_STRING)\r\n          )\r\n        );\r\n      }\r\n      \/*$request_method = '_'.$_SERVER['REQUEST_METHOD'];\r\n      foreach($$request_method as $key => $value) {\r\n        $$request_method[$key] = filter_var($value, (\r\n          is_string($value) ? FILTER_SANITIZE_STRING : (\r\n            is_int($value) ? FILTER_VALIDATE_INT : FILTER_SANITIZE_STRING\r\n          )\r\n        ));\r\n      }*\/\r\n  \/\/}\r\n  \/**\/\r\n\r\n\r\n  if (isset($_GET['CLIENT']) || isset($_GET['DOMAIN']) && !defined('APP_ROOT')) {\r\n\r\n    if (!isset($_ENV['DEFAULT_CLIENT'])) $_ENV['DEFAULT_CLIENT'] = $_GET['CLIENT'];\r\n  \r\n    if (!isset($_ENV['DEFAULT_DOMAIN'])) $_ENV['DEFAULT_DOMAIN'] = $_GET['DOMAIN'];\r\n  \r\n    if (defined('APP_QUERY') && empty(APP_QUERY))\r\n      die(header('Location: ' . APP_URL_BASE . '?' . http_build_query([\r\n          'client' => $_ENV['DEFAULT_CLIENT'],\r\n          'domain' => $_ENV['DEFAULT_DOMAIN']\r\n      ]) . '#'));\r\n    else\r\n      $_GET = array_merge($_GET, APP_QUERY);\r\n  \r\n  }\r\n  \r\n  \r\n  \/\/dd(__DIR__ . DIRECTORY_SEPARATOR);\r\n\r\n    \r\n if (APP_SELF == APP_PUBLIC) {\r\n  \r\n  $appPaths = array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . 'app.*.php'), 'is_file'); \/\/ public\/\r\n  \r\n  \/\/ $globPaths[] = __DIR__ . DIRECTORY_SEPARATOR . 'app.console.php';\r\n  \/\/ $paths = array_values(array_unique(array_merge($additionalPaths, $globPaths)));\r\n  \r\n  \/\/if (isset($paths[APP_PATH . APP_BASE['public'] . 'app.install.php']))\r\n  \/\/  unset($paths[APP_PATH . APP_BASE['public'] . 'app.install.php']);\r\n  \r\n  \/\/ dd(get_included_files());\r\n  \r\n  usort($appPaths, function ($a, $b) {\r\n    \/\/ Define your sorting criteria here\r\n    global $appPaths;\r\n  \r\n    \/\/ install, debug, project, timesheet, browser, github, packagist, whiteboard, notes, pong, console\r\n    if (basename($a) === 'app.install.php')\r\n      return -1;\r\n    elseif (basename($b) === 'app.install.php')\r\n      return 1;\r\n    elseif (basename($a) === 'app.debug.php')\r\n      return -1;\r\n    elseif (basename($b) === 'app.debug.php')\r\n      return 1;\r\n    elseif (basename($a) === 'app.project.php')\r\n      return -1;\r\n    elseif (basename($b) === 'app.project.php')\r\n      return 1;\r\n    elseif (basename($a) === 'app.timesheet.php')\r\n      return -1;\r\n    elseif (basename($b) === 'app.timesheet.php')\r\n      return 1;\r\n    elseif (basename($a) === 'app.browser.php')\r\n      return -1;\r\n    elseif (basename($b) === 'app.browser.php')\r\n      return 1;\r\n    elseif (basename($a) === 'app.console.php')\r\n      return 1; \/\/ $a comes after $b\r\n    elseif (basename($b) === 'app.console.php')\r\n      return -1; \/\/ $a comes before $b\r\n    else \r\n      return strcmp(basename($a), basename($b)); \/\/ Compare other filenames alphabetically\r\n  });\r\n  \r\n  if (in_array(APP_PATH . APP_BASE['public'] . 'app.install.php', $appPaths))\r\n    foreach ($appPaths as $key => $file)\r\n      if (basename($file) === 'app.install.php')\r\n        unset($appPaths[$key]);\r\n  \r\n  $uiPaths = array_filter(glob(__DIR__ . DIRECTORY_SEPARATOR . '{ui}.*.php', GLOB_BRACE), 'is_file');\r\n  \r\n  \r\n  \/*\r\n  if (in_array(APP_PATH . APP_BASE['public'] . 'ui.composer.php', $uiPaths))\r\n    foreach ($uiPaths as $key => $file)\r\n      if (basename($file) === 'ui.composer.php')\r\n        unset($uiPaths[$key]);\r\n  *\/\r\n  \r\n  \/\/ If you want to reset the array keys to be numeric (optional)\r\n  $paths = array_values(array_unique(array_merge($uiPaths, $appPaths)));\r\n  \r\n  \/\/$paths = array_values(array_unique(array_merge($globPaths, $additionalPaths)));\r\n  \r\n  \/*9.4\r\n  do {\r\n      \/\/ Check if $paths is not empty\r\n      if (!empty($paths)) {\r\n          \/\/ Shift the first path from the array\r\n          $path = array_shift($paths);\r\n  \r\n          \/\/ Check if the path exists\r\n          if ($realpath = realpath($path)) {\r\n              \/\/ Require the file\r\n              require_once $realpath;\r\n          } else {\r\n              \/\/ Output a message if the file was not found\r\n              echo basename($path) . ' was not found. file=public\/' . basename($path) . PHP_EOL;\r\n          }\r\n          \r\n          dd('finish time: ' . $path, false);\r\n      }\r\n      \/\/ Unset $paths if it is empty\r\n      if (empty($paths)) unset($paths);\r\n  } while (isset($paths) && !empty($paths));\r\n  *\/\r\n  \/\/ dd(get_defined_vars(), true);\r\n  \r\n  \/\/$path = '';\r\n\r\n$app = $apps = [];\r\n\r\n\/\/ Check if $paths is not empty\r\nif (!empty($paths))\r\n  while ($path = array_shift($paths)) {\r\n          \/\/ Shift the first path from the array\r\n          \/\/;\r\n  \r\n          \/\/ Check if the path exists\r\n          if ($realpath = realpath($path)) {\r\n  \r\n              \/\/ Define a function to include the file\r\n  \/\/            $requireFile = function($file) \/*use ($apps)*\/ { global $apps; }; *\/\r\n  \r\n              \/\/ Include the file using the function\r\n              \/\/dd(\"path is $realpath\\n\", false);\r\n              \/\/dd(get_required_files(), false);\r\n              \/* $returnedValue = (function() use ($realpath) {\r\n                ob_start();\r\n                require_once $realpath;\r\n                return ob_get_clean(); \/\/ redundant ob_end_clean();\r\n              })(); *\/\r\n              \/\/dd($realpath, false);\r\n              $returnedValue = (function() use ($realpath, &$app) {\r\n                ob_start();\r\n\r\n                require_once $realpath;\r\n\r\n                if (preg_match('\/^app\\.([\\w\\-.]+)\\.php$\/', basename($realpath), $matches) && isset($matches[1]) \/*&& !empty($app[$matches[1]])*\/) {\r\n                  return [$matches[1] => ['style' => $app[$matches[1]]['style'], 'body' => $app[$matches[1]]['body'], 'script' => $app[$matches[1]]['script']]];\r\n                } else if (preg_match('\/^ui\\.([\\w\\-.]+)\\.php$\/', basename($realpath), $matches)) {\r\n                  !defined($app_name = 'UI_' . strtoupper($matches[1])) and define($app_name, ['style' => $app['style'], 'body' => $app['body'], 'script' => $app['script']]); \/\/ $apps[$matches[1]]\r\n                  \/\/dd('UI_' . strtoupper($matches[1]) . ' created?', false);\r\n                  \/\/$app = [];\r\n                  return null;\r\n                }\r\n\r\n                \/\/dd('UI_' . strtoupper($matches[1]) . ' created?', false);\r\n\r\n                \/\/dd($realpath . ' created?', false);\r\n              })();\r\n        \r\n              \/\/$returnedValue = require_once $realpath;\r\n\r\n              \/\/dd($app, false);\r\n              \/\/ob_start(); $ob_contents = ob_get_contents(); ob_end_clean();\r\n              \/\/dd($ob_contents, false);\r\n              \/\/dd(get_required_files(), false);\r\n              \/\/dd($returnedValue, false);\r\n  \r\n              \/\/ Check the type of the returned value\r\n              if (is_array($returnedValue) && !empty($returnedValue)) {\r\n                  \/\/ The file returned an array\r\n\r\n                  \/\/dd($returnedValue);\r\n                  $apps = array_merge($apps, $returnedValue);\r\n              }  \/\/elseif ($returnedValue !== null) {\r\n                  \/\/ The file returned a non-null value\r\n                  \/\/echo 'Returned value: ' . $returnedValue . PHP_EOL;\r\n              \/\/} else {\r\n                  \/\/ The file did not return a value\r\n              \/\/    echo 'File did not return a value.' . PHP_EOL;\r\n              \/\/}\r\n          } else {\r\n              \/\/ Output a message if the file was not found\r\n              echo basename($path) . ' was not found. file=public\/' . basename($path) . PHP_EOL;\r\n          }\r\n\r\n      \/\/ Unset $paths if it is empty\r\n      \/\/if (empty($paths)) unset($paths);\r\n  \r\n  } \/\/ isset($paths) && !empty($paths)\r\n  \/\/dd(array_keys($apps['console']));\r\n      \/\/dd(get_defined_vars(), true); \/\/ Check that $files remains unchanged\r\n      \/\/dd($appDirectory['body']); \r\n\r\n  if (defined('APP_ENV'))\r\n    switch (APP_ENV) {\r\n      case 'development':\r\n        require_once 'idx.develop.php';\r\n        break;\r\n      case 'math':\r\n        require_once 'idx.math.php';\r\n        break;\r\n      case 'production':\r\n      default:\r\n        require_once 'idx.product.php';\r\n        break;\r\n  } else {\r\n    define('APP_ENV', 'production');\r\n    require_once 'idx.product.php';\r\n  }\r\n\r\n\r\n}\r\n",
"public/project.php" : "<?php\r\n\r\n\/\/$require = function($path) { if (is_file($path)) return require_once $path; else echo '<!DOCTYPE html>'; };  \/\/ require_once '..\/projects\/index.php';\r\n\r\n\/\/echo $require('..\/projects\/index.php');\r\n\r\n$path = realpath('..\/projects\/index.php') or die('<!DOCTYPE html>');\r\n\r\n\/\/die($path);\r\n\r\ndie(require_once $path); \/\/  \r\n",
"public/ui.ace_editor.php" : "<?php\r\n\r\n\/\/dd(get_required_files());\r\n\r\n\/\/if (isset($_GET['path']) && isset($_GET['file']) && $path = realpath($_GET['path'] . $_GET['file']))\r\n\r\n\/\/$errors->{'TEXT_MANAGER'} = $path . \"\\n\" . 'File Modified:    Rights:    Date of creation: ';\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"])) \r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('index.php'))) {\r\n      require_once $path;\r\n    }\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  if (isset($_GET['app']) && $_GET['app'] == 'ace_editor')\r\n    if (isset($_POST['path']) && isset($_GET['file']) && $path = realpath($_POST['path'] . $_GET['file'])) {\r\n      file_put_contents($path, $_POST['contents']);\r\n      die(header('Location: ' . APP_WWW));\r\n    }\r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['file'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['file'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'sudo ' . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open('sudo ' . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n}\r\n\r\n\/*\r\n$proc=proc_open('sudo ' . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\n          list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n          $output[] = (!isset($stdout) ? NULL : $stdout . (isset($stderr) && $stderr === '' ? NULL : ' Error: ' . $stderr) . (isset($exitCode) && $exitCode == 0 ? NULL : 'Exit Code: ' . $exitCode));\r\n*\/\r\n\r\nif (defined('GIT_EXEC'))\r\n  if (is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/ace') && empty(glob($path)))\r\n    exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . GIT_EXEC . ' clone https:\/\/github.com\/ajaxorg\/ace-builds.git resources\/js\/ace', $output, $returnCode) or $errors['GIT-CLONE-ACE'] = $output;\r\n  elseif (!is_dir($path)) {\r\n    if (!mkdir($path, 0755, true))\r\n      $errors['GIT-CLONE-ACE'] = ' resources\/js\/ace does not exist.';\r\n    exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . GIT_EXEC . ' clone https:\/\/github.com\/ajaxorg\/ace-builds.git resources\/js\/ace', $output, $returnCode) or $errors['GIT-CLONE-ACE'] = $output;\r\n  }\r\n\r\nob_start(); ?>\r\n    #app_ace_editor-container { \r\n      width: 550px;\r\n      height: 450px;\r\n      \/* border: 1px solid black; *\/\r\n      position: absolute;\r\n      top: 60px; \r\n      left: 30%;\r\n      right: 0;\r\n      z-index: 1;\r\n      \/* resize: both; Make the div resizable *\/\r\n      \/* overflow: hidden; Hide overflow to ensure proper resizing *\/\r\n    }\r\n\r\n    #app_ace_editor-container.selected {\r\n      display: block;\r\n  z-index: 1;\r\n  resize: both; \/* Make the div resizable *\/\r\n  overflow: hidden; \/* Hide overflow to ensure proper resizing *\/\r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75    #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n\r\n    #ui_ace_editor {\r\n      width: 100%;\r\n      height: calc(100% - 80px);\r\n      position: absolute;\r\n    }\r\n\r\n    \r\n    #ace-editor {\r\n      margin: 0;\r\n      position: relative;\r\n      \/*resize: both;*\/\r\n      overflow: auto;\r\n      white-space: pre-wrap;\r\n      \/*width: 100%;\r\n      height: 100%;*\/\r\n    }\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n.containerTbl {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n  }\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n}\r\n\r\ntd, th {\r\n    border: 1px solid black;\r\n    padding: 8px;\r\n}\r\n\r\nimg { display: inline; }\r\n\r\n\r\n<?php $app['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<div id=\"app_ace_editor-container\" class=\"absolute <?= __FILE__ == get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'ace_editor') && !isset($_GET['path']) ? 'selected' : '' ?>\" style=\"display: <?= __FILE__ == get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'ace_editor') ? 'block' : 'none' ?>; resize: both; overflow: hidden;\">\r\n    <div class=\"ui-widget-header\" style=\"position: relative; display: inline-block; width: 100%; cursor: move; border-bottom: 1px solid #000;background-color: #FFF;\">\r\n      <label class=\"ace_editor-home\" style=\"cursor: pointer;\">\r\n        <div class=\"\" style=\"position: relative; display: inline-block; top: 0; left: 0;\">\r\n          <img src=\"resources\/images\/ace_editor_icon.png\" width=\"32\" height=\"32\" \/>\r\n        <\/div>\r\n      <\/label>\r\n      <div style=\"display: inline;\">\r\n        <span style=\"background-color: #38B1FF; color: #FFF; margin-top: 10px;\">Ace Editor <?= \/* (version_compare(NPM_LATEST, NPM_VERSION, '>') != 0 ? 'v'.substr(NPM_LATEST, 0, similar_text(NPM_LATEST, NPM_VERSION)) . '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . substr(NPM_LATEST, similar_text(NPM_LATEST, NPM_VERSION)) . '<\/span>' : 'v'.NPM_VERSION ); *\/ NULL; ?><\/span> <span style=\"background-color: #0078D7; color: white;\"><code id=\"AceEditorVersionBox\" class=\"text-sm\" style=\"background-color: white; color: #0078D7;\"><\/code><\/span>\r\n      <\/div>\r\n        \r\n      <div style=\"display: inline; float: right; text-align: center; color: blue;\"><code style=\"background-color: white; color: #0078D7;\"><a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_ace_editor-container').style.display='none';\">[X]<\/a><\/code><\/div> \r\n    <\/div>\r\n\r\n    <div id=\"\" style=\"position: relative; width: 100%; height: 100%; border: 3px dashed #38B1FF; background-color: rgba(56,177,255,0.6);\">\r\n\r\n      <div class=\"ui-widget-content\" style=\"position: relative; display: block; margin: 0 auto; width: calc(100% - 2px); height: 50px; background-color: rgba(251,247,241);\">\r\n        <div style=\"display: inline-block; text-align: left; width: 125px;\">\r\n          <div class=\"npm-menu text-sm\" style=\"cursor: pointer; font-weight: bold; padding-left: 25px; border: 1px solid #000;\">Main Menu<\/div>\r\n          <div class=\"text-xs\" style=\"display: inline-block; border: 1px solid #000;\">\r\n            <a class=\"text-sm\" id=\"app_ace_editor-frameMenuPrev\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\"> &lt; Menu<\/a> | <a class=\"text-sm\" id=\"app_ace_editor-frameMenuNext\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\">Init &gt;<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div class=\"absolute\" style=\"position: absolute; display: inline-block; top: 5px; right: 0; text-align: right; float: right;\">\r\n          <div class=\"text-xs\" style=\"position: relative; display: inline-block;\">\r\n          + 478 <a href=\"https:\/\/github.com\/ajaxorg\/ace\/graphs\/contributors\">contributors<\/a>\r\n          <br \/><!-- a href=\"https:\/\/github.com\/ajaxorg\"><img src=\"resources\/images\/node.js.png\" title=\"https:\/\/github.com\/nodejs\" width=\"18\" height=\"18\" \/><\/a -->\r\n          <a style=\"color: blue; text-decoration-line: underline; text-decoration-style: solid;\" href=\"https:\/\/ace.c9.io\/\" title=\"https:\/\/ace.c9.io\/\">https:\/\/ace.c9.io\/<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n\r\n<?= \/*\r\n        <div class=\"containerTbl\" style=\"background-ground: #fff; border: 1px solid #000; display: <?= (isset($_GET['file']) && isset($_GET['path']) && is_file($_GET['path'] . $_GET['file']) ? 'none': 'block' ) ?>;\">\r\n<table width=\"\" style=\"border: 1px solid #000;\">\r\n<tr>\r\n<?php\r\n$paths = glob($path . '\/*');\r\n\/\/dd(urldecode($_GET['path']));\r\nusort($paths, function ($a, $b) {\r\n    $aIsDir = is_dir($a);\r\n    $bIsDir = is_dir($b);\r\n    \r\n    \/\/ Directories go first, then files\r\n    if ($aIsDir && !$bIsDir) {\r\n        return -1;\r\n    } elseif (!$aIsDir && $bIsDir) {\r\n        return 1;\r\n    }\r\n    \r\n    \/\/ If both are directories or both are files, sort alphabetically\r\n    return strcasecmp($a, $b);\r\n});\r\n\r\n$count = 1;\r\nif (!empty($paths))\r\n  foreach($paths as $key => $path) {\r\n      echo '<td style=\"border: 1px solid #000;\" class=\"text-xs\">' . \"\\n\";\r\n      if (is_dir($path))\r\n        echo '<a href=\"?app=ace_editor&path=' . basename($path) . '\">'\r\n        . '<img src=\"..\/..\/resources\/images\/directory.png\" width=\"50\" height=\"32\" \/><br \/>' . basename($path) . '<\/a>' . \"\\n\";\r\n      elseif (is_file($path))\r\n        echo '<a href=\"?app=ace_editor&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\">'\r\n        . '<img src=\"..\/..\/resources\/images\/php_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>' . \"\\n\";\r\n      echo '<\/td>' . \"\\n\";\r\n      if ($count >= 6 || $path == end($paths)) echo '<\/tr>';\r\n      if (isset($count) && $count >= 6) $count = 1;\r\n      else $count++;\r\n  } \r\n?>\r\n<\/tr>\r\n<\/table>\r\n        <\/div>\r\n*\/ NULL; ?>\r\n      \r\n      <\/div>\r\n\r\n\r\n\r\n      <div style=\"position: relative; margin: 0 auto; width: calc(100% - 2px); height: 100%;\">\r\n<!--\r\n      <div id=\"app_ace_editor-frameMenu\" class=\"app_ace_editor-frame-container absolute selected\" style=\"background-color: rgb(225,196,151,.75); margin-top: 8px; height: 100%;\">\r\n-->\r\n<form style=\"\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'ace_editor')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"POST\">\r\n        <input type=\"hidden\" name=\"path\" value=\"<?= APP_PATH \/*. APP_BASE['public'];*\/ ?>\" \/>\r\n        <div style=\"display: inline-block; width: auto; text-align: right; float: right;\">\r\n          <input type=\"submit\" value=\"Save\" class=\"btn\" style=\"margin: -5px 5px 5px 0; z-index: 999;\" onclick=\"document.getElementsByClassName('ace_text-input')[0].value = globalEditor.getSession().getValue(); document.getElementsByClassName('ace_text-input')[0].name = 'editor';\"\/>\r\n        <\/div>\r\n<!--   A (<?= \/* $path *\/ ''; ?>) future note: keep ace-editor nice and tight ... no spaces, as it interferes with the content window.\r\n https:\/\/scribbled.space\/ace-editor-setup-usage\/ -->\r\n\r\n<div id=\"ui_ace_editor\" class=\"ace_editor\" style=\"display: <?= isset($_GET['file']) && isset($_GET['path']) && is_file($_GET['path'] . $_GET['file']) ? 'block' : 'block'?>; z-index: 1;\"><textarea name=\"contents\" class=\"ace_text-input\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" style=\"opacity: 0; font-size: 1px; height: 1px; width: 1px; top: 28px; left: 86px;\" wrap=\"off\"><?= isset($_GET['file']) && is_file($filename = APP_PATH . APP_ROOT . (!isset($_GET['path']) ? '' : $_GET['path'] . ($_GET['path'] == '' ? '' : '\/' )) . $_GET['file']) ? htmlsanitize(file_get_contents($filename)) : htmlsanitize(\"<?php\r\n\r\n\/* This is an example of ACE Editor working *\/\r\n\r\nrequire(__DIR__ . 'config\/config.php');\r\n\r\n\"); \/* (isset($_GET['project']) ? htmlsanitize(file_get_contents($path . 'projects\/index.php')) : '')*\/ ''; \/*   'clientele\/' . $_GET['client'] . '\/' . $_GET['domain'] . '\/' .  *\/ ?><\/textarea><\/div><\/form>\r\n    <!-- div style=\"position: relative; display: inline-block; width: 100%; height: 100%; padding-left: 10px;\">\r\n\r\n      <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"<?= APP_URL_BASE . \/*basename(__FILE__) .*\/ '?' . http_build_query(APP_QUERY \/*+ array( 'app' => 'ace_editor')*\/) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"GET\">\r\n        <input type=\"hidden\" name=\"app\" value=\"ace_editor\" \/>\r\n      <?php $path = realpath(getcwd() . (isset($_GET['path']) ? DIRECTORY_SEPARATOR . $_GET['path'] : '')) . DIRECTORY_SEPARATOR;\r\n      if (isset($_GET['path'])) { ?>\r\n       <input type=\"hidden\" name=\"path\" value=\"<?= $_GET['path']; ?>\" \/> \r\n      <?php } echo '<span title=\"' . $path . '\">' . parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) . '<\/span>'; \/* $path; *\/ ?>\r\n        <select name=\"path\" onchange=\"this.form.submit();\">\r\n          <option value>.<\/option>\r\n          <option value>..<\/option>\r\n<?php\r\nif ($path)\r\n  foreach (array_filter( glob( $path . DIRECTORY_SEPARATOR . '*'), 'is_dir') as $dir) {\r\n    echo '<option value=\"' . (isset($_GET['path']) ?  $_GET['path'] . DIRECTORY_SEPARATOR : '') . basename($dir) . '\"' . (isset($_GET['path']) && $_GET['path'] == basename($dir) ? ' selected' : '' )  . '>' . basename($dir) . '<\/option>' . \"\\n\";\r\n  }\r\n?>\r\n        <\/select>\r\n      <\/form>\r\n \/ <input type=\"text\" name=\"file\" value=\"index.php\" \/> \r\n\r\n      <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"<?= APP_URL_BASE . \/*basename(__FILE__) .*\/ '?' . http_build_query(APP_QUERY \/*+ array( 'app' => 'ace_editor')*\/) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"GET\">\r\n      <input type=\"hidden\" name=\"app\" value=\"ace_editor\" \/>\r\n\r\n      <input type=\"hidden\" name=\"path\" value=\"<?= (isset($_GET['path']) ? $_GET['path'] : '') ?>\" \/>\r\n\r\n        <select name=\"file\" onchange=\"this.form.submit();\">\r\n          <option value=\"\">---<\/option>\r\n<?php\r\nif ($path)\r\nforeach (array_filter( glob($path . DIRECTORY_SEPARATOR . '*.php'), 'is_file') as $file) {\r\n  echo '<option value=\"' . basename($file) . '\"' . (isset($_GET['file']) && $_GET['file'] == basename($file) ? ' selected' : '' )  . '>' . basename($file) . '<\/option>' . \"\\n\";\r\n}\r\n?>\r\n        <\/select>\r\n      <\/form>\r\n      <\/div> -->\r\n\r\n\r\n\r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n\r\n      <\/div>\r\n\r\n      <div id=\"app_ace_editor-frameInit\" class=\"app_ace_editor-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n<!--\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <input id=\"gitInitSubmit\" class=\"btn\" type=\"submit\" value=\"Init\/Run\">\r\n      <\/div> \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitInitLabel\" for=\"gitInit\" style=\"background-color: #6781B2; color: white;\">? <code>Init<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"gitInitForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"2\" name=\"git[init]\">git init<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n-->\r\n      <\/div>\r\n\r\n      <div id=\"container1\" style=\"position: relative; width: 100%; height: 100%; border: 1px #000 solid;\">\r\n      \r\n\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n<?php\r\n\r\n$app['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php \/\/if (isset($_GET['client']) && $_GET['client'] != '') { \r\n\/\/if (isset($_GET['domain']) && $_GET['domain'] != '') {\r\nif (is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/ace')) { ?>\r\n    $(function() {\r\n      \/\/$(\"#resizable\").resizable();\r\n\r\n      var appEditor = ace.edit(\"ui_ace_editor\");\r\n      appEditor.setTheme(\"ace\/theme\/dracula\");\r\n      appEditor.session.setMode(\"ace\/mode\/php\");\r\n      appEditor.setAutoScrollEditorIntoView(true);\r\n      appEditor.setShowPrintMargin(false);\r\n      appEditor.setOptions({\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true\r\n      });\r\n\r\n      $(\"#app_ace_editor-container\").resizable({ \/\/ , #ui_ace_editor\r\n        alsoResize: \"#ui_ace_editor\"\r\n      });\r\n\r\n      $(\"#app_ace_editor-container\").on(\"resize\", function () { \/\/ event, ui\r\n        \/* console.log('Resized:', ui.size);*\/\r\n        appEditor.resize();\r\n      });\r\n\r\n    });\r\n<?php } ?>\r\n\r\n<?= \/* $(document).ready(function() {}); *\/ ''; ?>\r\n\r\n<?php\r\n$app['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\");\r\n\/\/check if file is included or accessed directly\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/base\/jquery-ui.css\">\r\n  <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/ -->\r\n  \r\n<?php\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\nunset($path);\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app['body']; ?>\r\n\r\n<?php\r\n  is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/jquery\/') or mkdir($path, 0755, true);\r\n  if (is_file($path . 'jquery-3.7.1.min.js')) {\r\n    if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'jquery-3.7.1.min.js'))))) \/ 86400)) <= 0 ) {\r\n      $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n      $handle = curl_init($url);\r\n      curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n  \r\n      if (!empty($js = curl_exec($handle))) \r\n        file_put_contents(\"{$path}jquery-3.7.1.min.js\", $js) or $errors['JS-JQUERY'] = \"$url returned empty.\";\r\n    }\r\n  } else {\r\n    $url = 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n  \r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents(\"{$path}jquery-3.7.1.min.js\", $js) or $errors['JS-JQUERY'] = \"$url returned empty.\";\r\n  }\r\n  unset($path); ?>\r\n  <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : APP_BASE['resources'] . 'js\/jquery\/' . 'jquery-3.7.1.min.js' ?>\"><\/script>\r\n  <!-- You need to include jQueryUI for the extended easing options. -->\r\n      <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n  \r\n  <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.min.js') ? 'https:\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.min.js' : APP_BASE['resources'] . 'js\/jquery-ui\/' . 'jquery-ui-1.12.1.js' ?>\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n\r\n  <script src=\"resources\/js\/ace\/src\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n  <script src=\"resources\/js\/ace\/src\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> \r\n<!-- <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/ace\/1.4.12\/ext-language_tools.js\"><\/script>\r\n\r\n  <script src=\"resources\/js\/ace\/src\/mode-php.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n  <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n\r\n  <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n  <!-- script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script -->\r\n  <!-- <script src=\"..\/resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n<script>\r\n\r\nlet isDragging = false;\r\nlet activeWindow = null;\r\n\r\nfunction makeDraggable(windowId) {\r\n    const windowElement = document.getElementById(windowId);\r\n    const headerElement = windowElement.querySelector('.ui-widget-header');\r\n    let offsetX, offsetY;\r\n\r\n    headerElement.addEventListener('mousedown', function(event) {\r\n        if (!isDragging) {\r\n            \/\/ Bring the clicked window to the front\r\n            document.body.appendChild(windowElement);\r\n            offsetX = event.clientX - windowElement.getBoundingClientRect().left;\r\n            offsetY = event.clientY - windowElement.getBoundingClientRect().top;\r\n            isDragging = true;\r\n            activeWindow = windowElement;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mousemove', function(event) {\r\n        if (isDragging && activeWindow === windowElement) {\r\n            const left = event.clientX - offsetX;\r\n            const top = event.clientY - offsetY;\r\n\r\n            \/\/ Boundary restrictions\r\n            const maxX = window.innerWidth - windowElement.clientWidth - 100;\r\n            const maxY = window.innerHeight - windowElement.clientHeight;\r\n\r\n            windowElement.style.left = `${Math.max(-200, Math.min(left, maxX))}px`;\r\n            windowElement.style.top = `${Math.max(0, Math.min(top, maxY))}px`;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mouseup', function() {\r\n        if (activeWindow === windowElement) {\r\n            isDragging = false;\r\n            activeWindow = null;\r\n        }\r\n    });\r\n}\r\n      \r\nmakeDraggable('app_ace_editor-container');\r\n\r\n$(function() {\r\n    $(\"#container1\").resizable({\r\n        alsoResize: \"#app_ace_editor\" \/\/ Resize textarea along with the dialog\r\n    });\r\n\r\n});\r\n\r\n\r\n<?= $app['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php \r\n  $return_contents = ob_get_contents();\r\n\r\n  ob_end_clean();\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]) ) {\r\n  print $return_contents;\r\n} elseif (in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'ace_editor' && APP_DEBUG) {\r\n  return $return_contents;\r\n} else { \r\n  return $app;\r\n}\r\n",
"public/ui.composer.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]))\r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('index.php'))) {\r\n      require_once $path;\r\n    }\r\n  }\r\n  else\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n\r\n\/*\r\nif (__FILE__ == get_required_files()[0])\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n*\/\r\n  \/*\r\nelse {\r\n  $path = APP_PATH . APP_BASE['config'] . 'composer.php';\r\ndd($path);\r\n  if (is_file($path))\r\ndd(get_included_files(), false);\r\n    require_once $path; \r\n  else\r\n    die(var_dump(\"$path path was not found. file=composer.php\"));\r\n}*\/\r\n\r\n\/\/ dd(get_required_files());\r\n\/\/ require APP_BASE['vendor'] . 'autoload.php'; \/\/ Include Composer's autoloader\r\n\r\n\/\/ dd(get_required_files());\r\n\r\n\/*\r\nuse Composer\\Factory;\r\nuse Composer\\Repository\\InstalledRepositoryInterface;\r\n\r\n\/\/ Initialize Composer\r\n$composer = Factory::create();\r\n\r\n\/\/ Get the installed packages repository\r\n$installedRepo = $composer->getRepositoryManager()->getLocalRepository();\r\n\r\n\/\/ Get a list of installed packages\r\n$installedPackages = $installedRepo->getPackages();\r\n\r\n\/\/ Print the list of installed packages\r\nforeach ($installedPackages as $package) {\r\n    echo $package->getName() . ' (' . $package->getVersion() . ')' . PHP_EOL;\r\n}\r\ndie();\r\n\r\n*\/\r\n\r\n\r\n\/\/ composer create-project [PACKAGE] [DESTINATION PATH] [--FLAGS]\r\n\/\/composer create-project laravel\/laravel example-app\r\n\r\n\r\n\/\/cd example-app\r\n\r\n\/\/php artisan serve\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n\r\n\/*\r\n\r\nWorkflows and Projects\r\n\r\nPHP   .github \/ workflows \/ php.yml\r\nBuild and test a PHP application using Composer\r\n\r\nSLSA Generic generator\r\nGenerate SLSA3 provenance for your existing release workflows\r\n\r\nJekyll using Docker image\r\nPackage a Jekyll site using the jekyll\/builder Docker image.\r\n\r\nLaravel\r\nTest a Laravel project.\r\n\r\nSymfony\r\nTest a Symfony project.\r\n\r\nPublish Node.js Package\r\nPublishes a Node.js package to npm.\r\n\r\nPublish Node.js Package to GitHub Packages\r\nPublishes a Node.js package to GitHub Packages.\r\n\r\n*\/\r\n}\r\n\r\n\r\n\/** Loading Time: 5.1s **\/\r\n  \r\n  \/\/dd(get_required_files(), true);\r\n\r\nif (!in_array(APP_PATH . APP_BASE['config'] . 'composer.php', get_required_files()))\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/composer.php') ? '..\/composer.php' : (is_file('..\/config\/composer.php') ? '..\/config\/composer.php' : null))\r\n    : (is_file('composer.php') ? 'composer.php' : (is_file('config\/composer.php') ? 'config\/composer.php' : null))) require_once($path); \r\nelse die(var_dump($path . ' path was not found. file=composer.php'));\r\n\r\nif (!in_array(APP_PATH . APP_BASE['public'] . 'app.console.php', get_required_files()))\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('app.console.php') ? 'app.console.php' : (is_file('..\/config\/app.console.php') ? '..\/config\/app.console.php' : null))\r\n    : (is_file('app.console.php') ? 'app.console.php' : (is_file('public\/app.console.php') ? 'public\/app.console.php' : 'app.console.php'))) require_once($path); \r\nelse die(var_dump($path . ' path was not found. file=app.console.php'));\r\n\r\n\r\n\r\n\/*  ...\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"HtmlToRtf\\\\\": \"src\/HtmlToRtf\",\r\n            \"ProgressNotes\\\\\": \"src\/ProgressNotes\"\r\n        }\r\n    }\r\n*\/\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n\r\n  \/\/ consider creating a visual aspect for the lock file\r\n  \r\n  \/\/dd($_POST);\r\n  \r\n  chdir(APP_PATH . APP_ROOT);\r\n\r\n  if (isset($_POST['composer']['create-project']) && preg_match(COMPOSER_EXPR_NAME, $_POST['composer']['package'], $matches)) {\r\n    if (!is_dir($path = APP_PATH . 'project'))\r\n      (@!mkdir($path, 0755, true) ?: $errors['COMPOSER-PROJECT'] = 'project\/ could not be created.' );\r\n    if ($matches[1] == 'laravel' && $matches[2] == 'laravel')  \r\n      exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . 'composer create-project ' . $_POST['composer']['package'] . ' project\/laravel', $output, $returnCode) or $errors['COMPOSER-PROJECT-LARAVEL'] = $output;\r\n    elseif ($matches[1] == 'symfony' && $matches[2] == 'skeleton')  \r\n      exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . 'composer create-project ' . $_POST['composer']['package'] . ' project\/symfony', $output, $returnCode) or $errors['COMPOSER-PROJECT-SYMFONY'] = $output;\r\n\r\n    unset($_POST['composer']['package']);\r\n    unset($_POST['composer']['create-project']);\r\n  } elseif (isset($_POST['composer']['package']) && preg_match(COMPOSER_EXPR_NAME, $_POST['composer']['package'])) {\r\n    list($vendor, $package) = explode('\/', $_POST['composer']['package']);\r\n\r\n    if (empty($vendor))\r\n      $errors['COMPOSER_PKG'] = 'vendor is missing its value. vendor=' . $vendor;\r\n    if (empty($package))\r\n      $errors['COMPOSER_PKG'] = 'package is missing its value. package=' . $package;\r\n\r\n      \/\/if ($vendor == 'nesbot' && $package == 'carbon') {\r\n\r\n      if (preg_match(DOMAIN_EXPR, packagist_return_source($vendor, $package), $matches))\r\n$raw_url = $initial_url = $matches[0];\r\n      else $raw_url = '';\r\n    \r\n      if (!is_file(APP_BASE['var'].'package-' . $vendor . '-' . $package . '.php')) {\r\n\r\n      $source_blob = check_http_status($raw_url) ? file_get_contents($raw_url) : '';\r\n    \r\n      \/\/dd('url: ' . $raw_url);\r\n      $raw_url = addslashes($raw_url);\r\n\r\n      $source_blob = addslashes(COMPOSER_JSON['json']); \/\/ $source_blob\r\n      file_put_contents(APP_BASE['var'].'package-' . $vendor . '-' . $package . '.php', '<?php' . \"\\n\" . ( check_http_status($raw_url) ? '$source = \"' . $raw_url . '\";' : '' ) . \"\\n\" . \r\n<<<END\r\n\\$composer_json = \"{$source_blob}\";\r\nreturn '<form action method=\"POST\">'\r\n. '...'\r\n. '<\/form>';\r\nEND\r\n);\r\n\r\n      if (isset($_POST['composer']['install'])) {\r\n        exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . 'composer require ' . $_POST['composer']['package'], $output, $returnCode) or $errors['COMPOSER-REQUIRE'] = $output;\r\n        exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . 'composer update ' . $_POST['composer']['package'], $output, $returnCode) or $errors['COMPOSER-UPDATE'] = $output;\r\n      }\r\n\r\n    exit(header('Location: ' . APP_URL_BASE . '?' . http_build_query(APP_QUERY))); \/\/ , '', '&amp;'\r\n    }\r\n\r\n  } elseif (isset($_POST['composer']['config']) && !empty($_POST['composer']['config'])) {\r\n\r\n    $composer = new composerConfig();\r\n\r\n\/*\r\n      if (isset($_POST['composer']['config']['version']) && preg_match(COMPOSER_EXPR_VER, $_POST['composer']['config']['version']))\r\n        $composer->{'version'} = $_POST['composer']['config']['version'];   \/\/ $_POST['composer']['config']['version'] !== ''\r\n      else unset($composer->{'version'});\r\n*\/\r\n    $composer->{'name'} = $_POST['composer']['config']['name']['vendor'] . '\/' . $_POST['composer']['config']['name']['package'];\r\n    $composer->{'description'} = $_POST['composer']['config']['description'];\r\n    if (isset($_POST['composer']['config']['version']) && preg_match(COMPOSER_EXPR_VER, $_POST['composer']['config']['version']))\r\n      $composer->{'version'} = $_POST['composer']['config']['version'];   \/\/ $_POST['composer']['config']['version'] !== ''\r\n    else unset($composer->{'version'});\r\n    $composer->{'type'} = $_POST['composer']['config']['type'];\r\n    $composer->{'keywords'} = (isset($_POST['composer']['config']['keywords']) ? $_POST['composer']['config']['keywords'] : []);\r\n    $composer->{'homepage'} = 'https:\/\/github.com\/' . $_POST['composer']['config']['name']['vendor'] . '\/' . $_POST['composer']['config']['name']['package'];\r\n    $composer->{'readme'} = 'README.md';\r\n    $composer->{'time'} = date('Y-m-d H:i:s');\r\n    $composer->{'license'} = $_POST['composer']['config']['license'];\r\n    $composer->{'authors'} = []; \/\/$_POST['composer']['authors'];\r\n\r\n    if (!empty($_POST['composer']['config']['authors'])) foreach ($_POST['composer']['config']['authors'] as $key => $author) {\r\n\r\n      if ($author['name'] != '' || $author['email'] != '') {\r\n        $object = new stdClass();\r\n        $object->name = $author['name'] ?? 'John Doe';\r\n        $object->email = $author['email'] ?? 'jdoe@example.com';\r\n        $object->role = $author['role'] ?? 'Developer';\r\n\r\n        $composer->{'authors'}[] = $object;\r\n      }\r\n    } else $composer->{'authors'} = [];\r\n  \r\n      \/\/ $composer->{'support'}\r\n      \/\/ $composer->{'funding'}\r\n      \r\n      \/\/ $composer->{'repositories'}\r\n \r\n    if (!$composer->{'repositories'} || empty($composer->{'repositories'})) $composer->{'repositories'} = [];\r\n  \r\n    $composer->{'require'} = new stdClass(); \/\/$_POST['composer']['require'];\r\n      \r\n  \/\/dd($composer->{'require'});\r\n  \r\n    if (!empty($_POST['composer']['config']['require'])) {\r\n        \/\/if (!in_array($require_0, $_POST['composer']['require'])) { continue; }\r\n      foreach ($_POST['composer']['config']['require'] as $require) {   \/\/   \r\n\r\n        if (preg_match('\/(.*):(.*)\/', $require, $match)) $composer->{'require'}->{$match[1]} = $match[2] ?? '^';\r\n      }\r\n    } else $composer->{'require'} = new StdClass;\r\n    \r\n    $composer->{'require-dev'} = new stdClass();\r\n      \r\n    if (!empty($_POST['composer']['config']['require-dev'])) {\r\n        \/\/if (!in_array($require_0, $_POST['composer']['require'])) { continue; }\r\n      foreach ($_POST['composer']['config']['require-dev'] as $require) {   \/\/   \r\n        if (preg_match('\/(.*):(.*)\/', $require, $match)) $composer->{'require-dev'}->{$match[1]} = $match[2] ?? '^';\r\n      }\r\n    } else $composer->{'require-dev'} = new StdClass;\r\n\r\n    $composer->{'autoload'} = new StdClass; \/\/ $_POST['composer']['autoload'];\r\n  \/\/$composer->{'autoload'}->{'psr-4'} = new StdClass; \r\n  \/\/$composer->{'autoload'}->{'psr-4'}->{'HtmlToRtf\\\\'} = \"src\/HtmlToRtf\";\r\n  \/\/$composer->{'autoload'}->{'psr-4'}->{'ProgressNotes\\\\'} = \"src\/HtmlToRtf\";\r\n\r\n  \/\/$composer->{'autoload-dev'} = $_POST['composer']['autoload-dev'];\r\n\r\n    $composer->{'minimum-stability'} = $_POST['composer']['config']['minimum-stability'];\r\n      \r\n    $composer->{'prefer-stable'} = true;\r\n\r\n      \/\/dd();\r\n\r\n    if (COMPOSER_AUTH['token'] != $_POST['auth']['github_oauth']) {\r\n      $tmp_auth = json_decode(COMPOSER_AUTH['json']);\r\n      $tmp_auth->{'github-oauth'}->{'github.com'} = $_POST['auth']['github_oauth'];\r\n\r\n      file_put_contents(COMPOSER_AUTH['path'], json_encode($tmp_auth, JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT)); \/\/ COMPOSER_AUTH['json']\r\n    }\r\n\r\n    file_put_contents(COMPOSER_JSON['path'], json_encode($composer, JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT));\r\n\r\n  }\r\n\r\n  if (isset($_POST['composer']['init']) && !empty($_POST['composer']['init'])) {\r\n      $proc = proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ')  . str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), ' ', $_POST['composer']['init']) . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . COMPOSER_EXEC['bin'] . ' update;', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n    if (empty($stdout)) {\r\n      if (!empty($stderr))\r\n        $errors['COMPOSER_INIT'] = '$stderr = ' . $stderr;\r\n    } else $errors['COMPOSER_INIT'] = $stdout;\r\n\r\n      \/\/dd($errors);\r\n  }\r\n    \/\/dd('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . COMPOSER_EXEC . ' install ' . (isset($_POST['composer']['config']) ? '-o' : (isset($_POST['composer']['optimize-classes']) ? '-o': '')) . ';');\r\n    \r\n  isset($_POST['composer']['lock'])\r\n    and unlink(APP_PATH . 'composer.lock');\r\n\r\n\/\/ https:\/\/stackoverflow.com\/questions\/33052195\/what-are-the-differences-between-composer-update-and-composer-install\r\n    \r\n  if (isset($_POST['composer']['install'])) {\r\n\r\n    $proc = proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . COMPOSER_EXEC['bin'] . ' install ' . (isset($_POST['composer']['config']) ? '-o' : (isset($_POST['composer']['optimize-classes']) ? '-o': '')) . ';', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n    if (empty($stdout)) {\r\n      if (!empty($stderr))\r\n        $errors['COMPOSER_INSTALL'] = '$stderr = ' . $stderr;\r\n    } else $errors['COMPOSER_INSTALL'] = $stdout;\r\n\r\n      \/\/$composer = json_decode(COMPOSER_JSON['json'], true);   dd($composer);\r\n      \r\n      \/* php composer.phar remove phpmd\/phpmd    php composer.phar update*\/\r\n      \/* composer update phpmd\/phpmd *\/\r\n  }\r\n    \r\n  if (isset($_POST['composer']['update'])) {\r\n    \r\n    \/* Update won't work if the repositry has any upper\/lower case letters differn't ... *\/\r\n\/*  \r\nupdate [--with WITH] [--prefer-source] [--prefer-dist] [--prefer-install PREFER-INSTALL] [--dry-run] [--dev] [--no-dev] [--lock] [--no-install] [--no-audit] [--audit-format AUDIT-FORMAT] [--no-autoloader] [--no-suggest] [--no-progress] [-w|--with-dependencies] [-W|--with-all-dependencies] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--apcu-autoloader-prefix APCU-AUTOLOADER-PREFIX] [--ignore-platform-req IGNORE-PLATFORM-REQ] [--ignore-platform-reqs] [--prefer-stable] [--prefer-lowest] [-i|--interactive] [--root-reqs] [--] [<packages>...]\r\n*\/\r\n\r\n    if (isset($_POST['composer']['self-update']) || file_exists(APP_PATH . 'composer.phar')) {\r\n      if (!file_exists(APP_PATH . 'composer-setup.php'))\r\n        copy('https:\/\/getcomposer.org\/installer', 'composer-setup.php');\r\n      exec('php composer-setup.php');\r\n    }\r\n      \/\/ If this process isn't working, its because you have an invalid composer.json file\r\n    $proc = proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . COMPOSER_EXEC['bin'] . ' update'  , array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n\r\n    list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n\r\n    if (empty($stdout)) {\r\n      if (!empty($stderr))\r\n        $errors['COMPOSER_UPDATE'] = '$stderr = ' . $stderr;\r\n    } else $errors['COMPOSER_UPDATE'] = $stdout;\r\n\r\n    if (defined('COMPOSER_VERSION') && defined('COMPOSER_LATEST'))\r\n      if (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0) {\r\n        $proc = proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; ' . (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . COMPOSER_EXEC['bin'] . ' self-update;', array( array(\"pipe\",\"r\"), array(\"pipe\",\"w\"), array(\"pipe\",\"w\")), $pipes);\r\n    \r\n        list($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n    \r\n        if (empty($stdout)) {\r\n          if (!empty($stderr))\r\n            $errors['COMPOSER_UPDATE'] = '$stderr = ' . $stderr;\r\n        } else $errors['COMPOSER_UPDATE'] = $stdout;\r\n      }\r\n    \/\/ $_POST['composer']['cmd'];\r\n  }\r\n\r\n  exit(header('Location: ' . APP_URL_BASE . '?' . http_build_query(APP_QUERY)));\r\n}\r\n\r\n\r\n\/** Loading Time: 4.99s **\/\r\n  \r\n  \/\/dd(get_required_files(), true);\r\n\r\n\r\n\/*\r\n<?php ob_start(); ?>\r\n<HTML ...>\r\n<?php $app['css'] = ob_get_contents(); ?>\r\n*\/ \r\n\r\n\r\nob_start(); ?>\r\n\r\n\r\n#app_composer-container { position: absolute; display: none; top: 60px; left: 50%; right: 50%; margin: 0 auto; z-index: 1; }\r\n#app_composer-container.selected { display: block; z-index: 1; \r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75  #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n\r\n.app_composer-frame-container { position: absolute; display: none; top:0; left: 0; width: 400px; }\r\n.app_composer-frame-container.selected { display: block; z-index: 1; }\r\n\r\n\/* #app_composer-frameName == ['menu', 'conf', 'install', 'init', 'update'] *\/\r\n\r\n#app_composer-frameMenu {}\r\n#app_composer-frameMenuPrev {} \/* composerMenuPrev *\/\r\n#app_composer-frameMenuNext {} \/* composerMenuNext *\/\r\n\r\n#app_composer-frameMenuConf {}\r\n#app_composer-frameMenuInstall {}\r\n#app_composer-frameMenuInit {}\r\n#app_composer-frameMenuUpdate {}\r\n\r\n#app_composer-frameConf {}\r\n#app_composer-frameInstall {}\r\n#app_composer-frameInit {}\r\n#app_composer-frameUpdate {}\r\n\r\n#update { backgropund-color: rgba(240, 224, 198, .75); }\r\n#middle { backgropund-color: rgba(240, 224, 198, .75); }\r\n#bottom { backgropund-color: rgba(240, 224, 198, .75); }\r\n\r\n.btn {\r\n  @apply rounded-md px-2 py-1 text-center font-medium text-slate-900 shadow-sm ring-1 ring-slate-900\/10 hover:bg-slate-50\r\n}\r\n\r\n.composer-menu {\r\n  cursor: pointer;\r\n}\r\n\r\n.dropbtn {\r\n  background-color: #3498DB;\r\n  color: white;\r\n  padding: 2px 7px;\r\n  font-size: 14px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.dropbtn:hover, .dropbtn:focus {\r\n  background-color: #2980B9;\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n  float: right;\r\n  z-index: 1;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  min-width: 160px;\r\n  margin: -100px;\r\n  overflow: auto;\r\n}\r\n\r\n.dropdown-content a {\r\n  color: black;\r\n  padding: 8px 12px;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\n\r\n.dropdown a:hover {background-color: #ddd;}\r\n\r\n.show { display: block; }\r\n\r\nimg { display: inline; }\r\n\r\n<?php $app['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\/\/ dd(glob('*')); dd(getcwd());\r\n\r\n\/\/(APP_SELF == __FILE__ || isset($_GET['app']) && $_GET['app'] == 'composer' ? 'selected' : (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0 ? (isset($_GET['app']) && $_GET['app'] != 'composer' ? '' : 'selected') :  '')) \r\nob_start(); ?>\r\n\r\n  <div id=\"app_composer-container\" class=\"absolute <?= (__FILE__ ==  get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'composer') || (defined('COMPOSER') && !is_object(COMPOSER['json'])) || count((array)COMPOSER) === 0 || version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0 ? 'selected' : '') ?>\" style=\"z-index: 1; width: 424px; background-color: rgba(255,255,255,0.8); padding: 10px;\">\r\n\r\n    <div style=\"position: relative; margin: 0 auto; width: 404px; height: 324px; border: 3px dashed #6B4329; background-color: #FBF7F1;\">\r\n\r\n      <div class=\"absolute ui-widget-header\" id=\"\" style=\"position: absolute; display: inline-block; width: 100%; height: 25px; margin: -50px 0 25px 0; padding: 24px 0; border-bottom: 1px solid #000; z-index: 3;\">\r\n        <label class=\"composer-home\" style=\"cursor: pointer;\">\r\n          <div class=\"absolute\" style=\"position: relative; display: inline-block; top: 0; left: 0; margin-top: -5px;\">\r\n            <img src=\"resources\/images\/composer_icon.png\" width=\"32\" height=\"40\" \/>\r\n          <\/div>\r\n        <\/label>\r\n        <div style=\"display: inline;\">\r\n          <span style=\"background-color: #B0B0B0; color: white;\">Composer <?= (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0 ? 'v'.substr(COMPOSER_LATEST, 0, similar_text(COMPOSER_LATEST, COMPOSER_VERSION)) . '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . substr(COMPOSER_LATEST, similar_text(COMPOSER_LATEST, COMPOSER_VERSION)) . '<\/span>' : 'v'.COMPOSER_VERSION ); ?> <\/span>\r\n\r\n\r\n          <form style=\"display: inline;\" autocomplete=\"off\" spellcheck=\"false\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'composer')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"GET\">\r\n            <?php if (isset($_GET['debug'])) { ?> <input type=\"hidden\" name=\"debug\" value=\"\" \/> <?php } ?>\r\n\r\n            <code class=\"text-sm\" style=\"background-color: #fff; color: #0078D7;\">$ \r\n              <input type=\"hidden\" name=\"app\" value=\"composer\" \/>\r\n              <select name=\"exec\" onchange=\"this.form.submit();\">\r\n                <option <?= (COMPOSER_EXEC == COMPOSER_BIN ? 'selected' : '') ?> value=\"bin\"><?= COMPOSER_BIN['bin']; ?><\/option>\r\n                <option <?= (COMPOSER_EXEC == COMPOSER_PHAR ? 'selected' : '') ?> value=\"phar\"><?= 'php composer.phar' \/*COMPOSER_PHAR['bin']*\/; ?><\/option>\r\n              <\/select>\r\n            <\/code>\r\n          <\/form>\r\n\r\n        <\/div>\r\n        \r\n        <div style=\"display: inline; float: right; text-align: center; \"><code style=\" background-color: white; color: #0078D7;\"><a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_composer-container').style.display='none';\">[X]<\/a><\/code><\/div> \r\n      <\/div>\r\n      \r\n      <div class=\"ui-widget-content\" style=\"position: relative; display: block; width: 398px; background-color: rgba(251,247,241); z-index: 2;\">\r\n        <div style=\"display: inline-block; text-align: left; width: 130px;\">\r\n          <div class=\"composer-menu text-sm\" style=\"cursor: pointer; font-weight: bold; padding-left: 40px; border: 1px solid #000;\">Main Menu<\/div>\r\n          <div class=\"text-xs\" style=\"display: inline-block; border: 1px solid #000;\">\r\n            <a class=\"text-sm\" id=\"app_composer-frameMenuPrev\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\"> &lt; Menu<\/a> | <a class=\"text-sm\" id=\"app_composer-frameMenuNext\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\">Init &gt;<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div class=\"absolute\" style=\"position: absolute; display: inline-block; top: 4px; text-align: right; width: 264px; \">\r\n          <div class=\"text-xs\" style=\"display: inline-block;\">\r\n          + 987 <a href=\"https:\/\/github.com\/composer\/composer\/graphs\/contributors\">contributors<\/a>\r\n          <br \/>\r\n          <a style=\"color: blue; text-decoration-line: underline; text-decoration-style: solid;\" href=\"http:\/\/getcomposer.org\/\" target=\"_blank\">http:\/\/getcomposer.org\/<\/a>\r\n          <\/div>\r\n<!--\r\n          <select id=\"frameSelector\">\r\n            <option value=\"0\" selected>---<\/option>\r\n            <option value=\"1\">Update<\/option>\r\n            <option value=\"2\">Config<\/option>\r\n            <option value=\"3\">Initial<\/option>\r\n            <option value=\"4\">Install<\/option>\r\n          <\/select>\r\n-->\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n      <\/div>\r\n      <div class=\"absolute\" style=\"position: absolute; bottom: 60px; right: 0; margin: 0 auto; width: 225px; text-align: right;\">\r\n        <form action=\"?\" method=\"POST\" class=\"text-sm\">\r\n          <input type=\"hidden\" name=\"update\" value=\"\" \/>composer.lock requires an <button type=\"submit\" style=\"border: 1px solid #000; z-index: 3;\">Update<\/button>\r\n        <\/form>\r\n      <\/div>\r\n      <div class=\"absolute\" style=\"position: absolute; margin: 0px auto; text-align: center; height: 275px; width: 100%; background-repeat: no-repeat; <?= (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0 ? \"background-image: url('https:\/\/editablegifs.com\/gifs\/gifs\/fireworks-1\/output.gif?egv=3258')\" : '') ?> ;\">\r\n      <\/div>\r\n\r\n      <div class=\"absolute\" style=\"position: absolute; top: 0; left: 0; right: 0; margin: 10px auto; opacity: 1.0; text-align: center; cursor: pointer; z-index: 1;\">\r\n        <img class=\"<?= (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0 ? 'composer-update' : 'composer-menu') ?>\" src=\"resources\/images\/composer.fw.png\" style=\"margin-top: 45px;\" width=\"150\" height=\"198\" \/>\r\n      <\/div>\r\n\r\n      <div class=\"absolute\" style=\"position: absolute; bottom: 40px; left: 0; right: 0; width: 100%; text-align: center; z-index: 1; \">\r\n      <form action=\"#!\" method=\"POST\">\r\n        <input type=\"hidden\" name=\"composer[create-project]\" value=\"\" \/>\r\n        <span style=\"pdding-left: 125px\"><\/span>\r\n        <select name=\"composer[package]\" onchange=\"this.form.submit();\">\r\n          <option value=\"\" selected>create-project<\/option>\r\n          <option value=\"laravel\/laravel\">laravel\/laravel<\/option>\r\n          <option value=\"symfony\/skeleton\">symfony\/skeleton<\/option>\r\n        <\/select>\r\n        <span>\/project\/*<\/span>\r\n      <\/form>\r\n      <\/div>\r\n\r\n      <div class=\"absolute\" style=\"position: absolute; bottom: 24px; left: 0; right: 0; width: 100%; text-align: center;\">\r\n        <span style=\"text-decoration-line: underline; text-decoration-style: solid;\">A Dependency Manager for PHP<\/span>\r\n      <\/div>\r\n\r\n      <div style=\"position: absolute; bottom: 0; left: 0; padding: 2px; z-index: 1;\">\r\n        <a href=\"https:\/\/github.com\/composer\/composer\"><img src=\"resources\/images\/github-composer.fw.png\" \/><\/a>\r\n      <\/div>\r\n      \r\n      <div class=\"absolute text-sm\" style=\"position: absolute; bottom: 0; right: 0; padding: 2px; z-index: 1; \"><?= (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') != 0 ? '<code>Latest: <\/code><span class=\"update\" style=\"color: green; cursor: pointer;\">' . 'v'.substr(COMPOSER_LATEST, 0, similar_text(COMPOSER_LATEST, COMPOSER_VERSION)). substr(COMPOSER_LATEST, similar_text(COMPOSER_LATEST, COMPOSER_VERSION))  . '<\/span>': 'Installed: v' . COMPOSER_VERSION ); ?><\/div>\r\n      <div style=\"position: relative; overflow: hidden; width: 398px; height: 250px;\">\r\n<?php\r\n\r\n$count = 0;\r\nif (defined('COMPOSER') && isset(COMPOSER['json']->require))\r\n  foreach (COMPOSER['json']->require as $key => $require) {\r\n    if (preg_match('\/.*\\\/.*:.*\/', $key . ':' . $require)) \r\n      if (preg_match('\/(.*)\\\/.*\/', $key, $match))\r\n        if (!empty($match) && !is_dir(APP_PATH . APP_BASE['vendor'] . $match[1].'\/')) $count++;\r\n  }\r\n?>      \r\n      <div id=\"app_composer-frameMenu\" class=\"app_composer-frame-container <?=($count >= 1 ? '' : 'selected' ); ?> absolute\" style=\"background-color: rgb(225,196,151,.75); margin-top: 8px;\">\r\n        <!--<h3>Main Menu<\/h3> <h4>Update - Edit Config - Initalize - Install<\/h4> -->\r\n\r\n        <div style=\"display: block; margin: 5px auto;\">\r\n          <div class=\"drop-shadow-2xl font-bold\" style=\"display: inline-block; width: 192px; margin: 10px auto; text-align: right; cursor: pointer;\">\r\n            <div id=\"app_composer-frameMenuInit\" style=\"text-align: center; padding-left: 18px;\"><img style=\"display: block; margin: auto;\" src=\"resources\/images\/initial_icon.fw.png\" width=\"70\" height=\"57\" \/>Init<\/div>\r\n          <\/div>\r\n        \r\n          <div class=\"config drop-shadow-2xl font-bold\" style=\"display: inline-block; width: 192px; margin: 0px auto; text-align: center; cursor: pointer;\">\r\n            <div id=\"app_composer-frameMenuConf\"  class=\"\" style=\"text-align: center;\"><img style=\"display: block; margin: auto;\" src=\"resources\/images\/folder.fw.png\" width=\"70\" height=\"58\" \/>Config<\/div>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"display: block; margin: 4px auto;\">\r\n          <div class=\"install drop-shadow-2xl font-bold\" style=\"display: inline-block; width: 192px; margin: 0 auto; text-align: right; cursor: pointer;\">\r\n            <div id=\"app_composer-frameMenuInstall\"  style=\"position: relative; text-align: center; padding-left: 15px;\">\r\n              <div style=\"position: absolute; top: -10px; left: 130px; color: red;\"><?=($count >= 1 ? $count : '' ); ?><\/div>\r\n              <img style=\"display: block; margin: auto;\" src=\"resources\/images\/install_icon.fw.png\" width=\"54\" height=\"54\" \/>Install<\/div>\r\n          <\/div>\r\n          <div class=\"drop-shadow-2xl font-bold\" style=\"display: inline-block; width: 192px; margin: 0 auto; text-align: center; cursor: pointer;\">\r\n            <div id=\"app_composer-frameMenuUpdate\" style=\"text-align: center; \"><img style=\"display: block; margin: auto;\" src=\"resources\/images\/update_icon.fw.png\" width=\"54\" height=\"54\" \/><a href=\"#!\">Update<?=\/*Now!*\/NULL; ?><\/a><\/div>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"height: 10px;\"><\/div>\r\n      <\/div>\r\n<?php ob_start(); ?>\r\n      <div id=\"app_composer-frameUpdate\" class=\"app_composer-frame-container absolute\" style=\"overflow: scroll; background-color: rgb(225,196,151,.75);\">\r\n    <form autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'composer')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"POST\">\r\n      <input type=\"hidden\" name=\"composer[update]\" value=\"\" \/>\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <input class=\"btn\" id=\"composerSetupSubmit\" type=\"submit\" value=\"self-update\">\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%; margin: 0 auto;\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"composerSetupLabel\" for=\"composerSetup\" style=\"background-color:hsl(89, 100%, 42%); color: white; text-decoration: underline; cursor: pointer; font-weight: bold;\">&#9650; <code>Setup \/ Update<\/code><\/label>\r\n        <\/div>\r\n        <span style=\"background-color: white;\">\r\n        <span class=\"text-sm\" style=\"display: inline-block;\">was <?= (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') == 0 ? '<span style=\"font-weight: bold;\">not<\/span>' : '')?> found: <\/span>\r\n        <\/span>\r\n      <\/div>\r\n\r\n      <div id=\"composerSetupForm\" style=\"display: inline-block; padding: 5px; background-color: rgba(0,0,0,.03); border: 1px dashed #0078D7;\">\r\n        <div>\r\n        <span class=\"text-xs\" style=\"background-color: #0078D7; color: white;\"><code>Version: (Installed) <?= COMPOSER_VERSION ?> -> (Latest) <?= COMPOSER_LATEST ?><\/code><\/span>\r\n        <\/div>\r\n        <label>Composer Command<\/label>\r\n        <textarea style=\"width: 100%\" cols=\"40\" rows=\"5\" name=\"composer[cmd]\">php -r \"copy('https:\/\/getcomposer.org\/installer', 'composer-setup.php');\"\r\nphp composer-setup.php\r\nphp composer.phar -v\r\n<?= (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') ?>composer self-update<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n    <\/div>\r\n<?php\r\n$frameUpdateContents = ob_get_contents();\r\nob_end_clean(); ?>\r\n\r\n      <?= (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') == 0 ? NULL : $frameUpdateContents); ?>\r\n\r\n      <div id=\"app_composer-frameInit\" class=\"app_composer-frame-container absolute <?= (realpath(COMPOSER_JSON['path']) ? '' : (defined('COMPOSER')  && is_object(COMPOSER) && count((array)COMPOSER) !== 0 ? '' : 'selected')); ?>\" style=\"overflow: hidden; height: 270px;\">\r\n<?php if (!defined('CONSOLE') && CONSOLE != true) { ?>\r\n    <form autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'composer')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"POST\">\r\n<?php } ?>\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n          <button id=\"app_composer-init-submit\" class=\"btn\" type=\"submit\" value>Init\/Run<\/button>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"composerInitLabel\" for=\"composerInit\" style=\"background-color: #6781B2; color: white;\">&#9650; <code>Init<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"composerInitForm\" style=\"display: inline-block; padding: 10px; background-color: rgba(235, 216, 186, 0.8); border: 1px dashed #0078D7;\">\r\n        <label>Composer Command<\/label>\r\n        <textarea id=\"app_composer-init-input\" style=\"width: 100%\" cols=\"40\" rows=\"6\" name=\"composer[init]\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><?= preg_replace('\/\\s--\/', \"\\n--\", COMPOSER_INIT_PARAMS); ?><\/textarea>\r\n      <\/div>\r\n<?php if (!defined('CONSOLE') && CONSOLE != true) { ?>\r\n    <\/form>\r\n<?php } ?>\r\n      <\/div>\r\n\r\n      <div id=\"app_composer-frameConf\" class=\"app_composer-frame-container absolute <?= (!defined('COMPOSER') && is_file(APP_PATH . 'composer.json') ? 'selected' : ''); ?>\" style=\"overflow-x: hidden; overflow-y: auto; height: 230px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"<?= (!defined('APP_URL_BASE') ? '\/\/' . APP_DOMAIN . APP_URL_PATH . '?' . http_build_query(APP_QUERY, '', '&amp;') : APP_URL_BASE . '?' . http_build_query(APP_QUERY + array('app' => 'composer'), '', '&amp;')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') ?>\" method=\"POST\">\r\n      <input type=\"hidden\" name=\"composer[config]\" value=\"\" \/>\r\n\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center; z-index: 2;\">\r\n        <button class=\"btn absolute\" id=\"composerJsonSubmit\" type=\"submit\" style=\"position: absolute; top: 0; right: 0;\" value=\"\"><?= (defined('COMPOSER_AUTH') && realpath(COMPOSER_AUTH['path']) ? 'Modify' : 'Create' ); ?><\/button>\r\n      <\/div> \r\n      <div style=\"position: relative; display: inline-block; width: 100%; background-color: rgb(225,196,151,.25); z-index: 1;\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <!-- <input id=\"composerJson\" type=\"checkbox\" style=\"cursor: pointer;\" name=\"composerJson\" value=\"true\" checked=\"\"> -->\r\n          <label for=\"composerJson\" id=\"appComposerAuthLabel\" title=\"<?= (defined('COMPOSER_AUTH') && realpath(COMPOSER_AUTH['path']) ? COMPOSER_AUTH['path'] : COMPOSER_AUTH['path']) \/*NULL*\/;?>\" style=\"background-color: #6B4329; <?= (defined('COMPOSER_JSON') && realpath(COMPOSER_AUTH['path']) ? 'color: #F0E0C6; text-decoration: underline; ' : 'color: red; text-decoration: underline; text-decoration: line-through;') ?> cursor: pointer; font-weight: bold;\">&#9660; <code>COMPOSER_HOME\/auth.json<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appComposerAuthJsonForm\" style=\"display: none; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n        <a class=\"text-sm\" style=\"color: blue; text-decoration: underline;\" href=\"https:\/\/github.com\/settings\/tokens?page=1\">GitHub OAuth Token<\/a>:\r\n        <span class=\"text-sm\" style=\"float: right;\"><?= ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+30 days',filemtime(COMPOSER_AUTH['path']))))) \/ 86400)) ?> (Days left)<\/span>\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" size=\"40\" name=\"auth[github_oauth]\" value=\"<?= COMPOSER_AUTH['token'] ?>\" \/>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n      <\/div>\r\n\r\n      <div style=\"position: relative; display: inline-block; width: 100%; background-color: rgb(225,196,151,.25); z-index: 1;\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <!-- <input id=\"composerJson\" type=\"checkbox\" style=\"cursor: pointer;\" name=\"composerJson\" value=\"true\" checked=\"\"> -->\r\n          <label for=\"composerJson\" id=\"appComposerConfigLabel\" title=\"<?= (defined('COMPOSER_CONFIG') && realpath(COMPOSER_CONFIG['path']) ? COMPOSER_CONFIG['path'] : COMPOSER_CONFIG['path']) \/*NULL*\/;?>\" style=\"background-color: #6B4329; <?= (defined('COMPOSER_CONFIG') && realpath(COMPOSER_CONFIG['path']) ? 'color: #F0E0C6; text-decoration: underline; ' : 'color: red; text-decoration: underline; text-decoration: line-through;') ?> cursor: pointer; font-weight: bold;\" >&#9660; <code>COMPOSER_HOME\/config.json<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appComposerConfigJsonForm\" style=\"display: none; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n        <a class=\"text-sm\" style=\"color: blue; text-decoration: underline;\" href=\"https:\/\/github.com\/settings\/tokens?page=1\">GitHub OAuth Token<\/a>:\r\n        <span class=\"text-sm\" style=\"float: right;\"><\/span>\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" size=\"40\" name=\"config[github_oauth]\" value=\"<?= COMPOSER_AUTH['token'] ?>\" disabled \/>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n        <a class=\"text-sm\" style=\"color: blue; text-decoration: underline;\" href=\"\">Platform<\/a>:\r\n        <span class=\"text-sm\" style=\"float: right;\"><\/span>\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" size=\"40\" name=\"config[platform]\" value=\"php:^7.4||^8.1\" disabled \/>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n      <\/div>\r\n<!--  -->\r\n      <div style=\"position: relative; display: inline-block; background-color: rgb(225,196,151,.25); width: 100%; z-index: 1;\">\r\n<?php \/\/if (defined('COMPOSER_JSON')) $composer = json_decode(COMPOSER_JSON['json']); ?>\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <!-- <input id=\"composerJson\" type=\"checkbox\" style=\"cursor: pointer;\" name=\"composerJson\" value=\"true\" checked=\"\"> -->\r\n          <label for=\"composerJson\" id=\"appComposerJsonLabel\" class=\"text-sm\" style=\"background-color: #6B4329; <?= (defined('COMPOSER_JSON') && realpath(COMPOSER_JSON['path']) ? 'color: #F0E0C6; text-decoration: underline; ' : 'color:red; text-decoration: underline; text-decoration: line-through;') ?> cursor: pointer; font-weight: bold;\" title=\"<?= (defined('COMPOSER_JSON') && realpath(COMPOSER_JSON['path']) ? COMPOSER_JSON['path'] : COMPOSER_JSON['path']) \/*NULL*\/; ?>\">&#9650; <code>COMPOSER_PATH\/composer.json<\/code><\/label>\r\n          <div class=\"text-xs\" style=\"display: <?= (!is_file(APP_PATH . 'composer.lock') ? 'none' : 'inline-block' )?>; padding-top: 5px; padding-right: 10px; float: right;\"><input type=\"checkbox\" name=\"composer[lock]\" value=\"\" \/> <span style=\"background-color: white; color: red; text-decoration: line-through;\">composer.lock<\/span><\/div>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appComposerJsonForm\" style=\"position: relative; display: inline-block; overflow-x: hidden; overflow-y: auto; height: auto; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n<?php if (defined('COMPOSER_JSON') && realpath(COMPOSER_JSON['path'])) { ?>\r\n      <div style=\"display: inline-block; width: 100%; margin-bottom: 10px;\">\r\n        <div class=\"text-xs\" style=\"display: inline-block; float: left; background-color: #0078D7; color: white;\">Last Update: <span <?= (isset(COMPOSER['json']->time) && COMPOSER['json']->time === '' ? 'style=\"background-color: white; color: red;\"' : 'style=\"background-color: white; color: #0078D7;\"') ?>><?= (isset(COMPOSER['json']->time) && COMPOSER['json']->time !== '' ? COMPOSER['json']->{'time'} : date('Y-m-d H:i:s')) ?><\/span><\/div>\r\n        \r\n        \r\n        <div class=\"text-xs\" style=\"display: inline-block; float: right;\">\r\n          <input type=\"checkbox\" name=\"composer[update]\" value=\"\" checked \/> <span style=\"background-color: #0078D7; color: white;\">Update<\/span>\r\n          <input type=\"checkbox\" name=\"composer[install]\" value=\"\" checked \/> <span style=\"background-color: #0078D7; color: white;\">Install<\/span>\r\n        <\/div>\r\n      <\/div>\r\n<?php } ?>\r\n      <div style=\"display: inline-block; width: 100%;\"><span <?= (isset(COMPOSER['json']->{'name'}) && COMPOSER['json']->{'name'} !== '' ? '' : 'style=\"background-color: #fff; color: red;\" title=\"Either Vendor or Package is missing\"') ?>>Name:<\/span>\r\n        <div style=\"position: relative; float: right;\">\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; left: 5px; font-size: 10px; z-index: 1;\">Vendor<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"composer[config][name][vendor]\" placeholder=\"vendor\" value=\"<?= (defined('COMPOSER') && isset(COMPOSER['json']->name) ? explode('\/', COMPOSER['json']->name)[0] : ''); ?>\" size=\"13\"> \/ <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; right: 82px; font-size: 10px; z-index: 1;\">Package<\/div> <input type=\"text\" id=\"tst\" name=\"composer[config][name][package]\" placeholder=\"package\" value=\"<?= (defined('COMPOSER') && isset(COMPOSER['json']->name)? explode('\/', COMPOSER['json']->name)[1] : ''); ?>\" size=\"13\" \/>   \r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\"><label for=\"composer-description\" <?= (isset(COMPOSER['json']->{'description'}) && COMPOSER['json']->{'description'} !== '' ? '' : 'style=\"background-color: #fff; color: red; cursor: pointer;\" title=\"Description is missing\"') ?>>Description:<\/label>\r\n        <div style=\"float: right;\">\r\n          <input id=\"composer-description\" type=\"text\" name=\"composer[config][description]\" placeholder=\"Details\" value=\"<?= (defined('COMPOSER') && isset(COMPOSER['json']->description)? COMPOSER['json']->description : ''); ?>\">\r\n        <\/div>\r\n      <\/div>\r\n      \r\n      <!-- version -->\r\n      <div style=\"display: inline-block; width: 100%;\"><label for=\"composer-version\" <?= (isset(COMPOSER['json']->{'version'}) && preg_match(COMPOSER_EXPR_VER, COMPOSER['json']->{'version'}) ? '' : 'style=\"background-color: #fff; color: red; cursor: pointer;\" title=\"Version must follow this format: ' . COMPOSER_EXPR_VER . '\"') ?>>Version:<\/label>\r\n        <div style=\"float: right;\">\r\n          <input id=\"composer-version\" type=\"text\" name=\"composer[config][version]\" size=\"10\" placeholder=\"(Version) 1.2.3\" style=\"text-align: right;\" pattern=\"(\\d+\\.\\d+(?:\\.\\d+)?)\" value=\"<?= (defined('COMPOSER') && isset(COMPOSER['json']->version) ? COMPOSER['json']->version : ''); ?>\">\r\n        <\/div>\r\n      <\/div>\r\n      <!-- type -->\r\n      <div style=\"display: inline-block; width: 100%;\">Type:\r\n        <div style=\"float: right;\">\r\n          <select name=\"composer[config][type]\">\r\n            <option label=\"\" <?= (defined('COMPOSER') && isset(COMPOSER['json']->license) ? '' : 'selected=\"\"');?>><\/option>\r\n<?php foreach (['library', 'project', 'metapackage', 'composer-plugin'] as $type) { ?>\r\n            <option<?= (defined('COMPOSER') && isset(COMPOSER['json']->type) && COMPOSER['json']->type == $type ? ' selected=\"\"' : '' ); ?>><?= $type; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">Keywords:\r\n        <div style=\"float: right;\">\r\n          <input id=\"composerKeywordAdd\" type=\"text\" placeholder=\"Keywords\" value=\"\" onselect=\"add_keyword()\">\r\n        <\/div>\r\n        <div class=\"clearfix\"><\/div>\r\n        <div id=\"composerAppendKeyword\" style=\"padding: 10px 0 10px 0; display: <?= (defined('COMPOSER') && isset(COMPOSER['json']->keywords) && !empty(COMPOSER['json']->keywords) ? 'block' : 'none') ?>; width: 100%;\">\r\n<?php if (defined('COMPOSER') && isset(COMPOSER['json']->keywords)) foreach (COMPOSER['json']->keywords as $key => $keyword) { ?>\r\n          <label for=\"keyword_<?= $key; ?>\"><sup onclick=\"rm_keyword(\\'keyword_<?= $key; ?>\\');\">[x]<\/sup><?= $keyword; ?><\/label><input type=\"hidden\" id=\"keyword_<?= $key; ?>\" name=\"composer[config][keywords][]\" value=\"<?= $keyword; ?>\" \/>&nbsp;\r\n<?php } ?>\r\n        <\/div>\r\n      <\/div>\r\n      <!-- homepage -->\r\n      <!-- readme -->\r\n      <!-- time -->\r\n      <!-- version_normalized -->\r\n      <div style=\"display: inline-block; width: 100%;\">License:\r\n        <div style=\"float: right;\">\r\n          <select name=\"composer[config][license]\">\r\n            <option label=\"\"<?= (defined('COMPOSER') && isset(COMPOSER['json']->license) ? '' : ' selected=\"\"' );?>><\/option>\r\n<?php foreach (['WTFPL', 'GPL-3.0', 'MIT'] as $license) { ?>\r\n            <option<?= (defined('COMPOSER') && isset(COMPOSER['json']->license) && COMPOSER['json']->license == $license ? ' selected=\"\"' : '' ); ?>><?= $license; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n      <!-- authors -->\r\n      <div style=\"display: inline-block; width: 100%;\">Authors:<br \/>\r\n\r\n<?php if (defined('COMPOSER') && isset(COMPOSER['json']->authors)) foreach (COMPOSER['json']->authors as $key => $author) { ?>\r\n        <div style=\"position: relative; float: left;\">\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; left: 10px; font-size: 10px;\">Name<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"composer[config][authors][<?= $key ?>][name]\" placeholder=\"name\" value=\"<?= $author->{'name'} ?>\" size=\"10\"> \/\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; right: 134px; font-size: 10px;\">Email<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"composer[config][authors][<?= $key ?>][email]\" placeholder=\"email\" value=\"<?= $author->{'email'} ?>\" size=\"18\" \/>   \r\n        <\/div>\r\n        <div class=\"dropdown\">\r\n          <div id=\"myDropdown\" class=\"dropdown-content\">\r\n<?php foreach (['Backend', 'Designer', 'Developer', 'Programmer'] as $key2 => $role) { ?>\r\n            <a href=\"#!\"><img style=\"float: left;\" width=\"30\" height=\"33\" src=\"resources\/images\/role<?=$key2?>.fw.png\"><?= $role; ?> <input type=\"radio\" id=\"<?=$key2?>\" style=\"float: right; cursor: pointer;\" name=\"composer[config][authors][<?= $key ?>][role]\" value=\"<?= $role; ?>\" <?= (isset($author->{'role'}) && $author->{'role'} == $role ? ' checked=\"\"' : '' ) ?> \/><\/a>\r\n<?php } ?>\r\n          <\/div>\r\n          <button type=\"button\" onclick=\"myFunction()\" class=\"dropbtn\">Role &#9660;<\/button>\r\n        <\/div>\r\n\r\n<?php } else { ?>\r\n\r\n        <div style=\"position: relative; float: left;\">\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; left: 10px; font-size: 10px;\">Name<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"composer[config][authors][0][name]\" placeholder=\"name\" value=\"Barry Dick\" size=\"10\"> \/ \r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; right: 140px; font-size: 10px;\">Email<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"composer[config][authors][0][email]\" placeholder=\"email\" value=\"barryd.it@gmail.com\" size=\"18\" \/>   \r\n        <\/div>&nbsp;\r\n\r\n        <div class=\"dropdown\">\r\n          <div id=\"myDropdown\" class=\"dropdown-content\">\r\n<?php foreach (['Backend', 'Designer', 'Developer', 'Programmer'] as $key => $role) { ?>\r\n            <a href=\"#!\"><img style=\"float: left;\" width=\"30\" height=\"33\" src=\"resources\/images\/role<?=$key?>.fw.png\"><?= $role; ?> <input type=\"radio\" id=\"<?=$key?>\" style=\"float: right; cursor: pointer;\" name=\"composer[config][authors][0][role]\" value=\"<?= $role; ?>\" \/><\/a>\r\n<?php } ?>\r\n          <\/div>\r\n          <button type=\"button\" onclick=\"myFunction()\" class=\"dropbtn\">Role &#9660;<\/button>\r\n        <\/div>\r\n\r\n<!--\r\n          <select name=\"composerAuthorRole\">\r\n<?php foreach (['Backend', 'Designer', 'Developer', 'Programmer'] as $role) { ?>\r\n            <option<?= (defined('COMPOSER') && isset(COMPOSER['json']->authors) && COMPOSER['json']->authors->role ? 'value=\"' . $role . '\"' : '') && (defined('COMPOSER') && isset(COMPOSER['json']->authors) && COMPOSER['json']->authors->role == $role ? ' selected=\"\"' : '' ); ?>><?= $role; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n-->\r\n        \r\n<!--        <label for=\"author_<?= $key; ?>\"><sup onclick=\"rm_author(\\'author_<?= $key; ?>\\');\">[x]<\/sup>' + event.target.value + '<\/label><input type=\"hidden\" id=\"author_<?= $key; ?>\" name=\"composerAuthors[]\" value=\"' + event.target.value + '\" \/>&nbsp; -->\r\n<?php } ?>\r\n\r\n      <\/div>\r\n      \r\n      <!-- source -->\r\n      <!-- dist -->\r\n\r\n      <!-- funding -->\r\n\r\n\r\n<!--\r\n    \"require\": {\r\n        \"php\": \">=5.3.0\"\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"ResponseClass\\\\\":\"src\/\"\r\n        }\r\n    },\r\n    \"config\":{\r\n        \"optimize-autoloader\": true\r\n    }\r\n-->\r\n      \r\n      <div style=\"display: inline-block; width: 100%;\"><hr \/>Require:\r\n        <div style=\"float: right;\">\r\n          <input id=\"composerReqPkg\" type=\"text\" title=\"Enter Text and onSelect\" list=\"composerReqPkgs\" placeholder=\"\" value=\"\" onselect=\"get_package(this);\">\r\n          <datalist id=\"composerReqPkgs\">\r\n            <option value=\"\"><\/option>\r\n          <\/datalist>\r\n        <\/div>\r\n        <div id=\"composerAppendRequire\" style=\"padding: 10px; display: <?= (defined('COMPOSER') && !isset(COMPOSER['json']->{'require'}) ? 'none' : 'block') ?>;\">\r\n          <datalist id=\"composerReqVersResults\">\r\n            <option value=\"\"><\/option>\r\n          <\/datalist>\r\n<?php $i = 0; if (defined('COMPOSER') && isset(COMPOSER['json']->{'require'})) {\r\n  if (!isset(COMPOSER['json']->{'require'}->{'php'})) { ?>\r\n          <input type=\"checkbox\" checked=\"\" onchange=\"this.indeterminate = !this.checked; document.getElementById('pkg_<?= $i; ?>').disabled = !this.checked\">\r\n          <input type=\"text\" id=\"pkg_<?= $i; ?>\" name=\"composer[config][require][]\" value=\"<?= 'php:^' . PHP_VERSION ?>\" list=\"composerReqVersResults\" size=\"30\" onselect=\"get_version('pkg_<?= $i; ?>')\">\r\n          <label for=\"pkg_<?= $i; ?>\"><\/label><br \/>\r\n<?php $i++; } foreach (COMPOSER['json']->{'require'} as $key => $require) { ?>\r\n          <input type=\"checkbox\" checked=\"\" onchange=\"this.indeterminate = !this.checked; document.getElementById('pkg_<?= $i; ?>').disabled = !this.checked\">\r\n          <input type=\"text\" id=\"pkg_<?= $i; ?>\" name=\"composer[config][require][]\" value=\"<?= $key . ':' . $require ?>\" list=\"composerReqVersResults\" size=\"30\" onselect=\"get_version('pkg_<?= $i; ?>')\">\r\n          <label for=\"pkg_<?= $i; ?>\"><\/label><br \/>\r\n<?php $i++; } } else { ?>\r\n          <input type=\"checkbox\" checked=\"\" onchange=\"this.indeterminate = !this.checked; document.getElementById('pkg_<?= $i; ?>').disabled = !this.checked\">\r\n          <input type=\"text\" id=\"pkg_<?= $i; ?>\" name=\"composer[config][require][]\" value=\"<?= 'php:^' . PHP_VERSION ?>\" list=\"composerReqVersResults\" size=\"30\" onselect=\"get_version('pkg_<?= $i; ?>')\">\r\n          <label for=\"pkg_<?= $i; ?>\"><\/label><br \/>\r\n<?php } ?>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">Require-dev:\r\n        <div style=\"float: right;\">\r\n          <input id=\"composerRequireDevPkg\" type=\"text\" placeholder=\"\" value=\"\" list=\"composerReqDevPackages\" onselect=\"get_dev_package()\">\r\n          <datalist id=\"composerReqDevPackages\">\r\n            <option value=\"\"><\/option>\r\n          <\/datalist>\r\n        <\/div>\r\n        <div id=\"composerAppendRequire-dev\" style=\"padding: 10px; display: <?= (defined('COMPOSER') && !isset(COMPOSER['json']->{'require-dev'}) ? 'none' : 'block') ?>;\">\r\n          <datalist id=\"composerReq-devVersResults\">\r\n            <option value=\"\"><\/option>\r\n          <\/datalist>\r\n<?php $i = 0; if (defined('COMPOSER') && isset(COMPOSER['json']->{'require-dev'})) foreach (COMPOSER['json']->{'require-dev'} as $key => $require) { ?>\r\n          <input type=\"checkbox\" checked=\"\" onchange=\"this.indeterminate = !this.checked; document.getElementById('pkg-dev_<?= $i; ?>').disabled = !this.checked\">\r\n          <input type=\"text\" id=\"pkg-dev_<?= $i; ?>\" name=\"composer[config][require-dev][]\" value=\"<?= $key . ':' . $require ?>\" list=\"composerReqVersResults\" size=\"30\" onselect=\"get_version('pkg-dev_<?= $i; ?>')\">\r\n          <label for=\"pkg-dev_<?= $i; ?>\"><\/label><br \/>\r\n<?php $i++; } ?>\r\n        <\/div>\r\n      <\/div>\r\n\r\n      <div style=\"display: inline-block; width: 100%;\">Autoload:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" name=\"composer[config][autoload]\" placeholder=\"Autoload\" value=\"\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">Autoload-dev:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" name=\"composer[config][autoload-dev]\" placeholder=\"Autoload-dev\" value=\"\">\r\n        <\/div>\r\n      <\/div>\r\n      \r\n      <div style=\"display: inline-block; width: 100%;\">Minimum-Stability:\r\n        <div style=\"float: right;\">\r\n          <select name=\"composer[config][minimum-stability]\">\r\n<?php if (defined('COMPOSER')) foreach (['stable', 'rc', 'beta', 'alpha', 'dev'] as $ms) { ?>\r\n            <option value=\"<?= $ms ?>\"<?= (isset(COMPOSER['json']->{'minimum-stability'}) && COMPOSER['json']->{'minimum-stability'} == $ms ? ' selected=\"\"' : '' )?>><?= $ms ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n      <\/div>\r\n      <div style=\"position: relative; display: inline-block; background-color: rgb(225,196,151,.25); width: 100%; z-index: 1;\">\r\n<?php \/\/if (defined('COMPOSER_JSON')) $composer = json_decode(COMPOSER_JSON['json']); ?>\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <!-- <input id=\"composerJson\" type=\"checkbox\" style=\"cursor: pointer;\" name=\"\" value=\"true\" checked=\"\"> -->\r\n\r\n          <label for=\"composerJson\" id=\"appComposerVendorJsonLabel\" class=\"text-sm\" style=\"background-color: #6B4329; <?= (defined('VENDOR_JSON') && realpath(VENDOR_JSON['path']) ? 'color: #F0E0C6; text-decoration: underline; ' : 'color:red; text-decoration: underline; text-decoration: line-through;') ?> cursor: pointer; font-weight: bold;\" title=\"<?= (defined('VENDOR_JSON') && realpath(VENDOR_JSON['path']) ? VENDOR_JSON['path'] : '') \/*NULL*\/; ?>\">&#9650; <code>COMPOSER_PATH\/[vendor\/*].json<\/code><\/label>\r\n          <div class=\"text-xs\" style=\"display: <?= (!is_file(APP_PATH . 'composer.lock') ? 'none' : 'inline-block' )?>; padding-top: 5px; padding-right: 10px; float: right;\"><\/div>\r\n        <\/div>\r\n      <\/div>\r\n\r\n      <div id=\"appComposerVendorJsonForm\" style=\"position: relative; display: inline-block; overflow-x: hidden; overflow-y: auto; height: auto; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7; width: 100%;\">\r\n<?php if (defined('VENDOR')) { ?>\r\n\r\n      \r\n<?php if (defined('VENDOR_JSON') && realpath(VENDOR_JSON['path'])) { ?>\r\n      <div style=\"display: block; width: 100%; margin-bottom: 10px;\">\r\n        <div class=\"text-xs\" style=\"display: inline-block; float: left; background-color: #0078D7; color: white;\">Last Update: <span <?= (isset(VENDOR->time) && VENDOR->time === '' ? 'style=\"background-color: white; color: red;\"' : 'style=\"background-color: white; color: #0078D7;\"') ?>><?= (isset(VENDOR->time) && VENDOR->time !== '' ? VENDOR->{'time'} : date('Y-m-d H:i:s')) ?><\/span><\/div>\r\n\r\n      <\/div>\r\n<?php } ?>\r\n\r\n\r\n      <div style=\"display: inline-block; width: 100%;\"><span <?= (isset(VENDOR->{'name'}) && VENDOR->{'name'} !== '' ? '' : 'style=\"background-color: #fff; color: red;\" title=\"Either Vendor or Package is missing\"') ?>>Vendor\/Package:<\/span>\r\n        <div style=\"position: relative; float: right;\"><?php\r\n\r\n$keys = array_keys(get_object_vars(COMPOSER['json']->{'require'}));\r\nif (defined('COMPOSER') && isset(COMPOSER['json']->{'require-dev'}) && !empty(get_object_vars(COMPOSER['json']->{'require-dev'})))\r\n  $keys = array_merge($keys, array_keys(get_object_vars(COMPOSER['json']->{'require-dev'})));\r\n\r\n?>\r\n          <select onselect=\"selectPackage()\">\r\n            <option>---<\/option>\r\n<?php \r\n  foreach($keys as $package) {\r\n    if ($package == 'php') continue;\r\n    elseif (isset(COMPOSER['json']->{'require'}->{$package}))\r\n      echo '<option selected>' . $package . '<\/option>';\r\n    else echo '<option>' . $package . '<\/option>';\r\n  }\r\n?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n\r\n      <div style=\"display: inline-block; width: 100%;\"><label for=\"description\" <?= (isset(VENDOR->{'description'}) && VENDOR->{'description'} !== '' ? '' : 'style=\"background-color: #fff; color: red; cursor: pointer;\" title=\"Description is missing\"') ?>>Description:<\/label>\r\n        <div style=\"float: right;\">\r\n          <input id=\"description\" type=\"text\" name=\"\" placeholder=\"Details\" value=\"<?= (defined('VENDOR') && isset(VENDOR->description)? VENDOR->description : ''); ?>\">\r\n        <\/div>\r\n      <\/div>\r\n\r\n      <!-- version -->\r\n      <div style=\"display: inline-block; width: 100%;\"><label for=\"version\" <?= (isset(VENDOR->{'version'}) && preg_match(COMPOSER_EXPR_VER, VENDOR->{'version'}) ? '' : 'style=\"background-color: #fff; color: red; cursor: pointer;\" title=\"Version must follow this format: ' . COMPOSER_EXPR_VER . '\"') ?>>Version:<\/label>\r\n        <div style=\"float: right;\">\r\n          <input id=\"version\" type=\"text\" name=\"\" size=\"10\" placeholder=\"(Version) 1.2.3\" style=\"text-align: right;\" pattern=\"(\\d+\\.\\d+(?:\\.\\d+)?)\" value=\"<?= (defined('VENDOR') && isset(VENDOR->version) ? VENDOR->version : ''); ?>\">\r\n        <\/div>\r\n      <\/div>\r\n      <!-- type -->\r\n      <div style=\"display: inline-block; width: 100%;\">Type:\r\n        <div style=\"float: right;\">\r\n          <select name=\"\">\r\n            <option label=\"\" <?= (defined('VENDOR') && isset(VENDOR->license) ? '' : 'selected=\"\"');?>><\/option>\r\n<?php foreach (['library', 'project', 'metapackage', 'composer-plugin'] as $type) { ?>\r\n            <option<?= (defined('VENDOR') && isset(VENDOR->type) && VENDOR->type == $type ? ' selected=\"\"' : '' ); ?>><?= $type; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">Keywords:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" placeholder=\"Keywords\" value=\"\">\r\n        <\/div>\r\n        <div class=\"clearfix\"><\/div>\r\n        <div id=\"composerAppendKeyword\" style=\"padding: 10px 0 10px 0; display: <?= (defined('VENDOR') && isset(VENDOR->keywords) && !empty(VENDOR->keywords) ? 'block' : 'none') ?>; width: 100%;\">\r\n<?php if (defined('VENDOR') && isset(VENDOR->keywords)) foreach (VENDOR->keywords as $key => $keyword) { ?>\r\n          <label for=\"keyword_<?= $key; ?>\"><sup onclick=\"rm_keyword(\\'keyword_<?= $key; ?>\\');\">[x]<\/sup><?= $keyword; ?><\/label>&nbsp;\r\n<?php } ?>\r\n        <\/div>\r\n      <\/div>\r\n      <!-- homepage -->\r\n      <!-- readme -->\r\n      <!-- time -->\r\n      <!-- version_normalized -->\r\n      <div style=\"display: inline-block; width: 100%;\">License:\r\n        <div style=\"float: right;\">\r\n          <select name=\"\">\r\n            <option label=\"\"<?= (defined('VENDOR') && isset(VENDOR->license) ? '' : ' selected=\"\"' );?>><\/option>\r\n<?php foreach (['WTFPL', 'GPL-3.0', 'MIT'] as $license) { ?>\r\n            <option <?= (defined('VENDOR') && isset(VENDOR->license) && VENDOR->license == $license ? 'selected=\"\"' : '' ); ?>><?= $license; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n      <!-- authors -->\r\n      <div style=\"display: inline-block; width: 100%;\">Authors:<br \/>\r\n\r\n<?php if (defined('VENDOR') && isset(VENDOR->authors)) foreach (VENDOR->authors as $key => $author) { ?>\r\n        <div style=\"position: relative; float: left;\">\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; left: 10px; font-size: 10px;\">Name<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"\" placeholder=\"name\" value=\"<?= $author->{'name'} ?>\" size=\"10\"> \/\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; right: 134px; font-size: 10px;\">Email<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"\" placeholder=\"email\" value=\"<?= $author->{'email'} ?>\" size=\"18\" \/>   \r\n        <\/div>\r\n        <div class=\"dropdown\">\r\n          <div id=\"myDropdown\" class=\"dropdown-content\">\r\n<?php foreach (['Backend', 'Designer', 'Developer', 'Programmer'] as $key2 => $role) { ?>\r\n            <a href=\"#!\"><img style=\"float: left;\" width=\"30\" height=\"33\" src=\"resources\/images\/role<?=$key2?>.fw.png\"><?= $role; ?> <input type=\"radio\" id=\"<?=$key2?>\" style=\"float: right; cursor: pointer;\" name=\"\" value=\"<?= $role; ?>\" <?= (isset($author->{'role'}) && $author->{'role'} == $role ? ' checked=\"\"' : '' ) ?> \/><\/a>\r\n<?php } ?>\r\n          <\/div>\r\n          <button type=\"button\" onclick=\"myFunction()\" class=\"dropbtn\">Role &#9660;<\/button>\r\n        <\/div>\r\n\r\n<?php } else { ?>\r\n\r\n        <div style=\"position: relative; float: left;\">\r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; left: 10px; font-size: 10px;\">Name<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"\" placeholder=\"name\" value=\"Barry Dick\" size=\"10\"> \/ \r\n          <div class=\"absolute font-bold\" style=\"position: absolute; top: -8px; right: 140px; font-size: 10px;\">Email<\/div>\r\n          <input type=\"text\" id=\"tst\" name=\"\" placeholder=\"email\" value=\"barryd.it@gmail.com\" size=\"18\" \/>   \r\n        <\/div>&nbsp;\r\n\r\n        <div class=\"dropdown\">\r\n          <div id=\"myDropdown\" class=\"dropdown-content\">\r\n<?php foreach (['Backend', 'Designer', 'Developer', 'Programmer'] as $key => $role) { ?>\r\n            <a href=\"#!\"><img style=\"float: left;\" width=\"30\" height=\"33\" src=\"resources\/images\/role<?=$key?>.fw.png\"><?= $role; ?> <input type=\"radio\" id=\"<?=$key?>\" style=\"float: right; cursor: pointer;\" name=\"\" value=\"<?= $role; ?>\" \/><\/a>\r\n<?php } ?>\r\n          <\/div>\r\n          <button type=\"button\" onclick=\"myFunction()\" class=\"dropbtn\">Role &#9660;<\/button>\r\n        <\/div>\r\n\r\n<!--\r\n          <select name=\"\">\r\n<?php foreach (['Backend', 'Designer', 'Developer', 'Programmer'] as $role) { ?>\r\n            <option<?= (defined('COMPOSER') && isset(COMPOSER->{'authors'}) && COMPOSER->{'authors'}->role ? \"value=\\\"$role\\\"\" : '') && (defined('COMPOSER') && isset(COMPOSER->authors) && COMPOSER->authors->role == $role ? ' selected=\"\"' : '' ); ?>><?= $role; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n-->\r\n        \r\n<!--        <label for=\"author_<?= $key; ?>\"><sup onclick=\"rm_author(\\'author_<?= $key; ?>\\');\">[x]<\/sup>' + event.target.value + '<\/label><input type=\"hidden\" id=\"author_<?= $key; ?>\" name=\"\" value=\"' + event.target.value + '\" \/>&nbsp; -->\r\n<?php } ?>\r\n\r\n      <\/div>\r\n      \r\n      <!-- source -->\r\n      <!-- dist -->\r\n\r\n      <!-- funding -->\r\n\r\n\r\n<!--\r\n    \"require\": {\r\n        \"php\": \">=5.3.0\"\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"ResponseClass\\\\\":\"src\/\"\r\n        }\r\n    },\r\n    \"config\":{\r\n        \"optimize-autoloader\": true\r\n    }\r\n-->\r\n      \r\n      <div style=\"display: inline-block; width: 100%;\"><hr \/>Require:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" title=\"Enter Text and onSelect\" placeholder=\"\" value=\"\">\r\n        <\/div>\r\n        <div style=\"padding: 10px; display: <?= (defined('VENDOR') && !isset(VENDOR->{'require'}) ? 'none' : 'block') ?>;\">\r\n<?php $i = 0; if (defined('VENDOR') && isset(VENDOR->{'require'})) {\r\n  if (!isset(VENDOR->{'require'}->{'php'})) { ?>\r\n          <input type=\"checkbox\" checked=\"\" \/>\r\n          <input type=\"text\" value=\"<?= 'php:^' . PHP_VERSION ?>\" size=\"30\" \/>\r\n          <label for=\"pkg_<?= $i; ?>\"><\/label><br \/>\r\n<?php $i++; } foreach (VENDOR->{'require'} as $key => $require) { ?>\r\n          <input type=\"checkbox\" checked=\"\" \/>\r\n          <input type=\"text\" name=\"\" value=\"<?= $key . ':' . $require ?>\" size=\"30\" \/>\r\n          <label for=\"pkg_<?= $i; ?>\"><\/label><br \/>\r\n<?php $i++; } } else { ?>\r\n          <input type=\"checkbox\" checked=\"\" \/>\r\n          <input type=\"text\" id=\"pkg_<?= $i; ?>\" name=\"\" value=\"<?= 'php:^' . PHP_VERSION ?>\" size=\"30\" \/>\r\n          <label for=\"pkg_<?= $i; ?>\"><\/label><br \/>\r\n<?php } ?>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">Require-dev:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" placeholder=\"\" name=\"\" value=\"\" \/>\r\n        <\/div>\r\n        <div style=\"padding: 10px; display: <?= (defined('VENDOR') && !isset(VENDOR->{'require-dev'}) ? 'none' : 'block') ?>;\">\r\n<?php $i = 0; if (defined('VENDOR') && isset(VENDOR->{'require-dev'})) foreach (VENDOR->{'require-dev'} as $key => $require) { ?>\r\n          <input type=\"checkbox\" checked=\"\" \/>\r\n          <input type=\"text\" id=\"pkg-dev_<?= $i; ?>\" name=\"\" value=\"<?= $key . ':' . $require ?>\" size=\"30\" \/>\r\n          <label for=\"pkg-dev_<?= $i; ?>\"><\/label><br \/>\r\n<?php $i++; } ?>\r\n        <\/div>\r\n      <\/div>\r\n\r\n      <div style=\"display: inline-block; width: 100%;\">Autoload:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" name=\"\" placeholder=\"Autoload\" value=\"\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">Autoload-dev:\r\n        <div style=\"float: right;\">\r\n          <input type=\"text\" name=\"\" placeholder=\"Autoload-dev\" value=\"\">\r\n        <\/div>\r\n      <\/div>\r\n      \r\n      <div style=\"display: inline-block; width: 100%;\">Minimum-Stability:\r\n        <div style=\"float: right;\">\r\n          <select name=\"\">\r\n<?php if (defined('VENDOR')) foreach (['stable', 'rc', 'beta', 'alpha', 'dev'] as $ms) { ?>\r\n            <option value=\"<?= $ms ?>\"<?= (isset(VENDOR->{'minimum-stability'}) && VENDOR->{'minimum-stability'} == $ms ? ' selected=\"\"' : '' )?>><?= $ms ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n      <\/div>\r\n        <div style=\"padding: 10px; width: 100%;\">\r\n\r\n        <\/div>\r\n\r\n<?php } ?>\r\n\r\n      <\/div>\r\n\r\n      <div style=\"height: 15px;\"><\/div>\r\n\r\n    <\/form>\r\n\r\n      <\/div>\r\n\r\n<?php\r\n$count = 0;\r\nif (defined('COMPOSER') && isset(COMPOSER['json']->require))\r\n  foreach (COMPOSER['json']->require as $key => $require)\r\n    if (preg_match('\/.*\\\/.*:.*\/', $key . ':' . $require)) \r\n      if (preg_match('\/(.*\\\/.*)\/', $key, $match))\r\n        if (!empty($match) && !is_dir(APP_BASE['vendor'] . $match[1].'\/')) $count++;\r\n\r\n?>\r\n      <div id=\"app_composer-frameInstall\" class=\"app_composer-frame-container absolute <?= ($count > 0 ? 'selected' : ''); ?>\" style=\"overflow: scroll; width: 400px; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"<?=APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'composer')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '')  \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"POST\">  \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <input type=\"hidden\" name=\"composer[install]\" value=\"\" \/>\r\n        <div style=\"position: absolute; right: 0; float: right; text-align: center; z-index: 1;\">\r\n\r\n          <button id=\"composerInstallSubmit\" class=\"btn\" type=\"submit\" style=\"<?= ($count > 0 ? 'color: red;' : '' ); ?>\" value>Install (<?= ($count > 0 ? $count : '' ); ?>)<\/button>\r\n        <\/div> \r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"composerInstallLabel\" for=\"composerInstall\" style=\"background-color: hsl(343, 100%, 42%); color: white; cursor: pointer;\">&#9650; <code>Install<\/code><\/label>\r\n        <\/div>\r\n\r\n      <\/div>\r\n<?php if ($count > 0) { ?>\r\n      <div id=\"\" style=\"display: inline-block; padding: 10px; margin-bottom: 5px; width: 100%; background-color: rgba(235, 216, 186, 0.8);  border: 1px dashed #0078D7;\">\r\n      \r\n        Install (vendor\/package): \r\n        <span >\r\n        <ul style=\"padding-left: 10px;\">\r\n<?php\r\nforeach (COMPOSER['json']->require as $key => $require) {\r\n  if (preg_match('\/.*\\\/.*:.*\/', $key . ':' . $require)) \r\n    if (preg_match('\/(.*\\\/.*)\/', $key, $match))\r\n      if (!empty($match) && !is_dir(APP_BASE['vendor'] . $match[1].'\/')) echo '<li style=\"color: red;\"><code class=\"text-sm\">' . $match[1] . ':' . '<span style=\"float: right\">' . $require . '<\/span>' . \"<\/code><\/li>\\n\";\r\n}\r\n?>\r\n        <\/ul>\r\n        <\/span>\r\n      <\/div>\r\n<?php } ?>\r\n      <div id=\"composerInstallForm\" style=\"display: inline-block; padding: 10px; margin-bottom: 5px; height: 250px; width: 100%; background-color: rgb(225,196,151,.25);  border: 1px dashed #0078D7;\">\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Self-update <!--(C:\\ProgramData\\ComposerSetup\\bin\\composer.phar)--><\/label>\r\n        <div style=\"float: right;\">\r\n          <input type=\"checkbox\" name=\"composer[self-update]\" value=\"true\" <?= (!file_exists(APP_PATH . 'composer.phar') ? '' : 'checked=\"\"') ?>\/>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Optimize Classes<\/label>\r\n        <div style=\"float: right;\">\r\n          <input type=\"checkbox\" name=\"composer[optimize-classes]\" checked=\"\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Update Packages<\/label>\r\n        <div style=\"float: right;\">\r\n          <input type=\"checkbox\" name=\"composer[update]\" checked=\"\">\r\n        <\/div>\r\n      <\/div>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n<?php if (version_compare(COMPOSER_LATEST, COMPOSER_VERSION, '>') == 0 ) echo $frameUpdateContents; ?>\r\n\r\n      <\/div>\r\n\r\n    <\/div>\r\n    <!-- future feature: convert div from absolute to fixed. make screen bigger. <div style=\"position: relative; text-align: right; cursor: pointer; width: 400px; margin: 0 auto; border: 1px solid #000;\"> &#9660;<\/div> -->\r\n  <\/div>\r\n<?php $app['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\nvar keyword_i = 0;\r\n\r\n\/* When the user clicks on the button, \r\ntoggle between hiding and showing the dropdown content *\/\r\nfunction myFunction() {\r\n  document.getElementById(\"myDropdown\").classList.toggle(\"show\");\r\n}\r\n\r\n\/\/ Close the dropdown if the user clicks outside of it\r\nwindow.onclick = function(event) {\r\n  if (!event.target.matches('.dropbtn')) {\r\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\r\n    var i;\r\n    for (i = 0; i < dropdowns.length; i++) {\r\n      var openDropdown = dropdowns[i];\r\n      if (openDropdown.classList.contains('show')) {\r\n        openDropdown.classList.remove('show');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction rm_keyword(argv_id) {\r\n  var el = document.querySelector('label[for=' + argv_id + ']');\r\n  var input = document.getElementById(argv_id);\r\n  if (el) el.remove();\r\n  if (input) input.remove();\r\n  \/\/console.log(document.getElementById('composerAppendKeyword').childNodes.length);\r\n  if (document.getElementById('composerAppendKeyword').childNodes.length == 4) document.getElementById('composerAppendKeyword').style.display = \"none\";\r\n}\r\n\r\nfunction add_keyword() {\r\n    if (event.target.value == '') return;\r\n    var filledInputs = $('#composerAppendKeyword').find(':input[type=text]').filter(function() {return !!this.value;}).length;\r\n    document.getElementById('composerAppendKeyword').style.display = \"inline-block\";\r\n    keywordOption = '<label class=\"text-sm\" for=\"keyword_' + keyword_i + '\" ><sup onclick=\"rm_keyword(\\'keyword_' + keyword_i + '\\');\">[x]<\/sup>' + event.target.value + '<\/label><input type=\"hidden\" id=\"keyword_' + keyword_i + '\" name=\"composer[config][keywords][]\" value=\"' + event.target.value + '\" \/>&nbsp;';\r\n    keyword_i++;\r\n    document.getElementById('composerAppendKeyword').insertAdjacentHTML('beforeend', keywordOption); \/\/ innerHTML += keywordOption\r\n    document.getElementById('composerKeywordAdd').value = '';\r\n}\r\n\r\n\/\/document.getElementById(\"composerAppendKeyword\").childElementCount\r\n\/\/var x = $('#composerAppendKeyword').find(':input[type=hidden]').filter(function() {return !!this.value;}).length; \r\n\/\/alert(x);\r\n\r\n\r\ndocument.getElementById(\"composerReqPkg\").addEventListener(\"input\", function(event){\r\n  if(event.inputType == \"insertReplacementText\" || event.inputType == null) {\r\n    var filledInputs = $('#composerAppendRequire').find(':input[type=text]').filter(function() {return !!this.value;}).length;\r\n    document.getElementById('composerAppendRequire').style.display = \"inline-block\";\r\n    packageOption = '<input type=\"checkbox\" checked onchange=\"this.indeterminate = !this.checked; document.getElementById(\\'pkg_' + filledInputs + '\\').disabled = !this.checked\"\/> <input type=\"text\" id=\"pkg_' + filledInputs + '\" name=\"composer[config][require][]\" value=\"' + event.target.value + '\" list=\"composerReqVersResults\" size=\"30\" onSelect=\"get_version(\\'pkg_' + filledInputs + '\\')\" \/><label for=\"pkg_' + filledInputs + '\"><\/label><br \/>';\r\n    document.getElementById('composerAppendRequire').insertAdjacentHTML('beforeend', packageOption); \/\/ innerHTML += packageOption\r\n    event.target.value = \"\";\r\n  }\r\n});\r\n\r\n\r\nfunction selectPackage() { \r\n\r\n}\r\n\r\nfunction get_package(element) { \/\/ onSelect=\"get_package()\"\r\n  var val = element.value; \/\/ document.getElementById(\"composerReqPkg\")\r\n  console.log(element.id+ 's');\r\n  var url, packagesOption;\r\n  url = 'https:\/\/packagist.org\/search.json?q=' + val;\r\n  document.getElementById(element.id + 's').innerHTML = '';\r\n  $.getJSON(url, function(data) {\r\n  \/\/populate the packages datalist\r\n    $(data.results).each(function() {\r\n      packagesOption = '<option value=\"' + this.name + '\" \/>';\r\n      $('#' + element.id + 's').append(packagesOption);\r\n      \/\/console.log(this.favers);\r\n    });\r\n  });\r\n}\r\n\r\nfunction get_version(argv_id) { \/\/ onSelect=\"get_version()\"\r\n  var val = document.getElementById(argv_id).value;\r\n  var url, packagesOption;\r\n  \/\/var vendorPkg = val.split(\"\/\");\r\n\r\n  url = 'https:\/\/repo.packagist.org\/p2\/' + val + '.json'; \r\n  document.getElementById('composerReqVersResults').innerHTML = '';\r\n  $.getJSON(url, function(data) {\r\n  \/\/populate the packages datalist\r\n    packagesOption = '<option value=\"' + val + ':dev-master\" \/>';\r\n    $('#composerReqVersResults').append(packagesOption);\r\n    var vers = $(data.packages[val])[0].version.split(\/(\\d+\\.\\d+(?:\\.\\d+)?)\/);\r\n    packagesOption = '<option value=\"' + val + ':^' + vers[1] + '\" \/>';\r\n    $('#composerReqVersResults').append(packagesOption);\r\n\/*  \r\n    $(data.packages[val]).each(function() {\r\n      packagesOption = '<option value=\"' + val + ':^' + this.version + '\" \/>';\r\n      $('#composerReqVersResults').append(packagesOption);\r\n      \/\/console.log(this.version);\r\n    });\r\n*\/\r\n  });\r\n}\r\n\r\ndocument.getElementById(\"composerRequireDevPkg\").addEventListener(\"input\", function(event){\r\n  if(event.inputType == \"insertReplacementText\" || event.inputType == null) {\r\n    var filledInputs = $('#composerAppendRequire-dev').find(':input[type=text]').filter(function() {return !!this.value;}).length;\r\n    document.getElementById('composerAppendRequire-dev').style.display = \"inline-block\";\r\n    packageOption = '<input type=\"checkbox\" checked onchange=\"this.indeterminate = !this.checked; document.getElementById(\\'pkg-dev_' + filledInputs + '\\').disabled = !this.checked\"\/><input type=\"text\" id=\"pkg-dev_' + filledInputs + '\" name=\"composerRequireDevPkgs[]\" value=\"' + event.target.value + '\" list=\"composerReq-devVersResults\" size=\"30\" onSelect=\"get_dev_version(\\'pkg-dev_' + filledInputs + '\\')\" \/><label for=\"pkg-dev_' + filledInputs + '\"><\/label><br \/>';\r\n    document.getElementById('composerAppendRequire-dev').insertAdjacentHTML('beforeend', packageOption); \/\/ innerHTML += packageOption\r\n    event.target.value = \"\";\r\n  }\r\n});\r\n\r\nfunction get_dev_package() { \/\/ onSelect=\"get_dev_package()\"\r\n  var val = document.getElementById(\"composerRequireDevPkg\").value;\r\n  var url, packagesOption;\r\n  url = 'https:\/\/packagist.org\/search.json?q=' + val;\r\n  document.getElementById('composerReqDevPackages').innerHTML = '';\r\n  $.getJSON(url, function(data) {\r\n  \/\/populate the packages datalist\r\n    $(data.results).each(function() {\r\n      packagesOption = \"<option value=\\\"\" + this.name + \"\\\" \/>\";\r\n      $('#composerReqDevPackages').append(packagesOption);\r\n      \/\/console.log(this.favers);\r\n    });\r\n  });\r\n}\r\n\r\nfunction get_dev_version(argv_id) { \/\/ onSelect=\"get_version()\"\r\n  var val = document.getElementById(argv_id).value;\r\n  var url, packagesOption;\r\n  \/\/var vendorPkg = val.split(\"\/\");\r\n  url = 'https:\/\/repo.packagist.org\/p2\/' + val + '.json'; \r\n  document.getElementById('composerReq-devVersResults').innerHTML = '';\r\n  $.getJSON(url, function(data) {\r\n  \/\/populate the packages datalist\r\n    packagesOption = '<option value=\"' + val + ':dev-master\" \/>';\r\n    $('#composerReq-devVersResults').append(packagesOption);\r\n    var vers= $(data.packages[val])[0].version.split(\/(\\d+\\.\\d+(?:\\.\\d+)?)\/);\r\n    packagesOption = '<option value=\"' + val + ':^' + vers[1] + '\" \/>';\r\n    $('#composerReq-devVersResults').append(packagesOption);\r\n\/*  \r\n    $(data.packages[val]).each(function() {\r\n      packagesOption = '<option value=\"' + val + ':^' + this.version + '\" \/>';\r\n      $('#composerReq-devVersResults').append(packagesOption);\r\n      \/\/console.log(this.version);\r\n    });\r\n*\/\r\n  });\r\n}\r\n\r\n\/\/document.getElementById(\"bottom\").style.zIndex = \"1\";\r\n\r\n$(document).ready(function() {\r\n  var composer_frame_containers = $(\".app_composer-frame-container\");\r\n  var totalFrames = composer_frame_containers.length;\r\n  var currentIndex = 0;\r\n  \r\n  console.log(totalFrames + ' - total frames');\r\n\r\n  $(\"#appComposerAuthLabel\").click(function() {\r\n    if ($('#appComposerAuthJsonForm').css('display') == 'none') {\r\n      $('#appComposerAuthLabel').html(\"&#9650; <code>COMPOSER_HOME\/auth.json\");\r\n      $('#appComposerAuthJsonForm').slideDown( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    } else {\r\n      $('#appComposerAuthLabel').html(\"&#9660; <code>COMPOSER_HOME\/auth.json<\/code>\");\r\n      $('#appComposerAuthJsonForm').slideUp( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    }\r\n  });\r\n  \r\n\r\n\r\n  $(\"#appComposerVendorJsonLabel\").click(function() {\r\n    if ($('#appComposerVendorJsonForm').css('display') == 'none') {\r\n      $('#appComposerVendorJsonLabel').html(\"&#9650; <code>COMPOSER_PATH\/[vendor\/*].json<\/code>\");\r\n      $('#appComposerVendorJsonForm').slideDown( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    } else {\r\n      $('#appComposerVendorJsonLabel').html(\"&#9660; <code>COMPOSER_PATH\/[vendor\/*].json<\/code>\");\r\n      $('#appComposerVendorJsonForm').slideUp( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\"#appComposerJsonLabel\").click(function() {\r\n    if ($('#appComposerJsonForm').css('display') == 'none') {\r\n      $('#appComposerJsonLabel').html(\"&#9650; <code>COMPOSER_PATH\/composer.json<\/code>\");\r\n      $('#appComposerJsonForm').slideDown( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    } else {\r\n      $('#appComposerJsonLabel').html(\"&#9660; <code>COMPOSER_PATH\/composer.json<\/code>\");\r\n      $('#appComposerJsonForm').slideUp( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\"#app_composer-frameMenuInit\").click(function() {\r\n    currentIndex = 1;\r\n    $(\"#app_composer-frameMenuPrev\").html('&lt; Menu');\r\n    $(\"#app_composer-frameMenuNext\").html('Conf &gt;');\r\n    composer_frame_containers.removeClass(\"selected\");\r\n    composer_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\"#app_composer-frameMenuConf\").click(function() {\r\n    currentIndex = 2;\r\n    $(\"#app_composer-frameMenuPrev\").html('&lt; Init');\r\n    $(\"#app_composer-frameMenuNext\").html('Install &gt;');\r\n    composer_frame_containers.removeClass(\"selected\");\r\n    composer_frame_containers.eq(currentIndex).addClass('selected');\r\n  });   \r\n  \r\n  $(\"#app_composer-frameMenuInstall\").click(function() {\r\n    currentIndex = 3;\r\n    $(\"#app_composer-frameMenuPrev\").html('&lt; Conf');\r\n    $(\"#app_composer-frameMenuNext\").html('Update &gt;');\r\n    composer_frame_containers.removeClass(\"selected\");\r\n    composer_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\"#app_composer-frameMenuUpdate\").click(function() {\r\n    currentIndex = 4;\r\n    $(\"#app_composer-frameMenuPrev\").html('&lt; Install');\r\n    $(\"#app_composer-frameMenuNext\").html('Menu &gt;');\r\n    composer_frame_containers.removeClass(\"selected\");\r\n    composer_frame_containers.eq(currentIndex).addClass('selected');\r\n  });   \r\n \r\n  $(\".composer-home\").click(function() {\r\n    currentIndex = -1; \r\n    composer_frame_containers.removeClass(\"selected\");\r\n    \/\/composer_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\".composer-menu\").click(function() {\r\n    currentIndex = 0; \r\n    composer_frame_containers.removeClass(\"selected\");\r\n    composer_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\"#app_composer-frameMenuPrev\").click(function() {\r\n    if (currentIndex <= 0) currentIndex = 5;\r\n    console.log(currentIndex + '!=' + totalFrames);\r\n    currentIndex--;\r\n    if (currentIndex >= totalFrames) {\r\n      currentIndex = 0;\r\n    }\r\n    if (currentIndex == 0) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Update');\r\n      $(\"#app_composer-frameMenuNext\").html('Init &gt;');\r\n    } else if (currentIndex == 1) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Menu');\r\n      $(\"#app_composer-frameMenuNext\").html('Conf &gt;');\r\n    } else if (currentIndex == 2) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Init');\r\n      $(\"#app_composer-frameMenuNext\").html('Install &gt;');\r\n    } else if (currentIndex == 3) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Conf');\r\n      $(\"#app_composer-frameMenuNext\").html('Update &gt;');\r\n    } else if (currentIndex == 4) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Install');\r\n      $(\"#app_composer-frameMenuNext\").html('Menu &gt;');\r\n    }\r\n\r\n    \/\/else \r\n    console.log('decided: ' + currentIndex);\r\n    composer_frame_containers.removeClass(\"selected\");\r\n    composer_frame_containers.eq(currentIndex).addClass('selected');\r\n    \r\n    \/\/currentIndex--;    \r\n    console.log(currentIndex);\r\n  });\r\n\r\n  $(\"#app_composer-frameMenuNext\").click(function() {\r\n    currentIndex++;\r\n    console.log(currentIndex + '!=' + totalFrames);\r\n    if (currentIndex >= totalFrames) {\r\n      currentIndex = 0;\r\n    }\r\n    if (currentIndex == 0) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Update');\r\n      $(\"#app_composer-frameMenuNext\").html('Init &gt;');\r\n    } else if (currentIndex == 1) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Menu');\r\n      $(\"#app_composer-frameMenuNext\").html('Conf &gt;');\r\n    } else if (currentIndex == 2) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Init');\r\n      $(\"#app_composer-frameMenuNext\").html('Install &gt;');\r\n    } else if (currentIndex == 3) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Conf');\r\n      $(\"#app_composer-frameMenuNext\").html('Update &gt;');\r\n    } else if (currentIndex == 4) {\r\n      $(\"#app_composer-frameMenuPrev\").html('&lt; Install');\r\n      $(\"#app_composer-frameMenuNext\").html('Menu &gt;');\r\n    }\r\n    if (currentIndex < 0) currentIndex++;\r\n    \/\/else \r\n    console.log('decided: ' + currentIndex);\r\n    composer_frame_containers.removeClass(\"selected\"); \/\/ composer_frame_containers.css(\"z-index\", 0); \/\/ Reset z-index for all elements\r\n    composer_frame_containers.eq(currentIndex).addClass('selected'); \/\/ css(\"z-index\", totalFrames); \/\/ Set top layer z-index\r\n  });\r\n  \r\n  $(\"#frameSelector\").change(function() {\r\n    var selectedIndex = parseInt($(this).val(), 10);\r\n    currentIndex = selectedIndex;\r\n    $(\".app_composer-frame-container\").removeClass(\"selected\"); \/\/ Remove selected class from all containers\r\n    $(\".app_composer-frame-container\").eq(currentIndex).addClass(\"selected\"); \/\/ Apply selected class to the chosen container\r\n  });\r\n\/*\r\n  $('select').on('change', function (e) {\r\n    var optionSelected = $(\"option:selected\", this);\r\n    var valueSelected = this.value;\r\n  });\r\n*\/\r\n});\r\n<?php $app['script'] = ob_get_contents(); \r\nob_end_clean();\r\n\r\n\r\n\r\n\/** Loading Time: 6.73s **\/\r\n  \r\n  \/\/dd(get_required_files(), true);\r\n\r\n\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ ==  get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'composer' && APP_DEBUG) {\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/-->\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app['body']; ?>\r\n\r\n  <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : \"{$path}jquery-3.7.1.min.js\" ?>\"><\/script>\r\n  <!-- You need to include jQueryUI for the extended easing options. -->\r\n<?php \/* https:\/\/stackoverflow.com\/questions\/12592279\/typeerror-p-easingthis-easing-is-not-a-function *\/ ?>\r\n  <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n\r\n<script>\r\n<?= $app['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php\r\n$buffer_contents = ob_get_contents(); \r\nob_end_clean();\r\nreturn $buffer_contents;\r\n} else {\r\n  return $app;\r\n}\r\n\r\n\/** Loading Time: 7.0s **\/\r\n  \r\n  \/\/dd(get_required_files(), true);",
"public/ui.git.php" : "<?php\r\n\r\nswitch (__FILE__) {\r\n  case get_required_files()[0]:\r\n    if ($path = (basename(getcwd()) == 'public') ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n    else die(var_dump(\"$path path was not found. file=config.php\"));\r\n\r\n    break;\r\n  default:\r\n}\r\n\r\nif (is_file($path = APP_PATH . APP_BASE['config'] . 'git.php') ? $path : '' )\r\n  require_once $path; \r\nelse die(var_dump(\"$path path was not found. file=git.php\"));\r\n\r\n\/* https:\/\/stackoverflow.com\/questions\/73026623\/how-to-ignore-or-permanently-block-the-files-which-contain-date-or-datetime-in *\/\r\n\r\n\r\n\/*\r\nif ($path = realpath((!is_dir(dirname(__DIR__, 1)) . DIRECTORY_SEPARATOR . 'config' ? dirname(__DIR__, 1) . DIRECTORY_SEPARATOR . 'config' : (!is_dir(__DIR__ . DIRECTORY_SEPARATOR . 'config') ? (basename(__DIR__) != 'config' ? NULL : '.') : __DIR__ . DIRECTORY_SEPARATOR . 'config'))  . DIRECTORY_SEPARATOR . 'git.php')) \/\/ realpath() | is_file('config\/git.php')) \r\n  require_once($path);\r\nelse die(var_dump($path . ' path was not found. file=git.php'));\r\n*\/\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n\r\n\r\n\/*\r\ngit reset filename   (unstage a specific file)\r\n\r\ngit branch\r\n  -m   oldBranch newBranch   (Renaming a git branch)\r\n  -d   Safe deletion\r\n  -D   Forceful deletion\r\n\r\ngit commit -am \"Default message\"\r\n\r\ngit checkout -b branchName\r\n*\/\r\n\r\n\/*\r\nfunction testGit()\r\n\t{\r\n\t\t$descriptorspec = [\r\n\t\t\t1 => ['pipe', 'w'],\r\n\t\t\t2 => ['pipe', 'w'],\r\n\t\t];\r\n\t\t$pipes = [];\r\n\t\t$resource = proc_open(Git::getBin(), $descriptorspec, $pipes);\r\n\r\n\t\tforeach ($pipes as $pipe) {\r\n\t\t\tfclose($pipe);\r\n\t\t}\r\n\r\n\t\t$status = trim(proc_close($resource));\r\n\r\n\t\treturn ($status != 127);\r\n\t}\r\n\r\n$repo = Git::open('\/path\/to\/repo');  \/\/ -or- Git::create('\/path\/to\/repo')\r\n\r\n$repo->add('.');\r\n\r\n    if (is_array($files))\r\n\t\t$files = '\"'.implode('\" \"', $files).'\"';\r\n    GIT_EXEC . \" add $files -v\";\r\n\r\n$repo->commit('Some commit message');\r\n\r\n    GIT_EXEC . ' commit -av -m ' . escapeshellarg($message)\r\n\r\n\r\n$repo->push('origin', 'master');\r\n\r\n    GIT_EXEC . \" push $remote $branch\"\r\n\r\n*\/\r\n\r\n\r\n\/\/ \r\n}\r\n\r\n\/*\r\n<?php ob_start(); ?>\r\n<HTML ...>\r\n<?php $app['css'] = ob_get_contents();\r\nob_end_clean(); ?>\r\n*\/ \r\n\r\nob_start(); ?>\r\n\r\n#app_git-container { position: absolute; display: none; top: 60px; margin: 0 auto; left: 50%; right: 50%;  }\r\n#app_git-container.selected { display: block; z-index: 1; \r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75    #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n\r\n.app_git-frame-container { position: absolute; display: none; top:0; left: 0; width: 400px; }\r\n.app_git-frame-container.selected { display: block; z-index: 1; }\r\n\r\n\/* #app_git-frameName == ['menu', 'init', 'status', 'config', 'commit', 'update'] *\/\r\n\r\n#app_git-frameMenu {}\r\n#app_git-frameMenuPrev {} \/* composerMenuPrev *\/\r\n#app_git-frameMenuNext {} \/* composerMenuNext *\/\r\n\/*\r\n#app_git-frameMenuConf {}\r\n#app_git-frameMenuInstall {}\r\n#app_git-frameMenuInit {}\r\n#app_git-frameMenuUpdate {}\r\n*\/\r\n#app_git-frameInit {} \/* Either there is a .git directory, or go to config with .git_*ignore ... *\/\r\n#app_git-frameStatus {} \/* these maybe just for console results *\/\r\n#app_git-frameConfig {} \/* Frame *\/\r\n#app_git-frameCommit {} \/* same with this one *\/\r\n#app_git-frameUpdate {} \/* Frame *\/\r\n\/*\r\n#update { backgropund-color: rgba(240, 224, 198, .75); }\r\n#middle { backgropund-color: rgba(240, 224, 198, .75); }\r\n#bottom { backgropund-color: rgba(240, 224, 198, .75); }\r\n*\/\r\n.btn {\r\n  @apply rounded-md px-2 py-1 text-center font-medium text-slate-900 shadow-sm ring-1 ring-slate-900\/10 hover:bg-slate-50\r\n}\r\n\r\n.git-menu {\r\n  cursor: pointer;\r\n}\r\n\r\nimg { display: inline; }\r\n\r\n.show { display: block; }\r\n\r\n\r\n<?php $app['style'] = ob_get_contents();\r\nob_end_clean(); \r\n\r\nob_start();\r\n!defined('GIT_VERSION') and define('GIT_VERSION', '1.0.0');\r\n!defined('GIT_LATEST') and define('GIT_LATEST', GIT_VERSION);\r\n?>\r\n  <div id=\"app_git-container\" class=\"absolute <?= (__FILE__ ==  get_required_files()[0] || isset($_GET['app']) && $_GET['app'] == 'git' ? 'selected' : (version_compare(GIT_LATEST, GIT_VERSION, '>') != 0 ? (isset($_GET['app']) && $_GET['app'] != 'git' ? '' : '') :  '')) ?>\" style=\"z-index: 1; width: 424px; background-color: rgba(255,255,255,0.8); padding: 10px;\">\r\n<div style=\"position: relative; margin: 0 auto; width: 404px; height: 306px; border: 3px dashed #F05033; background-color: #FBF7F1;\">\r\n\r\n      <div class=\"absolute ui-widget-header\" style=\"position: absolute; display: inline-block; width: 100%; height: 25px; margin: -50px 0 25px 0; padding: 24px 0; border-bottom: 1px solid #000; z-index: 3;\">\r\n        <label class=\"git-home\" style=\"cursor: pointer;\">\r\n          <div class=\"\" style=\"position: relative; display: inline-block; top: 0; left: 0; margin-top: -5px;\">\r\n            <img src=\"resources\/images\/git_icon.fw.png\" width=\"32\" height=\"32\" \/>\r\n          <\/div>\r\n        <\/label>\r\n        <div style=\"display: inline;\">\r\n          <span style=\"background-color: white; color: #F05033;\">Git <?= (version_compare(GIT_LATEST, GIT_VERSION, '>') != 0 ? 'v'.substr(GIT_LATEST, 0, similar_text(GIT_LATEST, GIT_VERSION)) . '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . substr(GIT_LATEST, similar_text(GIT_LATEST, GIT_VERSION)) . '<\/span>' : 'v'.GIT_VERSION ) . ' '; ?><\/span><span style=\"background-color: #0078D7; color: white;\"><code class=\"text-sm\" style=\"background-color: white; color: #0078D7;\">$ <?= (defined('GIT_EXEC') ? GIT_EXEC : null); ?><\/code><\/span>\r\n        <\/div>\r\n        \r\n        <div style=\"display: inline; float: right; text-align: center; color: blue;\"><code style=\"background-color: white; color: #0078D7;\"><a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_git-container').style.display='none';\">[X]<\/a><\/code><\/div> \r\n      <\/div>\r\n      \r\n      <div class=\"ui-widget-content\" style=\"position: relative; display: block; width: 398px; background-color: rgba(251,247,241); z-index: 2;\">\r\n        <div style=\"display: inline-block; text-align: left; width: 125px;\">\r\n          <div class=\"git-menu text-sm\" style=\"cursor: pointer; font-weight: bold; padding-left: 25px; border: 1px solid #000;\">Main Menu<\/div>\r\n          <div class=\"text-xs\" style=\"display: inline-block; border: 1px solid #000;\">\r\n            <a class=\"text-sm\" id=\"app_git-frameMenuPrev\" href=\"<?= \/*(!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . *\/ (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\"> &lt; Menu<\/a> | <a class=\"text-sm\" id=\"app_git-frameMenuNext\" href=\"<?= \/*(!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . *\/ (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\">Init &gt;<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div class=\"absolute\" style=\"position: absolute; display: inline-block; top: 4px; text-align: right; width: 272px; \">\r\n          <div class=\"text-xs\" style=\"display: inline-block;\">\r\n          + 1626 <a href=\"https:\/\/github.com\/git\/git\/graphs\/contributors\">contributors<\/a>\r\n          <br \/><a href=\"http:\/\/github.com\/git\"><img src=\"resources\/images\/github.fw.png\" title=\"http:\/\/github.com\/git\" width=\"18\" height=\"18\" \/><\/a>\r\n          <a style=\"color: blue; text-decoration-line: underline; text-decoration-style: solid;\" href=\"http:\/\/git-scm.com\/\" title=\"http:\/\/git-scm.com\/\" target=\"_blank\">http:\/\/git-scm.com\/<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n      <\/div>\r\n\r\n      <div class=\"absolute\" style=\"position: absolute; top: 0; margin: 0px auto; text-align: center; height: 200px; width: 100%; background-repeat: no-repeat; <?= (version_compare(GIT_LATEST, GIT_VERSION, '>') != 0 ? \"background-image: url('https:\/\/editablegifs.com\/gifs\/gifs\/fireworks-1\/output.gif?egv=3258'); opacity: 0.2;\" : '' ) ?> z-index: 1;\">\r\n      <\/div>\r\n      <div style=\"position: absolute; top: 0; left: 0; right: 0; margin: 10px auto; opacity: 1.0; text-align: center; cursor: pointer; z-index: 1; \">\r\n        <img class=\"<?= (version_compare(GIT_LATEST, GIT_VERSION, '>') != 0 ? 'git-menu' : 'git-update') ?>\" src=\"resources\/images\/git_logo.gif<?= \/*.fw.png*\/ NULL; ?>\" style=\"\" width=\"229\" height=\"96\" \/>\r\n      <\/div>\r\n      <div class=\"absolute\" style=\"position: absolute; bottom: 24px; left: 0; right: 0; width: 100%; text-align: center;\">\r\n        <span style=\"text-decoration-line: underline; text-decoration-style: solid;\">Git is a distributed version control system<\/span>\r\n      <\/div>\r\n      <div style=\"position: absolute; bottom: 0; left: 0; padding: 2px; z-index: 1;\">\r\n        <a href=\"https:\/\/github.com\/git\"><img src=\"resources\/images\/github-composer.fw.png\" \/><\/a>\r\n      <\/div>\r\n      <div class=\"absolute text-sm\" style=\"position: absolute; bottom: 0; right: 0; padding: 2px; z-index: 1; \"><?= '<code>Latest: <\/code>'; ?> <?= (version_compare(GIT_LATEST, GIT_VERSION, '>') != 0 ? '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . 'v'.substr(GIT_LATEST, 0, similar_text(GIT_LATEST, GIT_VERSION)). substr(GIT_LATEST, similar_text(GIT_LATEST, GIT_VERSION))  . '<\/span>': 'Installed: v' . GIT_VERSION ); ?><\/div>\r\n      <div style=\"position: relative; overflow: hidden; width: 398px; height: 286px;\">\r\n\r\n      <div id=\"app_git-frameMenu\" class=\"app_git-frame-container selected absolute\" style=\"background-color: rgb(225,196,151,.75); margin-top: 8px;\">\r\n        <!--<h3>Main Menu<\/h3> <h4>Update - Edit Config - Initalize - Install<\/h4> -->\r\n        <div style=\"position: absolute; right: 10px; float: right; z-index: 1;\">\r\n          <div class=\"text-sm\" style=\"display: inline-block; margin: 0 auto;\">\r\n            <form class=\"app_git-push\" action=\"<?= APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n              <!-- <input type=\"hidden\"  \/> -->\r\n              <button type=\"submit\" name=\"cmd\" value=\"push\"><img src=\"resources\/images\/green_arrow.fw.png\" width=\"20\" height=\"25\" style=\"cursor: pointer; margin-left: 6px;\" \/><br \/>Push<\/button>\r\n            <\/form>\r\n          <\/div>\r\n          <div class=\"text-sm\" style=\"display: inline-block; margin: 0 auto;\">\r\n            <form class=\"app_git-pull\" action=\"<?=APP_URL_BASE . '?' . http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n              <!-- <input type=\"hidden\"  \/> -->\r\n              <button type=\"submit\" name=\"cmd\" value=\"pull\"><img src=\"resources\/images\/red_arrow.fw.png\" width=\"20\" height=\"25\" style=\"cursor: pointer; margin-left: 4px;\" \/><br \/>Pull<\/button>\r\n            <\/form>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"position: relative; height: 100px;\">\r\n          <div id=\"app_git-commit_msg-container\" style=\"display: none; position: absolute; top: 80px; left: 25%; right: 25%;\">\r\n            <input id=\"app_git-commit_msg\" type=\"text \"\/>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"display: block; margin: 10px auto; width: 100%; background-color: rgb(255,255,255,.75);\">\r\n          <div style=\"position: absolute; top: 0; left: 10px;\"><img src=\"resources\/images\/oauth-token.gif\" style=\"cursor: pointer;\" width=\"20\" height=\"23\" alt=\"Git token\" title=\"OAuth Token\" onclick=\"document.getElementById('app_git-oauth').style.display='block';\"\/><\/div>\r\n          <div style=\"position: absolute; top: 28px; left: 10px; border: 1px dashed #000; height: 84px; overflow-x: auto;\" class=\"text-xs\">\r\n            <div style=\"position: fixed; font-weight: bold; color: #FFF; background-color: #B0B0B0;\">Git Commands<\/div><br \/>\r\n            <code class=\"text-xs\">\r\n            <a id=\"app_git-help-cmd\" href=\"<?= (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') ?>\" onclick=\"\">git <span style=\"color: red;\">[Help]<\/span><\/a><br \/>\r\n            <a id=\"app_git-add-cmd\" href=\"<?= (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') ?>\" onclick=\"\">git add .<\/a><br \/>\r\n            <a id=\"app_git-remote-cmd\" href=\"<?= (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') ?>\" onclick=\"\">git remote -v<\/a><br \/>\r\n            <a id=\"app_git-commit-cmd\" href=\"<?= (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') ?>\">git commit -am \"&lt;detail message&gt;\"<\/a><br \/>\r\n            <a id=\"app_git-clone-cmd\" href=\"<?= (APP_URL['query'] != '' ? '?'.APP_URL['query'] : '') . (defined('APP_ENV') && in_array(APP_ENV, ['development', 'production']) ? '#!' : '') ?>\">git clone &lt;URL&gt;<\/a><br \/>\r\n            <a>Testing Again<\/a><br \/>\r\n            <\/code>\r\n          <\/div>\r\n\r\n          <div id=\"app_git-commit-msg\" style=\"position: absolute; display: none; top: 30px; left: 20%; right: 50%; border: 1px solid #000;\">\r\n            <div style=\"position: absolute; top: -20px; left: -20px; color: red; font-weight: bold;\">\r\n              <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_git-commit-msg').style.display='none';\">[X]<\/a>\r\n            <\/div>\r\n            <textarea id=\"app_git-commit-input\" type=\"text\" placeholder=\"commit message\" size=\"30\"><\/textarea>\r\n          <\/div>\r\n\r\n          <div id=\"app_git-oauth\" style=\"position: absolute; display: none; top: 40px; left: 0; background-color: rgba(0, 0, 0, 0.5); border: 1px solid rgb(0, 0, 0); width: 100%; height: 100px; text-align: center; padding-top: 40px;\">\r\n            <div style=\"position: absolute; top: 25px; left: 45px; color: red; height: 14px; font-weight: bold; background-color: #FFF; line-height: 8px;\">\r\n              <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_git-oauth').style.display='none';\">[X]<\/a>\r\n            <\/div>\r\n            <form action=\"\" method=\"POST\">\r\n            <input id=\"app_git-oauth-input\" type=\"text\" placeholder=\"ghp_54nj8sA53dZi9jgf...\" size=\"26\"><button type=\"submit\" style=\"background-color: #FFF;\"> Save <\/button><br \/>\r\n            <\/form>\r\n            <div style=\"position: absolute; bottom: -20px; right: 0px; color: red; font-weight: bold; background: #FFF;\">\r\n              <a href=\"https:\/\/github.com\/settings\/tokens\">Github.com-&gt;settings-&gt;tokens<\/a>\r\n            <\/div>\r\n\r\n          <\/div>\r\n\r\n          <div id=\"app_git-clone-url\" style=\"position: absolute; display: none; top: 80px; left: 20%; right: 50%; border: 1px solid #000;\">\r\n            <div style=\"position: absolute; top: 8px; left: 60px; color: red; font-weight: bold;\">\r\n              <a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_git-clone-url').style.display='none';\">[X]<\/a>\r\n            <\/div>\r\n            <input id=\"app_git-clone-url-input\" type=\"text\" placeholder=\"https:\/\/github.com\/barrydit\/....git\" size=\"26\" \/>\r\n          <\/div>\r\n\r\n          <div style=\"display: inline-block; width: 32%; text-align: right;\"><img src=\"resources\/images\/git.fw.png\" width=\"52\" height=\"37\" style=\" border: 1px dashed #F05033;\" \/><\/div>\r\n          <div style=\"display: inline-block; width: 32%; text-align: center; border: 1px dashed #F05033; height: 44px; padding: 7px;\">\r\n            <select id=\"app_git-frameSelector\">\r\n              <!-- <option value=\"\">---<\/option> -->\r\n              <option value=\"init\" <?= (is_dir(APP_PATH . APP_ROOT . '.git') ? 'disabled' : 'selected' ); ?>>init<\/option>\r\n              <option value=\"status\">status<\/option>\r\n              <option value=\"config\">config<\/option>\r\n              <option value=\"commit\">commit<\/option>\r\n            <\/select>\r\n          <\/div>\r\n          <div style=\"display: inline-block; width: 33%; padding-top: 2px;\">\r\n          <form id=\"app_git-cmd-selected\" method=\"GET\">\r\n            <button type=\"submit\"><img src=\"resources\/images\/git_icon_selected.fw.png\" width=\"44\" height=\"29\" style=\"border: 1px dashed #F05033;\" \/><\/button>\r\n          <\/form>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"height: 35px;\"><\/div>\r\n      <\/div>\r\n\r\n      <div id=\"app_git-frameInit\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?<?=http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <input id=\"gitInitSubmit\" class=\"btn\" type=\"submit\" value=\"Init\/Run\" \/>\r\n      <\/div> \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitInitLabel\" for=\"gitInit\" style=\"background-color: #6781B2; color: white;\">&#9650; <code>Init<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"gitInitForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"2\" name=\"git[init]\"><?= \/* GIT_INIT_PARAMS  NULL*\/ 'git init'; ?><\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n      <div id=\"app_git-frameStatus\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?<?=http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n      <div style=\"display: inline-block; width: 100%; margin: -10px 0 10px 0; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: #6781B2; color: white;\">&#9650; <code>Status<\/code><\/label>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center;\">\r\n          <input id=\"gitStatusSubmit\" class=\"btn\" type=\"submit\" value=\"Status\/Run\" \/>\r\n        <\/div> \r\n      <\/div>\r\n      <div id=\"gitStatusForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"6\" name=\"git[status]\"><?= \/* GIT_INIT_PARAMS  NULL*\/ 'git status'; ?><\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n      \r\n      <div id=\"app_git-frameConfig\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?<?=http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <button id=\"gitConfigSubmit\" class=\"btn absolute\" style=\"position: absolute; top: 0; right: 0; z-index: 2;\" type=\"submit\" value>Modify<\/button>\r\n      <\/div> \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: hsl(29, 100%, 42%); color: white; cursor: pointer;\">&#9650; <code>GIT_PATH\/.gitignore<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appGitIgnoreForm\" style=\"display:<?= (file_exists('.gitignore') ? 'inline-block' : 'none') ?>; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"2\" name=\"git[status]\"><?= \/* GIT_INIT_PARAMS  NULL*\/ 'git status'; ?><\/textarea>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: hsl(29, 100%, 42%); color: white; cursor: pointer;\">&#9650; <code>GIT_PATH\/.gitconfig<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appGitConfigForm\" style=\"display: <?= (exec('git config -l') == NULL ? 'inline-block' : 'none') ?>; overflow-x: hidden; overflow-y: auto; height: 180px; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n      <div style=\"display: none; width: 100%;\">\r\n        <input type=\"checkbox\" name=\"gitConfigList\" \/>\r\n        <label style=\"font-style: italic;\">git config -l<\/label>\r\n        <div style=\"float: right;\">\r\n          <input type=\"checkbox\" name=\"gitIngoreFile\" 1 \/> <label style=\"font-style:italic;\">.gitignore<\/label>\r\n          <input type=\"checkbox\" name=\"gitConfigFile\" 1 \/> <label style=\"font-style:italic;\">.gitconfig<\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Name:<\/label>\r\n        \r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigName\" value=\"<?= 'Barry Dick'; ?>\" \/>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Email:<\/label>\r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigEmail\" value=\"<?= 'barryd.it@gmail.com'; ?>\" \/>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Editor (Core):<\/label>\r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigCoreEditor\" size=\"40\" value=\"\\&quot;C:\/Program Files (x86)\/Programmer's Notepad\/pn.exe\\&quot; --allowmulti -w\" \/>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Default Branch (Init)<\/label> \r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigInitDefaultBranch\" value=\"master\" \/>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Helper (Credential)<\/label>\r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigCredentialHelper\" value=\"manager-core\" \/>\r\n        <\/div>\r\n      <\/div>\r\n      <\/div>\r\n\r\n    <\/form>\r\n      <\/div>\r\n\r\n\r\n      <div id=\"app_git-frameCommit\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?<?=http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n      <div style=\"display: inline-block; width: 100%; margin: -10px 0 10px 0; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: hsl(343, 100%, 42%); color: white;\">&#9650; <code>Stage \/ Commit<\/code><\/label>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center;\">\r\n          <input id=\"gitStatusSubmit\" class=\"btn\" type=\"submit\" value=\"Status\/Run\" \/>\r\n        <\/div> \r\n      <\/div>\r\n      <div id=\"gitStatusForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"6\" name=\"git[status]\"><?= \/* GIT_INIT_PARAMS  NULL*\/ 'git commit'; ?><\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n      <div id=\"app_git-frameUpdate\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?<?=http_build_query(APP_QUERY + array( 'app' => 'git')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/* $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=git' *\/ ?>\" method=\"POST\">\r\n      <div style=\"display: inline-block; width: 100%; margin: -10px 0 10px 0; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color:hsl(89, 100%, 42%); color: white;\">&#9650; <code>Update<\/code><\/label>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center;\">\r\n          <input id=\"gitStatusSubmit\" class=\"btn\" type=\"submit\" value=\"Status\/Run\" \/>\r\n        <\/div> \r\n      <\/div>\r\n      <div id=\"gitStatusForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"6\" name=\"git[status]\"><?= \/* GIT_INIT_PARAMS  NULL*\/ 'git update'; ?><\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n<?php $app['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n\/\/ Select the element\r\nconst element = document.getElementById('app_git-container');\r\n\r\n\/\/ Create a MutationObserver instance\r\nconst mutation_observer = new MutationObserver((mutationsList, observer) => {\r\n    for(const mutation of mutationsList) {\r\n        if (mutation.attributeName === 'style') {\r\n            const display = element.style.display;\r\n            if (display === 'block' && !isDragging) {\r\n                \/\/ Trigger your action here\r\n\r\n                \/\/ Get the <select> element\r\n                const selectElement = document.getElementById('app_git-frameSelector');\r\n\r\n                \/\/ Get the selected value\r\n                const selectedValue = selectElement.value;\r\n\r\n                \/\/ Log the selected value to the console\r\n                console.log('Selected value:', selectedValue);\r\n                if (confirm('Run Git ' + selectedValue.charAt(0).toUpperCase() + selectedValue.slice(1) + '?')) {\r\n                    \/\/ User clicked OK\r\n                    $('#requestInput').val('git ' + selectedValue );\r\n                    $('#requestSubmit').click();\r\n                }\r\n                console.log('Element is displayed');\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\/\/ Start observing the target node for configured mutations\r\nmutation_observer.observe(element, { attributes: true });\r\n\r\n\r\nvar appGitPushElements = document.getElementsByClassName('app_git-push'); \/\/ getElementById('app_git-push')\r\nfor (var i = 0; i < appGitPushElements.length; i++) {\r\n    appGitPushElements[i].addEventListener('click', function() {\r\n\r\n  \/\/ Prevent the default form submission\r\n  event.preventDefault();\r\n\r\n  \/\/ For example, you can show an alert to indicate that the form submission is disabled\r\n  alert('Push request was made.');\r\n\r\n  document.getElementById('requestInput').value = 'git push https:\/\/<?= getenv('COMPOSER_TOKEN') ?>@github.com\/barrydit\/<?= (isset($_GET['domain']) ? $_GET['domain']: (isset($_GET['project']) ? $_GET['project']: 'codeinsync.git')) ?>';\r\n\r\n  \/\/ Get the element with the ID \"requestSubmit\"\r\n  var requestSubmit = document.getElementById('requestSubmit');\r\n\r\n  \/\/ Create a new click event\r\n  var clickEvent = new MouseEvent('click', {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: window\r\n  });\r\n\r\n  \/\/ Dispatch the click event on the element\r\n  requestSubmit.dispatchEvent(clickEvent);\r\n\r\n    });\r\n}\r\n\r\nvar appGitPullElements = document.getElementsByClassName('app_git-pull'); \/\/ getElementById('app_git-pull')\r\nfor (var i = 0; i < appGitPullElements.length; i++) {\r\n    appGitPullElements[i].addEventListener('click', function() {\r\n\r\n  \/\/ Prevent the default form submission\r\n  event.preventDefault();\r\n\r\n  \/\/ For example, you can show an alert to indicate that the form submission is disabled\r\n  alert('Pull request was made.');\r\n  \r\n  document.getElementById('requestInput').value = 'git pull';\r\n\r\n  \/\/ Get the element with the ID \"requestSubmit\"\r\n  var requestSubmit = document.getElementById('requestSubmit');\r\n  \r\n  document.getElementById('app_git-container').style.display='block';\r\n\r\n  \/\/ Create a new click event\r\n  var clickEvent = new MouseEvent('click', {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: window\r\n  });\r\n\r\n  \/\/ Dispatch the click event on the element\r\n  requestSubmit.dispatchEvent(clickEvent); \/\/$(\"#requestSubmit\").click();  \r\n    });\r\n}\r\n\r\n\r\n\/\/ git_icon_selected  app_git-cmd-selected\r\ndocument.getElementById('app_git-cmd-selected').addEventListener('submit', function(event) {\r\n  \/\/ Prevent the default form submission\r\n  event.preventDefault();\r\n  \r\n  var cmdSelect = document.getElementById('app_git-frameSelector');\r\n  \r\n  const git_cmd = document.getElementById('requestInput');\r\n  const commit_msg_container = document.getElementById('app_git-commit_msg-container');\r\n  const commit_msg = document.getElementById('app_git-commit_msg');\r\n  \r\n  git_cmd.value = 'git ' + cmdSelect.value;\r\n\r\n\r\n  if (cmdSelect.value == 'config') {\r\n    console.log('Testing...');\r\n  } else if (cmdSelect.value == 'commit') {\r\n    commit_msg_container.style.display = 'block';\r\n    \r\n    if (commit_msg.value != '') {\r\n      document.getElementById('requestInput').value = git_cmd.value + ' -a -m \"' + commit_msg.value + '\"';\r\n    } else {\r\n      document.getElementById('requestInput').value = git_cmd.value + ' -a -m \"default message\"';\r\n      return false;    \r\n    }\r\n  }\r\n  \r\n  \/\/ Get the element with the ID \"requestSubmit\"\r\n  var requestSubmit = document.getElementById('requestSubmit');\r\n\r\n  \/\/ Create a new click event\r\n  var clickEvent = new MouseEvent('click', {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: window\r\n  });\r\n\r\n  \/\/ Dispatch the click event on the element\r\n\r\n  requestSubmit.dispatchEvent(clickEvent);\r\n\r\n\/\/  var changePositionBtn = document.getElementById('changePositionBtn');\r\n\/\/  const myDiv = document.getElementById('myDiv');\r\n\r\n\/\/  if (myDiv.style.position == 'absolute')\r\n\/\/    changePositionBtn.dispatchEvent(clickEvent);\r\n\r\n  isFixed = true;\r\n  show_console();\r\n\r\n  \/\/ For example, you can show an alert to indicate that the form submission is disabled\r\n  console.log(cmdSelect.value + ' was executed.');\r\n});\r\n\r\n$(document).ready(function() {\r\n  var git_frame_containers = $(\".app_git-frame-container\");\r\n  var git_frame_totalFrames = git_frame_containers.length;\r\n  var currentIndex = 0;\r\n  \r\n  $(\"#app_git-frameSelector\").value = 0;\r\n  \r\n  console.log(git_frame_totalFrames + ' - total frames');\r\n\/*\r\n  $(\"#appGitAuthLabel\").click(function() {\r\n    if ($('#appGitAuthJsonForm').css('display') == 'none') {\r\n      $('#appGitAuthLabel').html(\"&#9650; <code>GIT_HOME\/auth.json\");\r\n      $('#appGitAuthJsonForm').slideDown( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    } else {\r\n      $('#appGitAuthLabel').html(\"&#9660; <code>GIT_HOME\/auth.json<\/code>\");\r\n      $('#appGitAuthJsonForm').slideUp( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\"#appGitJsonLabel\").click(function() {\r\n    if ($('#appGitJsonForm').css('display') == 'none') {\r\n      $('#appGitJsonLabel').html(\"&#9650; <code>GIT_PATH\/git.json\");\r\n      $('#appGitJsonForm').slideDown( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    } else {\r\n      $('#appGitJsonLabel').html(\"&#9660; <code>GIT_PATH\/git.json<\/code>\");\r\n      $('#appGitJsonForm').slideUp( \"slow\", function() {\r\n      \/\/ Animation complete.\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\"#app_git-frameMenuConf\").click(function() {\r\n    currentIndex = 1;\r\n    $(\"#app_git-frameMenuPrev\").html('&lt; Menu');\r\n    $(\"#app_git-frameMenuNext\").html('Conf &gt;');\r\n    git_frame_containers.removeClass(\"selected\");\r\n    git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });   \r\n\r\n  $(\"#app_git-frameMenuInstall\").click(function() {\r\n    currentIndex = 2;\r\n    $(\"#app_git-frameMenuPrev\").html('&lt; Conf');\r\n    $(\"#app_git-frameMenuNext\").html('Init &gt;');\r\n    git_frame_containers.removeClass(\"selected\");\r\n    git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\"#app_git-frameMenuInit\").click(function() {\r\n    currentIndex = 3;\r\n    $(\"#app_git-frameMenuPrev\").html('&lt; Install');\r\n    $(\"#app_git-frameMenuNext\").html('Update &gt;');\r\n    git_frame_containers.removeClass(\"selected\");\r\n    git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n  \r\n  $(\"#app_git-frameMenuUpdate\").click(function() {\r\n    currentIndex = 4;\r\n    $(\"#app_git-frameMenuPrev\").html('&lt; Init');\r\n    $(\"#app_git-frameMenuNext\").html('Menu &gt;');\r\n    git_frame_containers.removeClass(\"selected\");\r\n    git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });   \r\n*\/\r\n\r\n  $(\".git_icon_selected\").click(function() {\r\n    currentIndex = 0;\r\n    \r\n    console.log('test');\r\n\r\n    \/\/git_frame_containers.removeClass(\"selected\");\r\n    \/\/git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\".git-home\").click(function() {\r\n    currentIndex = 0; \r\n    git_frame_containers.removeClass(\"selected\");\r\n    \/\/git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\".git-menu\").click(function() {\r\n    currentIndex = 0;\r\n    $(\"#app_git-frameSelector\").value = 0;\r\n    git_frame_containers.removeClass(\"selected\");\r\n    git_frame_containers.eq(currentIndex).addClass('selected');\r\n  });\r\n\r\n  $(\"#app_git-frameMenuPrev\").click(function() {\r\n    if (currentIndex <= 0) currentIndex = 5;\r\n    console.log(currentIndex + '!=' + git_frame_totalFrames);\r\n    currentIndex--;\r\n    if (currentIndex >= git_frame_totalFrames) {\r\n      currentIndex = 0;\r\n    }\r\n    if (currentIndex == 0) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Update');\r\n      $(\"#app_git-frameMenuNext\").html('Conf &gt;');\r\n    } if (currentIndex == 1) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Menu');\r\n      $(\"#app_git-frameMenuNext\").html('Install &gt;');\r\n    } else if (currentIndex == 2) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Conf');\r\n      $(\"#app_git-frameMenuNext\").html('Init &gt;');\r\n    } else if (currentIndex == 3) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Install');\r\n      $(\"#app_git-frameMenuNext\").html('Update &gt;');\r\n    } else if (currentIndex == 4) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Init');\r\n      $(\"#app_git-frameMenuNext\").html('Menu &gt;');\r\n    }\r\n\r\n    \/\/else \r\n    console.log('decided: ' + currentIndex);\r\n    git_frame_containers.removeClass(\"selected\");\r\n    git_frame_containers.eq(currentIndex).addClass('selected');\r\n    \r\n    \/\/currentIndex--;    \r\n    console.log(currentIndex);\r\n  });\r\n    \r\n  $(\"#app_git-frameMenuNext\").click(function() {\r\n    currentIndex++;\r\n    console.log(currentIndex + '!=' + git_frame_totalFrames);\r\n    if (currentIndex >= git_frame_totalFrames) {\r\n      currentIndex = 0;\r\n    }\r\n    if (currentIndex == 0) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Update');\r\n      $(\"#app_git-frameMenuNext\").html('Conf &gt;');\r\n    } else if (currentIndex == 1) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Menu');\r\n      $(\"#app_git-frameMenuNext\").html('Install &gt;');\r\n    } else if (currentIndex == 2) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Conf');\r\n      $(\"#app_git-frameMenuNext\").html('Init &gt;');\r\n    } else if (currentIndex == 3) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Install');\r\n      $(\"#app_git-frameMenuNext\").html('Update &gt;');\r\n    } else if (currentIndex == 4) {\r\n      $(\"#app_git-frameMenuPrev\").html('&lt; Init');\r\n      $(\"#app_git-frameMenuNext\").html('Menu &gt;');\r\n    }\r\n    if (currentIndex < 0) currentIndex++;\r\n    \/\/else \r\n    console.log('decided: ' + currentIndex);\r\n    git_frame_containers.removeClass(\"selected\"); \/\/ git_frame_containers.css(\"z-index\", 0); \/\/ Reset z-index for all elements\r\n    git_frame_containers.eq(currentIndex).addClass('selected'); \/\/ css(\"z-index\", git_frame_totalFrames); \/\/ Set top layer z-index\r\n  });\r\n\r\n  \r\n\/*\r\n  $(\"#app_git-push\").click(function() {\r\n     e.preventDefault();\r\n  });\r\n\r\n  $(\"#app_git-pull\").click(function() {\r\n  \r\n  });\r\n  \r\n\r\n  $(\"#app_git-frameSelector\").change(function() {\r\n    var selectedIndex = parseInt($(this).val(), 10);\r\n    currentIndex = selectedIndex;\r\n\r\n    if (currentIndex >= git_frame_totalFrames) {\r\n      currentIndex = 0;\r\n    }\r\n    console.log(currentIndex + ' = currentIndex');\r\n    $(\".app_git-frame-container\").removeClass(\"selected\"); \/\/ Remove selected class from all containers\r\n    \r\n    if (currentIndex <= git_frame_totalFrames && currentIndex > 0) {\r\n      $(\".app_git-frame-container\").eq(currentIndex).addClass(\"selected\"); \/\/ Apply selected class to the chosen container\r\n    }\r\n    this.value = currentIndex;\r\n    \/\/\r\n  });\r\n\r\n  $('select').on('change', function (e) {\r\n    var optionSelected = $(\"option:selected\", this);\r\n    var valueSelected = this.value;\r\n  });\r\n*\/\r\n});\r\n<?php $app['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'git' && APP_DEBUG) {\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\"); \r\n\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/-->\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app['body']; ?>\r\n\r\n  <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : \"{$path}jquery-3.7.1.min.js\" ?>\"><\/script>\r\n  <!-- You need to include jQueryUI for the extended easing options. -->\r\n<?php \/* https:\/\/stackoverflow.com\/questions\/12592279\/typeerror-p-easingthis-easing-is-not-a-function *\/ ?>\r\n  <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n\r\n  <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\r\n  <!-- script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script -->\r\n  <!-- <script src=\"resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n<script>\r\n<?= $app['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php return ob_get_contents(); \r\n  \/\/ ob_end_clean();\r\n} else {\r\n\r\n  return $app;\r\n}",
"public/ui.nodes.php" : "<?php\r\n\r\nif (isset($_GET['json'])) {\r\n    \/\/ dependencies.php\r\n  header('Content-Type: application\/json');\r\n\r\n  function get_required_files_in_script($script) {\r\n    ob_start();\r\n    include $script;\r\n    ob_end_clean();\r\n    return get_included_files();\r\n  }\r\n\r\n\/\/$server_files = get_required_files_in_script(APP_PATH . 'server.php');\r\n\/\/$index_files = get_required_files_in_script('index.php');\r\n\r\n\/*\r\n$files = array_map(function($path) {\r\n    \/\/ Extract the filename without the extension\r\n    $filename = preg_replace('\/\\.ini$\/', '', basename($path));\r\n    return preg_replace('\/^\\d+-\/', '', $filename);\r\n  }, $ini_files);\r\n*\/\r\n\r\n  $files = array_values(array_map(function($file) \/*use ($rootPath)*\/ {\r\n    return preg_replace('\/^' . preg_quote('\/mnt\/c\/www\/', '\/') . '\/', '', $file);\r\n  }, get_required_files_in_script('index.php')));\r\n\r\n  echo json_encode([\r\n    \/\/'server.php' => $server_files,\r\n    'server.php' => [\"config\/config.php\",\"config\/functions.php\",\"config\/constants.php\",\"config\/composer.php\",\"config\/classes\/class.clientorproj.php\",\"config\/classes\/class.logger.php\",\"config\/classes\/class.notification.php\",\"config\/classes\/class.shutdown.php\",\"config\/classes\/class.websocketserver.php\"],\r\n    'public\/index.php' => $files,\r\n    'vendor\/autoload.php' => array_merge(array_values(array_map(function($file){ if (preg_match('\/\\\/mnt\\\/c\\\/www\\\/vendor\\\/.*\/', $file)) return preg_replace('\/^' . preg_quote('\/mnt\/c\/www\/', '\/') . '\/', '', $file); }, get_required_files_in_script('vendor\/autoload.php'))), ['config\/composer.php'])\r\n  ]);\r\n\r\n  die();\r\n} \r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"])) \r\n  if ($path = basename(dirname(get_required_files()[0])) == 'public') { \/\/ (basename(getcwd())\r\n    if (is_file($path = realpath('index.php'))) {\r\n      require_once $path;\r\n    }\r\n  } else {\r\n    die(var_dump(\"Path was not found. file=$path\"));\r\n  }\r\n\r\n\r\n\/\/if ($_SERVER['REQUEST_METHOD'] == 'POST')\r\n\/\/  if (isset($_GET['app']) && $_GET['app'] == 'nodes')\r\n\r\n\r\n\r\nif (defined('GIT_EXEC'))\r\n  if (is_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/ace') && empty(glob($path)))\r\n    exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . GIT_EXEC . ' clone https:\/\/github.com\/ajaxorg\/ace-builds.git resources\/js\/ace', $output, $returnCode) or $errors['GIT-CLONE-ACE'] = $output;\r\n  elseif (!is_dir($path)) {\r\n    if (!mkdir($path, 0755, true))\r\n      $errors['GIT-CLONE-ACE'] = ' resources\/js\/ace does not exist.';\r\n    exec((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? '' : 'sudo ') . GIT_EXEC . ' clone https:\/\/github.com\/ajaxorg\/ace-builds.git resources\/js\/ace', $output, $returnCode) or $errors['GIT-CLONE-ACE'] = $output;\r\n  }\r\n\r\nob_start(); ?>\r\n    #app_nodes-container { \r\n      width: 550px;\r\n      height: 450px;\r\n      \/* border: 1px solid black; *\/\r\n      position: absolute;\r\n      top: 60px; \r\n      left: 30%;\r\n      right: 0;\r\n      z-index: 1;\r\n      \/* resize: both; Make the div resizable *\/\r\n      \/* overflow: hidden; Hide overflow to ensure proper resizing *\/\r\n    }\r\n\r\n    #app_nodes-container.selected {\r\n      display: block;\r\n  z-index: 1;\r\n  resize: both; \/* Make the div resizable *\/\r\n  overflow: hidden; \/* Hide overflow to ensure proper resizing *\/\r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75    #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n    #visualization {\r\n      width: 100%;\r\n      height: calc(100% - 80px);\r\n      position: absolute;\r\n    }\r\n\r\n.node circle {\r\n            fill: #999;\r\n            stroke: #fff;\r\n            stroke-width: 3px;\r\n        }\r\n\r\n        .link {\r\n            fill: none;\r\n            stroke: #555;\r\n            stroke-width: 1.5px;\r\n        }\r\n\r\n        .link.green {\r\n            stroke: green;\r\n        }\r\n\r\n        text {\r\n            font: 10px sans-serif;\r\n        }\r\n<?php $app['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<div id=\"app_nodes-container\" class=\"absolute <?= __FILE__ == get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'nodes') && !isset($_GET['path']) ? 'selected' : '' ?>\" style=\"display: <?= __FILE__ == get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'nodes') ? 'block' : 'none' ?>; resize: both; overflow: hidden;\">\r\n    <div class=\"ui-widget-header\" style=\"position: relative; display: inline-block; width: 100%; cursor: move; border-bottom: 1px solid #000;background-color: #FFF;\">\r\n      <label class=\"nodes-home\" style=\"cursor: pointer;\">\r\n        <div class=\"\" style=\"position: relative; display: inline-block; top: 0; left: 0;\">\r\n          <img src=\"resources\/images\/ace_editor_icon.png\" width=\"32\" height=\"32\" \/>\r\n        <\/div>\r\n      <\/label>\r\n      <div style=\"display: inline;\">\r\n        <span style=\"background-color: #38B1FF; color: #FFF; margin-top: 10px;\">Nodes <?= \/* (version_compare(NPM_LATEST, NPM_VERSION, '>') != 0 ? 'v'.substr(NPM_LATEST, 0, similar_text(NPM_LATEST, NPM_VERSION)) . '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . substr(NPM_LATEST, similar_text(NPM_LATEST, NPM_VERSION)) . '<\/span>' : 'v'.NPM_VERSION ); *\/ NULL; ?><\/span> <span style=\"background-color: #0078D7; color: white;\"><code id=\"AceEditorVersionBox\" class=\"text-sm\" style=\"background-color: white; color: #0078D7;\"><\/code><\/span>\r\n      <\/div>\r\n        \r\n      <div style=\"display: inline; float: right; text-align: center; color: blue;\"><code style=\"background-color: white; color: #0078D7;\"><a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_nodes-container').style.display='none';\">[X]<\/a><\/code><\/div> \r\n    <\/div>\r\n\r\n    <div id=\"\" style=\"position: relative; width: 100%; height: 100%; border: 3px dashed #38B1FF; background-color: rgba(56,177,255,0.6);\">\r\n\r\n      <div class=\"ui-widget-content\" style=\"position: relative; display: block; margin: 0 auto; width: calc(100% - 2px); height: 50px; background-color: rgba(251,247,241);\">\r\n        <div style=\"display: inline-block; text-align: left; width: 125px;\">\r\n          <div class=\"npm-menu text-sm\" style=\"cursor: pointer; font-weight: bold; padding-left: 25px; border: 1px solid #000;\">Main Menu<\/div>\r\n          <div class=\"text-xs\" style=\"display: inline-block; border: 1px solid #000;\">\r\n            <a class=\"text-sm\" id=\"app_nodes-frameMenuPrev\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\"> &lt; Menu<\/a> | <a class=\"text-sm\" id=\"app_nodes-frameMenuNext\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\">Init &gt;<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div class=\"absolute\" style=\"position: absolute; display: inline-block; top: 5px; right: 0; text-align: right; float: right;\">\r\n          <div class=\"text-xs\" style=\"position: relative; display: inline-block;\">\r\n          + 478 <a href=\"https:\/\/github.com\/ajaxorg\/ace\/graphs\/contributors\">contributors<\/a>\r\n          <br \/><!-- a href=\"https:\/\/github.com\/ajaxorg\"><img src=\"resources\/images\/node.js.png\" title=\"https:\/\/github.com\/nodejs\" width=\"18\" height=\"18\" \/><\/a -->\r\n          <a style=\"color: blue; text-decoration-line: underline; text-decoration-style: solid;\" href=\"https:\/\/ace.c9.io\/\" title=\"https:\/\/ace.c9.io\/\">https:\/\/ace.c9.io\/<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n\r\n<?= \/*\r\n        <div class=\"containerTbl\" style=\"background-ground: #fff; border: 1px solid #000; display: <?= (isset($_GET['file']) && isset($_GET['path']) && is_file($_GET['path'] . $_GET['file']) ? 'none': 'block' ) ?>;\">\r\n<table width=\"\" style=\"border: 1px solid #000;\">\r\n<tr>\r\n<?php\r\n$paths = glob($path . '\/*');\r\n\/\/dd(urldecode($_GET['path']));\r\nusort($paths, function ($a, $b) {\r\n    $aIsDir = is_dir($a);\r\n    $bIsDir = is_dir($b);\r\n    \r\n    \/\/ Directories go first, then files\r\n    if ($aIsDir && !$bIsDir) {\r\n        return -1;\r\n    } elseif (!$aIsDir && $bIsDir) {\r\n        return 1;\r\n    }\r\n    \r\n    \/\/ If both are directories or both are files, sort alphabetically\r\n    return strcasecmp($a, $b);\r\n});\r\n\r\n$count = 1;\r\nif (!empty($paths))\r\n  foreach($paths as $key => $path) {\r\n      echo '<td style=\"border: 1px solid #000;\" class=\"text-xs\">' . \"\\n\";\r\n      if (is_dir($path))\r\n        echo '<a href=\"?app=nodes&path=' . basename($path) . '\">'\r\n        . '<img src=\"..\/..\/resources\/images\/directory.png\" width=\"50\" height=\"32\" \/><br \/>' . basename($path) . '<\/a>' . \"\\n\";\r\n      elseif (is_file($path))\r\n        echo '<a href=\"?app=nodes&path=' . (basename(dirname($path)) == basename(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ? 'failed' : basename(dirname($path)))) . '&file=' . basename($path) . '\">'\r\n        . '<img src=\"..\/..\/resources\/images\/php_file.png\" width=\"40\" height=\"50\" \/><br \/>' . basename($path) . '<\/a>' . \"\\n\";\r\n      echo '<\/td>' . \"\\n\";\r\n      if ($count >= 6 || $path == end($paths)) echo '<\/tr>';\r\n      if (isset($count) && $count >= 6) $count = 1;\r\n      else $count++;\r\n  } \r\n?>\r\n<\/tr>\r\n<\/table>\r\n        <\/div>\r\n*\/ NULL; ?>\r\n      \r\n      <\/div>\r\n\r\n\r\n\r\n      <div style=\"position: relative; margin: 0 auto; width: calc(100% - 2px); height: 100%; background-color: #fff;\">\r\n         <div id=\"visualization\"><\/div>\r\n      <\/div>\r\n\r\n      <div id=\"app_nodes-frameInit\" class=\"app_nodes-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n<!--\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <input id=\"gitInitSubmit\" class=\"btn\" type=\"submit\" value=\"Init\/Run\">\r\n      <\/div> \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitInitLabel\" for=\"gitInit\" style=\"background-color: #6781B2; color: white;\">? <code>Init<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"gitInitForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"2\" name=\"git[init]\">git init<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n-->\r\n      <\/div>\r\n\r\n      <div id=\"container1\" style=\"position: relative; width: 100%; height: 100%; border: 1px #000 solid;\">\r\n      \r\n\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n\r\n<?php $app['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\nfetch('<?= basename(__FILE__)?>?json')\r\n            .then(response => response.json())\r\n            .then(data => createVisualization(data));\r\n\r\n        function createVisualization(data) {\r\n            const width = 1000, height = 800;\r\n\r\n            const nodes = [];\r\n            const links = [];\r\n            const fileIndex = {};\r\n\r\n            let index = 0;\r\n\r\n            function addNode(name, group) {\r\n                if (!fileIndex[name]) {\r\n                    nodes.push({ name, group, index });\r\n                    fileIndex[name] = index++;\r\n                }\r\n            }\r\n\r\n            function addLink(source, target, color) {\r\n                links.push({ source: fileIndex[source], target: fileIndex[target], color });\r\n            }\r\n\r\n            Object.keys(data).forEach((file, i) => {\r\n                addNode(file, i + 1);\r\n                data[file].forEach(childFile => addNode(childFile, i + 1));\r\n            });\r\n\r\n            Object.keys(data).forEach(file => {\r\n                data[file].forEach(childFile => {\r\n                    const color = (data['server.php'].includes(childFile) && data['public\/index.php'].includes(childFile)) ? 'green' : '';\r\n                    addLink(file, childFile, color);\r\n                });\r\n            });\r\n\r\n            const svg = d3.select(\"#visualization\")\r\n                .append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height);\r\n\r\n            const simulation = d3.forceSimulation(nodes)\r\n                .force(\"link\", d3.forceLink(links).id(d => d.index).distance(100))\r\n                .force(\"charge\", d3.forceManyBody().strength(-300))\r\n                .force(\"center\", d3.forceCenter(width \/ 2, height \/ 2));\r\n\r\n            const link = svg.append(\"g\")\r\n                .attr(\"class\", \"links\")\r\n                .selectAll(\"line\")\r\n                .data(links)\r\n                .enter().append(\"line\")\r\n                .attr(\"class\", d => `link ${d.color}`);\r\n\r\n            const node = svg.append(\"g\")\r\n                .attr(\"class\", \"nodes\")\r\n                .selectAll(\"g\")\r\n                .data(nodes)\r\n                .enter().append(\"g\");\r\n\r\n            node.append(\"circle\")\r\n                .attr(\"r\", 10);\r\n\r\n            node.append(\"text\")\r\n                .text(d => d.name)\r\n                .attr(\"x\", 12)\r\n                .attr(\"y\", 3);\r\n\r\n            simulation\r\n                .nodes(nodes)\r\n                .on(\"tick\", ticked);\r\n\r\n            simulation.force(\"link\")\r\n                .links(links);\r\n\r\n            function ticked() {\r\n                link\r\n                    .attr(\"x1\", d => d.source.x)\r\n                    .attr(\"y1\", d => d.source.y)\r\n                    .attr(\"x2\", d => d.target.x)\r\n                    .attr(\"y2\", d => d.target.y);\r\n\r\n                node\r\n                    .attr(\"transform\", d => `translate(${d.x},${d.y})`);\r\n            }\r\n        }\r\n\r\n      $(\"#app_nodes-container\").resizable({ \/\/ , #ui_ace_editor\r\n        alsoResize: \"#visualization\"\r\n      });\r\n\r\n<?php\r\n$app['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\");\r\n\/\/check if file is included or accessed directly\r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/base\/jquery-ui.css\">\r\n  <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/ -->\r\n  \r\n<?php\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\nunset($path);\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app['body']; ?>\r\n\r\n<script>\r\nlet isDragging = false;\r\nlet activeWindow = null;\r\n\r\nfunction makeDraggable(windowId) {\r\n    const windowElement = document.getElementById(windowId);\r\n    const headerElement = windowElement.querySelector('.ui-widget-header');\r\n    let offsetX, offsetY;\r\n\r\n    headerElement.addEventListener('mousedown', function(event) {\r\n        if (!isDragging) {\r\n            \/\/ Bring the clicked window to the front\r\n            document.body.appendChild(windowElement);\r\n            offsetX = event.clientX - windowElement.getBoundingClientRect().left;\r\n            offsetY = event.clientY - windowElement.getBoundingClientRect().top;\r\n            isDragging = true;\r\n            activeWindow = windowElement;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mousemove', function(event) {\r\n        if (isDragging && activeWindow === windowElement) {\r\n            const left = event.clientX - offsetX;\r\n            const top = event.clientY - offsetY;\r\n\r\n            \/\/ Boundary restrictions\r\n            const maxX = window.innerWidth - windowElement.clientWidth - 100;\r\n            const maxY = window.innerHeight - windowElement.clientHeight;\r\n\r\n            windowElement.style.left = `${Math.max(-200, Math.min(left, maxX))}px`;\r\n            windowElement.style.top = `${Math.max(0, Math.min(top, maxY))}px`;\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mouseup', function() {\r\n        if (activeWindow === windowElement) {\r\n            isDragging = false;\r\n            activeWindow = null;\r\n        }\r\n    });\r\n}\r\n      \r\nmakeDraggable('app_nodes-container');\r\n\r\n<?= $app['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php \r\n  $return_contents = ob_get_contents();\r\n\r\n  ob_end_clean();\r\n\r\nif (__FILE__ == get_required_files()[0] && __FILE__ == realpath($_SERVER[\"SCRIPT_FILENAME\"]) ) {\r\n  print $return_contents;\r\n} elseif (in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'nodes' && APP_DEBUG) {\r\n  return $return_contents;\r\n} else { \r\n  return $app;\r\n}\r\n",
"public/ui.npm.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0])\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n\r\nob_start(); ?>\r\n\r\n#app_npm-container { position: absolute; display: none; top: 60px; margin: 0 auto; left: 50%; right: 50%;  }\r\n#app_npm-container.selected { display: block; z-index: 1; \r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75    #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n\r\n\r\nimg { display: inline; }\r\n\r\n\r\n<?php $app['style'] = ob_get_contents();\r\nob_end_clean(); \r\n\r\nob_start(); ?>\r\n  <div id=\"app_npm-container\" class=\"absolute <?= (__FILE__ ==  get_required_files()[0] || (isset($_GET['app']) && $_GET['app'] == 'npm') && !isset($_GET['path']) ? 'selected' : '') ?>\" style=\"z-index: 1; width: 424px; background-color: rgba(255,255,255,0.8); padding: 10px;\">\r\n    <div style=\"position: relative; margin: 0 auto; width: 404px; height: 306px; border: 3px dashed #DD0000; background-color: #FBF7F1;\">\r\n      <div class=\"absolute ui-widget-header\" style=\"position: absolute; display: inline-block; width: 100%; height: 25px; margin: -50px 0 25px 0; padding: 24px 0; border-bottom: 1px solid #000; z-index: 3;\">\r\n        <label class=\"npm-home\" style=\"cursor: pointer;\">\r\n          <div class=\"\" style=\"position: relative; display: inline-block; top: 0; left: 0; margin-top: -5px;\">\r\n            <img src=\"resources\/images\/npm_icon.png\" width=\"32\" height=\"32\" \/>\r\n          <\/div>\r\n        <\/label>\r\n        <div style=\"display: inline;\">\r\n          <span style=\"background-color: white; color: #DD0000;\">Node.js <?= \/* (version_compare(NPM_LATEST, NPM_VERSION, '>') != 0 ? 'v'.substr(NPM_LATEST, 0, similar_text(NPM_LATEST, NPM_VERSION)) . '<span class=\"update\" style=\"color: green; cursor: pointer;\">' . substr(NPM_LATEST, similar_text(NPM_LATEST, NPM_VERSION)) . '<\/span>' : 'v'.NPM_VERSION ); *\/ NULL; ?><\/span> <span style=\"background-color: #0078D7; color: white;\"><code class=\"text-sm\" style=\"background-color: white; color: #0078D7;\">$ <?= (defined('NPM_EXEC') ? NPM_EXEC : null); ?><\/code><\/span>\r\n        <\/div>\r\n        \r\n        <div style=\"display: inline; float: right; text-align: center; color: blue;\"><code style=\"background-color: white; color: #0078D7;\"><a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_npm-container').style.display='none';\">[X]<\/a><\/code><\/div> \r\n      <\/div>\r\n      \r\n      <div class=\" ui-widget-content\" style=\"position: relative; display: block; width: 398px; background-color: rgba(251,247,241); z-index: 2;\">\r\n\r\n        <div style=\"display: inline-block; text-align: left; width: 125px;\">\r\n          <div class=\"npm-menu text-sm\" style=\"cursor: pointer; font-weight: bold; padding-left: 25px; border: 1px solid #000;\">Main Menu<\/div>\r\n          <div class=\"text-xs\" style=\"display: inline-block; border: 1px solid #000;\">\r\n            <a class=\"text-sm\" id=\"app_npm-frameMenuPrev\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\"> &lt; Menu<\/a> | <a class=\"text-sm\" id=\"app_npm-frameMenuNext\" href=\"<?= (!empty(APP_QUERY) ? '?' . http_build_query(APP_QUERY) : '') . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '#') ?>\">Init &gt;<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div class=\"absolute\" style=\"position: absolute; display: inline-block; top: 4px; text-align: right; width: 272px; \">\r\n          <div class=\"text-xs\" style=\"display: inline-block;\">\r\n          + 3357 <a href=\"https:\/\/github.com\/nodejs\/node\/graphs\/contributors\">contributors<\/a>\r\n          <br \/><a href=\"https:\/\/github.com\/nodejs\"><img src=\"resources\/images\/node.js.png\" title=\"https:\/\/github.com\/nodejs\" width=\"18\" height=\"18\" \/><\/a>\r\n          <a style=\"color: blue; text-decoration-line: underline; text-decoration-style: solid;\" href=\"https:\/\/nodejs.org\/\" title=\"https:\/\/nodejs.org\/\">https:\/\/nodejs.org\/<\/a>\r\n          <\/div>\r\n        <\/div>\r\n        <div style=\"clear: both;\"><\/div>\r\n      <\/div>\r\n\r\n      <div class=\"\" style=\"position: absolute; top: 0; left: 0; right: 0; margin: 10px auto; opacity: 1.0; text-align: center; cursor: pointer; z-index: 1;\">\r\n        <img class=\"npm-menu\" src=\"resources\/images\/node_npm.fw.png\" style=\"margin-top: 45px;\" width=\"150\" height=\"198\" \/>\r\n      <\/div>\r\n\r\n\r\n<div style=\"position: relative; overflow: hidden; width: 398px; height: 256px;\">\r\n\r\n      <div id=\"app_git-frameMenu\" class=\"app_git-frame-container absolute selected\" style=\"background-color: rgb(225,196,151,.75); margin-top: 8px; height: 100%;\">\r\n\r\n        <div style=\"display: block; margin: 10px auto; width: 100%; background-color: rgb(255,255,255,.75);\">\r\n\r\n<div class=\"text-sm\" style=\"display: inline-block; width: 100%;\"><span>Dependencies (install):<\/span>\r\n        <div style=\"position: relative; float: right;\">\r\n          <input id=\"composerReqPkg\" type=\"text\" title=\"Enter Text and onSelect\" list=\"composerReqPkgs\" placeholder=\"\" value=\"\" onselect=\"get_package(this);\">\r\n          <datalist id=\"composerReqPkgs\">\r\n            <option value=\"\"><\/option>\r\n          <\/datalist>\r\n      <\/div>\r\n\r\n        <div style=\"clear: both;\"><\/div>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"jquery:^3.7.1\" \/><br \/>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"npm:^10.2.3\" \/><br \/><br \/>\r\nDev. Dependencies<br \/>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"@babel\/core:^7.23.2\" \/><br \/>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"@babel\/preset-env:^7.23.2\" size=\"30\" \/><br \/>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"babel-loader:^9.1.3\" \/><br \/>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"webpack:^5.89.0\" \/><br \/>\r\n<input type=\"checkbox\" \/>\r\n<input type=\"text\" value=\"webpack-cli:^5.1.4\" \/>\r\n          <\/div>\r\n\r\n        <\/div>\r\n        <div style=\"height: 35px;\"><\/div>\r\n      <\/div>\r\n\r\n      <div id=\"app_git-frameInit\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <input id=\"gitInitSubmit\" class=\"btn\" type=\"submit\" value=\"Init\/Run\">\r\n      <\/div> \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitInitLabel\" for=\"gitInit\" style=\"background-color: #6781B2; color: white;\">? <code>Init<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"gitInitForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"2\" name=\"git[init]\">git init<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n      <div id=\"app_git-frameStatus\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"display: inline-block; width: 100%; margin: -10px 0 10px 0; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: #6781B2; color: white;\">? <code>Status<\/code><\/label>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center;\">\r\n          <input id=\"gitStatusSubmit\" class=\"btn\" type=\"submit\" value=\"Status\/Run\">\r\n        <\/div> \r\n      <\/div>\r\n      <div id=\"gitStatusForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"6\" name=\"git[status]\">git status<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n      \r\n      <div id=\"app_git-frameConfig\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"position: absolute; right: 0; float: right; text-align: center;\">\r\n        <button id=\"gitConfigSubmit\" class=\"btn absolute\" style=\"position: absolute; top: 0; right: 0; z-index: 2;\" type=\"submit\" value=\"\">Modify<\/button>\r\n      <\/div> \r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: hsl(29, 100%, 42%); color: white; cursor: pointer;\">? <code>GIT_PATH\/.gitignore<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appGitIgnoreForm\" style=\"display:inline-block; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"2\" name=\"git[status]\">git status<\/textarea>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: hsl(29, 100%, 42%); color: white; cursor: pointer;\">? <code>GIT_PATH\/.gitconfig<\/code><\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"appGitConfigForm\" style=\"display: inline-block; overflow-x: hidden; overflow-y: auto; height: 180px; padding: 10px; background-color: rgb(235,216,186,.80); border: 1px dashed #0078D7;\">\r\n      <div style=\"display: none; width: 100%;\">\r\n        <input type=\"checkbox\" name=\"gitConfigList\">\r\n        <label style=\"font-style: italic;\">git config -l<\/label>\r\n        <div style=\"float: right;\">\r\n          <input type=\"checkbox\" name=\"gitIngoreFile\" 1=\"\"> <label style=\"font-style:italic;\">.gitignore<\/label>\r\n          <input type=\"checkbox\" name=\"gitConfigFile\" 1=\"\"> <label style=\"font-style:italic;\">.gitconfig<\/label>\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Name:<\/label>\r\n        \r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigName\" value=\"Barry Dick\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Email:<\/label>\r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigEmail\" value=\"barryd.it@gmail.com\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Editor (Core):<\/label>\r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigCoreEditor\" size=\"40\" value=\"\\&quot;C:\/Program Files (x86)\/Programmer's Notepad\/pn.exe\\&quot; --allowmulti -w\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Default Branch (Init)<\/label> \r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigInitDefaultBranch\" value=\"master\">\r\n        <\/div>\r\n      <\/div>\r\n      <div style=\"display: inline-block; width: 100%;\">\r\n        <label>Helper (Credential)<\/label>\r\n        <div style=\"float: right;\">\r\n          <input name=\"gitConfigCredentialHelper\" value=\"manager-core\">\r\n        <\/div>\r\n      <\/div>\r\n      <\/div>\r\n\r\n    <\/form>\r\n      <\/div>\r\n\r\n\r\n      <div id=\"app_git-frameCommit\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"display: inline-block; width: 100%; margin: -10px 0 10px 0; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color: hsl(343, 100%, 42%); color: white;\">? <code>Stage \/ Commit<\/code><\/label>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center;\">\r\n          <input id=\"gitStatusSubmit\" class=\"btn\" type=\"submit\" value=\"Status\/Run\">\r\n        <\/div> \r\n      <\/div>\r\n      <div id=\"gitStatusForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"6\" name=\"git[status]\">git commit<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n      <div id=\"app_git-frameUpdate\" class=\"app_git-frame-container absolute\" style=\"overflow: hidden; height: 270px;\">\r\n    <form autocomplete=\"off\" spellcheck=\"false\" action=\"?app=git#!\" method=\"POST\">\r\n      <div style=\"display: inline-block; width: 100%; margin: -10px 0 10px 0; background-color: rgb(225,196,151,.75);\">\r\n        <div class=\"text-sm\" style=\"display: inline;\">\r\n          <label id=\"gitStatusLabel\" for=\"gitStatus\" style=\"background-color:hsl(89, 100%, 42%); color: white;\">? <code>Update<\/code><\/label>\r\n        <\/div>\r\n        <div style=\"display: inline; float: right; text-align: center;\">\r\n          <input id=\"gitStatusSubmit\" class=\"btn\" type=\"submit\" value=\"Status\/Run\">\r\n        <\/div> \r\n      <\/div>\r\n      <div id=\"gitStatusForm\" style=\"display: inline-block; padding: 10px; background-color: rgb(225,196,151,.75);7 border: 1px dashed #0078D7;\">\r\n        <label>Git Command<\/label>\r\n        <textarea cols=\"40\" rows=\"6\" name=\"git[status]\">git update<\/textarea>\r\n      <\/div>\r\n    <\/form>\r\n      <\/div>\r\n\r\n\r\n      <\/div>\r\n    <\/div>\r\n  <\/div>\r\n<?php $app['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n\r\n<?php $app['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'npm' && APP_DEBUG) {\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\"); \r\nob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <!-- link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/-->\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app['body']; ?>\r\n\r\n  <script src=\"<?= check_http_status('https:\/\/code.jquery.com\/jquery-3.7.1.min.js') ? 'https:\/\/code.jquery.com\/jquery-3.7.1.min.js' : \"{$path}jquery-3.7.1.min.js\" ?>\"><\/script>\r\n  <!-- You need to include jQueryUI for the extended easing options. -->\r\n<?php \/* https:\/\/stackoverflow.com\/questions\/12592279\/typeerror-p-easingthis-easing-is-not-a-function *\/ ?>\r\n  <!-- script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script -->\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script> <!-- Uncaught ReferenceError: jQuery is not defined -->\r\n\r\n<script>\r\n\r\n      function makeDraggable(windowId) {\r\n        const windowElement = document.getElementById(windowId);\r\n        const headerElement = windowElement.querySelector('.ui-widget-header');\r\n      \r\n        let isDragging = false;\r\n        let offsetX, offsetY;\r\n      \r\n        headerElement.addEventListener('mousedown', function(event) {\r\n          \/\/ Bring the clicked window to the front\r\n          document.body.appendChild(windowElement);\r\n          offsetX = event.clientX - windowElement.getBoundingClientRect().left;\r\n          offsetY = event.clientY - windowElement.getBoundingClientRect().top;\r\n          isDragging = true;\r\n        });\r\n\r\n        document.addEventListener('mousemove', function(event) {\r\n          if (isDragging) {\r\n            const left = event.clientX - offsetX;\r\n            const top = event.clientY - offsetY;\r\n            \/\/windowElement.style.left = `${left}px`;\r\n            \/\/windowElement.style.top = `${top}px`;\r\n\r\n            \/\/ Boundary restrictions\r\n            const maxX = window.innerWidth - windowElement.clientWidth - 100;\r\n            const maxY = window.innerHeight - windowElement.clientHeight;\r\n\r\n            windowElement.style.left = `${Math.max(-200, Math.min(left, maxX))}px`;\r\n            windowElement.style.top = `${Math.max(0, Math.min(top, maxY))}px`;\r\n            \r\n            console.log('Left: ' + windowElement.style.left + '    Top: ' + windowElement.style.top);\r\n          }\r\n        });\r\n\r\n        document.addEventListener('mouseup', function() {\r\n          isDragging = false;\r\n        });\r\n      }\r\n\r\n      makeDraggable('app_npm-container');\r\n\r\n<?= $app['script']; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $contents = ob_get_contents(); \r\n  ob_end_clean(); \r\n  return $contents;\r\n\r\n} else {\r\n  return $app;\r\n}",
"public/ui.php.php" : "<?php\r\n\r\nif (__FILE__ == get_required_files()[0])\r\n  if ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('config.php') ? 'config.php' : '..\/config\/config.php') : '') require_once $path;\r\n  else die(var_dump(\"$path path was not found. file=config.php\"));\r\n\/*\r\nif ($path = (basename(getcwd()) == 'public')\r\n    ? (is_file('..\/console_app.php') ? '..\/console_app.php' : (is_file('..\/config\/console_app.php') ? '..\/config\/console_app.php' : 'console_app.php'))\r\n    : (is_file('console_app.php') ? 'console_app.php' : (is_file('public\/console_app.php') ? 'public\/console_app.php' : null))) require_once($path); \r\nelse die(var_dump($path . ' path was not found. file=console_app.php'));\r\n*\/\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n  if (isset($_GET['app']) && $_GET['app'] == 'php')\r\n    if (isset($_POST['path']) && isset($_GET['filename']) && $path = realpath($_POST['path'] . $_GET['filename']))\r\n      file_put_contents($path, $_POST['editor']);\r\n      \r\n  \/\/dd($_POST);\r\n\r\n\/\/  if (isset($_GET['filename'])) {\r\n\/\/    file_put_contents($projectRoot.(!$_POST['path'] ? '' : DIRECTORY_SEPARATOR.$_POST['path']).DIRECTORY_SEPARATOR.$_POST['filename'], $_POST['editor']);\r\n\/\/  }\r\n\r\n\/*\r\n    if (isset($_POST['cmd'])) {\r\n      if ($_POST['cmd'] && $_POST['cmd'] != '') \r\n        if (preg_match('\/^install\/i', $_POST['cmd']))\r\n          include('templates\/' . preg_split(\"\/^install (\\s*+)\/i\", $_POST['cmd'])[1] . '.php');\r\n        else if (preg_match('\/^php(:?(.*))\/i', $_POST['cmd'], $match))\r\n          exec($_POST['cmd'], $output);\r\n        else if (preg_match('\/^composer(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1];\r\n$proc=proc_open('env COMPOSER_ALLOW_SUPERUSER=' . COMPOSER_ALLOW_SUPERUSER . '; sudo ' . COMPOSER_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        } else if (preg_match('\/^git(:?(.*))\/i', $_POST['cmd'], $match)) {\r\n        $output[] = 'sudo ' . GIT_EXEC . ' ' . $match[1];\r\n$proc=proc_open('sudo ' . GIT_EXEC . ' ' . $match[1],\r\n  array(\r\n    array(\"pipe\",\"r\"),\r\n    array(\"pipe\",\"w\"),\r\n    array(\"pipe\",\"w\")\r\n  ),\r\n  $pipes);\r\nlist($stdout, $stderr, $exitCode) = [stream_get_contents($pipes[1]), stream_get_contents($pipes[2]), proc_close($proc)];\r\n$output[] = 'Composer: ' . (!isset($stdout) ? NULL : $stdout . (!isset($stderr) ? NULL : ' Error: ' . $stderr) . (!isset($exitCode) ? NULL : ' Exit Code: ' . $exitCode));\r\n$output[] = $_POST['cmd'];\r\n\r\n        }\r\n\r\n          \/\/exec($_POST['cmd'], $output);\r\n        else echo $_POST['cmd'] . \"\\n\";\r\n      \/\/else var_dump(NULL); \/\/ eval('echo $repo->status();')\r\n      if (!empty($output)) echo 'PHP >>> ' . join(\"\\n... <<< \", $output) . \"\\n\"; \/\/ var_dump($output);\r\n      \/\/else var_dump(get_class_methods($repo));\r\n      exit();\r\n    }\r\n*\/\r\n}\r\n\r\nob_start(); ?>\r\n\r\n\/* Styles for the absolute div *\/\r\n#app_php-container {\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 60px;\r\n\/\/bottom: 60px;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: auto;\r\nheight: 400px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\ncolor: black;\r\ntext-align: center;\r\npadding: 10px;\r\nz-index: 1;\r\n}\r\n\r\n#app_php-container.selected {\r\n  display: block;\r\n  z-index: 1;\r\n  \/* Add your desired styling for the selected container *\/\r\n  \/*\r\n  \/\/ background-color: rgb(240, 224, 198); \/\/  240, 224, 198, .75    #FBF7F1; \/\/ rgba(240, 224, 198, .25);\r\n  \r\n  bg-[#FBF7F1];\r\n  bg-opacity-75;\r\n\r\n  font-weight: bold;\r\n  #top { background-color: rgba(240, 224, 198, .75); }\r\n  *\/\r\n}\r\n\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\n#ace-editor {\r\n  margin: 0;\r\n  position: relative;\r\n  resize: both;\r\n  overflow: auto;\r\n  white-space: pre-wrap;\r\n  \/\/width: 100%;\r\n  \/\/height: 100%;\r\n}\r\n\r\n<?php $app['style'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); \r\n\r\ndefine('PHP_LATEST', 'PHP_VERSION');\r\n?>\r\n\r\n<!-- <div class=\"container\" style=\"border: 1px solid #000;\"> -->\r\n  <div id=\"app_php-container\" class=\"absolute <?= (__FILE__ ==  get_required_files()[0] || isset($_GET['app']) && $_GET['app'] == 'php' ? 'selected' : (version_compare(PHP_LATEST, PHP_VERSION, '>') != 0 ? (isset($_GET['app']) && $_GET['app'] != 'php' ? '' : '') :  '')) ?>\" style=\"border: 1px solid #000; width: 400px;\">\r\n    <div class=\"header ui-widget-header\">\r\n      <div style=\"display: inline-block;\">PHP <?= 'v' . PHP_VERSION; ?> Configuration\/Settings<\/div>\r\n      <div style=\"display: inline; float: right; text-align: center;\">[<a style=\"cursor: pointer; font-size: 13px;\" onclick=\"document.getElementById('app_php-container').style.display='none';\">X<\/a>]<\/div> \r\n    <\/div>\r\n\r\n    <div class=\" ui-widget-content\" style=\"display: inline-block; width: auto; padding-left: 10px;\">\r\n\r\n      <form style=\"display: inline;\" action=\"<?= APP_URL_BASE . \/*basename(APP_SELF) .*\/ '?' . http_build_query(APP_QUERY + array( 'app' => 'php')) . (defined('APP_ENV') && APP_ENV == 'development' ? '#!' : '') \/*  $c_or_p . '=' . (empty($_GET[$c_or_p]) ? '' : $$c_or_p->name) . '&amp;app=composer' *\/ ?>\" method=\"GET\">\r\n\r\n      <div>\r\n        <div style=\"display: inline; width: 46%;\">\r\n          <input type=\"hidden\" name=\"app\" value=\"php\" \/>\r\n          <?php if (isset($_GET['debug'])) { ?> <input type=\"hidden\" name=\"debug\" value=\"\" \/> <?php } ?>\r\n          <select name=\"const\" onchange=\"this.form.submit()\">\r\n<?php foreach(get_defined_constants(true)['user'] as $key => $user_const) { ?>\r\n            <option <?= (isset($_GET['const']) && $_GET['const'] == $key ? ' selected' : '' )?>><?= $key; ?><\/option>\r\n<?php } ?>\r\n          <\/select>\r\n        <\/div>\r\n        <div style=\"background-color: #000; color: #000;\"><textarea rows=\"10\" cols=\"40\"><?= (isset($_GET['const']) ? var_dump(htmlsanitize(constant($_GET['const']))) : '') ?><\/textarea><\/div>\r\n      <\/div>\r\n\r\n      <\/form>\r\n      \r\n      <!-- <pre id=\"ace-editor\" class=\"ace_editor\"><\/pre> -->\r\n\r\n  <\/div>\r\n<!-- <\/div> -->\r\n<\/div>\r\n\r\n\r\n<?php $app['body'] = ob_get_contents();\r\nob_end_clean();\r\n\r\nob_start(); ?>\r\n\r\n<?php \/\/if (isset($_GET['client']) && $_GET['client'] != '') { \r\n\/\/if (isset($_GET['domain']) && $_GET['domain'] != '') {\r\n?>\r\n\/*\r\nace.require(\"ace\/ext\/language_tools\");\r\nvar editor = ace.edit(\"ace-editor\");\r\neditor.setTheme(\"ace\/theme\/dracula\");\r\n\r\n\/\/var JavaScriptMode = ace.require(\"ace\/mode\/javascript\").Mode;\r\neditor.session.setMode(\"ace\/mode\/php\");\r\neditor.setAutoScrollEditorIntoView(true);\r\neditor.setShowPrintMargin(false);\r\neditor.setOptions({\r\n    \/\/  resize: \"both\"\r\n  enableBasicAutocompletion: true,\r\n  enableLiveAutocompletion: true,\r\n  enableSnippets: true\r\n});\r\n*\/\r\n<?php \/\/} } ?>\r\n\r\n$(document).ready(function() {});\r\n<?php $app['script'] = ob_get_contents();\r\nob_end_clean();\r\n\r\n\/\/check if file is included or accessed directly\r\nif (__FILE__ == get_required_files()[0] || in_array(__FILE__, get_required_files()) && isset($_GET['app']) && $_GET['app'] == 'php' && APP_DEBUG) {\r\n\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\r\nheader(\"Pragma: no-cache\"); \r\n\r\n  ob_start(); ?>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n  <link rel=\"stylesheet\" href=\"\/\/code.jquery.com\/ui\/1.12.1\/themes\/smoothness\/jquery-ui.css\" \/>\r\n\r\n<?php\r\n\/\/ (check_http_status('https:\/\/cdn.tailwindcss.com') ? 'https:\/\/cdn.tailwindcss.com' : APP_WWW . 'resources\/js\/tailwindcss-3.3.5.js')?\r\nis_dir($path = APP_PATH . APP_BASE['resources'] . 'js\/') or mkdir($path, 0755, true);\r\nif (is_file($path . 'tailwindcss-3.3.5.js')) {\r\n  if (ceil(abs((strtotime(date('Y-m-d')) - strtotime(date('Y-m-d',strtotime('+5 days',filemtime($path . 'tailwindcss-3.3.5.js'))))) \/ 86400)) <= 0 ) {\r\n    $url = 'https:\/\/cdn.tailwindcss.com';\r\n    $handle = curl_init($url);\r\n    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n    if (!empty($js = curl_exec($handle))) \r\n      file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n  }\r\n} else {\r\n  $url = 'https:\/\/cdn.tailwindcss.com';\r\n  $handle = curl_init($url);\r\n  curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);\r\n\r\n  if (!empty($js = curl_exec($handle))) \r\n    file_put_contents($path . 'tailwindcss-3.3.5.js', $js) or $errors['JS-TAILWIND'] = $url . ' returned empty.';\r\n}\r\nunset($path);\r\n?>\r\n\r\n  <script src=\"<?= 'resources\/js\/tailwindcss-3.3.5.js' ?? $url ?>\"><\/script>\r\n\r\n<style type=\"text\/tailwindcss\">\r\n<?= $app['style']; ?>\r\n<\/style>\r\n<\/head>\r\n<body>\r\n<?= $app['body']; ?>\r\n\r\n  <script src=\"..\/..\/resources\/js\/ace\/ace.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n<!--  <script src=\"resources\/js\/ace\/ext-language_tools.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script> -->\r\n  <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/ace\/1.4.12\/ext-language_tools.js\"><\/script>\r\n\r\n  <script src=\"..\/..\/resources\/js\/ace\/mode-php.js\" type=\"text\/javascript\" charset=\"utf-8\"><\/script>\r\n  <!-- https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js -->\r\n  <script src=\"\/\/code.jquery.com\/jquery-1.12.4.js\"><\/script>\r\n  <script src=\"\/\/code.jquery.com\/ui\/1.12.1\/jquery-ui.js\"><\/script>\r\n  <!-- <script src=\"..\/resources\/js\/jquery\/jquery.min.js\"><\/script> -->\r\n<script>\r\n<?= \/*$app['script'];*\/ NULL; ?>\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n<?php $buffer_contents = ob_get_contents();\r\n  ob_end_clean();\r\n  return $buffer_contents; \r\n\r\n} else {\r\n  return $app;\r\n}",
"vendor/autoload.php" : "<?php\n\n\/\/ autoload.php @generated by Composer\n\nif (PHP_VERSION_ID < 50600) {\n    if (!headers_sent()) {\n        header('HTTP\/1.1 500 Internal Server Error');\n    }\n    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via \"composer self-update --2.2\". Aborting.'.PHP_EOL;\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, $err);\n        } elseif (!headers_sent()) {\n            echo $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '\/composer\/autoload_real.php';\n\nreturn ComposerAutoloaderInit27c4d08908fb22c5af6e5d9111745eec::getLoader();\n",
"vendor/composer/ClassLoader.php" : "<?php\n\n\/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Composer\\Autoload;\n\n\/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     \/\/ register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'\/component');\n *     $loader->add('Symfony',           __DIR__.'\/framework');\n *\n *     \/\/ activate the autoloader\n *     $loader->register();\n *\n *     \/\/ to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component\/\n * directory, and it will then fallback to the framework\/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https:\/\/www.php-fig.org\/psr\/psr-0\/\n * @see    https:\/\/www.php-fig.org\/psr\/psr-4\/\n *\/\nclass ClassLoader\n{\n    \/** @var \\Closure(string):void *\/\n    private static $includeFile;\n\n    \/** @var string|null *\/\n    private $vendorDir;\n\n    \/\/ PSR-4\n    \/**\n     * @var array<string, array<string, int>>\n     *\/\n    private $prefixLengthsPsr4 = array();\n    \/**\n     * @var array<string, list<string>>\n     *\/\n    private $prefixDirsPsr4 = array();\n    \/**\n     * @var list<string>\n     *\/\n    private $fallbackDirsPsr4 = array();\n\n    \/\/ PSR-0\n    \/**\n     * List of PSR-0 prefixes\n     *\n     * Structured as array('F (first letter)' => array('Foo\\Bar (full prefix)' => array('path', 'path2')))\n     *\n     * @var array<string, array<string, list<string>>>\n     *\/\n    private $prefixesPsr0 = array();\n    \/**\n     * @var list<string>\n     *\/\n    private $fallbackDirsPsr0 = array();\n\n    \/** @var bool *\/\n    private $useIncludePath = false;\n\n    \/**\n     * @var array<string, string>\n     *\/\n    private $classMap = array();\n\n    \/** @var bool *\/\n    private $classMapAuthoritative = false;\n\n    \/**\n     * @var array<string, bool>\n     *\/\n    private $missingClasses = array();\n\n    \/** @var string|null *\/\n    private $apcuPrefix;\n\n    \/**\n     * @var array<string, self>\n     *\/\n    private static $registeredLoaders = array();\n\n    \/**\n     * @param string|null $vendorDir\n     *\/\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n        self::initializeIncludeClosure();\n    }\n\n    \/**\n     * @return array<string, list<string>>\n     *\/\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    \/**\n     * @return array<string, list<string>>\n     *\/\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    \/**\n     * @return list<string>\n     *\/\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    \/**\n     * @return list<string>\n     *\/\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    \/**\n     * @return array<string, string> Array of classname => path\n     *\/\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    \/**\n     * @param array<string, string> $classMap Class to filename map\n     *\n     * @return void\n     *\/\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string              $prefix  The prefix\n     * @param list<string>|string $paths   The PSR-0 root directories\n     * @param bool                $prepend Whether to prepend the directories\n     *\n     * @return void\n     *\/\n    public function add($prefix, $paths, $prepend = false)\n    {\n        $paths = (array) $paths;\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                $paths\n            );\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string              $prefix  The prefix\/namespace, with trailing '\\\\'\n     * @param list<string>|string $paths   The PSR-4 base directories\n     * @param bool                $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     *\/\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        $paths = (array) $paths;\n        if (!$prefix) {\n            \/\/ Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            \/\/ Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = $paths;\n        } elseif ($prepend) {\n            \/\/ Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            \/\/ Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                $paths\n            );\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string              $prefix The prefix\n     * @param list<string>|string $paths  The PSR-0 base directories\n     *\n     * @return void\n     *\/\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string              $prefix The prefix\/namespace, with trailing '\\\\'\n     * @param list<string>|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     *\/\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    \/**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     *\n     * @return void\n     *\/\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    \/**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     *\/\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    \/**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     *\n     * @return void\n     *\/\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    \/**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     *\/\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    \/**\n     * APCu prefix to use to cache found\/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     *\n     * @return void\n     *\/\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    \/**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     *\/\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    \/**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     *\n     * @return void\n     *\/\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            return;\n        }\n\n        if ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    \/**\n     * Unregisters this instance as an autoloader.\n     *\n     * @return void\n     *\/\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    \/**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return true|null True if loaded, null otherwise\n     *\/\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            $includeFile = self::$includeFile;\n            $includeFile($file);\n\n            return true;\n        }\n\n        return null;\n    }\n\n    \/**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     *\/\n    public function findFile($class)\n    {\n        \/\/ class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        \/\/ Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            \/\/ Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    \/**\n     * Returns the currently registered loaders keyed by their corresponding vendor directories.\n     *\n     * @return array<string, self>\n     *\/\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    \/**\n     * @param  string       $class\n     * @param  string       $ext\n     * @return string|false\n     *\/\n    private function findFileWithExtension($class, $ext)\n    {\n        \/\/ PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        \/\/ PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        \/\/ PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            \/\/ namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            \/\/ PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        \/\/ PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        \/\/ PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n\n    \/**\n     * @return void\n     *\/\n    private static function initializeIncludeClosure()\n    {\n        if (self::$includeFile !== null) {\n            return;\n        }\n\n        \/**\n         * Scope isolated include.\n         *\n         * Prevents access to $this\/self from included files.\n         *\n         * @param  string $file\n         * @return void\n         *\/\n        self::$includeFile = \\Closure::bind(static function($file) {\n            include $file;\n        }, null, null);\n    }\n}\n",
"vendor/composer/InstalledVersions.php" : "<?php\n\n\/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n\/**\n * This class is copied in every Composer installed project and available to all\n *\n * See also https:\/\/getcomposer.org\/doc\/07-runtime.md#installed-versions\n *\n * To require its presence, you can require `composer-runtime-api ^2.0`\n *\n * @final\n *\/\nclass InstalledVersions\n{\n    \/**\n     * @var mixed[]|null\n     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null\n     *\/\n    private static $installed;\n\n    \/**\n     * @var bool|null\n     *\/\n    private static $canGetVendors;\n\n    \/**\n     * @var array[]\n     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    private static $installedByVendor = array();\n\n    \/**\n     * Returns a list of all package names which are present, either by being installed, replaced or provided\n     *\n     * @return string[]\n     * @psalm-return list<string>\n     *\/\n    public static function getInstalledPackages()\n    {\n        $packages = array();\n        foreach (self::getInstalled() as $installed) {\n            $packages[] = array_keys($installed['versions']);\n        }\n\n        if (1 === \\count($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    \/**\n     * Returns a list of all package names with a specific type e.g. 'library'\n     *\n     * @param  string   $type\n     * @return string[]\n     * @psalm-return list<string>\n     *\/\n    public static function getInstalledPackagesByType($type)\n    {\n        $packagesByType = array();\n\n        foreach (self::getInstalled() as $installed) {\n            foreach ($installed['versions'] as $name => $package) {\n                if (isset($package['type']) && $package['type'] === $type) {\n                    $packagesByType[] = $name;\n                }\n            }\n        }\n\n        return $packagesByType;\n    }\n\n    \/**\n     * Checks whether the given package is installed\n     *\n     * This also returns true if the package name is provided or replaced by another package\n     *\n     * @param  string $packageName\n     * @param  bool   $includeDevRequirements\n     * @return bool\n     *\/\n    public static function isInstalled($packageName, $includeDevRequirements = true)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (isset($installed['versions'][$packageName])) {\n                return $includeDevRequirements || !isset($installed['versions'][$packageName]['dev_requirement']) || $installed['versions'][$packageName]['dev_requirement'] === false;\n            }\n        }\n\n        return false;\n    }\n\n    \/**\n     * Checks whether the given package satisfies a version constraint\n     *\n     * e.g. If you want to know whether version 2.3+ of package foo\/bar is installed, you would call:\n     *\n     *   Composer\\InstalledVersions::satisfies(new VersionParser, 'foo\/bar', '^2.3')\n     *\n     * @param  VersionParser $parser      Install composer\/semver to have access to this class and functionality\n     * @param  string        $packageName\n     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer\/semver is required by your package\n     * @return bool\n     *\/\n    public static function satisfies(VersionParser $parser, $packageName, $constraint)\n    {\n        $constraint = $parser->parseConstraints((string) $constraint);\n        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\n        return $provided->matches($constraint);\n    }\n\n    \/**\n     * Returns a version constraint representing all the range(s) which are installed for a given package\n     *\n     * It is easier to use this via isInstalled() with the $constraint argument if you need to check\n     * whether a given version of a package is installed, and not just whether it exists\n     *\n     * @param  string $packageName\n     * @return string Version constraint usable with composer\/semver\n     *\/\n    public static function getVersionRanges($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            $ranges = array();\n            if (isset($installed['versions'][$packageName]['pretty_version'])) {\n                $ranges[] = $installed['versions'][$packageName]['pretty_version'];\n            }\n            if (array_key_exists('aliases', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n            }\n            if (array_key_exists('replaced', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n            }\n            if (array_key_exists('provided', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n            }\n\n            return implode(' || ', $ranges);\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     *\/\n    public static function getVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     *\/\n    public static function getPrettyVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['pretty_version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['pretty_version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference\n     *\/\n    public static function getReference($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['reference'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['reference'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.\n     *\/\n    public static function getInstallPath($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @return array\n     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}\n     *\/\n    public static function getRootPackage()\n    {\n        $installed = self::getInstalled();\n\n        return $installed[0]['root'];\n    }\n\n    \/**\n     * Returns the raw installed.php data for custom implementations\n     *\n     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.\n     * @return array[]\n     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}\n     *\/\n    public static function getRawData()\n    {\n        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);\n\n        if (null === self::$installed) {\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '\/installed.php';\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        return self::$installed;\n    }\n\n    \/**\n     * Returns the raw data of all installed.php which are currently loaded for custom implementations\n     *\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    public static function getAllRawData()\n    {\n        return self::getInstalled();\n    }\n\n    \/**\n     * Lets you reload the static array from another file\n     *\n     * This is only useful for complex integrations in which a project needs to use\n     * this class but then also needs to execute another project's autoloader in process,\n     * and wants to ensure both projects have access to their version of installed.php.\n     *\n     * A typical case would be PHPUnit, where it would need to make sure it reads all\n     * the data it needs from this class, then call reload() with\n     * `require $CWD\/vendor\/composer\/installed.php` (or similar) as input to make sure\n     * the project in which it runs can then also use this class safely, without\n     * interference between PHPUnit's dependencies and the project's dependencies.\n     *\n     * @param  array[] $data A vendor\/composer\/installed.php data set\n     * @return void\n     *\n     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data\n     *\/\n    public static function reload($data)\n    {\n        self::$installed = $data;\n        self::$installedByVendor = array();\n    }\n\n    \/**\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    private static function getInstalled()\n    {\n        if (null === self::$canGetVendors) {\n            self::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n        }\n\n        $installed = array();\n\n        if (self::$canGetVendors) {\n            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\n                if (isset(self::$installedByVendor[$vendorDir])) {\n                    $installed[] = self::$installedByVendor[$vendorDir];\n                } elseif (is_file($vendorDir.'\/composer\/installed.php')) {\n                    \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\n                    $required = require $vendorDir.'\/composer\/installed.php';\n                    $installed[] = self::$installedByVendor[$vendorDir] = $required;\n                    if (null === self::$installed && strtr($vendorDir.'\/composer', '\\\\', '\/') === strtr(__DIR__, '\\\\', '\/')) {\n                        self::$installed = $installed[count($installed) - 1];\n                    }\n                }\n            }\n        }\n\n        if (null === self::$installed) {\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\n                $required = require __DIR__ . '\/installed.php';\n                self::$installed = $required;\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        if (self::$installed !== array()) {\n            $installed[] = self::$installed;\n        }\n\n        return $installed;\n    }\n}\n",
"vendor/composer/autoload_classmap.php" : "<?php\n\n\/\/ autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Attribute' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/Attribute.php',\n    'Composer\\\\InstalledVersions' => $vendorDir . '\/composer\/InstalledVersions.php',\n    'JsonException' => $vendorDir . '\/symfony\/polyfill-php73\/Resources\/stubs\/JsonException.php',\n    'Normalizer' => $vendorDir . '\/symfony\/polyfill-intl-normalizer\/Resources\/stubs\/Normalizer.php',\n    'PhpToken' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/PhpToken.php',\n    'Stringable' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/Stringable.php',\n    'UnhandledMatchError' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/UnhandledMatchError.php',\n    'ValueError' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/ValueError.php',\n);\n",
"vendor/composer/autoload_files.php" : "<?php\n\n\/\/ autoload_files.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    '6e3fae29631ef280660b3cdad06f25a8' => $vendorDir . '\/symfony\/deprecation-contracts\/function.php',\n    'a4a119a56e50fbb293281d9a48007e0e' => $vendorDir . '\/symfony\/polyfill-php80\/bootstrap.php',\n    '0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => $vendorDir . '\/symfony\/polyfill-mbstring\/bootstrap.php',\n    '320cde22f66dd4f5d3fd621d3e88b98f' => $vendorDir . '\/symfony\/polyfill-ctype\/bootstrap.php',\n    '7b11c4dc42b3b3023073cb14e519683c' => $vendorDir . '\/ralouphie\/getallheaders\/src\/getallheaders.php',\n    '8825ede83f2f289127722d4e842cf7e8' => $vendorDir . '\/symfony\/polyfill-intl-grapheme\/bootstrap.php',\n    'e69f7f6ee287b969198c3c9d6777bd38' => $vendorDir . '\/symfony\/polyfill-intl-normalizer\/bootstrap.php',\n    'b45b351e6b6f7487d819961fef2fda77' => $vendorDir . '\/jakeasmith\/http_build_url\/src\/http_build_url.php',\n    '0d59ee240a4cd96ddbb4ff164fccea4d' => $vendorDir . '\/symfony\/polyfill-php73\/bootstrap.php',\n    'b6b991a57620e2fb6b2f66f03fe9ddc2' => $vendorDir . '\/symfony\/string\/Resources\/functions.php',\n    '37a3dc5111fe8f707ab4c132ef1dbc62' => $vendorDir . '\/guzzlehttp\/guzzle\/src\/functions_include.php',\n    'c9d07b32a2e02bc0fc582d4f0c1b56cc' => $vendorDir . '\/laminas\/laminas-servicemanager\/src\/autoload.php',\n);\n",
"vendor/composer/autoload_namespaces.php" : "<?php\n\n\/\/ autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n",
"vendor/composer/autoload_psr4.php" : "<?php\n\n\/\/ autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'phpWhois\\\\' => array($vendorDir . '\/kevinoo\/phpwhois\/src'),\n    'noximo\\\\PHPColoredAsciiLinechart\\\\' => array($vendorDir . '\/noximo\/php-colored-ascii-linechart\/src'),\n    'ipinfo\\\\ipinfo\\\\' => array($vendorDir . '\/ipinfo\/ipinfo\/src'),\n    'Symfony\\\\Polyfill\\\\Php80\\\\' => array($vendorDir . '\/symfony\/polyfill-php80'),\n    'Symfony\\\\Polyfill\\\\Php73\\\\' => array($vendorDir . '\/symfony\/polyfill-php73'),\n    'Symfony\\\\Polyfill\\\\Mbstring\\\\' => array($vendorDir . '\/symfony\/polyfill-mbstring'),\n    'Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\' => array($vendorDir . '\/symfony\/polyfill-intl-normalizer'),\n    'Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\' => array($vendorDir . '\/symfony\/polyfill-intl-grapheme'),\n    'Symfony\\\\Polyfill\\\\Ctype\\\\' => array($vendorDir . '\/symfony\/polyfill-ctype'),\n    'Symfony\\\\Contracts\\\\Service\\\\' => array($vendorDir . '\/symfony\/service-contracts'),\n    'Symfony\\\\Component\\\\String\\\\' => array($vendorDir . '\/symfony\/string'),\n    'Symfony\\\\Component\\\\Process\\\\' => array($vendorDir . '\/symfony\/process'),\n    'Symfony\\\\Component\\\\Finder\\\\' => array($vendorDir . '\/symfony\/finder'),\n    'Symfony\\\\Component\\\\Filesystem\\\\' => array($vendorDir . '\/symfony\/filesystem'),\n    'Symfony\\\\Component\\\\Console\\\\' => array($vendorDir . '\/symfony\/console'),\n    'Seld\\\\PharUtils\\\\' => array($vendorDir . '\/seld\/phar-utils\/src'),\n    'Seld\\\\JsonLint\\\\' => array($vendorDir . '\/seld\/jsonlint\/src\/Seld\/JsonLint'),\n    'Sabre\\\\Cache\\\\' => array($vendorDir . '\/sabre\/cache\/lib'),\n    'Psr\\\\SimpleCache\\\\' => array($vendorDir . '\/psr\/simple-cache\/src'),\n    'Psr\\\\Log\\\\' => array($vendorDir . '\/psr\/log\/Psr\/Log'),\n    'Psr\\\\Http\\\\Message\\\\' => array($vendorDir . '\/psr\/http-factory\/src', $vendorDir . '\/psr\/http-message\/src'),\n    'Psr\\\\Http\\\\Client\\\\' => array($vendorDir . '\/psr\/http-client\/src'),\n    'Psr\\\\Container\\\\' => array($vendorDir . '\/psr\/container\/src'),\n    'PhpOption\\\\' => array($vendorDir . '\/phpoption\/phpoption\/src\/PhpOption'),\n    'Pds\\\\Skeleton\\\\' => array($vendorDir . '\/pds\/skeleton\/src'),\n    'Laminas\\\\Stdlib\\\\' => array($vendorDir . '\/laminas\/laminas-stdlib\/src'),\n    'Laminas\\\\Session\\\\' => array($vendorDir . '\/laminas\/laminas-session\/src'),\n    'Laminas\\\\ServiceManager\\\\' => array($vendorDir . '\/laminas\/laminas-servicemanager\/src'),\n    'Laminas\\\\EventManager\\\\' => array($vendorDir . '\/laminas\/laminas-eventmanager\/src'),\n    'JsonSchema\\\\' => array($vendorDir . '\/justinrainbow\/json-schema\/src\/JsonSchema'),\n    'GuzzleHttp\\\\Psr7\\\\' => array($vendorDir . '\/guzzlehttp\/psr7\/src'),\n    'GuzzleHttp\\\\Promise\\\\' => array($vendorDir . '\/guzzlehttp\/promises\/src'),\n    'GuzzleHttp\\\\' => array($vendorDir . '\/guzzlehttp\/guzzle\/src'),\n    'GrahamCampbell\\\\ResultType\\\\' => array($vendorDir . '\/graham-campbell\/result-type\/src'),\n    'Dotenv\\\\' => array($vendorDir . '\/vlucas\/phpdotenv\/src'),\n    'Composer\\\\XdebugHandler\\\\' => array($vendorDir . '\/composer\/xdebug-handler\/src'),\n    'Composer\\\\Spdx\\\\' => array($vendorDir . '\/composer\/spdx-licenses\/src'),\n    'Composer\\\\Semver\\\\' => array($vendorDir . '\/composer\/semver\/src'),\n    'Composer\\\\CaBundle\\\\' => array($vendorDir . '\/composer\/ca-bundle\/src'),\n    'Composer\\\\' => array($vendorDir . '\/composer\/composer\/src\/Composer'),\n    'Aura\\\\Session\\\\' => array($vendorDir . '\/aura\/session\/src'),\n    'Algo26\\\\IdnaConvert\\\\' => array($vendorDir . '\/algo26-matthias\/idna-convert\/src'),\n);\n",
"vendor/composer/autoload_real.php" : "<?php\n\n\/\/ autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInit27c4d08908fb22c5af6e5d9111745eec\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '\/ClassLoader.php';\n        }\n    }\n\n    \/**\n     * @return \\Composer\\Autoload\\ClassLoader\n     *\/\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        spl_autoload_register(array('ComposerAutoloaderInit27c4d08908fb22c5af6e5d9111745eec', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(__DIR__));\n        spl_autoload_unregister(array('ComposerAutoloaderInit27c4d08908fb22c5af6e5d9111745eec', 'loadClassLoader'));\n\n        require __DIR__ . '\/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInit27c4d08908fb22c5af6e5d9111745eec::getInitializer($loader));\n\n        $loader->register(true);\n\n        $filesToLoad = \\Composer\\Autoload\\ComposerStaticInit27c4d08908fb22c5af6e5d9111745eec::$files;\n        $requireFile = \\Closure::bind(static function ($fileIdentifier, $file) {\n            if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {\n                $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;\n\n                require $file;\n            }\n        }, null, null);\n        foreach ($filesToLoad as $fileIdentifier => $file) {\n            $requireFile($fileIdentifier, $file);\n        }\n\n        return $loader;\n    }\n}\n",
"vendor/composer/autoload_static.php" : "<?php\n\n\/\/ autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInit27c4d08908fb22c5af6e5d9111745eec\n{\n    public static $files = array (\n        '6e3fae29631ef280660b3cdad06f25a8' => __DIR__ . '\/..' . '\/symfony\/deprecation-contracts\/function.php',\n        'a4a119a56e50fbb293281d9a48007e0e' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/bootstrap.php',\n        '0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => __DIR__ . '\/..' . '\/symfony\/polyfill-mbstring\/bootstrap.php',\n        '320cde22f66dd4f5d3fd621d3e88b98f' => __DIR__ . '\/..' . '\/symfony\/polyfill-ctype\/bootstrap.php',\n        '7b11c4dc42b3b3023073cb14e519683c' => __DIR__ . '\/..' . '\/ralouphie\/getallheaders\/src\/getallheaders.php',\n        '8825ede83f2f289127722d4e842cf7e8' => __DIR__ . '\/..' . '\/symfony\/polyfill-intl-grapheme\/bootstrap.php',\n        'e69f7f6ee287b969198c3c9d6777bd38' => __DIR__ . '\/..' . '\/symfony\/polyfill-intl-normalizer\/bootstrap.php',\n        'b45b351e6b6f7487d819961fef2fda77' => __DIR__ . '\/..' . '\/jakeasmith\/http_build_url\/src\/http_build_url.php',\n        '0d59ee240a4cd96ddbb4ff164fccea4d' => __DIR__ . '\/..' . '\/symfony\/polyfill-php73\/bootstrap.php',\n        'b6b991a57620e2fb6b2f66f03fe9ddc2' => __DIR__ . '\/..' . '\/symfony\/string\/Resources\/functions.php',\n        '37a3dc5111fe8f707ab4c132ef1dbc62' => __DIR__ . '\/..' . '\/guzzlehttp\/guzzle\/src\/functions_include.php',\n        'c9d07b32a2e02bc0fc582d4f0c1b56cc' => __DIR__ . '\/..' . '\/laminas\/laminas-servicemanager\/src\/autoload.php',\n    );\n\n    public static $prefixLengthsPsr4 = array (\n        'p' => \n        array (\n            'phpWhois\\\\' => 9,\n        ),\n        'n' => \n        array (\n            'noximo\\\\PHPColoredAsciiLinechart\\\\' => 32,\n        ),\n        'i' => \n        array (\n            'ipinfo\\\\ipinfo\\\\' => 14,\n        ),\n        'S' => \n        array (\n            'Symfony\\\\Polyfill\\\\Php80\\\\' => 23,\n            'Symfony\\\\Polyfill\\\\Php73\\\\' => 23,\n            'Symfony\\\\Polyfill\\\\Mbstring\\\\' => 26,\n            'Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\' => 33,\n            'Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\' => 31,\n            'Symfony\\\\Polyfill\\\\Ctype\\\\' => 23,\n            'Symfony\\\\Contracts\\\\Service\\\\' => 26,\n            'Symfony\\\\Component\\\\String\\\\' => 25,\n            'Symfony\\\\Component\\\\Process\\\\' => 26,\n            'Symfony\\\\Component\\\\Finder\\\\' => 25,\n            'Symfony\\\\Component\\\\Filesystem\\\\' => 29,\n            'Symfony\\\\Component\\\\Console\\\\' => 26,\n            'Seld\\\\PharUtils\\\\' => 15,\n            'Seld\\\\JsonLint\\\\' => 14,\n            'Sabre\\\\Cache\\\\' => 12,\n        ),\n        'P' => \n        array (\n            'Psr\\\\SimpleCache\\\\' => 16,\n            'Psr\\\\Log\\\\' => 8,\n            'Psr\\\\Http\\\\Message\\\\' => 17,\n            'Psr\\\\Http\\\\Client\\\\' => 16,\n            'Psr\\\\Container\\\\' => 14,\n            'PhpOption\\\\' => 10,\n            'Pds\\\\Skeleton\\\\' => 13,\n        ),\n        'L' => \n        array (\n            'Laminas\\\\Stdlib\\\\' => 15,\n            'Laminas\\\\Session\\\\' => 16,\n            'Laminas\\\\ServiceManager\\\\' => 23,\n            'Laminas\\\\EventManager\\\\' => 21,\n        ),\n        'J' => \n        array (\n            'JsonSchema\\\\' => 11,\n        ),\n        'G' => \n        array (\n            'GuzzleHttp\\\\Psr7\\\\' => 16,\n            'GuzzleHttp\\\\Promise\\\\' => 19,\n            'GuzzleHttp\\\\' => 11,\n            'GrahamCampbell\\\\ResultType\\\\' => 26,\n        ),\n        'D' => \n        array (\n            'Dotenv\\\\' => 7,\n        ),\n        'C' => \n        array (\n            'Composer\\\\XdebugHandler\\\\' => 23,\n            'Composer\\\\Spdx\\\\' => 14,\n            'Composer\\\\Semver\\\\' => 16,\n            'Composer\\\\CaBundle\\\\' => 18,\n            'Composer\\\\' => 9,\n        ),\n        'A' => \n        array (\n            'Aura\\\\Session\\\\' => 13,\n            'Algo26\\\\IdnaConvert\\\\' => 19,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'phpWhois\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/kevinoo\/phpwhois\/src',\n        ),\n        'noximo\\\\PHPColoredAsciiLinechart\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/noximo\/php-colored-ascii-linechart\/src',\n        ),\n        'ipinfo\\\\ipinfo\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/ipinfo\/ipinfo\/src',\n        ),\n        'Symfony\\\\Polyfill\\\\Php80\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-php80',\n        ),\n        'Symfony\\\\Polyfill\\\\Php73\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-php73',\n        ),\n        'Symfony\\\\Polyfill\\\\Mbstring\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-mbstring',\n        ),\n        'Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-intl-normalizer',\n        ),\n        'Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-intl-grapheme',\n        ),\n        'Symfony\\\\Polyfill\\\\Ctype\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-ctype',\n        ),\n        'Symfony\\\\Contracts\\\\Service\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/service-contracts',\n        ),\n        'Symfony\\\\Component\\\\String\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/string',\n        ),\n        'Symfony\\\\Component\\\\Process\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/process',\n        ),\n        'Symfony\\\\Component\\\\Finder\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/finder',\n        ),\n        'Symfony\\\\Component\\\\Filesystem\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/filesystem',\n        ),\n        'Symfony\\\\Component\\\\Console\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/symfony\/console',\n        ),\n        'Seld\\\\PharUtils\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/seld\/phar-utils\/src',\n        ),\n        'Seld\\\\JsonLint\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/seld\/jsonlint\/src\/Seld\/JsonLint',\n        ),\n        'Sabre\\\\Cache\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/sabre\/cache\/lib',\n        ),\n        'Psr\\\\SimpleCache\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/psr\/simple-cache\/src',\n        ),\n        'Psr\\\\Log\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/psr\/log\/Psr\/Log',\n        ),\n        'Psr\\\\Http\\\\Message\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/psr\/http-factory\/src',\n            1 => __DIR__ . '\/..' . '\/psr\/http-message\/src',\n        ),\n        'Psr\\\\Http\\\\Client\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/psr\/http-client\/src',\n        ),\n        'Psr\\\\Container\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/psr\/container\/src',\n        ),\n        'PhpOption\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/phpoption\/phpoption\/src\/PhpOption',\n        ),\n        'Pds\\\\Skeleton\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/pds\/skeleton\/src',\n        ),\n        'Laminas\\\\Stdlib\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/laminas\/laminas-stdlib\/src',\n        ),\n        'Laminas\\\\Session\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/laminas\/laminas-session\/src',\n        ),\n        'Laminas\\\\ServiceManager\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/laminas\/laminas-servicemanager\/src',\n        ),\n        'Laminas\\\\EventManager\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/laminas\/laminas-eventmanager\/src',\n        ),\n        'JsonSchema\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/justinrainbow\/json-schema\/src\/JsonSchema',\n        ),\n        'GuzzleHttp\\\\Psr7\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/guzzlehttp\/psr7\/src',\n        ),\n        'GuzzleHttp\\\\Promise\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/guzzlehttp\/promises\/src',\n        ),\n        'GuzzleHttp\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/guzzlehttp\/guzzle\/src',\n        ),\n        'GrahamCampbell\\\\ResultType\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/graham-campbell\/result-type\/src',\n        ),\n        'Dotenv\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/vlucas\/phpdotenv\/src',\n        ),\n        'Composer\\\\XdebugHandler\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/composer\/xdebug-handler\/src',\n        ),\n        'Composer\\\\Spdx\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/composer\/spdx-licenses\/src',\n        ),\n        'Composer\\\\Semver\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/composer\/semver\/src',\n        ),\n        'Composer\\\\CaBundle\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/composer\/ca-bundle\/src',\n        ),\n        'Composer\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/composer\/composer\/src\/Composer',\n        ),\n        'Aura\\\\Session\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/aura\/session\/src',\n        ),\n        'Algo26\\\\IdnaConvert\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/algo26-matthias\/idna-convert\/src',\n        ),\n    );\n\n    public static $classMap = array (\n        'Attribute' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/Attribute.php',\n        'Composer\\\\InstalledVersions' => __DIR__ . '\/..' . '\/composer\/InstalledVersions.php',\n        'JsonException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php73\/Resources\/stubs\/JsonException.php',\n        'Normalizer' => __DIR__ . '\/..' . '\/symfony\/polyfill-intl-normalizer\/Resources\/stubs\/Normalizer.php',\n        'PhpToken' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/PhpToken.php',\n        'Stringable' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/Stringable.php',\n        'UnhandledMatchError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/UnhandledMatchError.php',\n        'ValueError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/ValueError.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInit27c4d08908fb22c5af6e5d9111745eec::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInit27c4d08908fb22c5af6e5d9111745eec::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInit27c4d08908fb22c5af6e5d9111745eec::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n",
"vendor/composer/installed.php" : "<?php return array(\n    'root' => array(\n        'name' => 'barrydit\/www',\n        'pretty_version' => 'dev-main',\n        'version' => 'dev-main',\n        'reference' => '14c82978aeef9be82e84c5249001358892cb530e',\n        'type' => 'project',\n        'install_path' => __DIR__ . '\/..\/..\/',\n        'aliases' => array(),\n        'dev' => true,\n    ),\n    'versions' => array(\n        'algo26-matthias\/idna-convert' => array(\n            'pretty_version' => 'v3.1.1',\n            'version' => '3.1.1.0',\n            'reference' => 'd8dbf18599548b8460ab0c462f299a15cacf6e66',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/algo26-matthias\/idna-convert',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'aura\/session' => array(\n            'pretty_version' => '4.0.0',\n            'version' => '4.0.0.0',\n            'reference' => '413740aefe3b8416e173504d94e8dcef102483f7',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/aura\/session',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'barrydit\/www' => array(\n            'pretty_version' => 'dev-main',\n            'version' => 'dev-main',\n            'reference' => '14c82978aeef9be82e84c5249001358892cb530e',\n            'type' => 'project',\n            'install_path' => __DIR__ . '\/..\/..\/',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'composer\/ca-bundle' => array(\n            'pretty_version' => '1.5.1',\n            'version' => '1.5.1.0',\n            'reference' => '063d9aa8696582f5a41dffbbaf3c81024f0a604a',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/.\/ca-bundle',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'composer\/composer' => array(\n            'pretty_version' => '1.10.27',\n            'version' => '1.10.27.0',\n            'reference' => 'f8f49191eec76f039b466aa1f161406fe43aff50',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/.\/composer',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'composer\/semver' => array(\n            'pretty_version' => '1.7.2',\n            'version' => '1.7.2.0',\n            'reference' => '647490bbcaf7fc4891c58f47b825eb99d19c377a',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/.\/semver',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'composer\/spdx-licenses' => array(\n            'pretty_version' => '1.5.8',\n            'version' => '1.5.8.0',\n            'reference' => '560bdcf8deb88ae5d611c80a2de8ea9d0358cc0a',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/.\/spdx-licenses',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'composer\/xdebug-handler' => array(\n            'pretty_version' => '1.4.6',\n            'version' => '1.4.6.0',\n            'reference' => 'f27e06cd9675801df441b3656569b328e04aa37c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/.\/xdebug-handler',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'container-interop\/container-interop' => array(\n            'dev_requirement' => false,\n            'replaced' => array(\n                0 => '^1.2.0',\n            ),\n        ),\n        'graham-campbell\/result-type' => array(\n            'pretty_version' => 'v1.1.2',\n            'version' => '1.1.2.0',\n            'reference' => 'fbd48bce38f73f8a4ec8583362e732e4095e5862',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/graham-campbell\/result-type',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'guzzlehttp\/guzzle' => array(\n            'pretty_version' => '7.8.1',\n            'version' => '7.8.1.0',\n            'reference' => '41042bc7ab002487b876a0683fc8dce04ddce104',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/guzzlehttp\/guzzle',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'guzzlehttp\/promises' => array(\n            'pretty_version' => '2.0.2',\n            'version' => '2.0.2.0',\n            'reference' => 'bbff78d96034045e58e13dedd6ad91b5d1253223',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/guzzlehttp\/promises',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'guzzlehttp\/psr7' => array(\n            'pretty_version' => '2.6.2',\n            'version' => '2.6.2.0',\n            'reference' => '45b30f99ac27b5ca93cb4831afe16285f57b8221',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/guzzlehttp\/psr7',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'ipinfo\/ipinfo' => array(\n            'pretty_version' => 'v2.3.1',\n            'version' => '2.3.1.0',\n            'reference' => '8a8e85fbc85f10101ef9ce58c0350f31c4a8e3c5',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/ipinfo\/ipinfo',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'jakeasmith\/http_build_url' => array(\n            'pretty_version' => '1.0.1',\n            'version' => '1.0.1.0',\n            'reference' => '93c273e77cb1edead0cf8bcf8cd2003428e74e37',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/jakeasmith\/http_build_url',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'justinrainbow\/json-schema' => array(\n            'pretty_version' => '5.3.0',\n            'version' => '5.3.0.0',\n            'reference' => 'feb2ca6dd1cebdaf1ed60a4c8de2e53ce11c4fd8',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/justinrainbow\/json-schema',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'kevinoo\/phpwhois' => array(\n            'pretty_version' => 'dev-main',\n            'version' => 'dev-main',\n            'reference' => '50f6a95f32f40104e31b44818484bd9c78c3a90d',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/kevinoo\/phpwhois',\n            'aliases' => array(\n                0 => '9999999-dev',\n            ),\n            'dev_requirement' => false,\n        ),\n        'laminas\/laminas-eventmanager' => array(\n            'pretty_version' => '3.13.1',\n            'version' => '3.13.1.0',\n            'reference' => '933d1b5cf03fa4cf3016cebfd0555fa2ba3f2024',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/laminas\/laminas-eventmanager',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'laminas\/laminas-servicemanager' => array(\n            'pretty_version' => '3.22.1',\n            'version' => '3.22.1.0',\n            'reference' => 'de98d297d4743956a0558a6d71616979ff779328',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/laminas\/laminas-servicemanager',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'laminas\/laminas-session' => array(\n            'pretty_version' => '2.21.0',\n            'version' => '2.21.0.0',\n            'reference' => 'b8cd890f7682a255b335c2ca45df9a7cbc58873d',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/laminas\/laminas-session',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'laminas\/laminas-stdlib' => array(\n            'pretty_version' => '3.19.0',\n            'version' => '3.19.0.0',\n            'reference' => '6a192dd0882b514e45506f533b833b623b78fff3',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/laminas\/laminas-stdlib',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'noximo\/php-colored-ascii-linechart' => array(\n            'pretty_version' => 'dev-master',\n            'version' => 'dev-master',\n            'reference' => '27159acb0101999ba7e431f26471dcdf819db1e0',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/noximo\/php-colored-ascii-linechart',\n            'aliases' => array(\n                0 => '9999999-dev',\n            ),\n            'dev_requirement' => false,\n        ),\n        'pds\/skeleton' => array(\n            'pretty_version' => '1.0.0',\n            'version' => '1.0.0.0',\n            'reference' => '95e476e5d629eadacbd721c5a9553e537514a231',\n            'type' => 'standard',\n            'install_path' => __DIR__ . '\/..\/pds\/skeleton',\n            'aliases' => array(),\n            'dev_requirement' => true,\n        ),\n        'phpoption\/phpoption' => array(\n            'pretty_version' => '1.9.2',\n            'version' => '1.9.2.0',\n            'reference' => '80735db690fe4fc5c76dfa7f9b770634285fa820',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/phpoption\/phpoption',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/container' => array(\n            'pretty_version' => '1.1.2',\n            'version' => '1.1.2.0',\n            'reference' => '513e0666f7216c7459170d56df27dfcefe1689ea',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/psr\/container',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/container-implementation' => array(\n            'dev_requirement' => false,\n            'provided' => array(\n                0 => '^1.0',\n            ),\n        ),\n        'psr\/http-client' => array(\n            'pretty_version' => '1.0.3',\n            'version' => '1.0.3.0',\n            'reference' => 'bb5906edc1c324c9a05aa0873d40117941e5fa90',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/psr\/http-client',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/http-client-implementation' => array(\n            'dev_requirement' => false,\n            'provided' => array(\n                0 => '1.0',\n            ),\n        ),\n        'psr\/http-factory' => array(\n            'pretty_version' => '1.1.0',\n            'version' => '1.1.0.0',\n            'reference' => '2b4765fddfe3b508ac62f829e852b1501d3f6e8a',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/psr\/http-factory',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/http-factory-implementation' => array(\n            'dev_requirement' => false,\n            'provided' => array(\n                0 => '1.0',\n            ),\n        ),\n        'psr\/http-message' => array(\n            'pretty_version' => '2.0',\n            'version' => '2.0.0.0',\n            'reference' => '402d35bcb92c70c026d1a6a9883f06b2ead23d71',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/psr\/http-message',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/http-message-implementation' => array(\n            'dev_requirement' => false,\n            'provided' => array(\n                0 => '1.0',\n            ),\n        ),\n        'psr\/log' => array(\n            'pretty_version' => '1.1.4',\n            'version' => '1.1.4.0',\n            'reference' => 'd49695b909c3b7628b6289db5479a1c204601f11',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/psr\/log',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/log-implementation' => array(\n            'dev_requirement' => false,\n            'provided' => array(\n                0 => '1.0|2.0',\n            ),\n        ),\n        'psr\/simple-cache' => array(\n            'pretty_version' => '1.0.1',\n            'version' => '1.0.1.0',\n            'reference' => '408d5eafb83c57f6365a3ca330ff23aa4a5fa39b',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/psr\/simple-cache',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'psr\/simple-cache-implementation' => array(\n            'dev_requirement' => false,\n            'provided' => array(\n                0 => '~1.0',\n            ),\n        ),\n        'ralouphie\/getallheaders' => array(\n            'pretty_version' => '3.0.3',\n            'version' => '3.0.3.0',\n            'reference' => '120b605dfeb996808c31b6477290a714d356e822',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/ralouphie\/getallheaders',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'sabre\/cache' => array(\n            'pretty_version' => '1.0.4',\n            'version' => '1.0.4.0',\n            'reference' => 'be9b6a2aa3bf07098ea12bf758ef62b3eade8101',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/sabre\/cache',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'seld\/jsonlint' => array(\n            'pretty_version' => '1.10.2',\n            'version' => '1.10.2.0',\n            'reference' => '9bb7db07b5d66d90f6ebf542f09fc67d800e5259',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/seld\/jsonlint',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'seld\/phar-utils' => array(\n            'pretty_version' => '1.2.1',\n            'version' => '1.2.1.0',\n            'reference' => 'ea2f4014f163c1be4c601b9b7bd6af81ba8d701c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/seld\/phar-utils',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/console' => array(\n            'pretty_version' => 'v5.4.41',\n            'version' => '5.4.41.0',\n            'reference' => '6473d441a913cb997123b59ff2dbe3d1cf9e11ba',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/console',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/deprecation-contracts' => array(\n            'pretty_version' => 'v3.5.0',\n            'version' => '3.5.0.0',\n            'reference' => '0e0d29ce1f20deffb4ab1b016a7257c4f1e789a1',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/deprecation-contracts',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/filesystem' => array(\n            'pretty_version' => 'v5.4.41',\n            'version' => '5.4.41.0',\n            'reference' => '6d29dd9340b372fa603f04e6df4dd76bb808591e',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/filesystem',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/finder' => array(\n            'pretty_version' => 'v5.4.40',\n            'version' => '5.4.40.0',\n            'reference' => 'f51cff4687547641c7d8180d74932ab40b2205ce',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/finder',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/polyfill-ctype' => array(\n            'pretty_version' => 'v1.30.0',\n            'version' => '1.30.0.0',\n            'reference' => '0424dff1c58f028c451efff2045f5d92410bd540',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-ctype',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/polyfill-intl-grapheme' => array(\n            'pretty_version' => 'v1.30.0',\n            'version' => '1.30.0.0',\n            'reference' => '64647a7c30b2283f5d49b874d84a18fc22054b7a',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-intl-grapheme',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/polyfill-intl-normalizer' => array(\n            'pretty_version' => 'v1.30.0',\n            'version' => '1.30.0.0',\n            'reference' => 'a95281b0be0d9ab48050ebd988b967875cdb9fdb',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-intl-normalizer',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/polyfill-mbstring' => array(\n            'pretty_version' => 'v1.30.0',\n            'version' => '1.30.0.0',\n            'reference' => 'fd22ab50000ef01661e2a31d850ebaa297f8e03c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-mbstring',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/polyfill-php73' => array(\n            'pretty_version' => 'v1.30.0',\n            'version' => '1.30.0.0',\n            'reference' => 'ec444d3f3f6505bb28d11afa41e75faadebc10a1',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-php73',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/polyfill-php80' => array(\n            'pretty_version' => 'v1.30.0',\n            'version' => '1.30.0.0',\n            'reference' => '77fa7995ac1b21ab60769b7323d600a991a90433',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-php80',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/process' => array(\n            'pretty_version' => 'v5.4.40',\n            'version' => '5.4.40.0',\n            'reference' => 'deedcb3bb4669cae2148bc920eafd2b16dc7c046',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/process',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/service-contracts' => array(\n            'pretty_version' => 'v3.5.0',\n            'version' => '3.5.0.0',\n            'reference' => 'bd1d9e59a81d8fa4acdcea3f617c581f7475a80f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/service-contracts',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'symfony\/string' => array(\n            'pretty_version' => 'v6.4.9',\n            'version' => '6.4.9.0',\n            'reference' => '76792dbd99690a5ebef8050d9206c60c59e681d7',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/symfony\/string',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'vlucas\/phpdotenv' => array(\n            'pretty_version' => 'v5.6.0',\n            'version' => '5.6.0.0',\n            'reference' => '2cf9fb6054c2bb1d59d1f3817706ecdb9d2934c4',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/vlucas\/phpdotenv',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n    ),\n);\n",
"vendor/guzzlehttp/guzzle/src/BodySummarizer.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse Psr\\Http\\Message\\MessageInterface;\n\nfinal class BodySummarizer implements BodySummarizerInterface\n{\n    \/**\n     * @var int|null\n     *\/\n    private $truncateAt;\n\n    public function __construct(int $truncateAt = null)\n    {\n        $this->truncateAt = $truncateAt;\n    }\n\n    \/**\n     * Returns a summarized message body.\n     *\/\n    public function summarize(MessageInterface $message): ?string\n    {\n        return $this->truncateAt === null\n            ? \\GuzzleHttp\\Psr7\\Message::bodySummary($message)\n            : \\GuzzleHttp\\Psr7\\Message::bodySummary($message, $this->truncateAt);\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/BodySummarizerInterface.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse Psr\\Http\\Message\\MessageInterface;\n\ninterface BodySummarizerInterface\n{\n    \/**\n     * Returns a summarized message body.\n     *\/\n    public function summarize(MessageInterface $message): ?string;\n}\n",
"vendor/guzzlehttp/guzzle/src/Client.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Cookie\\CookieJar;\nuse GuzzleHttp\\Exception\\GuzzleException;\nuse GuzzleHttp\\Exception\\InvalidArgumentException;\nuse GuzzleHttp\\Promise as P;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\UriInterface;\n\n\/**\n * @final\n *\/\nclass Client implements ClientInterface, \\Psr\\Http\\Client\\ClientInterface\n{\n    use ClientTrait;\n\n    \/**\n     * @var array Default request options\n     *\/\n    private $config;\n\n    \/**\n     * Clients accept an array of constructor parameters.\n     *\n     * Here's an example of creating a client using a base_uri and an array of\n     * default request options to apply to each request:\n     *\n     *     $client = new Client([\n     *         'base_uri'        => 'http:\/\/www.foo.com\/1.0\/',\n     *         'timeout'         => 0,\n     *         'allow_redirects' => false,\n     *         'proxy'           => '192.168.16.1:10'\n     *     ]);\n     *\n     * Client configuration settings include the following options:\n     *\n     * - handler: (callable) Function that transfers HTTP requests over the\n     *   wire. The function is called with a Psr7\\Http\\Message\\RequestInterface\n     *   and array of transfer options, and must return a\n     *   GuzzleHttp\\Promise\\PromiseInterface that is fulfilled with a\n     *   Psr7\\Http\\Message\\ResponseInterface on success.\n     *   If no handler is provided, a default handler will be created\n     *   that enables all of the request options below by attaching all of the\n     *   default middleware to the handler.\n     * - base_uri: (string|UriInterface) Base URI of the client that is merged\n     *   into relative URIs. Can be a string or instance of UriInterface.\n     * - **: any request option\n     *\n     * @param array $config Client configuration settings.\n     *\n     * @see \\GuzzleHttp\\RequestOptions for a list of available request options.\n     *\/\n    public function __construct(array $config = [])\n    {\n        if (!isset($config['handler'])) {\n            $config['handler'] = HandlerStack::create();\n        } elseif (!\\is_callable($config['handler'])) {\n            throw new InvalidArgumentException('handler must be a callable');\n        }\n\n        \/\/ Convert the base_uri to a UriInterface\n        if (isset($config['base_uri'])) {\n            $config['base_uri'] = Psr7\\Utils::uriFor($config['base_uri']);\n        }\n\n        $this->configureDefaults($config);\n    }\n\n    \/**\n     * @param string $method\n     * @param array  $args\n     *\n     * @return PromiseInterface|ResponseInterface\n     *\n     * @deprecated Client::__call will be removed in guzzlehttp\/guzzle:8.0.\n     *\/\n    public function __call($method, $args)\n    {\n        if (\\count($args) < 1) {\n            throw new InvalidArgumentException('Magic request methods require a URI and optional options array');\n        }\n\n        $uri = $args[0];\n        $opts = $args[1] ?? [];\n\n        return \\substr($method, -5) === 'Async'\n            ? $this->requestAsync(\\substr($method, 0, -5), $uri, $opts)\n            : $this->request($method, $uri, $opts);\n    }\n\n    \/**\n     * Asynchronously send an HTTP request.\n     *\n     * @param array $options Request options to apply to the given\n     *                       request and to the transfer. See \\GuzzleHttp\\RequestOptions.\n     *\/\n    public function sendAsync(RequestInterface $request, array $options = []): PromiseInterface\n    {\n        \/\/ Merge the base URI into the request URI if needed.\n        $options = $this->prepareDefaults($options);\n\n        return $this->transfer(\n            $request->withUri($this->buildUri($request->getUri(), $options), $request->hasHeader('Host')),\n            $options\n        );\n    }\n\n    \/**\n     * Send an HTTP request.\n     *\n     * @param array $options Request options to apply to the given\n     *                       request and to the transfer. See \\GuzzleHttp\\RequestOptions.\n     *\n     * @throws GuzzleException\n     *\/\n    public function send(RequestInterface $request, array $options = []): ResponseInterface\n    {\n        $options[RequestOptions::SYNCHRONOUS] = true;\n\n        return $this->sendAsync($request, $options)->wait();\n    }\n\n    \/**\n     * The HttpClient PSR (PSR-18) specify this method.\n     *\n     * {@inheritDoc}\n     *\/\n    public function sendRequest(RequestInterface $request): ResponseInterface\n    {\n        $options[RequestOptions::SYNCHRONOUS] = true;\n        $options[RequestOptions::ALLOW_REDIRECTS] = false;\n        $options[RequestOptions::HTTP_ERRORS] = false;\n\n        return $this->sendAsync($request, $options)->wait();\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string              $method  HTTP method\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply. See \\GuzzleHttp\\RequestOptions.\n     *\/\n    public function requestAsync(string $method, $uri = '', array $options = []): PromiseInterface\n    {\n        $options = $this->prepareDefaults($options);\n        \/\/ Remove request modifying parameter because it can be done up-front.\n        $headers = $options['headers'] ?? [];\n        $body = $options['body'] ?? null;\n        $version = $options['version'] ?? '1.1';\n        \/\/ Merge the URI into the base URI.\n        $uri = $this->buildUri(Psr7\\Utils::uriFor($uri), $options);\n        if (\\is_array($body)) {\n            throw $this->invalidBody();\n        }\n        $request = new Psr7\\Request($method, $uri, $headers, $body, $version);\n        \/\/ Remove the option so that they are not doubly-applied.\n        unset($options['headers'], $options['body'], $options['version']);\n\n        return $this->transfer($request, $options);\n    }\n\n    \/**\n     * Create and send an HTTP request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string              $method  HTTP method.\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply. See \\GuzzleHttp\\RequestOptions.\n     *\n     * @throws GuzzleException\n     *\/\n    public function request(string $method, $uri = '', array $options = []): ResponseInterface\n    {\n        $options[RequestOptions::SYNCHRONOUS] = true;\n\n        return $this->requestAsync($method, $uri, $options)->wait();\n    }\n\n    \/**\n     * Get a client configuration option.\n     *\n     * These options include default request options of the client, a \"handler\"\n     * (if utilized by the concrete client), and a \"base_uri\" if utilized by\n     * the concrete client.\n     *\n     * @param string|null $option The config option to retrieve.\n     *\n     * @return mixed\n     *\n     * @deprecated Client::getConfig will be removed in guzzlehttp\/guzzle:8.0.\n     *\/\n    public function getConfig(string $option = null)\n    {\n        return $option === null\n            ? $this->config\n            : ($this->config[$option] ?? null);\n    }\n\n    private function buildUri(UriInterface $uri, array $config): UriInterface\n    {\n        if (isset($config['base_uri'])) {\n            $uri = Psr7\\UriResolver::resolve(Psr7\\Utils::uriFor($config['base_uri']), $uri);\n        }\n\n        if (isset($config['idn_conversion']) && ($config['idn_conversion'] !== false)) {\n            $idnOptions = ($config['idn_conversion'] === true) ? \\IDNA_DEFAULT : $config['idn_conversion'];\n            $uri = Utils::idnUriConvert($uri, $idnOptions);\n        }\n\n        return $uri->getScheme() === '' && $uri->getHost() !== '' ? $uri->withScheme('http') : $uri;\n    }\n\n    \/**\n     * Configures the default options for a client.\n     *\/\n    private function configureDefaults(array $config): void\n    {\n        $defaults = [\n            'allow_redirects' => RedirectMiddleware::$defaultSettings,\n            'http_errors' => true,\n            'decode_content' => true,\n            'verify' => true,\n            'cookies' => false,\n            'idn_conversion' => false,\n        ];\n\n        \/\/ Use the standard Linux HTTP_PROXY and HTTPS_PROXY if set.\n\n        \/\/ We can only trust the HTTP_PROXY environment variable in a CLI\n        \/\/ process due to the fact that PHP has no reliable mechanism to\n        \/\/ get environment variables that start with \"HTTP_\".\n        if (\\PHP_SAPI === 'cli' && ($proxy = Utils::getenv('HTTP_PROXY'))) {\n            $defaults['proxy']['http'] = $proxy;\n        }\n\n        if ($proxy = Utils::getenv('HTTPS_PROXY')) {\n            $defaults['proxy']['https'] = $proxy;\n        }\n\n        if ($noProxy = Utils::getenv('NO_PROXY')) {\n            $cleanedNoProxy = \\str_replace(' ', '', $noProxy);\n            $defaults['proxy']['no'] = \\explode(',', $cleanedNoProxy);\n        }\n\n        $this->config = $config + $defaults;\n\n        if (!empty($config['cookies']) && $config['cookies'] === true) {\n            $this->config['cookies'] = new CookieJar();\n        }\n\n        \/\/ Add the default user-agent header.\n        if (!isset($this->config['headers'])) {\n            $this->config['headers'] = ['User-Agent' => Utils::defaultUserAgent()];\n        } else {\n            \/\/ Add the User-Agent header if one was not already set.\n            foreach (\\array_keys($this->config['headers']) as $name) {\n                if (\\strtolower($name) === 'user-agent') {\n                    return;\n                }\n            }\n            $this->config['headers']['User-Agent'] = Utils::defaultUserAgent();\n        }\n    }\n\n    \/**\n     * Merges default options into the array.\n     *\n     * @param array $options Options to modify by reference\n     *\/\n    private function prepareDefaults(array $options): array\n    {\n        $defaults = $this->config;\n\n        if (!empty($defaults['headers'])) {\n            \/\/ Default headers are only added if they are not present.\n            $defaults['_conditional'] = $defaults['headers'];\n            unset($defaults['headers']);\n        }\n\n        \/\/ Special handling for headers is required as they are added as\n        \/\/ conditional headers and as headers passed to a request ctor.\n        if (\\array_key_exists('headers', $options)) {\n            \/\/ Allows default headers to be unset.\n            if ($options['headers'] === null) {\n                $defaults['_conditional'] = [];\n                unset($options['headers']);\n            } elseif (!\\is_array($options['headers'])) {\n                throw new InvalidArgumentException('headers must be an array');\n            }\n        }\n\n        \/\/ Shallow merge defaults underneath options.\n        $result = $options + $defaults;\n\n        \/\/ Remove null values.\n        foreach ($result as $k => $v) {\n            if ($v === null) {\n                unset($result[$k]);\n            }\n        }\n\n        return $result;\n    }\n\n    \/**\n     * Transfers the given request and applies request options.\n     *\n     * The URI of the request is not modified and the request options are used\n     * as-is without merging in default options.\n     *\n     * @param array $options See \\GuzzleHttp\\RequestOptions.\n     *\/\n    private function transfer(RequestInterface $request, array $options): PromiseInterface\n    {\n        $request = $this->applyOptions($request, $options);\n        \/** @var HandlerStack $handler *\/\n        $handler = $options['handler'];\n\n        try {\n            return P\\Create::promiseFor($handler($request, $options));\n        } catch (\\Exception $e) {\n            return P\\Create::rejectionFor($e);\n        }\n    }\n\n    \/**\n     * Applies the array of request options to a request.\n     *\/\n    private function applyOptions(RequestInterface $request, array &$options): RequestInterface\n    {\n        $modify = [\n            'set_headers' => [],\n        ];\n\n        if (isset($options['headers'])) {\n            if (array_keys($options['headers']) === range(0, count($options['headers']) - 1)) {\n                throw new InvalidArgumentException('The headers array must have header name as keys.');\n            }\n            $modify['set_headers'] = $options['headers'];\n            unset($options['headers']);\n        }\n\n        if (isset($options['form_params'])) {\n            if (isset($options['multipart'])) {\n                throw new InvalidArgumentException('You cannot use '\n                    .'form_params and multipart at the same time. Use the '\n                    .'form_params option if you want to send application\/'\n                    .'x-www-form-urlencoded requests, and the multipart '\n                    .'option to send multipart\/form-data requests.');\n            }\n            $options['body'] = \\http_build_query($options['form_params'], '', '&');\n            unset($options['form_params']);\n            \/\/ Ensure that we don't have the header in different case and set the new value.\n            $options['_conditional'] = Psr7\\Utils::caselessRemove(['Content-Type'], $options['_conditional']);\n            $options['_conditional']['Content-Type'] = 'application\/x-www-form-urlencoded';\n        }\n\n        if (isset($options['multipart'])) {\n            $options['body'] = new Psr7\\MultipartStream($options['multipart']);\n            unset($options['multipart']);\n        }\n\n        if (isset($options['json'])) {\n            $options['body'] = Utils::jsonEncode($options['json']);\n            unset($options['json']);\n            \/\/ Ensure that we don't have the header in different case and set the new value.\n            $options['_conditional'] = Psr7\\Utils::caselessRemove(['Content-Type'], $options['_conditional']);\n            $options['_conditional']['Content-Type'] = 'application\/json';\n        }\n\n        if (!empty($options['decode_content'])\n            && $options['decode_content'] !== true\n        ) {\n            \/\/ Ensure that we don't have the header in different case and set the new value.\n            $options['_conditional'] = Psr7\\Utils::caselessRemove(['Accept-Encoding'], $options['_conditional']);\n            $modify['set_headers']['Accept-Encoding'] = $options['decode_content'];\n        }\n\n        if (isset($options['body'])) {\n            if (\\is_array($options['body'])) {\n                throw $this->invalidBody();\n            }\n            $modify['body'] = Psr7\\Utils::streamFor($options['body']);\n            unset($options['body']);\n        }\n\n        if (!empty($options['auth']) && \\is_array($options['auth'])) {\n            $value = $options['auth'];\n            $type = isset($value[2]) ? \\strtolower($value[2]) : 'basic';\n            switch ($type) {\n                case 'basic':\n                    \/\/ Ensure that we don't have the header in different case and set the new value.\n                    $modify['set_headers'] = Psr7\\Utils::caselessRemove(['Authorization'], $modify['set_headers']);\n                    $modify['set_headers']['Authorization'] = 'Basic '\n                        .\\base64_encode(\"$value[0]:$value[1]\");\n                    break;\n                case 'digest':\n                    \/\/ @todo: Do not rely on curl\n                    $options['curl'][\\CURLOPT_HTTPAUTH] = \\CURLAUTH_DIGEST;\n                    $options['curl'][\\CURLOPT_USERPWD] = \"$value[0]:$value[1]\";\n                    break;\n                case 'ntlm':\n                    $options['curl'][\\CURLOPT_HTTPAUTH] = \\CURLAUTH_NTLM;\n                    $options['curl'][\\CURLOPT_USERPWD] = \"$value[0]:$value[1]\";\n                    break;\n            }\n        }\n\n        if (isset($options['query'])) {\n            $value = $options['query'];\n            if (\\is_array($value)) {\n                $value = \\http_build_query($value, '', '&', \\PHP_QUERY_RFC3986);\n            }\n            if (!\\is_string($value)) {\n                throw new InvalidArgumentException('query must be a string or array');\n            }\n            $modify['query'] = $value;\n            unset($options['query']);\n        }\n\n        \/\/ Ensure that sink is not an invalid value.\n        if (isset($options['sink'])) {\n            \/\/ TODO: Add more sink validation?\n            if (\\is_bool($options['sink'])) {\n                throw new InvalidArgumentException('sink must not be a boolean');\n            }\n        }\n\n        if (isset($options['version'])) {\n            $modify['version'] = $options['version'];\n        }\n\n        $request = Psr7\\Utils::modifyRequest($request, $modify);\n        if ($request->getBody() instanceof Psr7\\MultipartStream) {\n            \/\/ Use a multipart\/form-data POST if a Content-Type is not set.\n            \/\/ Ensure that we don't have the header in different case and set the new value.\n            $options['_conditional'] = Psr7\\Utils::caselessRemove(['Content-Type'], $options['_conditional']);\n            $options['_conditional']['Content-Type'] = 'multipart\/form-data; boundary='\n                .$request->getBody()->getBoundary();\n        }\n\n        \/\/ Merge in conditional headers if they are not present.\n        if (isset($options['_conditional'])) {\n            \/\/ Build up the changes so it's in a single clone of the message.\n            $modify = [];\n            foreach ($options['_conditional'] as $k => $v) {\n                if (!$request->hasHeader($k)) {\n                    $modify['set_headers'][$k] = $v;\n                }\n            }\n            $request = Psr7\\Utils::modifyRequest($request, $modify);\n            \/\/ Don't pass this internal value along to middleware\/handlers.\n            unset($options['_conditional']);\n        }\n\n        return $request;\n    }\n\n    \/**\n     * Return an InvalidArgumentException with pre-set message.\n     *\/\n    private function invalidBody(): InvalidArgumentException\n    {\n        return new InvalidArgumentException('Passing in the \"body\" request '\n            .'option as an array to send a request is not supported. '\n            .'Please use the \"form_params\" request option to send a '\n            .'application\/x-www-form-urlencoded request, or the \"multipart\" '\n            .'request option to send a multipart\/form-data request.');\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/ClientInterface.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Exception\\GuzzleException;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\UriInterface;\n\n\/**\n * Client interface for sending HTTP requests.\n *\/\ninterface ClientInterface\n{\n    \/**\n     * The Guzzle major version.\n     *\/\n    public const MAJOR_VERSION = 7;\n\n    \/**\n     * Send an HTTP request.\n     *\n     * @param RequestInterface $request Request to send\n     * @param array            $options Request options to apply to the given\n     *                                  request and to the transfer.\n     *\n     * @throws GuzzleException\n     *\/\n    public function send(RequestInterface $request, array $options = []): ResponseInterface;\n\n    \/**\n     * Asynchronously send an HTTP request.\n     *\n     * @param RequestInterface $request Request to send\n     * @param array            $options Request options to apply to the given\n     *                                  request and to the transfer.\n     *\/\n    public function sendAsync(RequestInterface $request, array $options = []): PromiseInterface;\n\n    \/**\n     * Create and send an HTTP request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string              $method  HTTP method.\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function request(string $method, $uri, array $options = []): ResponseInterface;\n\n    \/**\n     * Create and send an asynchronous HTTP request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string              $method  HTTP method\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function requestAsync(string $method, $uri, array $options = []): PromiseInterface;\n\n    \/**\n     * Get a client configuration option.\n     *\n     * These options include default request options of the client, a \"handler\"\n     * (if utilized by the concrete client), and a \"base_uri\" if utilized by\n     * the concrete client.\n     *\n     * @param string|null $option The config option to retrieve.\n     *\n     * @return mixed\n     *\n     * @deprecated ClientInterface::getConfig will be removed in guzzlehttp\/guzzle:8.0.\n     *\/\n    public function getConfig(string $option = null);\n}\n",
"vendor/guzzlehttp/guzzle/src/ClientTrait.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Exception\\GuzzleException;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\UriInterface;\n\n\/**\n * Client interface for sending HTTP requests.\n *\/\ntrait ClientTrait\n{\n    \/**\n     * Create and send an HTTP request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string              $method  HTTP method.\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    abstract public function request(string $method, $uri, array $options = []): ResponseInterface;\n\n    \/**\n     * Create and send an HTTP GET request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function get($uri, array $options = []): ResponseInterface\n    {\n        return $this->request('GET', $uri, $options);\n    }\n\n    \/**\n     * Create and send an HTTP HEAD request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function head($uri, array $options = []): ResponseInterface\n    {\n        return $this->request('HEAD', $uri, $options);\n    }\n\n    \/**\n     * Create and send an HTTP PUT request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function put($uri, array $options = []): ResponseInterface\n    {\n        return $this->request('PUT', $uri, $options);\n    }\n\n    \/**\n     * Create and send an HTTP POST request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function post($uri, array $options = []): ResponseInterface\n    {\n        return $this->request('POST', $uri, $options);\n    }\n\n    \/**\n     * Create and send an HTTP PATCH request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function patch($uri, array $options = []): ResponseInterface\n    {\n        return $this->request('PATCH', $uri, $options);\n    }\n\n    \/**\n     * Create and send an HTTP DELETE request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\n     * @throws GuzzleException\n     *\/\n    public function delete($uri, array $options = []): ResponseInterface\n    {\n        return $this->request('DELETE', $uri, $options);\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string              $method  HTTP method\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    abstract public function requestAsync(string $method, $uri, array $options = []): PromiseInterface;\n\n    \/**\n     * Create and send an asynchronous HTTP GET request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function getAsync($uri, array $options = []): PromiseInterface\n    {\n        return $this->requestAsync('GET', $uri, $options);\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP HEAD request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function headAsync($uri, array $options = []): PromiseInterface\n    {\n        return $this->requestAsync('HEAD', $uri, $options);\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP PUT request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function putAsync($uri, array $options = []): PromiseInterface\n    {\n        return $this->requestAsync('PUT', $uri, $options);\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP POST request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function postAsync($uri, array $options = []): PromiseInterface\n    {\n        return $this->requestAsync('POST', $uri, $options);\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP PATCH request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function patchAsync($uri, array $options = []): PromiseInterface\n    {\n        return $this->requestAsync('PATCH', $uri, $options);\n    }\n\n    \/**\n     * Create and send an asynchronous HTTP DELETE request.\n     *\n     * Use an absolute path to override the base path of the client, or a\n     * relative path to append to the base path of the client. The URL can\n     * contain the query string as well. Use an array to provide a URL\n     * template and additional variables to use in the URL template expansion.\n     *\n     * @param string|UriInterface $uri     URI object or string.\n     * @param array               $options Request options to apply.\n     *\/\n    public function deleteAsync($uri, array $options = []): PromiseInterface\n    {\n        return $this->requestAsync('DELETE', $uri, $options);\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/HandlerStack.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\n\n\/**\n * Creates a composed Guzzle handler function by stacking middlewares on top of\n * an HTTP handler function.\n *\n * @final\n *\/\nclass HandlerStack\n{\n    \/**\n     * @var (callable(RequestInterface, array): PromiseInterface)|null\n     *\/\n    private $handler;\n\n    \/**\n     * @var array{(callable(callable(RequestInterface, array): PromiseInterface): callable), (string|null)}[]\n     *\/\n    private $stack = [];\n\n    \/**\n     * @var (callable(RequestInterface, array): PromiseInterface)|null\n     *\/\n    private $cached;\n\n    \/**\n     * Creates a default handler stack that can be used by clients.\n     *\n     * The returned handler will wrap the provided handler or use the most\n     * appropriate default handler for your system. The returned HandlerStack has\n     * support for cookies, redirects, HTTP error exceptions, and preparing a body\n     * before sending.\n     *\n     * The returned handler stack can be passed to a client in the \"handler\"\n     * option.\n     *\n     * @param (callable(RequestInterface, array): PromiseInterface)|null $handler HTTP handler function to use with the stack. If no\n     *                                                                            handler is provided, the best handler for your\n     *                                                                            system will be utilized.\n     *\/\n    public static function create(callable $handler = null): self\n    {\n        $stack = new self($handler ?: Utils::chooseHandler());\n        $stack->push(Middleware::httpErrors(), 'http_errors');\n        $stack->push(Middleware::redirect(), 'allow_redirects');\n        $stack->push(Middleware::cookies(), 'cookies');\n        $stack->push(Middleware::prepareBody(), 'prepare_body');\n\n        return $stack;\n    }\n\n    \/**\n     * @param (callable(RequestInterface, array): PromiseInterface)|null $handler Underlying HTTP handler.\n     *\/\n    public function __construct(callable $handler = null)\n    {\n        $this->handler = $handler;\n    }\n\n    \/**\n     * Invokes the handler stack as a composed handler\n     *\n     * @return ResponseInterface|PromiseInterface\n     *\/\n    public function __invoke(RequestInterface $request, array $options)\n    {\n        $handler = $this->resolve();\n\n        return $handler($request, $options);\n    }\n\n    \/**\n     * Dumps a string representation of the stack.\n     *\n     * @return string\n     *\/\n    public function __toString()\n    {\n        $depth = 0;\n        $stack = [];\n\n        if ($this->handler !== null) {\n            $stack[] = '0) Handler: '.$this->debugCallable($this->handler);\n        }\n\n        $result = '';\n        foreach (\\array_reverse($this->stack) as $tuple) {\n            ++$depth;\n            $str = \"{$depth}) Name: '{$tuple[1]}', \";\n            $str .= 'Function: '.$this->debugCallable($tuple[0]);\n            $result = \"> {$str}\\n{$result}\";\n            $stack[] = $str;\n        }\n\n        foreach (\\array_keys($stack) as $k) {\n            $result .= \"< {$stack[$k]}\\n\";\n        }\n\n        return $result;\n    }\n\n    \/**\n     * Set the HTTP handler that actually returns a promise.\n     *\n     * @param callable(RequestInterface, array): PromiseInterface $handler Accepts a request and array of options and\n     *                                                                     returns a Promise.\n     *\/\n    public function setHandler(callable $handler): void\n    {\n        $this->handler = $handler;\n        $this->cached = null;\n    }\n\n    \/**\n     * Returns true if the builder has a handler.\n     *\/\n    public function hasHandler(): bool\n    {\n        return $this->handler !== null;\n    }\n\n    \/**\n     * Unshift a middleware to the bottom of the stack.\n     *\n     * @param callable(callable): callable $middleware Middleware function\n     * @param string                       $name       Name to register for this middleware.\n     *\/\n    public function unshift(callable $middleware, string $name = null): void\n    {\n        \\array_unshift($this->stack, [$middleware, $name]);\n        $this->cached = null;\n    }\n\n    \/**\n     * Push a middleware to the top of the stack.\n     *\n     * @param callable(callable): callable $middleware Middleware function\n     * @param string                       $name       Name to register for this middleware.\n     *\/\n    public function push(callable $middleware, string $name = ''): void\n    {\n        $this->stack[] = [$middleware, $name];\n        $this->cached = null;\n    }\n\n    \/**\n     * Add a middleware before another middleware by name.\n     *\n     * @param string                       $findName   Middleware to find\n     * @param callable(callable): callable $middleware Middleware function\n     * @param string                       $withName   Name to register for this middleware.\n     *\/\n    public function before(string $findName, callable $middleware, string $withName = ''): void\n    {\n        $this->splice($findName, $withName, $middleware, true);\n    }\n\n    \/**\n     * Add a middleware after another middleware by name.\n     *\n     * @param string                       $findName   Middleware to find\n     * @param callable(callable): callable $middleware Middleware function\n     * @param string                       $withName   Name to register for this middleware.\n     *\/\n    public function after(string $findName, callable $middleware, string $withName = ''): void\n    {\n        $this->splice($findName, $withName, $middleware, false);\n    }\n\n    \/**\n     * Remove a middleware by instance or name from the stack.\n     *\n     * @param callable|string $remove Middleware to remove by instance or name.\n     *\/\n    public function remove($remove): void\n    {\n        if (!is_string($remove) && !is_callable($remove)) {\n            trigger_deprecation('guzzlehttp\/guzzle', '7.4', 'Not passing a callable or string to %s::%s() is deprecated and will cause an error in 8.0.', __CLASS__, __FUNCTION__);\n        }\n\n        $this->cached = null;\n        $idx = \\is_callable($remove) ? 0 : 1;\n        $this->stack = \\array_values(\\array_filter(\n            $this->stack,\n            static function ($tuple) use ($idx, $remove) {\n                return $tuple[$idx] !== $remove;\n            }\n        ));\n    }\n\n    \/**\n     * Compose the middleware and handler into a single callable function.\n     *\n     * @return callable(RequestInterface, array): PromiseInterface\n     *\/\n    public function resolve(): callable\n    {\n        if ($this->cached === null) {\n            if (($prev = $this->handler) === null) {\n                throw new \\LogicException('No handler has been specified');\n            }\n\n            foreach (\\array_reverse($this->stack) as $fn) {\n                \/** @var callable(RequestInterface, array): PromiseInterface $prev *\/\n                $prev = $fn[0]($prev);\n            }\n\n            $this->cached = $prev;\n        }\n\n        return $this->cached;\n    }\n\n    private function findByName(string $name): int\n    {\n        foreach ($this->stack as $k => $v) {\n            if ($v[1] === $name) {\n                return $k;\n            }\n        }\n\n        throw new \\InvalidArgumentException(\"Middleware not found: $name\");\n    }\n\n    \/**\n     * Splices a function into the middleware list at a specific position.\n     *\/\n    private function splice(string $findName, string $withName, callable $middleware, bool $before): void\n    {\n        $this->cached = null;\n        $idx = $this->findByName($findName);\n        $tuple = [$middleware, $withName];\n\n        if ($before) {\n            if ($idx === 0) {\n                \\array_unshift($this->stack, $tuple);\n            } else {\n                $replacement = [$tuple, $this->stack[$idx]];\n                \\array_splice($this->stack, $idx, 1, $replacement);\n            }\n        } elseif ($idx === \\count($this->stack) - 1) {\n            $this->stack[] = $tuple;\n        } else {\n            $replacement = [$this->stack[$idx], $tuple];\n            \\array_splice($this->stack, $idx, 1, $replacement);\n        }\n    }\n\n    \/**\n     * Provides a debug string for a given callable.\n     *\n     * @param callable|string $fn Function to write as a string.\n     *\/\n    private function debugCallable($fn): string\n    {\n        if (\\is_string($fn)) {\n            return \"callable({$fn})\";\n        }\n\n        if (\\is_array($fn)) {\n            return \\is_string($fn[0])\n                ? \"callable({$fn[0]}::{$fn[1]})\"\n                : \"callable(['\".\\get_class($fn[0]).\"', '{$fn[1]}'])\";\n        }\n\n        \/** @var object $fn *\/\n        return 'callable('.\\spl_object_hash($fn).')';\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/MessageFormatter.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse Psr\\Http\\Message\\MessageInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\n\n\/**\n * Formats log messages using variable substitutions for requests, responses,\n * and other transactional data.\n *\n * The following variable substitutions are supported:\n *\n * - {request}:        Full HTTP request message\n * - {response}:       Full HTTP response message\n * - {ts}:             ISO 8601 date in GMT\n * - {date_iso_8601}   ISO 8601 date in GMT\n * - {date_common_log} Apache common log date using the configured timezone.\n * - {host}:           Host of the request\n * - {method}:         Method of the request\n * - {uri}:            URI of the request\n * - {version}:        Protocol version\n * - {target}:         Request target of the request (path + query + fragment)\n * - {hostname}:       Hostname of the machine that sent the request\n * - {code}:           Status code of the response (if available)\n * - {phrase}:         Reason phrase of the response  (if available)\n * - {error}:          Any error messages (if available)\n * - {req_header_*}:   Replace `*` with the lowercased name of a request header to add to the message\n * - {res_header_*}:   Replace `*` with the lowercased name of a response header to add to the message\n * - {req_headers}:    Request headers\n * - {res_headers}:    Response headers\n * - {req_body}:       Request body\n * - {res_body}:       Response body\n *\n * @final\n *\/\nclass MessageFormatter implements MessageFormatterInterface\n{\n    \/**\n     * Apache Common Log Format.\n     *\n     * @see https:\/\/httpd.apache.org\/docs\/2.4\/logs.html#common\n     *\n     * @var string\n     *\/\n    public const CLF = '{hostname} {req_header_User-Agent} - [{date_common_log}] \"{method} {target} HTTP\/{version}\" {code} {res_header_Content-Length}';\n    public const DEBUG = \">>>>>>>>\\n{request}\\n<<<<<<<<\\n{response}\\n--------\\n{error}\";\n    public const SHORT = '[{ts}] \"{method} {target} HTTP\/{version}\" {code}';\n\n    \/**\n     * @var string Template used to format log messages\n     *\/\n    private $template;\n\n    \/**\n     * @param string $template Log message template\n     *\/\n    public function __construct(?string $template = self::CLF)\n    {\n        $this->template = $template ?: self::CLF;\n    }\n\n    \/**\n     * Returns a formatted message string.\n     *\n     * @param RequestInterface       $request  Request that was sent\n     * @param ResponseInterface|null $response Response that was received\n     * @param \\Throwable|null        $error    Exception that was received\n     *\/\n    public function format(RequestInterface $request, ResponseInterface $response = null, \\Throwable $error = null): string\n    {\n        $cache = [];\n\n        \/** @var string *\/\n        return \\preg_replace_callback(\n            '\/{\\s*([A-Za-z_\\-\\.0-9]+)\\s*}\/',\n            function (array $matches) use ($request, $response, $error, &$cache) {\n                if (isset($cache[$matches[1]])) {\n                    return $cache[$matches[1]];\n                }\n\n                $result = '';\n                switch ($matches[1]) {\n                    case 'request':\n                        $result = Psr7\\Message::toString($request);\n                        break;\n                    case 'response':\n                        $result = $response ? Psr7\\Message::toString($response) : '';\n                        break;\n                    case 'req_headers':\n                        $result = \\trim($request->getMethod()\n                                .' '.$request->getRequestTarget())\n                            .' HTTP\/'.$request->getProtocolVersion().\"\\r\\n\"\n                            .$this->headers($request);\n                        break;\n                    case 'res_headers':\n                        $result = $response ?\n                            \\sprintf(\n                                'HTTP\/%s %d %s',\n                                $response->getProtocolVersion(),\n                                $response->getStatusCode(),\n                                $response->getReasonPhrase()\n                            ).\"\\r\\n\".$this->headers($response)\n                            : 'NULL';\n                        break;\n                    case 'req_body':\n                        $result = $request->getBody()->__toString();\n                        break;\n                    case 'res_body':\n                        if (!$response instanceof ResponseInterface) {\n                            $result = 'NULL';\n                            break;\n                        }\n\n                        $body = $response->getBody();\n\n                        if (!$body->isSeekable()) {\n                            $result = 'RESPONSE_NOT_LOGGEABLE';\n                            break;\n                        }\n\n                        $result = $response->getBody()->__toString();\n                        break;\n                    case 'ts':\n                    case 'date_iso_8601':\n                        $result = \\gmdate('c');\n                        break;\n                    case 'date_common_log':\n                        $result = \\date('d\/M\/Y:H:i:s O');\n                        break;\n                    case 'method':\n                        $result = $request->getMethod();\n                        break;\n                    case 'version':\n                        $result = $request->getProtocolVersion();\n                        break;\n                    case 'uri':\n                    case 'url':\n                        $result = $request->getUri()->__toString();\n                        break;\n                    case 'target':\n                        $result = $request->getRequestTarget();\n                        break;\n                    case 'req_version':\n                        $result = $request->getProtocolVersion();\n                        break;\n                    case 'res_version':\n                        $result = $response\n                            ? $response->getProtocolVersion()\n                            : 'NULL';\n                        break;\n                    case 'host':\n                        $result = $request->getHeaderLine('Host');\n                        break;\n                    case 'hostname':\n                        $result = \\gethostname();\n                        break;\n                    case 'code':\n                        $result = $response ? $response->getStatusCode() : 'NULL';\n                        break;\n                    case 'phrase':\n                        $result = $response ? $response->getReasonPhrase() : 'NULL';\n                        break;\n                    case 'error':\n                        $result = $error ? $error->getMessage() : 'NULL';\n                        break;\n                    default:\n                        \/\/ handle prefixed dynamic headers\n                        if (\\strpos($matches[1], 'req_header_') === 0) {\n                            $result = $request->getHeaderLine(\\substr($matches[1], 11));\n                        } elseif (\\strpos($matches[1], 'res_header_') === 0) {\n                            $result = $response\n                                ? $response->getHeaderLine(\\substr($matches[1], 11))\n                                : 'NULL';\n                        }\n                }\n\n                $cache[$matches[1]] = $result;\n\n                return $result;\n            },\n            $this->template\n        );\n    }\n\n    \/**\n     * Get headers from message as string\n     *\/\n    private function headers(MessageInterface $message): string\n    {\n        $result = '';\n        foreach ($message->getHeaders() as $name => $values) {\n            $result .= $name.': '.\\implode(', ', $values).\"\\r\\n\";\n        }\n\n        return \\trim($result);\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/MessageFormatterInterface.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\n\ninterface MessageFormatterInterface\n{\n    \/**\n     * Returns a formatted message string.\n     *\n     * @param RequestInterface       $request  Request that was sent\n     * @param ResponseInterface|null $response Response that was received\n     * @param \\Throwable|null        $error    Exception that was received\n     *\/\n    public function format(RequestInterface $request, ResponseInterface $response = null, \\Throwable $error = null): string;\n}\n",
"vendor/guzzlehttp/guzzle/src/Middleware.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Cookie\\CookieJarInterface;\nuse GuzzleHttp\\Exception\\RequestException;\nuse GuzzleHttp\\Promise as P;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Log\\LoggerInterface;\n\n\/**\n * Functions used to create and wrap handlers with handler middleware.\n *\/\nfinal class Middleware\n{\n    \/**\n     * Middleware that adds cookies to requests.\n     *\n     * The options array must be set to a CookieJarInterface in order to use\n     * cookies. This is typically handled for you by a client.\n     *\n     * @return callable Returns a function that accepts the next handler.\n     *\/\n    public static function cookies(): callable\n    {\n        return static function (callable $handler): callable {\n            return static function ($request, array $options) use ($handler) {\n                if (empty($options['cookies'])) {\n                    return $handler($request, $options);\n                } elseif (!($options['cookies'] instanceof CookieJarInterface)) {\n                    throw new \\InvalidArgumentException('cookies must be an instance of GuzzleHttp\\Cookie\\CookieJarInterface');\n                }\n                $cookieJar = $options['cookies'];\n                $request = $cookieJar->withCookieHeader($request);\n\n                return $handler($request, $options)\n                    ->then(\n                        static function (ResponseInterface $response) use ($cookieJar, $request): ResponseInterface {\n                            $cookieJar->extractCookies($request, $response);\n\n                            return $response;\n                        }\n                    );\n            };\n        };\n    }\n\n    \/**\n     * Middleware that throws exceptions for 4xx or 5xx responses when the\n     * \"http_errors\" request option is set to true.\n     *\n     * @param BodySummarizerInterface|null $bodySummarizer The body summarizer to use in exception messages.\n     *\n     * @return callable(callable): callable Returns a function that accepts the next handler.\n     *\/\n    public static function httpErrors(BodySummarizerInterface $bodySummarizer = null): callable\n    {\n        return static function (callable $handler) use ($bodySummarizer): callable {\n            return static function ($request, array $options) use ($handler, $bodySummarizer) {\n                if (empty($options['http_errors'])) {\n                    return $handler($request, $options);\n                }\n\n                return $handler($request, $options)->then(\n                    static function (ResponseInterface $response) use ($request, $bodySummarizer) {\n                        $code = $response->getStatusCode();\n                        if ($code < 400) {\n                            return $response;\n                        }\n                        throw RequestException::create($request, $response, null, [], $bodySummarizer);\n                    }\n                );\n            };\n        };\n    }\n\n    \/**\n     * Middleware that pushes history data to an ArrayAccess container.\n     *\n     * @param array|\\ArrayAccess<int, array> $container Container to hold the history (by reference).\n     *\n     * @return callable(callable): callable Returns a function that accepts the next handler.\n     *\n     * @throws \\InvalidArgumentException if container is not an array or ArrayAccess.\n     *\/\n    public static function history(&$container): callable\n    {\n        if (!\\is_array($container) && !$container instanceof \\ArrayAccess) {\n            throw new \\InvalidArgumentException('history container must be an array or object implementing ArrayAccess');\n        }\n\n        return static function (callable $handler) use (&$container): callable {\n            return static function (RequestInterface $request, array $options) use ($handler, &$container) {\n                return $handler($request, $options)->then(\n                    static function ($value) use ($request, &$container, $options) {\n                        $container[] = [\n                            'request' => $request,\n                            'response' => $value,\n                            'error' => null,\n                            'options' => $options,\n                        ];\n\n                        return $value;\n                    },\n                    static function ($reason) use ($request, &$container, $options) {\n                        $container[] = [\n                            'request' => $request,\n                            'response' => null,\n                            'error' => $reason,\n                            'options' => $options,\n                        ];\n\n                        return P\\Create::rejectionFor($reason);\n                    }\n                );\n            };\n        };\n    }\n\n    \/**\n     * Middleware that invokes a callback before and after sending a request.\n     *\n     * The provided listener cannot modify or alter the response. It simply\n     * \"taps\" into the chain to be notified before returning the promise. The\n     * before listener accepts a request and options array, and the after\n     * listener accepts a request, options array, and response promise.\n     *\n     * @param callable $before Function to invoke before forwarding the request.\n     * @param callable $after  Function invoked after forwarding.\n     *\n     * @return callable Returns a function that accepts the next handler.\n     *\/\n    public static function tap(callable $before = null, callable $after = null): callable\n    {\n        return static function (callable $handler) use ($before, $after): callable {\n            return static function (RequestInterface $request, array $options) use ($handler, $before, $after) {\n                if ($before) {\n                    $before($request, $options);\n                }\n                $response = $handler($request, $options);\n                if ($after) {\n                    $after($request, $options, $response);\n                }\n\n                return $response;\n            };\n        };\n    }\n\n    \/**\n     * Middleware that handles request redirects.\n     *\n     * @return callable Returns a function that accepts the next handler.\n     *\/\n    public static function redirect(): callable\n    {\n        return static function (callable $handler): RedirectMiddleware {\n            return new RedirectMiddleware($handler);\n        };\n    }\n\n    \/**\n     * Middleware that retries requests based on the boolean result of\n     * invoking the provided \"decider\" function.\n     *\n     * If no delay function is provided, a simple implementation of exponential\n     * backoff will be utilized.\n     *\n     * @param callable $decider Function that accepts the number of retries,\n     *                          a request, [response], and [exception] and\n     *                          returns true if the request is to be retried.\n     * @param callable $delay   Function that accepts the number of retries and\n     *                          returns the number of milliseconds to delay.\n     *\n     * @return callable Returns a function that accepts the next handler.\n     *\/\n    public static function retry(callable $decider, callable $delay = null): callable\n    {\n        return static function (callable $handler) use ($decider, $delay): RetryMiddleware {\n            return new RetryMiddleware($decider, $handler, $delay);\n        };\n    }\n\n    \/**\n     * Middleware that logs requests, responses, and errors using a message\n     * formatter.\n     *\n     * @phpstan-param \\Psr\\Log\\LogLevel::* $logLevel  Level at which to log requests.\n     *\n     * @param LoggerInterface                            $logger    Logs messages.\n     * @param MessageFormatterInterface|MessageFormatter $formatter Formatter used to create message strings.\n     * @param string                                     $logLevel  Level at which to log requests.\n     *\n     * @return callable Returns a function that accepts the next handler.\n     *\/\n    public static function log(LoggerInterface $logger, $formatter, string $logLevel = 'info'): callable\n    {\n        \/\/ To be compatible with Guzzle 7.1.x we need to allow users to pass a MessageFormatter\n        if (!$formatter instanceof MessageFormatter && !$formatter instanceof MessageFormatterInterface) {\n            throw new \\LogicException(sprintf('Argument 2 to %s::log() must be of type %s', self::class, MessageFormatterInterface::class));\n        }\n\n        return static function (callable $handler) use ($logger, $formatter, $logLevel): callable {\n            return static function (RequestInterface $request, array $options = []) use ($handler, $logger, $formatter, $logLevel) {\n                return $handler($request, $options)->then(\n                    static function ($response) use ($logger, $request, $formatter, $logLevel): ResponseInterface {\n                        $message = $formatter->format($request, $response);\n                        $logger->log($logLevel, $message);\n\n                        return $response;\n                    },\n                    static function ($reason) use ($logger, $request, $formatter): PromiseInterface {\n                        $response = $reason instanceof RequestException ? $reason->getResponse() : null;\n                        $message = $formatter->format($request, $response, P\\Create::exceptionFor($reason));\n                        $logger->error($message);\n\n                        return P\\Create::rejectionFor($reason);\n                    }\n                );\n            };\n        };\n    }\n\n    \/**\n     * This middleware adds a default content-type if possible, a default\n     * content-length or transfer-encoding header, and the expect header.\n     *\/\n    public static function prepareBody(): callable\n    {\n        return static function (callable $handler): PrepareBodyMiddleware {\n            return new PrepareBodyMiddleware($handler);\n        };\n    }\n\n    \/**\n     * Middleware that applies a map function to the request before passing to\n     * the next handler.\n     *\n     * @param callable $fn Function that accepts a RequestInterface and returns\n     *                     a RequestInterface.\n     *\/\n    public static function mapRequest(callable $fn): callable\n    {\n        return static function (callable $handler) use ($fn): callable {\n            return static function (RequestInterface $request, array $options) use ($handler, $fn) {\n                return $handler($fn($request), $options);\n            };\n        };\n    }\n\n    \/**\n     * Middleware that applies a map function to the resolved promise's\n     * response.\n     *\n     * @param callable $fn Function that accepts a ResponseInterface and\n     *                     returns a ResponseInterface.\n     *\/\n    public static function mapResponse(callable $fn): callable\n    {\n        return static function (callable $handler) use ($fn): callable {\n            return static function (RequestInterface $request, array $options) use ($handler, $fn) {\n                return $handler($request, $options)->then($fn);\n            };\n        };\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/Pool.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Promise as P;\nuse GuzzleHttp\\Promise\\EachPromise;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse GuzzleHttp\\Promise\\PromisorInterface;\nuse Psr\\Http\\Message\\RequestInterface;\n\n\/**\n * Sends an iterator of requests concurrently using a capped pool size.\n *\n * The pool will read from an iterator until it is cancelled or until the\n * iterator is consumed. When a request is yielded, the request is sent after\n * applying the \"request_options\" request options (if provided in the ctor).\n *\n * When a function is yielded by the iterator, the function is provided the\n * \"request_options\" array that should be merged on top of any existing\n * options, and the function MUST then return a wait-able promise.\n *\n * @final\n *\/\nclass Pool implements PromisorInterface\n{\n    \/**\n     * @var EachPromise\n     *\/\n    private $each;\n\n    \/**\n     * @param ClientInterface $client   Client used to send the requests.\n     * @param array|\\Iterator $requests Requests or functions that return\n     *                                  requests to send concurrently.\n     * @param array           $config   Associative array of options\n     *                                  - concurrency: (int) Maximum number of requests to send concurrently\n     *                                  - options: Array of request options to apply to each request.\n     *                                  - fulfilled: (callable) Function to invoke when a request completes.\n     *                                  - rejected: (callable) Function to invoke when a request is rejected.\n     *\/\n    public function __construct(ClientInterface $client, $requests, array $config = [])\n    {\n        if (!isset($config['concurrency'])) {\n            $config['concurrency'] = 25;\n        }\n\n        if (isset($config['options'])) {\n            $opts = $config['options'];\n            unset($config['options']);\n        } else {\n            $opts = [];\n        }\n\n        $iterable = P\\Create::iterFor($requests);\n        $requests = static function () use ($iterable, $client, $opts) {\n            foreach ($iterable as $key => $rfn) {\n                if ($rfn instanceof RequestInterface) {\n                    yield $key => $client->sendAsync($rfn, $opts);\n                } elseif (\\is_callable($rfn)) {\n                    yield $key => $rfn($opts);\n                } else {\n                    throw new \\InvalidArgumentException('Each value yielded by the iterator must be a Psr7\\Http\\Message\\RequestInterface or a callable that returns a promise that fulfills with a Psr7\\Message\\Http\\ResponseInterface object.');\n                }\n            }\n        };\n\n        $this->each = new EachPromise($requests(), $config);\n    }\n\n    \/**\n     * Get promise\n     *\/\n    public function promise(): PromiseInterface\n    {\n        return $this->each->promise();\n    }\n\n    \/**\n     * Sends multiple requests concurrently and returns an array of responses\n     * and exceptions that uses the same ordering as the provided requests.\n     *\n     * IMPORTANT: This method keeps every request and response in memory, and\n     * as such, is NOT recommended when sending a large number or an\n     * indeterminate number of requests concurrently.\n     *\n     * @param ClientInterface $client   Client used to send the requests\n     * @param array|\\Iterator $requests Requests to send concurrently.\n     * @param array           $options  Passes through the options available in\n     *                                  {@see \\GuzzleHttp\\Pool::__construct}\n     *\n     * @return array Returns an array containing the response or an exception\n     *               in the same order that the requests were sent.\n     *\n     * @throws \\InvalidArgumentException if the event format is incorrect.\n     *\/\n    public static function batch(ClientInterface $client, $requests, array $options = []): array\n    {\n        $res = [];\n        self::cmpCallback($options, 'fulfilled', $res);\n        self::cmpCallback($options, 'rejected', $res);\n        $pool = new static($client, $requests, $options);\n        $pool->promise()->wait();\n        \\ksort($res);\n\n        return $res;\n    }\n\n    \/**\n     * Execute callback(s)\n     *\/\n    private static function cmpCallback(array &$options, string $name, array &$results): void\n    {\n        if (!isset($options[$name])) {\n            $options[$name] = static function ($v, $k) use (&$results) {\n                $results[$k] = $v;\n            };\n        } else {\n            $currentFn = $options[$name];\n            $options[$name] = static function ($v, $k) use (&$results, $currentFn) {\n                $currentFn($v, $k);\n                $results[$k] = $v;\n            };\n        }\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/PrepareBodyMiddleware.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\n\n\/**\n * Prepares requests that contain a body, adding the Content-Length,\n * Content-Type, and Expect headers.\n *\n * @final\n *\/\nclass PrepareBodyMiddleware\n{\n    \/**\n     * @var callable(RequestInterface, array): PromiseInterface\n     *\/\n    private $nextHandler;\n\n    \/**\n     * @param callable(RequestInterface, array): PromiseInterface $nextHandler Next handler to invoke.\n     *\/\n    public function __construct(callable $nextHandler)\n    {\n        $this->nextHandler = $nextHandler;\n    }\n\n    public function __invoke(RequestInterface $request, array $options): PromiseInterface\n    {\n        $fn = $this->nextHandler;\n\n        \/\/ Don't do anything if the request has no body.\n        if ($request->getBody()->getSize() === 0) {\n            return $fn($request, $options);\n        }\n\n        $modify = [];\n\n        \/\/ Add a default content-type if possible.\n        if (!$request->hasHeader('Content-Type')) {\n            if ($uri = $request->getBody()->getMetadata('uri')) {\n                if (is_string($uri) && $type = Psr7\\MimeType::fromFilename($uri)) {\n                    $modify['set_headers']['Content-Type'] = $type;\n                }\n            }\n        }\n\n        \/\/ Add a default content-length or transfer-encoding header.\n        if (!$request->hasHeader('Content-Length')\n            && !$request->hasHeader('Transfer-Encoding')\n        ) {\n            $size = $request->getBody()->getSize();\n            if ($size !== null) {\n                $modify['set_headers']['Content-Length'] = $size;\n            } else {\n                $modify['set_headers']['Transfer-Encoding'] = 'chunked';\n            }\n        }\n\n        \/\/ Add the expect header if needed.\n        $this->addExpectHeader($request, $options, $modify);\n\n        return $fn(Psr7\\Utils::modifyRequest($request, $modify), $options);\n    }\n\n    \/**\n     * Add expect header\n     *\/\n    private function addExpectHeader(RequestInterface $request, array $options, array &$modify): void\n    {\n        \/\/ Determine if the Expect header should be used\n        if ($request->hasHeader('Expect')) {\n            return;\n        }\n\n        $expect = $options['expect'] ?? null;\n\n        \/\/ Return if disabled or if you're not using HTTP\/1.1 or HTTP\/2.0\n        if ($expect === false || $request->getProtocolVersion() < 1.1) {\n            return;\n        }\n\n        \/\/ The expect header is unconditionally enabled\n        if ($expect === true) {\n            $modify['set_headers']['Expect'] = '100-Continue';\n\n            return;\n        }\n\n        \/\/ By default, send the expect header when the payload is > 1mb\n        if ($expect === null) {\n            $expect = 1048576;\n        }\n\n        \/\/ Always add if the body cannot be rewound, the size cannot be\n        \/\/ determined, or the size is greater than the cutoff threshold\n        $body = $request->getBody();\n        $size = $body->getSize();\n\n        if ($size === null || $size >= (int) $expect || !$body->isSeekable()) {\n            $modify['set_headers']['Expect'] = '100-Continue';\n        }\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/RedirectMiddleware.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Exception\\BadResponseException;\nuse GuzzleHttp\\Exception\\TooManyRedirectsException;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\UriInterface;\n\n\/**\n * Request redirect middleware.\n *\n * Apply this middleware like other middleware using\n * {@see \\GuzzleHttp\\Middleware::redirect()}.\n *\n * @final\n *\/\nclass RedirectMiddleware\n{\n    public const HISTORY_HEADER = 'X-Guzzle-Redirect-History';\n\n    public const STATUS_HISTORY_HEADER = 'X-Guzzle-Redirect-Status-History';\n\n    \/**\n     * @var array\n     *\/\n    public static $defaultSettings = [\n        'max' => 5,\n        'protocols' => ['http', 'https'],\n        'strict' => false,\n        'referer' => false,\n        'track_redirects' => false,\n    ];\n\n    \/**\n     * @var callable(RequestInterface, array): PromiseInterface\n     *\/\n    private $nextHandler;\n\n    \/**\n     * @param callable(RequestInterface, array): PromiseInterface $nextHandler Next handler to invoke.\n     *\/\n    public function __construct(callable $nextHandler)\n    {\n        $this->nextHandler = $nextHandler;\n    }\n\n    public function __invoke(RequestInterface $request, array $options): PromiseInterface\n    {\n        $fn = $this->nextHandler;\n\n        if (empty($options['allow_redirects'])) {\n            return $fn($request, $options);\n        }\n\n        if ($options['allow_redirects'] === true) {\n            $options['allow_redirects'] = self::$defaultSettings;\n        } elseif (!\\is_array($options['allow_redirects'])) {\n            throw new \\InvalidArgumentException('allow_redirects must be true, false, or array');\n        } else {\n            \/\/ Merge the default settings with the provided settings\n            $options['allow_redirects'] += self::$defaultSettings;\n        }\n\n        if (empty($options['allow_redirects']['max'])) {\n            return $fn($request, $options);\n        }\n\n        return $fn($request, $options)\n            ->then(function (ResponseInterface $response) use ($request, $options) {\n                return $this->checkRedirect($request, $options, $response);\n            });\n    }\n\n    \/**\n     * @return ResponseInterface|PromiseInterface\n     *\/\n    public function checkRedirect(RequestInterface $request, array $options, ResponseInterface $response)\n    {\n        if (\\strpos((string) $response->getStatusCode(), '3') !== 0\n            || !$response->hasHeader('Location')\n        ) {\n            return $response;\n        }\n\n        $this->guardMax($request, $response, $options);\n        $nextRequest = $this->modifyRequest($request, $options, $response);\n\n        \/\/ If authorization is handled by curl, unset it if URI is cross-origin.\n        if (Psr7\\UriComparator::isCrossOrigin($request->getUri(), $nextRequest->getUri()) && defined('\\CURLOPT_HTTPAUTH')) {\n            unset(\n                $options['curl'][\\CURLOPT_HTTPAUTH],\n                $options['curl'][\\CURLOPT_USERPWD]\n            );\n        }\n\n        if (isset($options['allow_redirects']['on_redirect'])) {\n            ($options['allow_redirects']['on_redirect'])(\n                $request,\n                $response,\n                $nextRequest->getUri()\n            );\n        }\n\n        $promise = $this($nextRequest, $options);\n\n        \/\/ Add headers to be able to track history of redirects.\n        if (!empty($options['allow_redirects']['track_redirects'])) {\n            return $this->withTracking(\n                $promise,\n                (string) $nextRequest->getUri(),\n                $response->getStatusCode()\n            );\n        }\n\n        return $promise;\n    }\n\n    \/**\n     * Enable tracking on promise.\n     *\/\n    private function withTracking(PromiseInterface $promise, string $uri, int $statusCode): PromiseInterface\n    {\n        return $promise->then(\n            static function (ResponseInterface $response) use ($uri, $statusCode) {\n                \/\/ Note that we are pushing to the front of the list as this\n                \/\/ would be an earlier response than what is currently present\n                \/\/ in the history header.\n                $historyHeader = $response->getHeader(self::HISTORY_HEADER);\n                $statusHeader = $response->getHeader(self::STATUS_HISTORY_HEADER);\n                \\array_unshift($historyHeader, $uri);\n                \\array_unshift($statusHeader, (string) $statusCode);\n\n                return $response->withHeader(self::HISTORY_HEADER, $historyHeader)\n                                ->withHeader(self::STATUS_HISTORY_HEADER, $statusHeader);\n            }\n        );\n    }\n\n    \/**\n     * Check for too many redirects.\n     *\n     * @throws TooManyRedirectsException Too many redirects.\n     *\/\n    private function guardMax(RequestInterface $request, ResponseInterface $response, array &$options): void\n    {\n        $current = $options['__redirect_count']\n            ?? 0;\n        $options['__redirect_count'] = $current + 1;\n        $max = $options['allow_redirects']['max'];\n\n        if ($options['__redirect_count'] > $max) {\n            throw new TooManyRedirectsException(\"Will not follow more than {$max} redirects\", $request, $response);\n        }\n    }\n\n    public function modifyRequest(RequestInterface $request, array $options, ResponseInterface $response): RequestInterface\n    {\n        \/\/ Request modifications to apply.\n        $modify = [];\n        $protocols = $options['allow_redirects']['protocols'];\n\n        \/\/ Use a GET request if this is an entity enclosing request and we are\n        \/\/ not forcing RFC compliance, but rather emulating what all browsers\n        \/\/ would do.\n        $statusCode = $response->getStatusCode();\n        if ($statusCode == 303\n            || ($statusCode <= 302 && !$options['allow_redirects']['strict'])\n        ) {\n            $safeMethods = ['GET', 'HEAD', 'OPTIONS'];\n            $requestMethod = $request->getMethod();\n\n            $modify['method'] = in_array($requestMethod, $safeMethods) ? $requestMethod : 'GET';\n            $modify['body'] = '';\n        }\n\n        $uri = self::redirectUri($request, $response, $protocols);\n        if (isset($options['idn_conversion']) && ($options['idn_conversion'] !== false)) {\n            $idnOptions = ($options['idn_conversion'] === true) ? \\IDNA_DEFAULT : $options['idn_conversion'];\n            $uri = Utils::idnUriConvert($uri, $idnOptions);\n        }\n\n        $modify['uri'] = $uri;\n        Psr7\\Message::rewindBody($request);\n\n        \/\/ Add the Referer header if it is told to do so and only\n        \/\/ add the header if we are not redirecting from https to http.\n        if ($options['allow_redirects']['referer']\n            && $modify['uri']->getScheme() === $request->getUri()->getScheme()\n        ) {\n            $uri = $request->getUri()->withUserInfo('');\n            $modify['set_headers']['Referer'] = (string) $uri;\n        } else {\n            $modify['remove_headers'][] = 'Referer';\n        }\n\n        \/\/ Remove Authorization and Cookie headers if URI is cross-origin.\n        if (Psr7\\UriComparator::isCrossOrigin($request->getUri(), $modify['uri'])) {\n            $modify['remove_headers'][] = 'Authorization';\n            $modify['remove_headers'][] = 'Cookie';\n        }\n\n        return Psr7\\Utils::modifyRequest($request, $modify);\n    }\n\n    \/**\n     * Set the appropriate URL on the request based on the location header.\n     *\/\n    private static function redirectUri(\n        RequestInterface $request,\n        ResponseInterface $response,\n        array $protocols\n    ): UriInterface {\n        $location = Psr7\\UriResolver::resolve(\n            $request->getUri(),\n            new Psr7\\Uri($response->getHeaderLine('Location'))\n        );\n\n        \/\/ Ensure that the redirect URI is allowed based on the protocols.\n        if (!\\in_array($location->getScheme(), $protocols)) {\n            throw new BadResponseException(\\sprintf('Redirect URI, %s, does not use one of the allowed redirect protocols: %s', $location, \\implode(', ', $protocols)), $request, $response);\n        }\n\n        return $location;\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/RequestOptions.php" : "<?php\n\nnamespace GuzzleHttp;\n\n\/**\n * This class contains a list of built-in Guzzle request options.\n *\n * @see https:\/\/docs.guzzlephp.org\/en\/latest\/request-options.html\n *\/\nfinal class RequestOptions\n{\n    \/**\n     * allow_redirects: (bool|array) Controls redirect behavior. Pass false\n     * to disable redirects, pass true to enable redirects, pass an\n     * associative to provide custom redirect settings. Defaults to \"false\".\n     * This option only works if your handler has the RedirectMiddleware. When\n     * passing an associative array, you can provide the following key value\n     * pairs:\n     *\n     * - max: (int, default=5) maximum number of allowed redirects.\n     * - strict: (bool, default=false) Set to true to use strict redirects\n     *   meaning redirect POST requests with POST requests vs. doing what most\n     *   browsers do which is redirect POST requests with GET requests\n     * - referer: (bool, default=false) Set to true to enable the Referer\n     *   header.\n     * - protocols: (array, default=['http', 'https']) Allowed redirect\n     *   protocols.\n     * - on_redirect: (callable) PHP callable that is invoked when a redirect\n     *   is encountered. The callable is invoked with the request, the redirect\n     *   response that was received, and the effective URI. Any return value\n     *   from the on_redirect function is ignored.\n     *\/\n    public const ALLOW_REDIRECTS = 'allow_redirects';\n\n    \/**\n     * auth: (array) Pass an array of HTTP authentication parameters to use\n     * with the request. The array must contain the username in index [0],\n     * the password in index [1], and you can optionally provide a built-in\n     * authentication type in index [2]. Pass null to disable authentication\n     * for a request.\n     *\/\n    public const AUTH = 'auth';\n\n    \/**\n     * body: (resource|string|null|int|float|StreamInterface|callable|\\Iterator)\n     * Body to send in the request.\n     *\/\n    public const BODY = 'body';\n\n    \/**\n     * cert: (string|array) Set to a string to specify the path to a file\n     * containing a PEM formatted SSL client side certificate. If a password\n     * is required, then set cert to an array containing the path to the PEM\n     * file in the first array element followed by the certificate password\n     * in the second array element.\n     *\/\n    public const CERT = 'cert';\n\n    \/**\n     * cookies: (bool|GuzzleHttp\\Cookie\\CookieJarInterface, default=false)\n     * Specifies whether or not cookies are used in a request or what cookie\n     * jar to use or what cookies to send. This option only works if your\n     * handler has the `cookie` middleware. Valid values are `false` and\n     * an instance of {@see \\GuzzleHttp\\Cookie\\CookieJarInterface}.\n     *\/\n    public const COOKIES = 'cookies';\n\n    \/**\n     * connect_timeout: (float, default=0) Float describing the number of\n     * seconds to wait while trying to connect to a server. Use 0 to wait\n     * 300 seconds (the default behavior).\n     *\/\n    public const CONNECT_TIMEOUT = 'connect_timeout';\n\n    \/**\n     * crypto_method: (int) A value describing the minimum TLS protocol\n     * version to use.\n     *\n     * This setting must be set to one of the\n     * ``STREAM_CRYPTO_METHOD_TLS*_CLIENT`` constants. PHP 7.4 or higher is\n     * required in order to use TLS 1.3, and cURL 7.34.0 or higher is required\n     * in order to specify a crypto method, with cURL 7.52.0 or higher being\n     * required to use TLS 1.3.\n     *\/\n    public const CRYPTO_METHOD = 'crypto_method';\n\n    \/**\n     * debug: (bool|resource) Set to true or set to a PHP stream returned by\n     * fopen()  enable debug output with the HTTP handler used to send a\n     * request.\n     *\/\n    public const DEBUG = 'debug';\n\n    \/**\n     * decode_content: (bool, default=true) Specify whether or not\n     * Content-Encoding responses (gzip, deflate, etc.) are automatically\n     * decoded.\n     *\/\n    public const DECODE_CONTENT = 'decode_content';\n\n    \/**\n     * delay: (int) The amount of time to delay before sending in milliseconds.\n     *\/\n    public const DELAY = 'delay';\n\n    \/**\n     * expect: (bool|integer) Controls the behavior of the\n     * \"Expect: 100-Continue\" header.\n     *\n     * Set to `true` to enable the \"Expect: 100-Continue\" header for all\n     * requests that sends a body. Set to `false` to disable the\n     * \"Expect: 100-Continue\" header for all requests. Set to a number so that\n     * the size of the payload must be greater than the number in order to send\n     * the Expect header. Setting to a number will send the Expect header for\n     * all requests in which the size of the payload cannot be determined or\n     * where the body is not rewindable.\n     *\n     * By default, Guzzle will add the \"Expect: 100-Continue\" header when the\n     * size of the body of a request is greater than 1 MB and a request is\n     * using HTTP\/1.1.\n     *\/\n    public const EXPECT = 'expect';\n\n    \/**\n     * form_params: (array) Associative array of form field names to values\n     * where each value is a string or array of strings. Sets the Content-Type\n     * header to application\/x-www-form-urlencoded when no Content-Type header\n     * is already present.\n     *\/\n    public const FORM_PARAMS = 'form_params';\n\n    \/**\n     * headers: (array) Associative array of HTTP headers. Each value MUST be\n     * a string or array of strings.\n     *\/\n    public const HEADERS = 'headers';\n\n    \/**\n     * http_errors: (bool, default=true) Set to false to disable exceptions\n     * when a non- successful HTTP response is received. By default,\n     * exceptions will be thrown for 4xx and 5xx responses. This option only\n     * works if your handler has the `httpErrors` middleware.\n     *\/\n    public const HTTP_ERRORS = 'http_errors';\n\n    \/**\n     * idn: (bool|int, default=true) A combination of IDNA_* constants for\n     * idn_to_ascii() PHP's function (see \"options\" parameter). Set to false to\n     * disable IDN support completely, or to true to use the default\n     * configuration (IDNA_DEFAULT constant).\n     *\/\n    public const IDN_CONVERSION = 'idn_conversion';\n\n    \/**\n     * json: (mixed) Adds JSON data to a request. The provided value is JSON\n     * encoded and a Content-Type header of application\/json will be added to\n     * the request if no Content-Type header is already present.\n     *\/\n    public const JSON = 'json';\n\n    \/**\n     * multipart: (array) Array of associative arrays, each containing a\n     * required \"name\" key mapping to the form field, name, a required\n     * \"contents\" key mapping to a StreamInterface|resource|string, an\n     * optional \"headers\" associative array of custom headers, and an\n     * optional \"filename\" key mapping to a string to send as the filename in\n     * the part. If no \"filename\" key is present, then no \"filename\" attribute\n     * will be added to the part.\n     *\/\n    public const MULTIPART = 'multipart';\n\n    \/**\n     * on_headers: (callable) A callable that is invoked when the HTTP headers\n     * of the response have been received but the body has not yet begun to\n     * download.\n     *\/\n    public const ON_HEADERS = 'on_headers';\n\n    \/**\n     * on_stats: (callable) allows you to get access to transfer statistics of\n     * a request and access the lower level transfer details of the handler\n     * associated with your client. ``on_stats`` is a callable that is invoked\n     * when a handler has finished sending a request. The callback is invoked\n     * with transfer statistics about the request, the response received, or\n     * the error encountered. Included in the data is the total amount of time\n     * taken to send the request.\n     *\/\n    public const ON_STATS = 'on_stats';\n\n    \/**\n     * progress: (callable) Defines a function to invoke when transfer\n     * progress is made. The function accepts the following positional\n     * arguments: the total number of bytes expected to be downloaded, the\n     * number of bytes downloaded so far, the number of bytes expected to be\n     * uploaded, the number of bytes uploaded so far.\n     *\/\n    public const PROGRESS = 'progress';\n\n    \/**\n     * proxy: (string|array) Pass a string to specify an HTTP proxy, or an\n     * array to specify different proxies for different protocols (where the\n     * key is the protocol and the value is a proxy string).\n     *\/\n    public const PROXY = 'proxy';\n\n    \/**\n     * query: (array|string) Associative array of query string values to add\n     * to the request. This option uses PHP's http_build_query() to create\n     * the string representation. Pass a string value if you need more\n     * control than what this method provides\n     *\/\n    public const QUERY = 'query';\n\n    \/**\n     * sink: (resource|string|StreamInterface) Where the data of the\n     * response is written to. Defaults to a PHP temp stream. Providing a\n     * string will write data to a file by the given name.\n     *\/\n    public const SINK = 'sink';\n\n    \/**\n     * synchronous: (bool) Set to true to inform HTTP handlers that you intend\n     * on waiting on the response. This can be useful for optimizations. Note\n     * that a promise is still returned if you are using one of the async\n     * client methods.\n     *\/\n    public const SYNCHRONOUS = 'synchronous';\n\n    \/**\n     * ssl_key: (array|string) Specify the path to a file containing a private\n     * SSL key in PEM format. If a password is required, then set to an array\n     * containing the path to the SSL key in the first array element followed\n     * by the password required for the certificate in the second element.\n     *\/\n    public const SSL_KEY = 'ssl_key';\n\n    \/**\n     * stream: Set to true to attempt to stream a response rather than\n     * download it all up-front.\n     *\/\n    public const STREAM = 'stream';\n\n    \/**\n     * verify: (bool|string, default=true) Describes the SSL certificate\n     * verification behavior of a request. Set to true to enable SSL\n     * certificate verification using the system CA bundle when available\n     * (the default). Set to false to disable certificate verification (this\n     * is insecure!). Set to a string to provide the path to a CA bundle on\n     * disk to enable verification using a custom certificate.\n     *\/\n    public const VERIFY = 'verify';\n\n    \/**\n     * timeout: (float, default=0) Float describing the timeout of the\n     * request in seconds. Use 0 to wait indefinitely (the default behavior).\n     *\/\n    public const TIMEOUT = 'timeout';\n\n    \/**\n     * read_timeout: (float, default=default_socket_timeout ini setting) Float describing\n     * the body read timeout, for stream requests.\n     *\/\n    public const READ_TIMEOUT = 'read_timeout';\n\n    \/**\n     * version: (float) Specifies the HTTP protocol version to attempt to use.\n     *\/\n    public const VERSION = 'version';\n\n    \/**\n     * force_ip_resolve: (bool) Force client to use only ipv4 or ipv6 protocol\n     *\/\n    public const FORCE_IP_RESOLVE = 'force_ip_resolve';\n}\n",
"vendor/guzzlehttp/guzzle/src/RetryMiddleware.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Promise as P;\nuse GuzzleHttp\\Promise\\PromiseInterface;\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\n\n\/**\n * Middleware that retries requests based on the boolean result of\n * invoking the provided \"decider\" function.\n *\n * @final\n *\/\nclass RetryMiddleware\n{\n    \/**\n     * @var callable(RequestInterface, array): PromiseInterface\n     *\/\n    private $nextHandler;\n\n    \/**\n     * @var callable\n     *\/\n    private $decider;\n\n    \/**\n     * @var callable(int)\n     *\/\n    private $delay;\n\n    \/**\n     * @param callable                                            $decider     Function that accepts the number of retries,\n     *                                                                         a request, [response], and [exception] and\n     *                                                                         returns true if the request is to be\n     *                                                                         retried.\n     * @param callable(RequestInterface, array): PromiseInterface $nextHandler Next handler to invoke.\n     * @param (callable(int): int)|null                           $delay       Function that accepts the number of retries\n     *                                                                         and returns the number of\n     *                                                                         milliseconds to delay.\n     *\/\n    public function __construct(callable $decider, callable $nextHandler, callable $delay = null)\n    {\n        $this->decider = $decider;\n        $this->nextHandler = $nextHandler;\n        $this->delay = $delay ?: __CLASS__.'::exponentialDelay';\n    }\n\n    \/**\n     * Default exponential backoff delay function.\n     *\n     * @return int milliseconds.\n     *\/\n    public static function exponentialDelay(int $retries): int\n    {\n        return (int) 2 ** ($retries - 1) * 1000;\n    }\n\n    public function __invoke(RequestInterface $request, array $options): PromiseInterface\n    {\n        if (!isset($options['retries'])) {\n            $options['retries'] = 0;\n        }\n\n        $fn = $this->nextHandler;\n\n        return $fn($request, $options)\n            ->then(\n                $this->onFulfilled($request, $options),\n                $this->onRejected($request, $options)\n            );\n    }\n\n    \/**\n     * Execute fulfilled closure\n     *\/\n    private function onFulfilled(RequestInterface $request, array $options): callable\n    {\n        return function ($value) use ($request, $options) {\n            if (!($this->decider)(\n                $options['retries'],\n                $request,\n                $value,\n                null\n            )) {\n                return $value;\n            }\n\n            return $this->doRetry($request, $options, $value);\n        };\n    }\n\n    \/**\n     * Execute rejected closure\n     *\/\n    private function onRejected(RequestInterface $req, array $options): callable\n    {\n        return function ($reason) use ($req, $options) {\n            if (!($this->decider)(\n                $options['retries'],\n                $req,\n                null,\n                $reason\n            )) {\n                return P\\Create::rejectionFor($reason);\n            }\n\n            return $this->doRetry($req, $options);\n        };\n    }\n\n    private function doRetry(RequestInterface $request, array $options, ResponseInterface $response = null): PromiseInterface\n    {\n        $options['delay'] = ($this->delay)(++$options['retries'], $response, $request);\n\n        return $this($request, $options);\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/TransferStats.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse Psr\\Http\\Message\\RequestInterface;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\UriInterface;\n\n\/**\n * Represents data at the point after it was transferred either successfully\n * or after a network error.\n *\/\nfinal class TransferStats\n{\n    \/**\n     * @var RequestInterface\n     *\/\n    private $request;\n\n    \/**\n     * @var ResponseInterface|null\n     *\/\n    private $response;\n\n    \/**\n     * @var float|null\n     *\/\n    private $transferTime;\n\n    \/**\n     * @var array\n     *\/\n    private $handlerStats;\n\n    \/**\n     * @var mixed|null\n     *\/\n    private $handlerErrorData;\n\n    \/**\n     * @param RequestInterface       $request          Request that was sent.\n     * @param ResponseInterface|null $response         Response received (if any)\n     * @param float|null             $transferTime     Total handler transfer time.\n     * @param mixed                  $handlerErrorData Handler error data.\n     * @param array                  $handlerStats     Handler specific stats.\n     *\/\n    public function __construct(\n        RequestInterface $request,\n        ResponseInterface $response = null,\n        float $transferTime = null,\n        $handlerErrorData = null,\n        array $handlerStats = []\n    ) {\n        $this->request = $request;\n        $this->response = $response;\n        $this->transferTime = $transferTime;\n        $this->handlerErrorData = $handlerErrorData;\n        $this->handlerStats = $handlerStats;\n    }\n\n    public function getRequest(): RequestInterface\n    {\n        return $this->request;\n    }\n\n    \/**\n     * Returns the response that was received (if any).\n     *\/\n    public function getResponse(): ?ResponseInterface\n    {\n        return $this->response;\n    }\n\n    \/**\n     * Returns true if a response was received.\n     *\/\n    public function hasResponse(): bool\n    {\n        return $this->response !== null;\n    }\n\n    \/**\n     * Gets handler specific error data.\n     *\n     * This might be an exception, a integer representing an error code, or\n     * anything else. Relying on this value assumes that you know what handler\n     * you are using.\n     *\n     * @return mixed\n     *\/\n    public function getHandlerErrorData()\n    {\n        return $this->handlerErrorData;\n    }\n\n    \/**\n     * Get the effective URI the request was sent to.\n     *\/\n    public function getEffectiveUri(): UriInterface\n    {\n        return $this->request->getUri();\n    }\n\n    \/**\n     * Get the estimated time the request was being transferred by the handler.\n     *\n     * @return float|null Time in seconds.\n     *\/\n    public function getTransferTime(): ?float\n    {\n        return $this->transferTime;\n    }\n\n    \/**\n     * Gets an array of all of the handler specific transfer data.\n     *\/\n    public function getHandlerStats(): array\n    {\n        return $this->handlerStats;\n    }\n\n    \/**\n     * Get a specific handler statistic from the handler by name.\n     *\n     * @param string $stat Handler specific transfer stat to retrieve.\n     *\n     * @return mixed|null\n     *\/\n    public function getHandlerStat(string $stat)\n    {\n        return $this->handlerStats[$stat] ?? null;\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/Utils.php" : "<?php\n\nnamespace GuzzleHttp;\n\nuse GuzzleHttp\\Exception\\InvalidArgumentException;\nuse GuzzleHttp\\Handler\\CurlHandler;\nuse GuzzleHttp\\Handler\\CurlMultiHandler;\nuse GuzzleHttp\\Handler\\Proxy;\nuse GuzzleHttp\\Handler\\StreamHandler;\nuse Psr\\Http\\Message\\UriInterface;\n\nfinal class Utils\n{\n    \/**\n     * Debug function used to describe the provided value type and class.\n     *\n     * @param mixed $input\n     *\n     * @return string Returns a string containing the type of the variable and\n     *                if a class is provided, the class name.\n     *\/\n    public static function describeType($input): string\n    {\n        switch (\\gettype($input)) {\n            case 'object':\n                return 'object('.\\get_class($input).')';\n            case 'array':\n                return 'array('.\\count($input).')';\n            default:\n                \\ob_start();\n                \\var_dump($input);\n                \/\/ normalize float vs double\n                \/** @var string $varDumpContent *\/\n                $varDumpContent = \\ob_get_clean();\n\n                return \\str_replace('double(', 'float(', \\rtrim($varDumpContent));\n        }\n    }\n\n    \/**\n     * Parses an array of header lines into an associative array of headers.\n     *\n     * @param iterable $lines Header lines array of strings in the following\n     *                        format: \"Name: Value\"\n     *\/\n    public static function headersFromLines(iterable $lines): array\n    {\n        $headers = [];\n\n        foreach ($lines as $line) {\n            $parts = \\explode(':', $line, 2);\n            $headers[\\trim($parts[0])][] = isset($parts[1]) ? \\trim($parts[1]) : null;\n        }\n\n        return $headers;\n    }\n\n    \/**\n     * Returns a debug stream based on the provided variable.\n     *\n     * @param mixed $value Optional value\n     *\n     * @return resource\n     *\/\n    public static function debugResource($value = null)\n    {\n        if (\\is_resource($value)) {\n            return $value;\n        }\n        if (\\defined('STDOUT')) {\n            return \\STDOUT;\n        }\n\n        return \\GuzzleHttp\\Psr7\\Utils::tryFopen('php:\/\/output', 'w');\n    }\n\n    \/**\n     * Chooses and creates a default handler to use based on the environment.\n     *\n     * The returned handler is not wrapped by any default middlewares.\n     *\n     * @return callable(\\Psr\\Http\\Message\\RequestInterface, array): \\GuzzleHttp\\Promise\\PromiseInterface Returns the best handler for the given system.\n     *\n     * @throws \\RuntimeException if no viable Handler is available.\n     *\/\n    public static function chooseHandler(): callable\n    {\n        $handler = null;\n\n        if (\\defined('CURLOPT_CUSTOMREQUEST')) {\n            if (\\function_exists('curl_multi_exec') && \\function_exists('curl_exec')) {\n                $handler = Proxy::wrapSync(new CurlMultiHandler(), new CurlHandler());\n            } elseif (\\function_exists('curl_exec')) {\n                $handler = new CurlHandler();\n            } elseif (\\function_exists('curl_multi_exec')) {\n                $handler = new CurlMultiHandler();\n            }\n        }\n\n        if (\\ini_get('allow_url_fopen')) {\n            $handler = $handler\n                ? Proxy::wrapStreaming($handler, new StreamHandler())\n                : new StreamHandler();\n        } elseif (!$handler) {\n            throw new \\RuntimeException('GuzzleHttp requires cURL, the allow_url_fopen ini setting, or a custom HTTP handler.');\n        }\n\n        return $handler;\n    }\n\n    \/**\n     * Get the default User-Agent string to use with Guzzle.\n     *\/\n    public static function defaultUserAgent(): string\n    {\n        return sprintf('GuzzleHttp\/%d', ClientInterface::MAJOR_VERSION);\n    }\n\n    \/**\n     * Returns the default cacert bundle for the current system.\n     *\n     * First, the openssl.cafile and curl.cainfo php.ini settings are checked.\n     * If those settings are not configured, then the common locations for\n     * bundles found on Red Hat, CentOS, Fedora, Ubuntu, Debian, FreeBSD, OS X\n     * and Windows are checked. If any of these file locations are found on\n     * disk, they will be utilized.\n     *\n     * Note: the result of this function is cached for subsequent calls.\n     *\n     * @throws \\RuntimeException if no bundle can be found.\n     *\n     * @deprecated Utils::defaultCaBundle will be removed in guzzlehttp\/guzzle:8.0. This method is not needed in PHP 5.6+.\n     *\/\n    public static function defaultCaBundle(): string\n    {\n        static $cached = null;\n        static $cafiles = [\n            \/\/ Red Hat, CentOS, Fedora (provided by the ca-certificates package)\n            '\/etc\/pki\/tls\/certs\/ca-bundle.crt',\n            \/\/ Ubuntu, Debian (provided by the ca-certificates package)\n            '\/etc\/ssl\/certs\/ca-certificates.crt',\n            \/\/ FreeBSD (provided by the ca_root_nss package)\n            '\/usr\/local\/share\/certs\/ca-root-nss.crt',\n            \/\/ SLES 12 (provided by the ca-certificates package)\n            '\/var\/lib\/ca-certificates\/ca-bundle.pem',\n            \/\/ OS X provided by homebrew (using the default path)\n            '\/usr\/local\/etc\/openssl\/cert.pem',\n            \/\/ Google app engine\n            '\/etc\/ca-certificates.crt',\n            \/\/ Windows?\n            'C:\\\\windows\\\\system32\\\\curl-ca-bundle.crt',\n            'C:\\\\windows\\\\curl-ca-bundle.crt',\n        ];\n\n        if ($cached) {\n            return $cached;\n        }\n\n        if ($ca = \\ini_get('openssl.cafile')) {\n            return $cached = $ca;\n        }\n\n        if ($ca = \\ini_get('curl.cainfo')) {\n            return $cached = $ca;\n        }\n\n        foreach ($cafiles as $filename) {\n            if (\\file_exists($filename)) {\n                return $cached = $filename;\n            }\n        }\n\n        throw new \\RuntimeException(\n            <<< EOT\nNo system CA bundle could be found in any of the the common system locations.\nPHP versions earlier than 5.6 are not properly configured to use the system's\nCA bundle by default. In order to verify peer certificates, you will need to\nsupply the path on disk to a certificate bundle to the 'verify' request\noption: https:\/\/docs.guzzlephp.org\/en\/latest\/request-options.html#verify. If\nyou do not need a specific certificate bundle, then Mozilla provides a commonly\nused CA bundle which can be downloaded here (provided by the maintainer of\ncURL): https:\/\/curl.haxx.se\/ca\/cacert.pem. Once you have a CA bundle available\non disk, you can set the 'openssl.cafile' PHP ini setting to point to the path\nto the file, allowing you to omit the 'verify' request option. See\nhttps:\/\/curl.haxx.se\/docs\/sslcerts.html for more information.\nEOT\n        );\n    }\n\n    \/**\n     * Creates an associative array of lowercase header names to the actual\n     * header casing.\n     *\/\n    public static function normalizeHeaderKeys(array $headers): array\n    {\n        $result = [];\n        foreach (\\array_keys($headers) as $key) {\n            $result[\\strtolower($key)] = $key;\n        }\n\n        return $result;\n    }\n\n    \/**\n     * Returns true if the provided host matches any of the no proxy areas.\n     *\n     * This method will strip a port from the host if it is present. Each pattern\n     * can be matched with an exact match (e.g., \"foo.com\" == \"foo.com\") or a\n     * partial match: (e.g., \"foo.com\" == \"baz.foo.com\" and \".foo.com\" ==\n     * \"baz.foo.com\", but \".foo.com\" != \"foo.com\").\n     *\n     * Areas are matched in the following cases:\n     * 1. \"*\" (without quotes) always matches any hosts.\n     * 2. An exact match.\n     * 3. The area starts with \".\" and the area is the last part of the host. e.g.\n     *    '.mit.edu' will match any host that ends with '.mit.edu'.\n     *\n     * @param string   $host         Host to check against the patterns.\n     * @param string[] $noProxyArray An array of host patterns.\n     *\n     * @throws InvalidArgumentException\n     *\/\n    public static function isHostInNoProxy(string $host, array $noProxyArray): bool\n    {\n        if (\\strlen($host) === 0) {\n            throw new InvalidArgumentException('Empty host provided');\n        }\n\n        \/\/ Strip port if present.\n        [$host] = \\explode(':', $host, 2);\n\n        foreach ($noProxyArray as $area) {\n            \/\/ Always match on wildcards.\n            if ($area === '*') {\n                return true;\n            }\n\n            if (empty($area)) {\n                \/\/ Don't match on empty values.\n                continue;\n            }\n\n            if ($area === $host) {\n                \/\/ Exact matches.\n                return true;\n            }\n            \/\/ Special match if the area when prefixed with \".\". Remove any\n            \/\/ existing leading \".\" and add a new leading \".\".\n            $area = '.'.\\ltrim($area, '.');\n            if (\\substr($host, -\\strlen($area)) === $area) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    \/**\n     * Wrapper for json_decode that throws when an error occurs.\n     *\n     * @param string $json    JSON data to parse\n     * @param bool   $assoc   When true, returned objects will be converted\n     *                        into associative arrays.\n     * @param int    $depth   User specified recursion depth.\n     * @param int    $options Bitmask of JSON decode options.\n     *\n     * @return object|array|string|int|float|bool|null\n     *\n     * @throws InvalidArgumentException if the JSON cannot be decoded.\n     *\n     * @see https:\/\/www.php.net\/manual\/en\/function.json-decode.php\n     *\/\n    public static function jsonDecode(string $json, bool $assoc = false, int $depth = 512, int $options = 0)\n    {\n        $data = \\json_decode($json, $assoc, $depth, $options);\n        if (\\JSON_ERROR_NONE !== \\json_last_error()) {\n            throw new InvalidArgumentException('json_decode error: '.\\json_last_error_msg());\n        }\n\n        return $data;\n    }\n\n    \/**\n     * Wrapper for JSON encoding that throws when an error occurs.\n     *\n     * @param mixed $value   The value being encoded\n     * @param int   $options JSON encode option bitmask\n     * @param int   $depth   Set the maximum depth. Must be greater than zero.\n     *\n     * @throws InvalidArgumentException if the JSON cannot be encoded.\n     *\n     * @see https:\/\/www.php.net\/manual\/en\/function.json-encode.php\n     *\/\n    public static function jsonEncode($value, int $options = 0, int $depth = 512): string\n    {\n        $json = \\json_encode($value, $options, $depth);\n        if (\\JSON_ERROR_NONE !== \\json_last_error()) {\n            throw new InvalidArgumentException('json_encode error: '.\\json_last_error_msg());\n        }\n\n        \/** @var string *\/\n        return $json;\n    }\n\n    \/**\n     * Wrapper for the hrtime() or microtime() functions\n     * (depending on the PHP version, one of the two is used)\n     *\n     * @return float UNIX timestamp\n     *\n     * @internal\n     *\/\n    public static function currentTime(): float\n    {\n        return (float) \\function_exists('hrtime') ? \\hrtime(true) \/ 1e9 : \\microtime(true);\n    }\n\n    \/**\n     * @throws InvalidArgumentException\n     *\n     * @internal\n     *\/\n    public static function idnUriConvert(UriInterface $uri, int $options = 0): UriInterface\n    {\n        if ($uri->getHost()) {\n            $asciiHost = self::idnToAsci($uri->getHost(), $options, $info);\n            if ($asciiHost === false) {\n                $errorBitSet = $info['errors'] ?? 0;\n\n                $errorConstants = array_filter(array_keys(get_defined_constants()), static function (string $name): bool {\n                    return substr($name, 0, 11) === 'IDNA_ERROR_';\n                });\n\n                $errors = [];\n                foreach ($errorConstants as $errorConstant) {\n                    if ($errorBitSet & constant($errorConstant)) {\n                        $errors[] = $errorConstant;\n                    }\n                }\n\n                $errorMessage = 'IDN conversion failed';\n                if ($errors) {\n                    $errorMessage .= ' (errors: '.implode(', ', $errors).')';\n                }\n\n                throw new InvalidArgumentException($errorMessage);\n            }\n            if ($uri->getHost() !== $asciiHost) {\n                \/\/ Replace URI only if the ASCII version is different\n                $uri = $uri->withHost($asciiHost);\n            }\n        }\n\n        return $uri;\n    }\n\n    \/**\n     * @internal\n     *\/\n    public static function getenv(string $name): ?string\n    {\n        if (isset($_SERVER[$name])) {\n            return (string) $_SERVER[$name];\n        }\n\n        if (\\PHP_SAPI === 'cli' && ($value = \\getenv($name)) !== false && $value !== null) {\n            return (string) $value;\n        }\n\n        return null;\n    }\n\n    \/**\n     * @return string|false\n     *\/\n    private static function idnToAsci(string $domain, int $options, ?array &$info = [])\n    {\n        if (\\function_exists('idn_to_ascii') && \\defined('INTL_IDNA_VARIANT_UTS46')) {\n            return \\idn_to_ascii($domain, $options, \\INTL_IDNA_VARIANT_UTS46, $info);\n        }\n\n        throw new \\Error('ext-idn or symfony\/polyfill-intl-idn not loaded or too old');\n    }\n}\n",
"vendor/guzzlehttp/guzzle/src/functions.php" : "<?php\n\nnamespace GuzzleHttp;\n\n\/**\n * Debug function used to describe the provided value type and class.\n *\n * @param mixed $input Any type of variable to describe the type of. This\n *                     parameter misses a typehint because of that.\n *\n * @return string Returns a string containing the type of the variable and\n *                if a class is provided, the class name.\n *\n * @deprecated describe_type will be removed in guzzlehttp\/guzzle:8.0. Use Utils::describeType instead.\n *\/\nfunction describe_type($input): string\n{\n    return Utils::describeType($input);\n}\n\n\/**\n * Parses an array of header lines into an associative array of headers.\n *\n * @param iterable $lines Header lines array of strings in the following\n *                        format: \"Name: Value\"\n *\n * @deprecated headers_from_lines will be removed in guzzlehttp\/guzzle:8.0. Use Utils::headersFromLines instead.\n *\/\nfunction headers_from_lines(iterable $lines): array\n{\n    return Utils::headersFromLines($lines);\n}\n\n\/**\n * Returns a debug stream based on the provided variable.\n *\n * @param mixed $value Optional value\n *\n * @return resource\n *\n * @deprecated debug_resource will be removed in guzzlehttp\/guzzle:8.0. Use Utils::debugResource instead.\n *\/\nfunction debug_resource($value = null)\n{\n    return Utils::debugResource($value);\n}\n\n\/**\n * Chooses and creates a default handler to use based on the environment.\n *\n * The returned handler is not wrapped by any default middlewares.\n *\n * @return callable(\\Psr\\Http\\Message\\RequestInterface, array): \\GuzzleHttp\\Promise\\PromiseInterface Returns the best handler for the given system.\n *\n * @throws \\RuntimeException if no viable Handler is available.\n *\n * @deprecated choose_handler will be removed in guzzlehttp\/guzzle:8.0. Use Utils::chooseHandler instead.\n *\/\nfunction choose_handler(): callable\n{\n    return Utils::chooseHandler();\n}\n\n\/**\n * Get the default User-Agent string to use with Guzzle.\n *\n * @deprecated default_user_agent will be removed in guzzlehttp\/guzzle:8.0. Use Utils::defaultUserAgent instead.\n *\/\nfunction default_user_agent(): string\n{\n    return Utils::defaultUserAgent();\n}\n\n\/**\n * Returns the default cacert bundle for the current system.\n *\n * First, the openssl.cafile and curl.cainfo php.ini settings are checked.\n * If those settings are not configured, then the common locations for\n * bundles found on Red Hat, CentOS, Fedora, Ubuntu, Debian, FreeBSD, OS X\n * and Windows are checked. If any of these file locations are found on\n * disk, they will be utilized.\n *\n * Note: the result of this function is cached for subsequent calls.\n *\n * @throws \\RuntimeException if no bundle can be found.\n *\n * @deprecated default_ca_bundle will be removed in guzzlehttp\/guzzle:8.0. This function is not needed in PHP 5.6+.\n *\/\nfunction default_ca_bundle(): string\n{\n    return Utils::defaultCaBundle();\n}\n\n\/**\n * Creates an associative array of lowercase header names to the actual\n * header casing.\n *\n * @deprecated normalize_header_keys will be removed in guzzlehttp\/guzzle:8.0. Use Utils::normalizeHeaderKeys instead.\n *\/\nfunction normalize_header_keys(array $headers): array\n{\n    return Utils::normalizeHeaderKeys($headers);\n}\n\n\/**\n * Returns true if the provided host matches any of the no proxy areas.\n *\n * This method will strip a port from the host if it is present. Each pattern\n * can be matched with an exact match (e.g., \"foo.com\" == \"foo.com\") or a\n * partial match: (e.g., \"foo.com\" == \"baz.foo.com\" and \".foo.com\" ==\n * \"baz.foo.com\", but \".foo.com\" != \"foo.com\").\n *\n * Areas are matched in the following cases:\n * 1. \"*\" (without quotes) always matches any hosts.\n * 2. An exact match.\n * 3. The area starts with \".\" and the area is the last part of the host. e.g.\n *    '.mit.edu' will match any host that ends with '.mit.edu'.\n *\n * @param string   $host         Host to check against the patterns.\n * @param string[] $noProxyArray An array of host patterns.\n *\n * @throws Exception\\InvalidArgumentException\n *\n * @deprecated is_host_in_noproxy will be removed in guzzlehttp\/guzzle:8.0. Use Utils::isHostInNoProxy instead.\n *\/\nfunction is_host_in_noproxy(string $host, array $noProxyArray): bool\n{\n    return Utils::isHostInNoProxy($host, $noProxyArray);\n}\n\n\/**\n * Wrapper for json_decode that throws when an error occurs.\n *\n * @param string $json    JSON data to parse\n * @param bool   $assoc   When true, returned objects will be converted\n *                        into associative arrays.\n * @param int    $depth   User specified recursion depth.\n * @param int    $options Bitmask of JSON decode options.\n *\n * @return object|array|string|int|float|bool|null\n *\n * @throws Exception\\InvalidArgumentException if the JSON cannot be decoded.\n *\n * @see https:\/\/www.php.net\/manual\/en\/function.json-decode.php\n * @deprecated json_decode will be removed in guzzlehttp\/guzzle:8.0. Use Utils::jsonDecode instead.\n *\/\nfunction json_decode(string $json, bool $assoc = false, int $depth = 512, int $options = 0)\n{\n    return Utils::jsonDecode($json, $assoc, $depth, $options);\n}\n\n\/**\n * Wrapper for JSON encoding that throws when an error occurs.\n *\n * @param mixed $value   The value being encoded\n * @param int   $options JSON encode option bitmask\n * @param int   $depth   Set the maximum depth. Must be greater than zero.\n *\n * @throws Exception\\InvalidArgumentException if the JSON cannot be encoded.\n *\n * @see https:\/\/www.php.net\/manual\/en\/function.json-encode.php\n * @deprecated json_encode will be removed in guzzlehttp\/guzzle:8.0. Use Utils::jsonEncode instead.\n *\/\nfunction json_encode($value, int $options = 0, int $depth = 512): string\n{\n    return Utils::jsonEncode($value, $options, $depth);\n}\n",
"vendor/guzzlehttp/guzzle/src/functions_include.php" : "<?php\n\n\/\/ Don't redefine the functions if included multiple times.\nif (!\\function_exists('GuzzleHttp\\describe_type')) {\n    require __DIR__.'\/functions.php';\n}\n",
"vendor/jakeasmith/http_build_url/src/http_build_url.php" : "<?php\n\n\/**\n * URL constants as defined in the PHP Manual under \"Constants usable with\n * http_build_url()\".\n *\n * @see http:\/\/us2.php.net\/manual\/en\/http.constants.php#http.constants.url\n *\/\nif (!defined('HTTP_URL_REPLACE')) {\n\tdefine('HTTP_URL_REPLACE', 1);\n}\nif (!defined('HTTP_URL_JOIN_PATH')) {\n\tdefine('HTTP_URL_JOIN_PATH', 2);\n}\nif (!defined('HTTP_URL_JOIN_QUERY')) {\n\tdefine('HTTP_URL_JOIN_QUERY', 4);\n}\nif (!defined('HTTP_URL_STRIP_USER')) {\n\tdefine('HTTP_URL_STRIP_USER', 8);\n}\nif (!defined('HTTP_URL_STRIP_PASS')) {\n\tdefine('HTTP_URL_STRIP_PASS', 16);\n}\nif (!defined('HTTP_URL_STRIP_AUTH')) {\n\tdefine('HTTP_URL_STRIP_AUTH', 32);\n}\nif (!defined('HTTP_URL_STRIP_PORT')) {\n\tdefine('HTTP_URL_STRIP_PORT', 64);\n}\nif (!defined('HTTP_URL_STRIP_PATH')) {\n\tdefine('HTTP_URL_STRIP_PATH', 128);\n}\nif (!defined('HTTP_URL_STRIP_QUERY')) {\n\tdefine('HTTP_URL_STRIP_QUERY', 256);\n}\nif (!defined('HTTP_URL_STRIP_FRAGMENT')) {\n\tdefine('HTTP_URL_STRIP_FRAGMENT', 512);\n}\nif (!defined('HTTP_URL_STRIP_ALL')) {\n\tdefine('HTTP_URL_STRIP_ALL', 1024);\n}\n\nif (!function_exists('http_build_url')) {\n\n\t\/**\n\t * Build a URL.\n\t *\n\t * The parts of the second URL will be merged into the first according to\n\t * the flags argument.\n\t *\n\t * @param mixed $url     (part(s) of) an URL in form of a string or\n\t *                       associative array like parse_url() returns\n\t * @param mixed $parts   same as the first argument\n\t * @param int   $flags   a bitmask of binary or'ed HTTP_URL constants;\n\t *                       HTTP_URL_REPLACE is the default\n\t * @param array $new_url if set, it will be filled with the parts of the\n\t *                       composed url like parse_url() would return\n\t * @return string\n\t *\/\n\tfunction http_build_url($url, $parts = array(), $flags = HTTP_URL_REPLACE, &$new_url = array())\n\t{\n\t\tis_array($url) || $url = parse_url($url);\n\t\tis_array($parts) || $parts = parse_url($parts);\n\n\t\tisset($url['query']) && is_string($url['query']) || $url['query'] = null;\n\t\tisset($parts['query']) && is_string($parts['query']) || $parts['query'] = null;\n\n\t\t$keys = array('user', 'pass', 'port', 'path', 'query', 'fragment');\n\n\t\t\/\/ HTTP_URL_STRIP_ALL and HTTP_URL_STRIP_AUTH cover several other flags.\n\t\tif ($flags & HTTP_URL_STRIP_ALL) {\n\t\t\t$flags |= HTTP_URL_STRIP_USER | HTTP_URL_STRIP_PASS\n\t\t\t\t| HTTP_URL_STRIP_PORT | HTTP_URL_STRIP_PATH\n\t\t\t\t| HTTP_URL_STRIP_QUERY | HTTP_URL_STRIP_FRAGMENT;\n\t\t} elseif ($flags & HTTP_URL_STRIP_AUTH) {\n\t\t\t$flags |= HTTP_URL_STRIP_USER | HTTP_URL_STRIP_PASS;\n\t\t}\n\n\t\t\/\/ Schema and host are alwasy replaced\n\t\tforeach (array('scheme', 'host') as $part) {\n\t\t\tif (isset($parts[$part])) {\n\t\t\t\t$url[$part] = $parts[$part];\n\t\t\t}\n\t\t}\n\n\t\tif ($flags & HTTP_URL_REPLACE) {\n\t\t\tforeach ($keys as $key) {\n\t\t\t\tif (isset($parts[$key])) {\n\t\t\t\t\t$url[$key] = $parts[$key];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (isset($parts['path']) && ($flags & HTTP_URL_JOIN_PATH)) {\n\t\t\t\tif (isset($url['path']) && substr($parts['path'], 0, 1) !== '\/') {\n\t\t\t\t\t\/\/ Workaround for trailing slashes\n\t\t\t\t\t$url['path'] .= 'a';\n\t\t\t\t\t$url['path'] = rtrim(\n\t\t\t\t\t\t\tstr_replace(basename($url['path']), '', $url['path']),\n\t\t\t\t\t\t\t'\/'\n\t\t\t\t\t\t) . '\/' . ltrim($parts['path'], '\/');\n\t\t\t\t} else {\n\t\t\t\t\t$url['path'] = $parts['path'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isset($parts['query']) && ($flags & HTTP_URL_JOIN_QUERY)) {\n\t\t\t\tif (isset($url['query'])) {\n\t\t\t\t\tparse_str($url['query'], $url_query);\n\t\t\t\t\tparse_str($parts['query'], $parts_query);\n\n\t\t\t\t\t$url['query'] = http_build_query(\n\t\t\t\t\t\tarray_replace_recursive(\n\t\t\t\t\t\t\t$url_query,\n\t\t\t\t\t\t\t$parts_query\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$url['query'] = $parts['query'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isset($url['path']) && $url['path'] !== '' && substr($url['path'], 0, 1) !== '\/') {\n\t\t\t$url['path'] = '\/' . $url['path'];\n\t\t}\n\n\t\tforeach ($keys as $key) {\n\t\t\t$strip = 'HTTP_URL_STRIP_' . strtoupper($key);\n\t\t\tif ($flags & constant($strip)) {\n\t\t\t\tunset($url[$key]);\n\t\t\t}\n\t\t}\n\n\t\t$parsed_string = '';\n\n\t\tif (!empty($url['scheme'])) {\n\t\t\t$parsed_string .= $url['scheme'] . ':\/\/';\n\t\t}\n\n\t\tif (!empty($url['user'])) {\n\t\t\t$parsed_string .= $url['user'];\n\n\t\t\tif (isset($url['pass'])) {\n\t\t\t\t$parsed_string .= ':' . $url['pass'];\n\t\t\t}\n\n\t\t\t$parsed_string .= '@';\n\t\t}\n\n\t\tif (!empty($url['host'])) {\n\t\t\t$parsed_string .= $url['host'];\n\t\t}\n\n\t\tif (!empty($url['port'])) {\n\t\t\t$parsed_string .= ':' . $url['port'];\n\t\t}\n\n\t\tif (!empty($url['path'])) {\n\t\t\t$parsed_string .= $url['path'];\n\t\t}\n\n\t\tif (!empty($url['query'])) {\n\t\t\t$parsed_string .= '?' . $url['query'];\n\t\t}\n\n\t\tif (!empty($url['fragment'])) {\n\t\t\t$parsed_string .= '#' . $url['fragment'];\n\t\t}\n\n\t\t$new_url = $url;\n\n\t\treturn $parsed_string;\n\t}\n}\n",
"vendor/laminas/laminas-servicemanager/src/AbstractFactoryInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\n\/**\n * Backwards-compatibility shim for AbstractFactoryInterface.\n *\n * Implementations should update to implement only Laminas\\ServiceManager\\Factory\\AbstractFactoryInterface.\n *\n * If upgrading from v2, take the following steps:\n *\n * - rename the method `canCreateServiceWithName()` to `canCreate()`, and:\n *   - rename the `$serviceLocator` argument to `$container`, and change the\n *     typehint to `Psr\\Container\\ContainerInterface`\n *   - merge the `$name` and `$requestedName` arguments\n * - rename the method `createServiceWithName()` to `__invoke()`, and:\n *   - rename the `$serviceLocator` argument to `$container`, and change the\n *     typehint to `Psr\\Container\\ContainerInterface`\n *   - merge the `$name` and `$requestedName` arguments\n *   - add the optional `array $options = null` argument.\n * - create a `canCreateServiceWithName()` method as defined in this interface, and have it\n *   proxy to `canCreate()`, passing `$requestedName` as the second argument.\n * - create a `createServiceWithName()` method as defined in this interface, and have it\n *   proxy to `__invoke()`, passing `$requestedName` as the second argument.\n *\n * Once you have tested your code, you can then update your class to only implement\n * Laminas\\ServiceManager\\Factory\\AbstractFactoryInterface, and remove the `canCreateServiceWithName()`\n * and `createServiceWithName()` methods.\n *\n * @deprecated Use Laminas\\ServiceManager\\Factory\\AbstractFactoryInterface instead.\n *\/\ninterface AbstractFactoryInterface extends Factory\\AbstractFactoryInterface\n{\n    \/**\n     * Determine if we can create a service with name\n     *\n     * @param string $name\n     * @param string $requestedName\n     * @return bool\n     *\/\n    public function canCreateServiceWithName(ServiceLocatorInterface $serviceLocator, $name, $requestedName);\n\n    \/**\n     * Create service with name\n     *\n     * @param string $name\n     * @param string $requestedName\n     * @return mixed\n     *\/\n    public function createServiceWithName(ServiceLocatorInterface $serviceLocator, $name, $requestedName);\n}\n",
"vendor/laminas/laminas-servicemanager/src/AbstractPluginManager.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\nuse Laminas\\ServiceManager\\Exception\\ContainerModificationsNotAllowedException;\nuse Laminas\\ServiceManager\\Exception\\InvalidServiceException;\nuse Psr\\Container\\ContainerInterface;\n\nuse function class_exists;\nuse function gettype;\nuse function is_object;\nuse function method_exists;\nuse function sprintf;\nuse function trigger_error;\n\nuse const E_USER_DEPRECATED;\n\n\/**\n * Abstract plugin manager.\n *\n * Abstract PluginManagerInterface implementation providing:\n *\n * - creation context support. The constructor accepts the parent container\n *   instance, which is then used when creating instances.\n * - plugin validation. Implementations may define the `$instanceOf` property\n *   to indicate what class types constitute valid plugins, omitting the\n *   requirement to define the `validate()` method.\n *\n * The implementation extends `ServiceManager`, thus providing the same set\n * of capabilities as found in that implementation.\n *\n * @template InstanceType\n * @implements PluginManagerInterface<InstanceType>\n * @psalm-import-type ServiceManagerConfiguration from ServiceManager\n * @psalm-suppress PropertyNotSetInConstructor\n *\/\nabstract class AbstractPluginManager extends ServiceManager implements PluginManagerInterface\n{\n    \/**\n     * Whether or not to auto-add a FQCN as an invokable if it exists.\n     *\n     * @var bool\n     *\/\n    protected $autoAddInvokableClass = true;\n\n    \/**\n     * An object type that the created instance must be instanced of\n     *\n     * @var null|string\n     * @psalm-var null|class-string<InstanceType>\n     *\/\n    protected $instanceOf;\n\n    \/**\n     * Sets the provided $parentLocator as the creation context for all\n     * factories; for $config, {@see \\Laminas\\ServiceManager\\ServiceManager::configure()}\n     * for details on its accepted structure.\n     *\n     * @param null|ConfigInterface|ContainerInterface $configInstanceOrParentLocator\n     * @param array $config\n     * @psalm-param ServiceManagerConfiguration $config\n     *\/\n    public function __construct($configInstanceOrParentLocator = null, array $config = [])\n    {\n        \/** @psalm-suppress DocblockTypeContradiction *\/\n        if (\n            null !== $configInstanceOrParentLocator\n            && ! $configInstanceOrParentLocator instanceof ConfigInterface\n            && ! $configInstanceOrParentLocator instanceof ContainerInterface\n        ) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                '%s expects a ConfigInterface or ContainerInterface instance as the first argument; received %s',\n                self::class,\n                is_object($configInstanceOrParentLocator)\n                    ? $configInstanceOrParentLocator::class\n                    : gettype($configInstanceOrParentLocator)\n            ));\n        }\n\n        if ($configInstanceOrParentLocator instanceof ConfigInterface) {\n            trigger_error(sprintf(\n                'Usage of %s as a constructor argument for %s is now deprecated',\n                ConfigInterface::class,\n                static::class\n            ), E_USER_DEPRECATED);\n            $config = $configInstanceOrParentLocator->toArray();\n        }\n\n        parent::__construct($config);\n\n        if (! $configInstanceOrParentLocator instanceof ContainerInterface) {\n            trigger_error(sprintf(\n                '%s now expects a %s instance representing the parent container; please update your code',\n                __METHOD__,\n                ContainerInterface::class\n            ), E_USER_DEPRECATED);\n        }\n\n        $this->creationContext = $configInstanceOrParentLocator instanceof ContainerInterface\n            ? $configInstanceOrParentLocator\n            : $this;\n    }\n\n    \/**\n     * Override configure() to validate service instances.\n     *\n     * @param  array $config\n     * @psalm-param ServiceManagerConfiguration $config\n     * @return self\n     * @throws InvalidServiceException If an instance passed in the `services` configuration is invalid for the\n     *                                 plugin manager.\n     * @throws ContainerModificationsNotAllowedException If the allow override flag has been toggled off, and a\n     *                                                   service instanceexists for a given service.\n     *\/\n    public function configure(array $config)\n    {\n        if (isset($config['services'])) {\n            foreach ($config['services'] as $service) {\n                $this->validate($service);\n            }\n        }\n\n        parent::configure($config);\n\n        return $this;\n    }\n\n    \/**\n     * Override setService for additional plugin validation.\n     *\n     * {@inheritDoc}\n     *\n     * @param string|class-string<InstanceType> $name\n     * @param InstanceType $service\n     *\/\n    public function setService($name, $service)\n    {\n        $this->validate($service);\n        parent::setService($name, $service);\n    }\n\n    \/**\n     * @param class-string<InstanceType>|string $name Service name of plugin to retrieve.\n     * @param null|array<mixed> $options Options to use when creating the instance.\n     * @return mixed\n     * @psalm-return ($name is class-string<InstanceType> ? InstanceType : mixed)\n     * @throws Exception\\ServiceNotFoundException If the manager does not have\n     *     a service definition for the instance, and the service is not\n     *     auto-invokable.\n     * @throws InvalidServiceException If the plugin created is invalid for the\n     *     plugin context.\n     *\/\n    public function get($name, ?array $options = null)\n    {\n        if (! $this->has($name)) {\n            if (! $this->autoAddInvokableClass || ! class_exists($name)) {\n                throw new Exception\\ServiceNotFoundException(sprintf(\n                    'A plugin by the name \"%s\" was not found in the plugin manager %s',\n                    $name,\n                    static::class\n                ));\n            }\n\n            $this->setFactory($name, Factory\\InvokableFactory::class);\n        }\n\n        $instance = ! $options ? parent::get($name) : $this->build($name, $options);\n        $this->validate($instance);\n        return $instance;\n    }\n\n    \/**\n     * {@inheritDoc}\n     *\n     * @psalm-assert InstanceType $instance\n     *\/\n    public function validate(mixed $instance)\n    {\n        if (method_exists($this, 'validatePlugin')) {\n            trigger_error(sprintf(\n                '%s::validatePlugin() has been deprecated as of 3.0; please define validate() instead',\n                static::class\n            ), E_USER_DEPRECATED);\n            $this->validatePlugin($instance);\n            return;\n        }\n\n        if (empty($this->instanceOf) || $instance instanceof $this->instanceOf) {\n            return;\n        }\n\n        throw new InvalidServiceException(sprintf(\n            'Plugin manager \"%s\" expected an instance of type \"%s\", but \"%s\" was received',\n            self::class,\n            $this->instanceOf,\n            is_object($instance) ? $instance::class : gettype($instance)\n        ));\n    }\n\n    \/**\n     * Implemented for backwards compatibility only.\n     *\n     * Returns the creation context.\n     *\n     * @deprecated since 3.0.0. The creation context should be passed during\n     *     instantiation instead.\n     *\n     * @return void\n     *\/\n    public function setServiceLocator(ContainerInterface $container)\n    {\n        trigger_error(sprintf(\n            'Usage of %s is deprecated since v3.0.0; please pass the container to the constructor instead',\n            __METHOD__\n        ), E_USER_DEPRECATED);\n        $this->creationContext = $container;\n    }\n}\n",
"vendor/laminas/laminas-servicemanager/src/Config.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\nuse Laminas\\Stdlib\\ArrayUtils;\n\nuse function array_keys;\n\n\/**\n * Object for defining configuration and configuring an existing service manager instance.\n *\n * In order to provide configuration merging capabilities, this class implements\n * the same functionality as `Laminas\\Stdlib\\ArrayUtils::merge()`. That routine\n * allows developers to specifically shape how values are merged:\n *\n * - A value which is an instance of `MergeRemoveKey` indicates the value should\n *   be removed during merge.\n * - A value that is an instance of `MergeReplaceKeyInterface` indicates that the\n *   value it contains should be used to replace any previous versions.\n *\n * These features are advanced, and not typically used. If you wish to use them,\n * you will need to require the laminas-stdlib package in your application.\n *\n * @deprecated Class will be removed as of v4.0\n *\n * @psalm-import-type ServiceManagerConfigurationType from ConfigInterface\n *\/\nclass Config implements ConfigInterface\n{\n    \/** @var array<string,bool> *\/\n    private array $allowedKeys = [\n        'abstract_factories' => true,\n        'aliases'            => true,\n        'delegators'         => true,\n        'factories'          => true,\n        'initializers'       => true,\n        'invokables'         => true,\n        'lazy_services'      => true,\n        'services'           => true,\n        'shared'             => true,\n    ];\n\n    \/**\n     * @var array<string,array>\n     * @psalm-var ServiceManagerConfigurationType\n     *\/\n    protected $config = [\n        'abstract_factories' => [],\n        'aliases'            => [],\n        'delegators'         => [],\n        'factories'          => [],\n        'initializers'       => [],\n        'invokables'         => [],\n        'lazy_services'      => [],\n        'services'           => [],\n        'shared'             => [],\n    ];\n\n    \/**\n     * @psalm-param ServiceManagerConfigurationType $config\n     *\/\n    public function __construct(array $config = [])\n    {\n        \/\/ Only merge keys we're interested in\n        foreach (array_keys($config) as $key) {\n            if (! isset($this->allowedKeys[$key])) {\n                unset($config[$key]);\n            }\n        }\n\n        \/** @psalm-suppress ArgumentTypeCoercion *\/\n        $this->config = $this->merge($this->config, $config);\n    }\n\n    \/**\n     * @inheritDoc\n     *\/\n    public function configureServiceManager(ServiceManager $serviceManager)\n    {\n        return $serviceManager->configure($this->config);\n    }\n\n    \/**\n     * @inheritDoc\n     *\/\n    public function toArray()\n    {\n        return $this->config;\n    }\n\n    \/**\n     * @psalm-param ServiceManagerConfigurationType $a\n     * @psalm-param ServiceManagerConfigurationType $b\n     * @psalm-return ServiceManagerConfigurationType\n     *\/\n    private function merge(array $a, array $b)\n    {\n        return ArrayUtils::merge($a, $b);\n    }\n}\n",
"vendor/laminas/laminas-servicemanager/src/ConfigInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\nuse ArrayAccess;\nuse Psr\\Container\\ContainerInterface;\n\n\/**\n * @deprecated Interface will be removed as of v4.0\n *\n * @see ContainerInterface\n * @see ArrayAccess\n *\n * @psalm-type AbstractFactoriesConfigurationType = array<\n *      array-key,\n *      (class-string<Factory\\AbstractFactoryInterface>|Factory\\AbstractFactoryInterface)\n * >\n * @psalm-type DelegatorsConfigurationType = array<\n *      string,\n *      array<\n *          array-key,\n *          (class-string<Factory\\DelegatorFactoryInterface>|Factory\\DelegatorFactoryInterface)\n *          |callable(ContainerInterface,string,callable():object,array<mixed>|null):object\n *      >\n * >\n * @psalm-type FactoriesConfigurationType = array<\n *      string,\n *      (class-string<Factory\\FactoryInterface>|Factory\\FactoryInterface)\n *      |callable(ContainerInterface,?string,?array<mixed>|null):object\n * >\n * @psalm-type InitializersConfigurationType = array<\n *      array-key,\n *      (class-string<Initializer\\InitializerInterface>|Initializer\\InitializerInterface)\n *      |callable(ContainerInterface,object):void\n * >\n * @psalm-type LazyServicesConfigurationType = array{\n *      class_map?:array<string,class-string>,\n *      proxies_namespace?:non-empty-string,\n *      proxies_target_dir?:non-empty-string,\n *      write_proxy_files?:bool\n * }\n * @psalm-type ServiceManagerConfigurationType = array{\n *     abstract_factories?: AbstractFactoriesConfigurationType,\n *     aliases?: array<string,string>,\n *     delegators?: DelegatorsConfigurationType,\n *     factories?: FactoriesConfigurationType,\n *     initializers?: InitializersConfigurationType,\n *     invokables?: array<string,string>,\n *     lazy_services?: LazyServicesConfigurationType,\n *     services?: array<string,object|array>,\n *     shared?:array<string,bool>,\n *     ...\n * }\n *\/\ninterface ConfigInterface\n{\n    \/**\n     * Configure a service manager.\n     *\n     * Implementations should pull configuration from somewhere (typically\n     * local properties) and pass it to a ServiceManager's withConfig() method,\n     * returning a new instance.\n     *\n     * @return ServiceManager\n     *\/\n    public function configureServiceManager(ServiceManager $serviceManager);\n\n    \/**\n     * Return configuration for a service manager instance as an array.\n     *\n     * Implementations MUST return an array compatible with ServiceManager::configure,\n     * containing one or more of the following keys:\n     *\n     * - abstract_factories\n     * - aliases\n     * - delegators\n     * - factories\n     * - initializers\n     * - invokables\n     * - lazy_services\n     * - services\n     * - shared\n     *\n     * In other words, this should return configuration that can be used to instantiate\n     * a service manager or plugin manager, or pass to its `withConfig()` method.\n     *\n     * @return array\n     * @psalm-return ServiceManagerConfigurationType\n     *\/\n    public function toArray();\n}\n",
"vendor/laminas/laminas-servicemanager/src/DelegatorFactoryInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\n\/**\n * Backwards-compatibility shim for DelegatorFactoryInterface.\n *\n * Implementations should update to implement only Laminas\\ServiceManager\\Factory\\DelegatorFactoryInterface.\n *\n * If upgrading from v2, take the following steps:\n *\n * - rename the method `createDelegatorWithName()` to `__invoke()`, and:\n *   - rename the `$serviceLocator` argument to `$container`, and change the\n *     typehint to `Psr\\Container\\ContainerInterface`\n *   - merge the `$name` and `$requestedName` arguments\n *   - add the `callable` typehint to the `$callback` argument\n *   - add the optional `array $options = null` argument as a final argument\n * - create a `createDelegatorWithName()` method as defined in this interface, and have it\n *   proxy to `__invoke()`, passing `$requestedName` as the second argument.\n *\n * Once you have tested your code, you can then update your class to only implement\n * Laminas\\ServiceManager\\Factory\\DelegatorFactoryInterface, and remove the `createDelegatorWithName()`\n * method.\n *\n * @deprecated Use Laminas\\ServiceManager\\Factory\\DelegatorFactoryInterface instead.\n *\/\ninterface DelegatorFactoryInterface extends Factory\\DelegatorFactoryInterface\n{\n    \/**\n     * A factory that creates delegates of a given service\n     *\n     * @param ServiceLocatorInterface $serviceLocator the service locator which requested the service\n     * @param string                  $name           the normalized service name\n     * @param string                  $requestedName  the requested service name\n     * @param callable                $callback       the callback that is responsible for creating the service\n     * @return mixed\n     *\/\n    public function createDelegatorWithName(ServiceLocatorInterface $serviceLocator, $name, $requestedName, $callback);\n}\n",
"vendor/laminas/laminas-servicemanager/src/FactoryInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\n\/**\n * Backwards-compatibility shim for FactoryInterface.\n *\n * Implementations should update to implement only Laminas\\ServiceManager\\Factory\\FactoryInterface.\n *\n * If upgrading from v2, take the following steps:\n *\n * - rename the method `createService()` to `__invoke()`, and:\n *   - rename the `$serviceLocator` argument to `$container`, and change the\n *     typehint to `Psr\\Container\\ContainerInterface`\n *   - add the `$requestedName` as a second argument\n *   - add the optional `array $options = null` argument as a final argument\n * - create a `createService()` method as defined in this interface, and have it\n *   proxy to `__invoke()`.\n *\n * Once you have tested your code, you can then update your class to only implement\n * Laminas\\ServiceManager\\Factory\\FactoryInterface, and remove the `createService()`\n * method.\n *\n * @deprecated Use Laminas\\ServiceManager\\Factory\\FactoryInterface instead.\n *\/\ninterface FactoryInterface extends Factory\\FactoryInterface\n{\n    \/**\n     * Create service\n     *\n     * @return mixed\n     *\/\n    public function createService(ServiceLocatorInterface $serviceLocator);\n}\n",
"vendor/laminas/laminas-servicemanager/src/InitializerInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\n\/**\n * Backwards-compatibility shim for InitializerInterface.\n *\n * Implementations should update to implement only Laminas\\ServiceManager\\Initializer\\InitializerInterface.\n *\n * If upgrading from v2, take the following steps:\n *\n * - rename the method `initialize()` to `__invoke()`, and:\n *   - rename the `$serviceLocator` argument to `$container`, and change the\n *     typehint to `Psr\\Container\\ContainerInterface`\n *   - swap the order of the arguments (so that `$instance` comes second)\n * - create an `initialize()` method as defined in this interface, and have it\n *   proxy to `__invoke()`, passing the arguments in the new order.\n *\n * Once you have tested your code, you can then update your class to only implement\n * Laminas\\ServiceManager\\Initializer\\InitializerInterface, and remove the `initialize()`\n * method.\n *\n * @deprecated Use Laminas\\ServiceManager\\Initializer\\InitializerInterface instead.\n *\/\ninterface InitializerInterface extends Initializer\\InitializerInterface\n{\n    \/**\n     * Initialize\n     *\n     * @return mixed\n     *\/\n    public function initialize(mixed $instance, ServiceLocatorInterface $serviceLocator);\n}\n",
"vendor/laminas/laminas-servicemanager/src/PluginManagerInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\nuse Laminas\\ServiceManager\\Exception\\InvalidServiceException;\nuse Psr\\Container\\ContainerExceptionInterface;\n\n\/**\n * Interface for a plugin manager\n *\n * A plugin manager is a specialized service locator used to create homogeneous objects\n *\n * @template InstanceType\n *\/\ninterface PluginManagerInterface extends ServiceLocatorInterface\n{\n    \/**\n     * Validate an instance\n     *\n     * @return void\n     * @throws InvalidServiceException If created instance does not respect the\n     *     constraint on type imposed by the plugin manager.\n     * @throws ContainerExceptionInterface If any other error occurs.\n     * @psalm-assert InstanceType $instance\n     *\/\n    public function validate(mixed $instance);\n}\n",
"vendor/laminas/laminas-servicemanager/src/ServiceLocatorInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\nuse Psr\\Container\\ContainerExceptionInterface;\nuse Psr\\Container\\ContainerInterface;\n\n\/**\n * Interface for service locator\n *\/\ninterface ServiceLocatorInterface extends ContainerInterface\n{\n    \/**\n     * Build a service by its name, using optional options (such services are NEVER cached).\n     *\n     * @template T of object\n     * @param  string|class-string<T> $name\n     * @param  null|array<mixed>  $options\n     * @return mixed\n     * @psalm-return ($name is class-string<T> ? T : mixed)\n     * @throws Exception\\ServiceNotFoundException If no factory\/abstract\n     *     factory could be found to create the instance.\n     * @throws Exception\\ServiceNotCreatedException If factory\/delegator fails\n     *     to create the instance.\n     * @throws ContainerExceptionInterface If any other error occurs.\n     *\/\n    public function build($name, ?array $options = null);\n}\n",
"vendor/laminas/laminas-servicemanager/src/ServiceManager.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Laminas\\ServiceManager;\n\nuse Exception;\nuse Laminas\\ServiceManager\\Exception\\ContainerModificationsNotAllowedException;\nuse Laminas\\ServiceManager\\Exception\\CyclicAliasException;\nuse Laminas\\ServiceManager\\Exception\\InvalidArgumentException;\nuse Laminas\\ServiceManager\\Exception\\ServiceNotCreatedException;\nuse Laminas\\ServiceManager\\Exception\\ServiceNotFoundException;\nuse Laminas\\ServiceManager\\Proxy\\LazyServiceFactory;\nuse Laminas\\Stdlib\\ArrayUtils;\nuse ProxyManager\\Configuration as ProxyConfiguration;\nuse ProxyManager\\Factory\\LazyLoadingValueHolderFactory;\nuse ProxyManager\\FileLocator\\FileLocator;\nuse ProxyManager\\GeneratorStrategy\\EvaluatingGeneratorStrategy;\nuse ProxyManager\\GeneratorStrategy\\FileWriterGeneratorStrategy;\nuse Psr\\Container\\ContainerExceptionInterface;\nuse Psr\\Container\\ContainerInterface;\n\nuse function array_intersect;\nuse function array_key_exists;\nuse function array_keys;\nuse function class_exists;\nuse function gettype;\nuse function in_array;\nuse function is_callable;\nuse function is_object;\nuse function is_string;\nuse function spl_autoload_register;\nuse function spl_object_hash;\nuse function sprintf;\nuse function trigger_error;\n\nuse const E_USER_DEPRECATED;\n\n\/**\n * Service Manager.\n *\n * Default implementation of the ServiceLocatorInterface, providing capabilities\n * for object creation via:\n *\n * - factories\n * - abstract factories\n * - delegator factories\n * - lazy service factories (generated proxies)\n * - initializers (interface injection)\n *\n * It also provides the ability to inject specific service instances and to\n * define aliases.\n *\n * @see ConfigInterface\n *\n * @psalm-type AbstractFactoriesConfiguration = array<\n *      array-key,\n *      (class-string<Factory\\AbstractFactoryInterface>|Factory\\AbstractFactoryInterface)\n * >\n * @psalm-type DelegatorsConfiguration = array<\n *      string,\n *      array<\n *          array-key,\n *          (class-string<Factory\\DelegatorFactoryInterface>|Factory\\DelegatorFactoryInterface)\n *          |callable(ContainerInterface,string,callable():object,array<mixed>|null):object\n *      >\n * >\n * @psalm-type FactoriesConfiguration = array<\n *      string,\n *      (class-string<Factory\\FactoryInterface>|Factory\\FactoryInterface)\n *      |callable(ContainerInterface,?string,?array<mixed>|null):object\n * >\n * @psalm-type InitializersConfiguration = array<\n *      array-key,\n *      (class-string<Initializer\\InitializerInterface>|Initializer\\InitializerInterface)\n *      |callable(ContainerInterface,object):void\n * >\n * @psalm-type LazyServicesConfiguration = array{\n *      class_map?:array<string,class-string>,\n *      proxies_namespace?:non-empty-string,\n *      proxies_target_dir?:non-empty-string,\n *      write_proxy_files?:bool\n * }\n * @psalm-type ServiceManagerConfiguration = array{\n *     abstract_factories?: AbstractFactoriesConfiguration,\n *     aliases?: array<string,string>,\n *     delegators?: DelegatorsConfiguration,\n *     factories?: FactoriesConfiguration,\n *     initializers?: InitializersConfiguration,\n *     invokables?: array<string,string>,\n *     lazy_services?: LazyServicesConfiguration,\n *     services?: array<string,object|array<mixed>>,\n *     shared?:array<string,bool>,\n *     shared_by_default?:bool,\n *     ...\n * }\n *\/\nclass ServiceManager implements ServiceLocatorInterface\n{\n    \/** @var Factory\\AbstractFactoryInterface[] *\/\n    protected $abstractFactories = [];\n\n    \/**\n     * A list of aliases\n     *\n     * Should map one alias to a service name, or another alias (aliases are recursively resolved)\n     *\n     * @var string[]\n     *\/\n    protected $aliases = [];\n\n    \/**\n     * Whether or not changes may be made to this instance.\n     *\n     * @var bool\n     *\/\n    protected $allowOverride = false;\n\n    \/** @var ContainerInterface *\/\n    protected $creationContext;\n\n    \/**\n     * @var string[][]|Factory\\DelegatorFactoryInterface[][]\n     * @psalm-var DelegatorsConfiguration\n     *\/\n    protected $delegators = [];\n\n    \/**\n     * A list of factories (either as string name or callable)\n     *\n     * @var string[]|callable[]\n     * @psalm-var FactoriesConfiguration\n     *\/\n    protected $factories = [];\n\n    \/**\n     * @var Initializer\\InitializerInterface[]|callable[]\n     * @psalm-var InitializersConfiguration\n     *\/\n    protected $initializers = [];\n\n    \/**\n     * @var array\n     * @psalm-var LazyServicesConfiguration\n     *\/\n    protected $lazyServices = [];\n\n    private ?LazyServiceFactory $lazyServicesDelegator = null;\n\n    \/**\n     * A list of already loaded services (this act as a local cache)\n     *\n     * @var array<string,array|object>\n     *\/\n    protected $services = [];\n\n    \/**\n     * Enable\/disable shared instances by service name.\n     *\n     * Example configuration:\n     *\n     * 'shared' => [\n     *     MyService::class => true, \/\/ will be shared, even if \"sharedByDefault\" is false\n     *     MyOtherService::class => false \/\/ won't be shared, even if \"sharedByDefault\" is true\n     * ]\n     *\n     * @var array<string,bool>\n     *\/\n    protected $shared = [];\n\n    \/**\n     * Should the services be shared by default?\n     *\n     * @var bool\n     *\/\n    protected $sharedByDefault = true;\n\n    \/**\n     * Service manager was already configured?\n     *\n     * @var bool\n     *\/\n    protected $configured = false;\n\n    \/**\n     * Cached abstract factories from string.\n     *\/\n    private array $cachedAbstractFactories = [];\n\n    \/**\n     * See {@see \\Laminas\\ServiceManager\\ServiceManager::configure()} for details\n     * on what $config accepts.\n     *\n     * @psalm-param ServiceManagerConfiguration $config\n     *\/\n    public function __construct(array $config = [])\n    {\n        $this->creationContext = $this;\n        $this->configure($config);\n    }\n\n    \/**\n     * Implemented for backwards compatibility with previous plugin managers only.\n     *\n     * Returns the creation context.\n     *\n     * @deprecated since 3.0.0. Factories using 3.0 should use the container\n     *     instance passed to the factory instead.\n     *\n     * @return ContainerInterface\n     *\/\n    public function getServiceLocator()\n    {\n        trigger_error(sprintf(\n            'Usage of %s is deprecated since v3.0.0; please use the container passed to the factory instead',\n            __METHOD__\n        ), E_USER_DEPRECATED);\n        return $this->creationContext;\n    }\n\n    \/** {@inheritDoc} *\/\n    public function get($name)\n    {\n        \/\/ We start by checking if we have cached the requested service;\n        \/\/ this is the fastest method.\n        if (isset($this->services[$name])) {\n            return $this->services[$name];\n        }\n\n        \/\/ Determine if the service should be shared.\n        $sharedService = $this->shared[$name] ?? $this->sharedByDefault;\n\n        \/\/ We achieve better performance if we can let all alias\n        \/\/ considerations out.\n        if (! $this->aliases) {\n            $object = $this->doCreate($name);\n\n            \/\/ Cache the object for later, if it is supposed to be shared.\n            if ($sharedService) {\n                $this->services[$name] = $object;\n            }\n            return $object;\n        }\n\n        \/\/ We now deal with requests which may be aliases.\n        $resolvedName = $this->aliases[$name] ?? $name;\n\n        \/\/ Update shared service information as we checked if the alias was shared before.\n        if ($resolvedName !== $name) {\n            $sharedService = $this->shared[$resolvedName] ?? $sharedService;\n        }\n\n        \/\/ The following is only true if the requested service is a shared alias.\n        $sharedAlias = $sharedService && isset($this->services[$resolvedName]);\n\n        \/\/ If the alias is configured as a shared service, we are done.\n        if ($sharedAlias) {\n            $this->services[$name] = $this->services[$resolvedName];\n            return $this->services[$resolvedName];\n        }\n\n        \/\/ At this point, we have to create the object.\n        \/\/ We use the resolved name for that.\n        $object = $this->doCreate($resolvedName);\n\n        \/\/ Cache the object for later, if it is supposed to be shared.\n        if ($sharedService) {\n            $this->services[$resolvedName] = $object;\n        }\n\n        \/\/ Also cache under the alias name; this allows sharing based on the\n        \/\/ service name used.\n        if ($sharedAlias) {\n            $this->services[$name] = $object;\n        }\n\n        return $object;\n    }\n\n    \/** {@inheritDoc} *\/\n    public function build($name, ?array $options = null)\n    {\n        \/\/ We never cache when using \"build\".\n        $name = $this->aliases[$name] ?? $name;\n        return $this->doCreate($name, $options);\n    }\n\n    \/**\n     * {@inheritDoc}\n     *\n     * @param string|class-string $name\n     * @return bool\n     *\/\n    public function has($name)\n    {\n        \/\/ Check static services and factories first to speedup the most common requests.\n        return $this->staticServiceOrFactoryCanCreate($name) || $this->abstractFactoryCanCreate($name);\n    }\n\n    \/**\n     * Indicate whether or not the instance is immutable.\n     *\n     * @param bool $flag\n     *\/\n    public function setAllowOverride($flag)\n    {\n        $this->allowOverride = (bool) $flag;\n    }\n\n    \/**\n     * Retrieve the flag indicating immutability status.\n     *\n     * @return bool\n     *\/\n    public function getAllowOverride()\n    {\n        return $this->allowOverride;\n    }\n\n    \/**\n     * @psalm-param ServiceManagerConfiguration $config\n     * @return self\n     * @throws ContainerModificationsNotAllowedException If the allow\n     *     override flag has been toggled off, and a service instance\n     *     exists for a given service.\n     *\/\n    public function configure(array $config)\n    {\n        \/\/ This is a bulk update\/initial configuration,\n        \/\/ so we check all definitions up front.\n        $this->validateServiceNames($config);\n\n        if (isset($config['services'])) {\n            $this->services = $config['services'] + $this->services;\n        }\n\n        if (isset($config['invokables']) && ! empty($config['invokables'])) {\n            $newAliases = $this->createAliasesAndFactoriesForInvokables($config['invokables']);\n            \/\/ override existing aliases with those created by invokables to ensure\n            \/\/ that they are still present after merging aliases later on\n            $config['aliases'] = $newAliases + ($config['aliases'] ?? []);\n        }\n\n        if (isset($config['factories'])) {\n            $this->factories = $config['factories'] + $this->factories;\n        }\n\n        if (isset($config['delegators'])) {\n            $this->mergeDelegators($config['delegators']);\n        }\n\n        if (isset($config['shared'])) {\n            $this->shared = $config['shared'] + $this->shared;\n        }\n\n        if (! empty($config['aliases'])) {\n            $this->aliases = $config['aliases'] + $this->aliases;\n            $this->mapAliasesToTargets();\n        } elseif (! $this->configured && ! empty($this->aliases)) {\n            $this->mapAliasesToTargets();\n        }\n\n        if (isset($config['shared_by_default'])) {\n            $this->sharedByDefault = $config['shared_by_default'];\n        }\n\n        \/\/ If lazy service configuration was provided, reset the lazy services\n        \/\/ delegator factory.\n        if (isset($config['lazy_services']) && ! empty($config['lazy_services'])) {\n            \/** @psalm-suppress MixedPropertyTypeCoercion *\/\n            $this->lazyServices          = ArrayUtils::merge($this->lazyServices, $config['lazy_services']);\n            $this->lazyServicesDelegator = null;\n        }\n\n        \/\/ For abstract factories and initializers, we always directly\n        \/\/ instantiate them to avoid checks during service construction.\n        if (isset($config['abstract_factories'])) {\n            $abstractFactories = $config['abstract_factories'];\n            \/\/ $key not needed, but foreach is faster than foreach + array_values.\n            foreach ($abstractFactories as $key => $abstractFactory) {\n                $this->resolveAbstractFactoryInstance($abstractFactory);\n            }\n        }\n\n        if (isset($config['initializers'])) {\n            $this->resolveInitializers($config['initializers']);\n        }\n\n        $this->configured = true;\n\n        return $this;\n    }\n\n    \/**\n     * Add an alias.\n     *\n     * @param string $alias\n     * @param string $target\n     * @throws ContainerModificationsNotAllowedException If $alias already\n     *     exists as a service and overrides are disallowed.\n     *\/\n    public function setAlias($alias, $target)\n    {\n        if (isset($this->services[$alias]) && ! $this->allowOverride) {\n            throw ContainerModificationsNotAllowedException::fromExistingService($alias);\n        }\n\n        $this->mapAliasToTarget($alias, $target);\n    }\n\n    \/**\n     * Add an invokable class mapping.\n     *\n     * @param string $name Service name\n     * @param null|string $class Class to which to map; if omitted, $name is\n     *     assumed.\n     * @throws ContainerModificationsNotAllowedException If $name already\n     *     exists as a service and overrides are disallowed.\n     *\/\n    public function setInvokableClass($name, $class = null)\n    {\n        if (isset($this->services[$name]) && ! $this->allowOverride) {\n            throw ContainerModificationsNotAllowedException::fromExistingService($name);\n        }\n\n        $this->createAliasesAndFactoriesForInvokables([$name => $class ?? $name]);\n    }\n\n    \/**\n     * Specify a factory for a given service name.\n     *\n     * @param string $name Service name\n     * @param string|callable|Factory\\FactoryInterface $factory  Factory to which to map.\n     * phpcs:disable Generic.Files.LineLength.TooLong\n     * @psalm-param class-string<Factory\\FactoryInterface>|callable(ContainerInterface,string,array<mixed>|null):object|Factory\\FactoryInterface $factory\n     * phpcs:enable Generic.Files.LineLength.TooLong\n     * @return void\n     * @throws ContainerModificationsNotAllowedException If $name already\n     *     exists as a service and overrides are disallowed.\n     *\/\n    public function setFactory($name, $factory)\n    {\n        if (isset($this->services[$name]) && ! $this->allowOverride) {\n            throw ContainerModificationsNotAllowedException::fromExistingService($name);\n        }\n\n        $this->factories[$name] = $factory;\n    }\n\n    \/**\n     * Create a lazy service mapping to a class.\n     *\n     * @param string $name Service name to map\n     * @param null|string $class Class to which to map; if not provided, $name\n     *     will be used for the mapping.\n     *\/\n    public function mapLazyService($name, $class = null)\n    {\n        $this->configure(['lazy_services' => ['class_map' => [$name => $class ?: $name]]]);\n    }\n\n    \/**\n     * Add an abstract factory for resolving services.\n     *\n     * @param string|Factory\\AbstractFactoryInterface $factory Abstract factory\n     *     instance or class name.\n     * @psalm-param class-string<Factory\\AbstractFactoryInterface>|Factory\\AbstractFactoryInterface $factory\n     *\/\n    public function addAbstractFactory($factory)\n    {\n        $this->resolveAbstractFactoryInstance($factory);\n    }\n\n    \/**\n     * Add a delegator for a given service.\n     *\n     * @param string $name Service name\n     * @param string|callable|Factory\\DelegatorFactoryInterface $factory Delegator\n     *     factory to assign.\n     * @psalm-param class-string<Factory\\DelegatorFactoryInterface>\n     *     |callable(ContainerInterface,string,callable,array<mixed>|null) $factory\n     *\/\n    public function addDelegator($name, $factory)\n    {\n        $this->configure(['delegators' => [$name => [$factory]]]);\n    }\n\n    \/**\n     * Add an initializer.\n     *\n     * @param string|callable|Initializer\\InitializerInterface $initializer\n     * @psalm-param class-string<Initializer\\InitializerInterface>\n     *     |callable(ContainerInterface,mixed):void\n     *     |Initializer\\InitializerInterface $initializer\n     *\/\n    public function addInitializer($initializer)\n    {\n        $this->configure(['initializers' => [$initializer]]);\n    }\n\n    \/**\n     * Map a service.\n     *\n     * @param string $name Service name\n     * @param array|object $service\n     * @throws ContainerModificationsNotAllowedException If $name already\n     *     exists as a service and overrides are disallowed.\n     *\/\n    public function setService($name, $service)\n    {\n        if (isset($this->services[$name]) && ! $this->allowOverride) {\n            throw ContainerModificationsNotAllowedException::fromExistingService($name);\n        }\n        $this->services[$name] = $service;\n    }\n\n    \/**\n     * Add a service sharing rule.\n     *\n     * @param string $name Service name\n     * @param bool $flag Whether or not the service should be shared.\n     * @throws ContainerModificationsNotAllowedException If $name already\n     *     exists as a service and overrides are disallowed.\n     *\/\n    public function setShared($name, $flag)\n    {\n        if (isset($this->services[$name]) && ! $this->allowOverride) {\n            throw ContainerModificationsNotAllowedException::fromExistingService($name);\n        }\n\n        $this->shared[$name] = (bool) $flag;\n    }\n\n    \/**\n     * Instantiate initializers for to avoid checks during service construction.\n     *\n     * @psalm-param InitializersConfiguration $initializers\n     *\/\n    private function resolveInitializers(array $initializers): void\n    {\n        foreach ($initializers as $initializer) {\n            if (is_string($initializer) && class_exists($initializer)) {\n                $initializer = new $initializer();\n            }\n\n            if (is_callable($initializer)) {\n                $this->initializers[] = $initializer;\n                continue;\n            }\n\n            throw InvalidArgumentException::fromInvalidInitializer($initializer);\n        }\n    }\n\n    \/**\n     * Get a factory for the given service name\n     *\n     * @psalm-return (callable(ContainerInterface,string,array<mixed>|null):object)|Factory\\FactoryInterface\n     * @throws ServiceNotFoundException\n     *\/\n    private function getFactory(string $name): callable\n    {\n        $factory = $this->factories[$name] ?? null;\n\n        $lazyLoaded = false;\n        if (is_string($factory) && class_exists($factory)) {\n            $factory    = new $factory();\n            $lazyLoaded = true;\n        }\n\n        if (is_callable($factory)) {\n            if ($lazyLoaded) {\n                $this->factories[$name] = $factory;\n            }\n\n            return $factory;\n        }\n\n        \/\/ Check abstract factories\n        foreach ($this->abstractFactories as $abstractFactory) {\n            if ($abstractFactory->canCreate($this->creationContext, $name)) {\n                return $abstractFactory;\n            }\n        }\n\n        throw new ServiceNotFoundException(sprintf(\n            'Unable to resolve service \"%s\" to a factory; are you certain you provided it during configuration?',\n            $name\n        ));\n    }\n\n    \/**\n     * @return object\n     *\/\n    private function createDelegatorFromName(string $name, ?array $options = null)\n    {\n        $creationCallback = function () use ($name, $options) {\n            \/\/ Code is inlined for performance reason, instead of abstracting the creation\n            $factory = $this->getFactory($name);\n            return $factory($this->creationContext, $name, $options);\n        };\n\n        $initialCreationContext = $this->creationContext;\n\n        foreach ($this->delegators[$name] as $index => $delegatorFactory) {\n            $delegatorFactory = $this->delegators[$name][$index];\n\n            if ($delegatorFactory === LazyServiceFactory::class) {\n                $delegatorFactory = $this->createLazyServiceDelegatorFactory();\n            } elseif (is_string($delegatorFactory) && class_exists($delegatorFactory)) {\n                $delegatorFactory = new $delegatorFactory();\n            }\n\n            $this->assertCallableDelegatorFactory($delegatorFactory);\n\n            $this->delegators[$name][$index] = $delegatorFactory;\n\n            $creationCallback =\n                \/** @return object *\/\n                static fn() => $delegatorFactory($initialCreationContext, $name, $creationCallback, $options);\n        }\n\n        return $creationCallback();\n    }\n\n    \/**\n     * Create a new instance with an already resolved name\n     *\n     * This is a highly performance sensitive method, do not modify if you have not benchmarked it carefully\n     *\n     * @return object\n     * @throws ServiceNotFoundException If unable to resolve the service.\n     * @throws ServiceNotCreatedException If an exception is raised when creating a service.\n     * @throws ContainerExceptionInterface If any other error occurs.\n     *\/\n    private function doCreate(string $resolvedName, ?array $options = null)\n    {\n        try {\n            if (! isset($this->delegators[$resolvedName])) {\n                \/\/ Let's create the service by fetching the factory\n                $factory = $this->getFactory($resolvedName);\n                $object  = $factory($this->creationContext, $resolvedName, $options);\n            } else {\n                $object = $this->createDelegatorFromName($resolvedName, $options);\n            }\n        } catch (ContainerExceptionInterface $exception) {\n            throw $exception;\n        } catch (Exception $exception) {\n            throw new ServiceNotCreatedException(sprintf(\n                'Service with name \"%s\" could not be created. Reason: %s',\n                $resolvedName,\n                $exception->getMessage()\n            ), (int) $exception->getCode(), $exception);\n        }\n\n        foreach ($this->initializers as $initializer) {\n            $initializer($this->creationContext, $object);\n        }\n\n        return $object;\n    }\n\n    \/**\n     * Create the lazy services delegator factory.\n     *\n     * Creates the lazy services delegator factory based on the lazy_services\n     * configuration present.\n     *\n     * @throws ServiceNotCreatedException When the lazy service class_map configuration is missing.\n     *\/\n    private function createLazyServiceDelegatorFactory(): LazyServiceFactory\n    {\n        if ($this->lazyServicesDelegator) {\n            return $this->lazyServicesDelegator;\n        }\n\n        if (! isset($this->lazyServices['class_map'])) {\n            throw new ServiceNotCreatedException('Missing \"class_map\" config key in \"lazy_services\"');\n        }\n\n        $factoryConfig = new ProxyConfiguration();\n\n        if (isset($this->lazyServices['proxies_namespace'])) {\n            $factoryConfig->setProxiesNamespace($this->lazyServices['proxies_namespace']);\n        }\n\n        if (isset($this->lazyServices['proxies_target_dir'])) {\n            $factoryConfig->setProxiesTargetDir($this->lazyServices['proxies_target_dir']);\n        }\n\n        if (! isset($this->lazyServices['write_proxy_files']) || ! $this->lazyServices['write_proxy_files']) {\n            $factoryConfig->setGeneratorStrategy(new EvaluatingGeneratorStrategy());\n        } else {\n            $factoryConfig->setGeneratorStrategy(new FileWriterGeneratorStrategy(\n                new FileLocator($factoryConfig->getProxiesTargetDir())\n            ));\n        }\n\n        spl_autoload_register($factoryConfig->getProxyAutoloader());\n\n        $this->lazyServicesDelegator = new LazyServiceFactory(\n            new LazyLoadingValueHolderFactory($factoryConfig),\n            $this->lazyServices['class_map']\n        );\n\n        return $this->lazyServicesDelegator;\n    }\n\n    \/**\n     * Merge delegators avoiding multiple same delegators for the same service.\n     * It works with strings and class instances.\n     * It's not possible to de-duple anonymous functions\n     *\n     * @psalm-param DelegatorsConfiguration $config\n     * @psalm-return DelegatorsConfiguration\n     *\/\n    private function mergeDelegators(array $config): array\n    {\n        foreach ($config as $key => $delegators) {\n            if (! array_key_exists($key, $this->delegators)) {\n                $this->delegators[$key] = $delegators;\n                continue;\n            }\n\n            foreach ($delegators as $delegator) {\n                if (! in_array($delegator, $this->delegators[$key], true)) {\n                    $this->delegators[$key][] = $delegator;\n                }\n            }\n        }\n\n        return $this->delegators;\n    }\n\n    \/**\n     * Create aliases and factories for invokable classes.\n     *\n     * If an invokable service name does not match the class it maps to, this\n     * creates an alias to the class (which will later be mapped as an\n     * invokable factory). The newly created aliases will be returned as an array.\n     *\n     * @param array<string,string> $invokables\n     * @return array<string,string>\n     *\/\n    private function createAliasesAndFactoriesForInvokables(array $invokables): array\n    {\n        $newAliases = [];\n\n        foreach ($invokables as $name => $class) {\n            $this->factories[$class] = Factory\\InvokableFactory::class;\n            if ($name !== $class) {\n                $this->aliases[$name] = $class;\n                $newAliases[$name]    = $class;\n            }\n        }\n\n        return $newAliases;\n    }\n\n    \/**\n     * Determine if a service for any name provided by a service\n     * manager configuration(services, aliases, factories, ...)\n     * already exists, and if it exists, determine if is it allowed\n     * to get overriden.\n     *\n     * Validation in the context of this class means, that for\n     * a given service name we do not have a service instance\n     * in the cache OR override is explicitly allowed.\n     *\n     * @psalm-param ServiceManagerConfiguration $config\n     * @throws ContainerModificationsNotAllowedException If any\n     *     service key is invalid.\n     *\/\n    private function validateServiceNames(array $config): void\n    {\n        if ($this->allowOverride || ! $this->configured) {\n            return;\n        }\n\n        if (isset($config['services'])) {\n            foreach (array_keys($config['services']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n\n        if (isset($config['aliases'])) {\n            foreach (array_keys($config['aliases']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n\n        if (isset($config['invokables'])) {\n            foreach (array_keys($config['invokables']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n\n        if (isset($config['factories'])) {\n            foreach (array_keys($config['factories']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n\n        if (isset($config['delegators'])) {\n            foreach (array_keys($config['delegators']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n\n        if (isset($config['shared'])) {\n            foreach (array_keys($config['shared']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n\n        if (isset($config['lazy_services']['class_map'])) {\n            foreach (array_keys($config['lazy_services']['class_map']) as $service) {\n                if (isset($this->services[$service])) {\n                    throw ContainerModificationsNotAllowedException::fromExistingService($service);\n                }\n            }\n        }\n    }\n\n    \/**\n     * Assuming that the alias name is valid (see above) resolve\/add it.\n     *\n     * This is done differently from bulk mapping aliases for performance reasons, as the\n     * algorithms for mapping a single item efficiently are different from those of mapping\n     * many.\n     *\/\n    private function mapAliasToTarget(string $alias, string $target): void\n    {\n        \/\/ $target is either an alias or something else\n        \/\/ if it is an alias, resolve it\n        $this->aliases[$alias] = $this->aliases[$target] ?? $target;\n\n        \/\/ a self-referencing alias indicates a cycle\n        if ($alias === $this->aliases[$alias]) {\n            throw CyclicAliasException::fromCyclicAlias($alias, $this->aliases);\n        }\n\n        \/\/ finally we have to check if existing incomplete alias definitions\n        \/\/ exist which can get resolved by the new alias\n        if (in_array($alias, $this->aliases)) {\n            $r = array_intersect($this->aliases, [$alias]);\n            \/\/ found some, resolve them\n            foreach ($r as $name => $service) {\n                $this->aliases[$name] = $target;\n            }\n        }\n    }\n\n    \/**\n     * Assuming that all provided alias keys are valid resolve them.\n     *\n     * This function maps $this->aliases in place.\n     *\n     * This algorithm is an adaptated version of Tarjans Strongly\n     * Connected Components. Instead of returning the strongly\n     * connected components (i.e. cycles in our case), we throw.\n     * If nodes are not strongly connected (i.e. resolvable in\n     * our case), they get resolved.\n     *\n     * This algorithm is fast for mass updates through configure().\n     * It is not appropriate if just a single alias is added.\n     *\n     * @see mapAliasToTarget above\n     *\/\n    private function mapAliasesToTargets(): void\n    {\n        $tagged = [];\n        foreach ($this->aliases as $alias => $target) {\n            if (isset($tagged[$alias])) {\n                continue;\n            }\n\n            $tCursor = $this->aliases[$alias];\n            $aCursor = $alias;\n            if ($aCursor === $tCursor) {\n                throw CyclicAliasException::fromCyclicAlias($alias, $this->aliases);\n            }\n            if (! isset($this->aliases[$tCursor])) {\n                continue;\n            }\n\n            $stack = [];\n\n            while (isset($this->aliases[$tCursor])) {\n                $stack[] = $aCursor;\n                if ($aCursor === $this->aliases[$tCursor]) {\n                    throw CyclicAliasException::fromCyclicAlias($alias, $this->aliases);\n                }\n                $aCursor = $tCursor;\n                $tCursor = $this->aliases[$tCursor];\n            }\n\n            $tagged[$aCursor] = true;\n\n            foreach ($stack as $alias) {\n                if ($alias === $tCursor) {\n                    throw CyclicAliasException::fromCyclicAlias($alias, $this->aliases);\n                }\n                $this->aliases[$alias] = $tCursor;\n                $tagged[$alias]        = true;\n            }\n        }\n    }\n\n    \/**\n     * Instantiate abstract factories in order to avoid checks during service construction.\n     *\n     * @param string|Factory\\AbstractFactoryInterface $abstractFactory\n     * @psalm-param class-string<Factory\\AbstractFactoryInterface>|Factory\\AbstractFactoryInterface $abstractFactory\n     *\/\n    private function resolveAbstractFactoryInstance($abstractFactory): void\n    {\n        if (is_string($abstractFactory) && class_exists($abstractFactory)) {\n            \/\/ Cached string factory name\n            if (! isset($this->cachedAbstractFactories[$abstractFactory])) {\n                $this->cachedAbstractFactories[$abstractFactory] = new $abstractFactory();\n            }\n\n            $abstractFactory = $this->cachedAbstractFactories[$abstractFactory];\n        }\n\n        if (! $abstractFactory instanceof Factory\\AbstractFactoryInterface) {\n            throw InvalidArgumentException::fromInvalidAbstractFactory($abstractFactory);\n        }\n\n        $abstractFactoryObjHash                           = spl_object_hash($abstractFactory);\n        $this->abstractFactories[$abstractFactoryObjHash] = $abstractFactory;\n    }\n\n    \/**\n     * Check if a static service or factory exists for the given name.\n     *\/\n    private function staticServiceOrFactoryCanCreate(string $name): bool\n    {\n        if (isset($this->services[$name]) || isset($this->factories[$name])) {\n            return true;\n        }\n\n        $resolvedName = $this->aliases[$name] ?? $name;\n        if ($resolvedName !== $name) {\n            return $this->staticServiceOrFactoryCanCreate($resolvedName);\n        }\n\n        return false;\n    }\n\n    \/**\n     * Check if an abstract factory exists that can create a service for the given name.\n     *\/\n    private function abstractFactoryCanCreate(string $name): bool\n    {\n        foreach ($this->abstractFactories as $abstractFactory) {\n            if ($abstractFactory->canCreate($this->creationContext, $name)) {\n                return true;\n            }\n        }\n\n        $resolvedName = $this->aliases[$name] ?? $name;\n        if ($resolvedName !== $name) {\n            return $this->abstractFactoryCanCreate($resolvedName);\n        }\n\n        return false;\n    }\n\n    \/**\n     * @psalm-param mixed $delegatorFactory\n     * @psalm-assert callable(ContainerInterface,string,callable():object,array<mixed>|null):object $delegatorFactory\n     *\/\n    private function assertCallableDelegatorFactory($delegatorFactory): void\n    {\n        if (\n            $delegatorFactory instanceof Factory\\DelegatorFactoryInterface\n            || is_callable($delegatorFactory)\n        ) {\n            return;\n        }\n        if (is_string($delegatorFactory)) {\n            throw new ServiceNotCreatedException(sprintf(\n                'An invalid delegator factory was registered; resolved to class or function \"%s\"'\n                . ' which does not exist; please provide a valid function name or class name resolving'\n                . ' to an implementation of %s',\n                $delegatorFactory,\n                DelegatorFactoryInterface::class\n            ));\n        }\n        throw new ServiceNotCreatedException(sprintf(\n            'A non-callable delegator, \"%s\", was provided; expected a callable or instance of \"%s\"',\n            is_object($delegatorFactory) ? $delegatorFactory::class : gettype($delegatorFactory),\n            DelegatorFactoryInterface::class\n        ));\n    }\n}\n",
"vendor/laminas/laminas-servicemanager/src/autoload.php" : "<?php \/\/ phpcs:disable WebimpressCodingStandard.PHP.CorrectClassNameCase.Invalid\n\n\ndeclare(strict_types=1);\n\nuse Interop\\Container\\Containerinterface as InteropContainerInterface;\nuse Interop\\Container\\Exception\\ContainerException as InteropContainerException;\nuse Interop\\Container\\Exception\\NotFoundException as InteropNotFoundException;\nuse Psr\\Container\\ContainerExceptionInterface;\nuse Psr\\Container\\ContainerInterface;\nuse Psr\\Container\\NotFoundExceptionInterface;\n\nif (! interface_exists(InteropContainerInterface::class, false)) {\n    class_alias(ContainerInterface::class, InteropContainerInterface::class);\n}\nif (! interface_exists(InteropContainerException::class, false)) {\n    class_alias(ContainerExceptionInterface::class, InteropContainerException::class);\n}\nif (! interface_exists(InteropNotFoundException::class, false)) {\n    class_alias(NotFoundExceptionInterface::class, InteropNotFoundException::class);\n}\n",
"vendor/psr/container/src/ContainerExceptionInterface.php" : "<?php\n\nnamespace Psr\\Container;\n\nuse Throwable;\n\n\/**\n * Base interface representing a generic exception in a container.\n *\/\ninterface ContainerExceptionInterface extends Throwable\n{\n}\n",
"vendor/psr/container/src/ContainerInterface.php" : "<?php\n\ndeclare(strict_types=1);\n\nnamespace Psr\\Container;\n\n\/**\n * Describes the interface of a container that exposes methods to read its entries.\n *\/\ninterface ContainerInterface\n{\n    \/**\n     * Finds an entry of the container by its identifier and returns it.\n     *\n     * @param string $id Identifier of the entry to look for.\n     *\n     * @throws NotFoundExceptionInterface  No entry was found for **this** identifier.\n     * @throws ContainerExceptionInterface Error while retrieving the entry.\n     *\n     * @return mixed Entry.\n     *\/\n    public function get(string $id);\n\n    \/**\n     * Returns true if the container can return an entry for the given identifier.\n     * Returns false otherwise.\n     *\n     * `has($id)` returning true does not mean that `get($id)` will not throw an exception.\n     * It does however mean that `get($id)` will not throw a `NotFoundExceptionInterface`.\n     *\n     * @param string $id Identifier of the entry to look for.\n     *\n     * @return bool\n     *\/\n    public function has(string $id);\n}\n",
"vendor/psr/container/src/NotFoundExceptionInterface.php" : "<?php\n\nnamespace Psr\\Container;\n\n\/**\n * No entry was found in the container.\n *\/\ninterface NotFoundExceptionInterface extends ContainerExceptionInterface\n{\n}\n",
"vendor/ralouphie/getallheaders/src/getallheaders.php" : "<?php\n\nif (!function_exists('getallheaders')) {\n\n    \/**\n     * Get all HTTP header key\/values as an associative array for the current request.\n     *\n     * @return string[string] The HTTP header key\/value pairs.\n     *\/\n    function getallheaders()\n    {\n        $headers = array();\n\n        $copy_server = array(\n            'CONTENT_TYPE'   => 'Content-Type',\n            'CONTENT_LENGTH' => 'Content-Length',\n            'CONTENT_MD5'    => 'Content-Md5',\n        );\n\n        foreach ($_SERVER as $key => $value) {\n            if (substr($key, 0, 5) === 'HTTP_') {\n                $key = substr($key, 5);\n                if (!isset($copy_server[$key]) || !isset($_SERVER[$key])) {\n                    $key = str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', $key))));\n                    $headers[$key] = $value;\n                }\n            } elseif (isset($copy_server[$key])) {\n                $headers[$copy_server[$key]] = $value;\n            }\n        }\n\n        if (!isset($headers['Authorization'])) {\n            if (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION'])) {\n                $headers['Authorization'] = $_SERVER['REDIRECT_HTTP_AUTHORIZATION'];\n            } elseif (isset($_SERVER['PHP_AUTH_USER'])) {\n                $basic_pass = isset($_SERVER['PHP_AUTH_PW']) ? $_SERVER['PHP_AUTH_PW'] : '';\n                $headers['Authorization'] = 'Basic ' . base64_encode($_SERVER['PHP_AUTH_USER'] . ':' . $basic_pass);\n            } elseif (isset($_SERVER['PHP_AUTH_DIGEST'])) {\n                $headers['Authorization'] = $_SERVER['PHP_AUTH_DIGEST'];\n            }\n        }\n\n        return $headers;\n    }\n\n}\n",
"vendor/symfony/deprecation-contracts/function.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nif (!function_exists('trigger_deprecation')) {\n    \/**\n     * Triggers a silenced deprecation notice.\n     *\n     * @param string $package The name of the Composer package that is triggering the deprecation\n     * @param string $version The version of the package that introduced the deprecation\n     * @param string $message The message of the deprecation\n     * @param mixed  ...$args Values to insert in the message using printf() formatting\n     *\n     * @author Nicolas Grekas <p@tchwork.com>\n     *\/\n    function trigger_deprecation(string $package, string $version, string $message, mixed ...$args): void\n    {\n        @trigger_error(($package || $version ? \"Since $package $version: \" : '').($args ? vsprintf($message, $args) : $message), \\E_USER_DEPRECATED);\n    }\n}\n",
"vendor/symfony/polyfill-ctype/Ctype.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Ctype;\n\n\/**\n * Ctype implementation through regex.\n *\n * @internal\n *\n * @author Gert de Pagter <BackEndTea@gmail.com>\n *\/\nfinal class Ctype\n{\n    \/**\n     * Returns TRUE if every character in text is either a letter or a digit, FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-alnum\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_alnum($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^A-Za-z0-9]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is a letter, FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-alpha\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_alpha($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^A-Za-z]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is a control character from the current locale, FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-cntrl\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_cntrl($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^\\x00-\\x1f\\x7f]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in the string text is a decimal digit, FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-digit\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_digit($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^0-9]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is printable and actually creates visible output (no white space), FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-graph\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_graph($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^!-~]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is a lowercase letter.\n     *\n     * @see https:\/\/php.net\/ctype-lower\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_lower($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^a-z]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text will actually create output (including blanks). Returns FALSE if text contains control characters or characters that do not have any output or control function at all.\n     *\n     * @see https:\/\/php.net\/ctype-print\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_print($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^ -~]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is printable, but neither letter, digit or blank, FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-punct\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_punct($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^!-\\\/\\:-@\\[-`\\{-~]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text creates some sort of white space, FALSE otherwise. Besides the blank character this also includes tab, vertical tab, line feed, carriage return and form feed characters.\n     *\n     * @see https:\/\/php.net\/ctype-space\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_space($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^\\s]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is an uppercase letter.\n     *\n     * @see https:\/\/php.net\/ctype-upper\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_upper($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^A-Z]\/', $text);\n    }\n\n    \/**\n     * Returns TRUE if every character in text is a hexadecimal 'digit', that is a decimal digit or a character from [A-Fa-f] , FALSE otherwise.\n     *\n     * @see https:\/\/php.net\/ctype-xdigit\n     *\n     * @param mixed $text\n     *\n     * @return bool\n     *\/\n    public static function ctype_xdigit($text)\n    {\n        $text = self::convert_int_to_char_for_ctype($text, __FUNCTION__);\n\n        return \\is_string($text) && '' !== $text && !preg_match('\/[^A-Fa-f0-9]\/', $text);\n    }\n\n    \/**\n     * Converts integers to their char versions according to normal ctype behaviour, if needed.\n     *\n     * If an integer between -128 and 255 inclusive is provided,\n     * it is interpreted as the ASCII value of a single character\n     * (negative values have 256 added in order to allow characters in the Extended ASCII range).\n     * Any other integer is interpreted as a string containing the decimal digits of the integer.\n     *\n     * @param mixed  $int\n     * @param string $function\n     *\n     * @return mixed\n     *\/\n    private static function convert_int_to_char_for_ctype($int, $function)\n    {\n        if (!\\is_int($int)) {\n            return $int;\n        }\n\n        if ($int < -128 || $int > 255) {\n            return (string) $int;\n        }\n\n        if (\\PHP_VERSION_ID >= 80100) {\n            @trigger_error($function.'(): Argument of type int will be interpreted as string in the future', \\E_USER_DEPRECATED);\n        }\n\n        if ($int < 0) {\n            $int += 256;\n        }\n\n        return \\chr($int);\n    }\n}\n",
"vendor/symfony/polyfill-ctype/bootstrap.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Ctype as p;\n\nif (\\PHP_VERSION_ID >= 80000) {\n    return require __DIR__.'\/bootstrap80.php';\n}\n\nif (!function_exists('ctype_alnum')) {\n    function ctype_alnum($text) { return p\\Ctype::ctype_alnum($text); }\n}\nif (!function_exists('ctype_alpha')) {\n    function ctype_alpha($text) { return p\\Ctype::ctype_alpha($text); }\n}\nif (!function_exists('ctype_cntrl')) {\n    function ctype_cntrl($text) { return p\\Ctype::ctype_cntrl($text); }\n}\nif (!function_exists('ctype_digit')) {\n    function ctype_digit($text) { return p\\Ctype::ctype_digit($text); }\n}\nif (!function_exists('ctype_graph')) {\n    function ctype_graph($text) { return p\\Ctype::ctype_graph($text); }\n}\nif (!function_exists('ctype_lower')) {\n    function ctype_lower($text) { return p\\Ctype::ctype_lower($text); }\n}\nif (!function_exists('ctype_print')) {\n    function ctype_print($text) { return p\\Ctype::ctype_print($text); }\n}\nif (!function_exists('ctype_punct')) {\n    function ctype_punct($text) { return p\\Ctype::ctype_punct($text); }\n}\nif (!function_exists('ctype_space')) {\n    function ctype_space($text) { return p\\Ctype::ctype_space($text); }\n}\nif (!function_exists('ctype_upper')) {\n    function ctype_upper($text) { return p\\Ctype::ctype_upper($text); }\n}\nif (!function_exists('ctype_xdigit')) {\n    function ctype_xdigit($text) { return p\\Ctype::ctype_xdigit($text); }\n}\n",
"vendor/symfony/polyfill-ctype/bootstrap80.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Ctype as p;\n\nif (!function_exists('ctype_alnum')) {\n    function ctype_alnum(mixed $text): bool { return p\\Ctype::ctype_alnum($text); }\n}\nif (!function_exists('ctype_alpha')) {\n    function ctype_alpha(mixed $text): bool { return p\\Ctype::ctype_alpha($text); }\n}\nif (!function_exists('ctype_cntrl')) {\n    function ctype_cntrl(mixed $text): bool { return p\\Ctype::ctype_cntrl($text); }\n}\nif (!function_exists('ctype_digit')) {\n    function ctype_digit(mixed $text): bool { return p\\Ctype::ctype_digit($text); }\n}\nif (!function_exists('ctype_graph')) {\n    function ctype_graph(mixed $text): bool { return p\\Ctype::ctype_graph($text); }\n}\nif (!function_exists('ctype_lower')) {\n    function ctype_lower(mixed $text): bool { return p\\Ctype::ctype_lower($text); }\n}\nif (!function_exists('ctype_print')) {\n    function ctype_print(mixed $text): bool { return p\\Ctype::ctype_print($text); }\n}\nif (!function_exists('ctype_punct')) {\n    function ctype_punct(mixed $text): bool { return p\\Ctype::ctype_punct($text); }\n}\nif (!function_exists('ctype_space')) {\n    function ctype_space(mixed $text): bool { return p\\Ctype::ctype_space($text); }\n}\nif (!function_exists('ctype_upper')) {\n    function ctype_upper(mixed $text): bool { return p\\Ctype::ctype_upper($text); }\n}\nif (!function_exists('ctype_xdigit')) {\n    function ctype_xdigit(mixed $text): bool { return p\\Ctype::ctype_xdigit($text); }\n}\n",
"vendor/symfony/polyfill-intl-grapheme/Grapheme.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Intl\\Grapheme;\n\n\\define('SYMFONY_GRAPHEME_CLUSTER_RX', ((float) \\PCRE_VERSION < 10 ? (float) \\PCRE_VERSION >= 8.32 : (float) \\PCRE_VERSION >= 10.39) ? '\\X' : Grapheme::GRAPHEME_CLUSTER_RX);\n\n\/**\n * Partial intl implementation in pure PHP.\n *\n * Implemented:\n * - grapheme_extract  - Extract a sequence of grapheme clusters from a text buffer, which must be encoded in UTF-8\n * - grapheme_stripos  - Find position (in grapheme units) of first occurrence of a case-insensitive string\n * - grapheme_stristr  - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack\n * - grapheme_strlen   - Get string length in grapheme units\n * - grapheme_strpos   - Find position (in grapheme units) of first occurrence of a string\n * - grapheme_strripos - Find position (in grapheme units) of last occurrence of a case-insensitive string\n * - grapheme_strrpos  - Find position (in grapheme units) of last occurrence of a string\n * - grapheme_strstr   - Returns part of haystack string from the first occurrence of needle to the end of haystack\n * - grapheme_substr   - Return part of a string\n *\n * @author Nicolas Grekas <p@tchwork.com>\n *\n * @internal\n *\/\nfinal class Grapheme\n{\n    \/\/ (CRLF|([ZWNJ-ZWJ]|T+|L*(LV?V+|LV|LVT)T*|L+|[^Control])[Extend]*|[Control])\n    \/\/ This regular expression is a work around for http:\/\/bugs.exim.org\/1279\n    public const GRAPHEME_CLUSTER_RX = '(?:\\r\\n|(?:[ -~\\x{200C}\\x{200D}]|[\u11a8-\u11f9]+|[\u1100-\u115f]*(?:[\uac00\uac1c\uac38\uac54\uac70\uac8c\uaca8\uacc4\uace0\uacfc\uad18\uad34\uad50\uad6c\uad88\uada4\uadc0\uaddc\uadf8\uae14\uae30\uae4c\uae68\uae84\uaea0\uaebc\uaed8\uaef4\uaf10\uaf2c\uaf48\uaf64\uaf80\uaf9c\uafb8\uafd4\uaff0\ub00c\ub028\ub044\ub060\ub07c\ub098\ub0b4\ub0d0\ub0ec\ub108\ub124\ub140\ub15c\ub178\ub194\ub1b0\ub1cc\ub1e8\ub204\ub220\ub23c\ub258\ub274\ub290\ub2ac\ub2c8\ub2e4\ub300\ub31c\ub338\ub354\ub370\ub38c\ub3a8\ub3c4\ub3e0\ub3fc\ub418\ub434\ub450\ub46c\ub488\ub4a4\ub4c0\ub4dc\ub4f8\ub514\ub530\ub54c\ub568\ub584\ub5a0\ub5bc\ub5d8\ub5f4\ub610\ub62c\ub648\ub664\ub680\ub69c\ub6b8\ub6d4\ub6f0\ub70c\ub728\ub744\ub760\ub77c\ub798\ub7b4\ub7d0\ub7ec\ub808\ub824\ub840\ub85c\ub878\ub894\ub8b0\ub8cc\ub8e8\ub904\ub920\ub93c\ub958\ub974\ub990\ub9ac\ub9c8\ub9e4\uba00\uba1c\uba38\uba54\uba70\uba8c\ubaa8\ubac4\ubae0\ubafc\ubb18\ubb34\ubb50\ubb6c\ubb88\ubba4\ubbc0\ubbdc\ubbf8\ubc14\ubc30\ubc4c\ubc68\ubc84\ubca0\ubcbc\ubcd8\ubcf4\ubd10\ubd2c\ubd48\ubd64\ubd80\ubd9c\ubdb8\ubdd4\ubdf0\ube0c\ube28\ube44\ube60\ube7c\ube98\ubeb4\ubed0\ubeec\ubf08\ubf24\ubf40\ubf5c\ubf78\ubf94\ubfb0\ubfcc\ubfe8\uc004\uc020\uc03c\uc058\uc074\uc090\uc0ac\uc0c8\uc0e4\uc100\uc11c\uc138\uc154\uc170\uc18c\uc1a8\uc1c4\uc1e0\uc1fc\uc218\uc234\uc250\uc26c\uc288\uc2a4\uc2c0\uc2dc\uc2f8\uc314\uc330\uc34c\uc368\uc384\uc3a0\uc3bc\uc3d8\uc3f4\uc410\uc42c\uc448\uc464\uc480\uc49c\uc4b8\uc4d4\uc4f0\uc50c\uc528\uc544\uc560\uc57c\uc598\uc5b4\uc5d0\uc5ec\uc608\uc624\uc640\uc65c\uc678\uc694\uc6b0\uc6cc\uc6e8\uc704\uc720\uc73c\uc758\uc774\uc790\uc7ac\uc7c8\uc7e4\uc800\uc81c\uc838\uc854\uc870\uc88c\uc8a8\uc8c4\uc8e0\uc8fc\uc918\uc934\uc950\uc96c\uc988\uc9a4\uc9c0\uc9dc\uc9f8\uca14\uca30\uca4c\uca68\uca84\ucaa0\ucabc\ucad8\ucaf4\ucb10\ucb2c\ucb48\ucb64\ucb80\ucb9c\ucbb8\ucbd4\ucbf0\ucc0c\ucc28\ucc44\ucc60\ucc7c\ucc98\uccb4\uccd0\uccec\ucd08\ucd24\ucd40\ucd5c\ucd78\ucd94\ucdb0\ucdcc\ucde8\uce04\uce20\uce3c\uce58\uce74\uce90\uceac\ucec8\ucee4\ucf00\ucf1c\ucf38\ucf54\ucf70\ucf8c\ucfa8\ucfc4\ucfe0\ucffc\ud018\ud034\ud050\ud06c\ud088\ud0a4\ud0c0\ud0dc\ud0f8\ud114\ud130\ud14c\ud168\ud184\ud1a0\ud1bc\ud1d8\ud1f4\ud210\ud22c\ud248\ud264\ud280\ud29c\ud2b8\ud2d4\ud2f0\ud30c\ud328\ud344\ud360\ud37c\ud398\ud3b4\ud3d0\ud3ec\ud408\ud424\ud440\ud45c\ud478\ud494\ud4b0\ud4cc\ud4e8\ud504\ud520\ud53c\ud558\ud574\ud590\ud5ac\ud5c8\ud5e4\ud600\ud61c\ud638\ud654\ud670\ud68c\ud6a8\ud6c4\ud6e0\ud6fc\ud718\ud734\ud750\ud76c\ud788]?[\u1160-\u11a2]+|[\uac00-\ud7a3])[\u11a8-\u11f9]*|[\u1100-\u115f]+|[^\\p{Cc}\\p{Cf}\\p{Zl}\\p{Zp}])[\\p{Mn}\\p{Me}\\x{09BE}\\x{09D7}\\x{0B3E}\\x{0B57}\\x{0BBE}\\x{0BD7}\\x{0CC2}\\x{0CD5}\\x{0CD6}\\x{0D3E}\\x{0D57}\\x{0DCF}\\x{0DDF}\\x{200C}\\x{200D}\\x{1D165}\\x{1D16E}-\\x{1D172}]*|[\\p{Cc}\\p{Cf}\\p{Zl}\\p{Zp}])';\n\n    private const CASE_FOLD = [\n        ['\u00b5', '\u017f', \"\\xCD\\x85\", '\u03c2', \"\\xCF\\x90\", \"\\xCF\\x91\", \"\\xCF\\x95\", \"\\xCF\\x96\", \"\\xCF\\xB0\", \"\\xCF\\xB1\", \"\\xCF\\xB5\", \"\\xE1\\xBA\\x9B\", \"\\xE1\\xBE\\xBE\"],\n        ['\u03bc', 's', '\u03b9',        '\u03c3', '\u03b2',        '\u03b8',        '\u03c6',        '\u03c0',        '\u03ba',        '\u03c1',        '\u03b5',        \"\\xE1\\xB9\\xA1\", '\u03b9'],\n    ];\n\n    public static function grapheme_extract($s, $size, $type = \\GRAPHEME_EXTR_COUNT, $start = 0, &$next = 0)\n    {\n        if (0 > $start) {\n            $start = \\strlen($s) + $start;\n        }\n\n        if (!\\is_scalar($s)) {\n            $hasError = false;\n            set_error_handler(function () use (&$hasError) { $hasError = true; });\n            $next = substr($s, $start);\n            restore_error_handler();\n            if ($hasError) {\n                substr($s, $start);\n                $s = '';\n            } else {\n                $s = $next;\n            }\n        } else {\n            $s = substr($s, $start);\n        }\n        $size = (int) $size;\n        $type = (int) $type;\n        $start = (int) $start;\n\n        if (\\GRAPHEME_EXTR_COUNT !== $type && \\GRAPHEME_EXTR_MAXBYTES !== $type && \\GRAPHEME_EXTR_MAXCHARS !== $type) {\n            if (80000 > \\PHP_VERSION_ID) {\n                return false;\n            }\n\n            throw new \\ValueError('grapheme_extract(): Argument #3 ($type) must be one of GRAPHEME_EXTR_COUNT, GRAPHEME_EXTR_MAXBYTES, or GRAPHEME_EXTR_MAXCHARS');\n        }\n\n        if (!isset($s[0]) || 0 > $size || 0 > $start) {\n            return false;\n        }\n        if (0 === $size) {\n            return '';\n        }\n\n        $next = $start;\n\n        $s = preg_split('\/('.SYMFONY_GRAPHEME_CLUSTER_RX.')\/u', \"\\r\\n\".$s, $size + 1, \\PREG_SPLIT_NO_EMPTY | \\PREG_SPLIT_DELIM_CAPTURE);\n\n        if (!isset($s[1])) {\n            return false;\n        }\n\n        $i = 1;\n        $ret = '';\n\n        do {\n            if (\\GRAPHEME_EXTR_COUNT === $type) {\n                --$size;\n            } elseif (\\GRAPHEME_EXTR_MAXBYTES === $type) {\n                $size -= \\strlen($s[$i]);\n            } else {\n                $size -= iconv_strlen($s[$i], 'UTF-8\/\/IGNORE');\n            }\n\n            if ($size >= 0) {\n                $ret .= $s[$i];\n            }\n        } while (isset($s[++$i]) && $size > 0);\n\n        $next += \\strlen($ret);\n\n        return $ret;\n    }\n\n    public static function grapheme_strlen($s)\n    {\n        preg_replace('\/'.SYMFONY_GRAPHEME_CLUSTER_RX.'\/u', '', $s, -1, $len);\n\n        return 0 === $len && '' !== $s ? null : $len;\n    }\n\n    public static function grapheme_substr($s, $start, $len = null)\n    {\n        if (null === $len) {\n            $len = 2147483647;\n        }\n\n        preg_match_all('\/'.SYMFONY_GRAPHEME_CLUSTER_RX.'\/u', $s, $s);\n\n        $slen = \\count($s[0]);\n        $start = (int) $start;\n\n        if (0 > $start) {\n            $start += $slen;\n        }\n        if (0 > $start) {\n            if (\\PHP_VERSION_ID < 80000) {\n                return false;\n            }\n\n            $start = 0;\n        }\n        if ($start >= $slen) {\n            return \\PHP_VERSION_ID >= 80000 ? '' : false;\n        }\n\n        $rem = $slen - $start;\n\n        if (0 > $len) {\n            $len += $rem;\n        }\n        if (0 === $len) {\n            return '';\n        }\n        if (0 > $len) {\n            return \\PHP_VERSION_ID >= 80000 ? '' : false;\n        }\n        if ($len > $rem) {\n            $len = $rem;\n        }\n\n        return implode('', \\array_slice($s[0], $start, $len));\n    }\n\n    public static function grapheme_strpos($s, $needle, $offset = 0)\n    {\n        return self::grapheme_position($s, $needle, $offset, 0);\n    }\n\n    public static function grapheme_stripos($s, $needle, $offset = 0)\n    {\n        return self::grapheme_position($s, $needle, $offset, 1);\n    }\n\n    public static function grapheme_strrpos($s, $needle, $offset = 0)\n    {\n        return self::grapheme_position($s, $needle, $offset, 2);\n    }\n\n    public static function grapheme_strripos($s, $needle, $offset = 0)\n    {\n        return self::grapheme_position($s, $needle, $offset, 3);\n    }\n\n    public static function grapheme_stristr($s, $needle, $beforeNeedle = false)\n    {\n        return mb_stristr($s, $needle, $beforeNeedle, 'UTF-8');\n    }\n\n    public static function grapheme_strstr($s, $needle, $beforeNeedle = false)\n    {\n        return mb_strstr($s, $needle, $beforeNeedle, 'UTF-8');\n    }\n\n    private static function grapheme_position($s, $needle, $offset, $mode)\n    {\n        $needle = (string) $needle;\n        if (80000 > \\PHP_VERSION_ID && !preg_match('\/.\/us', $needle)) {\n            return false;\n        }\n        $s = (string) $s;\n        if (!preg_match('\/.\/us', $s)) {\n            return false;\n        }\n        if ($offset > 0) {\n            $s = self::grapheme_substr($s, $offset);\n        } elseif ($offset < 0) {\n            if (2 > $mode) {\n                $offset += self::grapheme_strlen($s);\n                $s = self::grapheme_substr($s, $offset);\n                if (0 > $offset) {\n                    $offset = 0;\n                }\n            } elseif (0 > $offset += self::grapheme_strlen($needle)) {\n                $s = self::grapheme_substr($s, 0, $offset);\n                $offset = 0;\n            } else {\n                $offset = 0;\n            }\n        }\n\n        \/\/ As UTF-8 is self-synchronizing, and we have ensured the strings are valid UTF-8,\n        \/\/ we can use normal binary string functions here. For case-insensitive searches,\n        \/\/ case fold the strings first.\n        $caseInsensitive = $mode & 1;\n        $reverse = $mode & 2;\n        if ($caseInsensitive) {\n            \/\/ Use the same case folding mode as mbstring does for mb_stripos().\n            \/\/ Stick to SIMPLE case folding to avoid changing the length of the string, which\n            \/\/ might result in offsets being shifted.\n            $mode = \\defined('MB_CASE_FOLD_SIMPLE') ? \\MB_CASE_FOLD_SIMPLE : \\MB_CASE_LOWER;\n            $s = mb_convert_case($s, $mode, 'UTF-8');\n            $needle = mb_convert_case($needle, $mode, 'UTF-8');\n\n            if (!\\defined('MB_CASE_FOLD_SIMPLE')) {\n                $s = str_replace(self::CASE_FOLD[0], self::CASE_FOLD[1], $s);\n                $needle = str_replace(self::CASE_FOLD[0], self::CASE_FOLD[1], $needle);\n            }\n        }\n        if ($reverse) {\n            $needlePos = strrpos($s, $needle);\n        } else {\n            $needlePos = strpos($s, $needle);\n        }\n\n        return false !== $needlePos ? self::grapheme_strlen(substr($s, 0, $needlePos)) + $offset : false;\n    }\n}\n",
"vendor/symfony/polyfill-intl-grapheme/bootstrap.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Intl\\Grapheme as p;\n\nif (extension_loaded('intl')) {\n    return;\n}\n\nif (\\PHP_VERSION_ID >= 80000) {\n    return require __DIR__.'\/bootstrap80.php';\n}\n\nif (!defined('GRAPHEME_EXTR_COUNT')) {\n    define('GRAPHEME_EXTR_COUNT', 0);\n}\nif (!defined('GRAPHEME_EXTR_MAXBYTES')) {\n    define('GRAPHEME_EXTR_MAXBYTES', 1);\n}\nif (!defined('GRAPHEME_EXTR_MAXCHARS')) {\n    define('GRAPHEME_EXTR_MAXCHARS', 2);\n}\n\nif (!function_exists('grapheme_extract')) {\n    function grapheme_extract($haystack, $size, $type = 0, $start = 0, &$next = 0) { return p\\Grapheme::grapheme_extract($haystack, $size, $type, $start, $next); }\n}\nif (!function_exists('grapheme_stripos')) {\n    function grapheme_stripos($haystack, $needle, $offset = 0) { return p\\Grapheme::grapheme_stripos($haystack, $needle, $offset); }\n}\nif (!function_exists('grapheme_stristr')) {\n    function grapheme_stristr($haystack, $needle, $beforeNeedle = false) { return p\\Grapheme::grapheme_stristr($haystack, $needle, $beforeNeedle); }\n}\nif (!function_exists('grapheme_strlen')) {\n    function grapheme_strlen($input) { return p\\Grapheme::grapheme_strlen($input); }\n}\nif (!function_exists('grapheme_strpos')) {\n    function grapheme_strpos($haystack, $needle, $offset = 0) { return p\\Grapheme::grapheme_strpos($haystack, $needle, $offset); }\n}\nif (!function_exists('grapheme_strripos')) {\n    function grapheme_strripos($haystack, $needle, $offset = 0) { return p\\Grapheme::grapheme_strripos($haystack, $needle, $offset); }\n}\nif (!function_exists('grapheme_strrpos')) {\n    function grapheme_strrpos($haystack, $needle, $offset = 0) { return p\\Grapheme::grapheme_strrpos($haystack, $needle, $offset); }\n}\nif (!function_exists('grapheme_strstr')) {\n    function grapheme_strstr($haystack, $needle, $beforeNeedle = false) { return p\\Grapheme::grapheme_strstr($haystack, $needle, $beforeNeedle); }\n}\nif (!function_exists('grapheme_substr')) {\n    function grapheme_substr($string, $offset, $length = null) { return p\\Grapheme::grapheme_substr($string, $offset, $length); }\n}\n",
"vendor/symfony/polyfill-intl-grapheme/bootstrap80.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Intl\\Grapheme as p;\n\nif (!defined('GRAPHEME_EXTR_COUNT')) {\n    define('GRAPHEME_EXTR_COUNT', 0);\n}\nif (!defined('GRAPHEME_EXTR_MAXBYTES')) {\n    define('GRAPHEME_EXTR_MAXBYTES', 1);\n}\nif (!defined('GRAPHEME_EXTR_MAXCHARS')) {\n    define('GRAPHEME_EXTR_MAXCHARS', 2);\n}\n\nif (!function_exists('grapheme_extract')) {\n    function grapheme_extract(?string $haystack, ?int $size, ?int $type = GRAPHEME_EXTR_COUNT, ?int $offset = 0, &$next = null): string|false { return p\\Grapheme::grapheme_extract((string) $haystack, (int) $size, (int) $type, (int) $offset, $next); }\n}\nif (!function_exists('grapheme_stripos')) {\n    function grapheme_stripos(?string $haystack, ?string $needle, ?int $offset = 0): int|false { return p\\Grapheme::grapheme_stripos((string) $haystack, (string) $needle, (int) $offset); }\n}\nif (!function_exists('grapheme_stristr')) {\n    function grapheme_stristr(?string $haystack, ?string $needle, ?bool $beforeNeedle = false): string|false { return p\\Grapheme::grapheme_stristr((string) $haystack, (string) $needle, (bool) $beforeNeedle); }\n}\nif (!function_exists('grapheme_strlen')) {\n    function grapheme_strlen(?string $string): int|false|null { return p\\Grapheme::grapheme_strlen((string) $string); }\n}\nif (!function_exists('grapheme_strpos')) {\n    function grapheme_strpos(?string $haystack, ?string $needle, ?int $offset = 0): int|false { return p\\Grapheme::grapheme_strpos((string) $haystack, (string) $needle, (int) $offset); }\n}\nif (!function_exists('grapheme_strripos')) {\n    function grapheme_strripos(?string $haystack, ?string $needle, ?int $offset = 0): int|false { return p\\Grapheme::grapheme_strripos((string) $haystack, (string) $needle, (int) $offset); }\n}\nif (!function_exists('grapheme_strrpos')) {\n    function grapheme_strrpos(?string $haystack, ?string $needle, ?int $offset = 0): int|false { return p\\Grapheme::grapheme_strrpos((string) $haystack, (string) $needle, (int) $offset); }\n}\nif (!function_exists('grapheme_strstr')) {\n    function grapheme_strstr(?string $haystack, ?string $needle, ?bool $beforeNeedle = false): string|false { return p\\Grapheme::grapheme_strstr((string) $haystack, (string) $needle, (bool) $beforeNeedle); }\n}\nif (!function_exists('grapheme_substr')) {\n    function grapheme_substr(?string $string, ?int $offset, ?int $length = null): string|false { return p\\Grapheme::grapheme_substr((string) $string, (int) $offset, $length); }\n}\n",
"vendor/symfony/polyfill-intl-normalizer/Normalizer.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Intl\\Normalizer;\n\n\/**\n * Normalizer is a PHP fallback implementation of the Normalizer class provided by the intl extension.\n *\n * It has been validated with Unicode 6.3 Normalization Conformance Test.\n * See http:\/\/www.unicode.org\/reports\/tr15\/ for detailed info about Unicode normalizations.\n *\n * @author Nicolas Grekas <p@tchwork.com>\n *\n * @internal\n *\/\nclass Normalizer\n{\n    public const FORM_D = \\Normalizer::FORM_D;\n    public const FORM_KD = \\Normalizer::FORM_KD;\n    public const FORM_C = \\Normalizer::FORM_C;\n    public const FORM_KC = \\Normalizer::FORM_KC;\n    public const NFD = \\Normalizer::NFD;\n    public const NFKD = \\Normalizer::NFKD;\n    public const NFC = \\Normalizer::NFC;\n    public const NFKC = \\Normalizer::NFKC;\n\n    private static $C;\n    private static $D;\n    private static $KD;\n    private static $cC;\n    private static $ulenMask = [\"\\xC0\" => 2, \"\\xD0\" => 2, \"\\xE0\" => 3, \"\\xF0\" => 4];\n    private static $ASCII = \"\\x20\\x65\\x69\\x61\\x73\\x6E\\x74\\x72\\x6F\\x6C\\x75\\x64\\x5D\\x5B\\x63\\x6D\\x70\\x27\\x0A\\x67\\x7C\\x68\\x76\\x2E\\x66\\x62\\x2C\\x3A\\x3D\\x2D\\x71\\x31\\x30\\x43\\x32\\x2A\\x79\\x78\\x29\\x28\\x4C\\x39\\x41\\x53\\x2F\\x50\\x22\\x45\\x6A\\x4D\\x49\\x6B\\x33\\x3E\\x35\\x54\\x3C\\x44\\x34\\x7D\\x42\\x7B\\x38\\x46\\x77\\x52\\x36\\x37\\x55\\x47\\x4E\\x3B\\x4A\\x7A\\x56\\x23\\x48\\x4F\\x57\\x5F\\x26\\x21\\x4B\\x3F\\x58\\x51\\x25\\x59\\x5C\\x09\\x5A\\x2B\\x7E\\x5E\\x24\\x40\\x60\\x7F\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x0B\\x0C\\x0D\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F\";\n\n    public static function isNormalized(string $s, int $form = self::FORM_C)\n    {\n        if (!\\in_array($form, [self::NFD, self::NFKD, self::NFC, self::NFKC])) {\n            return false;\n        }\n        if (!isset($s[strspn($s, self::$ASCII)])) {\n            return true;\n        }\n        if (self::NFC == $form && preg_match('\/\/u', $s) && !preg_match('\/[^\\x00-\\x{2FF}]\/u', $s)) {\n            return true;\n        }\n\n        return self::normalize($s, $form) === $s;\n    }\n\n    public static function normalize(string $s, int $form = self::FORM_C)\n    {\n        if (!preg_match('\/\/u', $s)) {\n            return false;\n        }\n\n        switch ($form) {\n            case self::NFC: $C = true; $K = false; break;\n            case self::NFD: $C = false; $K = false; break;\n            case self::NFKC: $C = true; $K = true; break;\n            case self::NFKD: $C = false; $K = true; break;\n            default:\n                if (\\defined('Normalizer::NONE') && \\Normalizer::NONE == $form) {\n                    return $s;\n                }\n\n                if (80000 > \\PHP_VERSION_ID) {\n                    return false;\n                }\n\n                throw new \\ValueError('normalizer_normalize(): Argument #2 ($form) must be a a valid normalization form');\n        }\n\n        if ('' === $s) {\n            return '';\n        }\n\n        if ($K && null === self::$KD) {\n            self::$KD = self::getData('compatibilityDecomposition');\n        }\n\n        if (null === self::$D) {\n            self::$D = self::getData('canonicalDecomposition');\n            self::$cC = self::getData('combiningClass');\n        }\n\n        if (null !== $mbEncoding = (2 \/* MB_OVERLOAD_STRING *\/ & (int) \\ini_get('mbstring.func_overload')) ? mb_internal_encoding() : null) {\n            mb_internal_encoding('8bit');\n        }\n\n        $r = self::decompose($s, $K);\n\n        if ($C) {\n            if (null === self::$C) {\n                self::$C = self::getData('canonicalComposition');\n            }\n\n            $r = self::recompose($r);\n        }\n        if (null !== $mbEncoding) {\n            mb_internal_encoding($mbEncoding);\n        }\n\n        return $r;\n    }\n\n    private static function recompose($s)\n    {\n        $ASCII = self::$ASCII;\n        $compMap = self::$C;\n        $combClass = self::$cC;\n        $ulenMask = self::$ulenMask;\n\n        $result = $tail = '';\n\n        $i = $s[0] < \"\\x80\" ? 1 : $ulenMask[$s[0] & \"\\xF0\"];\n        $len = \\strlen($s);\n\n        $lastUchr = substr($s, 0, $i);\n        $lastUcls = isset($combClass[$lastUchr]) ? 256 : 0;\n\n        while ($i < $len) {\n            if ($s[$i] < \"\\x80\") {\n                \/\/ ASCII chars\n\n                if ($tail) {\n                    $lastUchr .= $tail;\n                    $tail = '';\n                }\n\n                if ($j = strspn($s, $ASCII, $i + 1)) {\n                    $lastUchr .= substr($s, $i, $j);\n                    $i += $j;\n                }\n\n                $result .= $lastUchr;\n                $lastUchr = $s[$i];\n                $lastUcls = 0;\n                ++$i;\n                continue;\n            }\n\n            $ulen = $ulenMask[$s[$i] & \"\\xF0\"];\n            $uchr = substr($s, $i, $ulen);\n\n            if ($lastUchr < \"\\xE1\\x84\\x80\" || \"\\xE1\\x84\\x92\" < $lastUchr\n                || $uchr < \"\\xE1\\x85\\xA1\" || \"\\xE1\\x85\\xB5\" < $uchr\n                || $lastUcls) {\n                \/\/ Table lookup and combining chars composition\n\n                $ucls = $combClass[$uchr] ?? 0;\n\n                if (isset($compMap[$lastUchr.$uchr]) && (!$lastUcls || $lastUcls < $ucls)) {\n                    $lastUchr = $compMap[$lastUchr.$uchr];\n                } elseif ($lastUcls = $ucls) {\n                    $tail .= $uchr;\n                } else {\n                    if ($tail) {\n                        $lastUchr .= $tail;\n                        $tail = '';\n                    }\n\n                    $result .= $lastUchr;\n                    $lastUchr = $uchr;\n                }\n            } else {\n                \/\/ Hangul chars\n\n                $L = \\ord($lastUchr[2]) - 0x80;\n                $V = \\ord($uchr[2]) - 0xA1;\n                $T = 0;\n\n                $uchr = substr($s, $i + $ulen, 3);\n\n                if (\"\\xE1\\x86\\xA7\" <= $uchr && $uchr <= \"\\xE1\\x87\\x82\") {\n                    $T = \\ord($uchr[2]) - 0xA7;\n                    0 > $T && $T += 0x40;\n                    $ulen += 3;\n                }\n\n                $L = 0xAC00 + ($L * 21 + $V) * 28 + $T;\n                $lastUchr = \\chr(0xE0 | $L >> 12).\\chr(0x80 | $L >> 6 & 0x3F).\\chr(0x80 | $L & 0x3F);\n            }\n\n            $i += $ulen;\n        }\n\n        return $result.$lastUchr.$tail;\n    }\n\n    private static function decompose($s, $c)\n    {\n        $result = '';\n\n        $ASCII = self::$ASCII;\n        $decompMap = self::$D;\n        $combClass = self::$cC;\n        $ulenMask = self::$ulenMask;\n        if ($c) {\n            $compatMap = self::$KD;\n        }\n\n        $c = [];\n        $i = 0;\n        $len = \\strlen($s);\n\n        while ($i < $len) {\n            if ($s[$i] < \"\\x80\") {\n                \/\/ ASCII chars\n\n                if ($c) {\n                    ksort($c);\n                    $result .= implode('', $c);\n                    $c = [];\n                }\n\n                $j = 1 + strspn($s, $ASCII, $i + 1);\n                $result .= substr($s, $i, $j);\n                $i += $j;\n                continue;\n            }\n\n            $ulen = $ulenMask[$s[$i] & \"\\xF0\"];\n            $uchr = substr($s, $i, $ulen);\n            $i += $ulen;\n\n            if ($uchr < \"\\xEA\\xB0\\x80\" || \"\\xED\\x9E\\xA3\" < $uchr) {\n                \/\/ Table lookup\n\n                if ($uchr !== $j = $compatMap[$uchr] ?? ($decompMap[$uchr] ?? $uchr)) {\n                    $uchr = $j;\n\n                    $j = \\strlen($uchr);\n                    $ulen = $uchr[0] < \"\\x80\" ? 1 : $ulenMask[$uchr[0] & \"\\xF0\"];\n\n                    if ($ulen != $j) {\n                        \/\/ Put trailing chars in $s\n\n                        $j -= $ulen;\n                        $i -= $j;\n\n                        if (0 > $i) {\n                            $s = str_repeat(' ', -$i).$s;\n                            $len -= $i;\n                            $i = 0;\n                        }\n\n                        while ($j--) {\n                            $s[$i + $j] = $uchr[$ulen + $j];\n                        }\n\n                        $uchr = substr($uchr, 0, $ulen);\n                    }\n                }\n                if (isset($combClass[$uchr])) {\n                    \/\/ Combining chars, for sorting\n\n                    if (!isset($c[$combClass[$uchr]])) {\n                        $c[$combClass[$uchr]] = '';\n                    }\n                    $c[$combClass[$uchr]] .= $uchr;\n                    continue;\n                }\n            } else {\n                \/\/ Hangul chars\n\n                $uchr = unpack('C*', $uchr);\n                $j = (($uchr[1] - 224) << 12) + (($uchr[2] - 128) << 6) + $uchr[3] - 0xAC80;\n\n                $uchr = \"\\xE1\\x84\".\\chr(0x80 + (int) ($j \/ 588))\n                       .\"\\xE1\\x85\".\\chr(0xA1 + (int) (($j % 588) \/ 28));\n\n                if ($j %= 28) {\n                    $uchr .= $j < 25\n                        ? (\"\\xE1\\x86\".\\chr(0xA7 + $j))\n                        : (\"\\xE1\\x87\".\\chr(0x67 + $j));\n                }\n            }\n            if ($c) {\n                ksort($c);\n                $result .= implode('', $c);\n                $c = [];\n            }\n\n            $result .= $uchr;\n        }\n\n        if ($c) {\n            ksort($c);\n            $result .= implode('', $c);\n        }\n\n        return $result;\n    }\n\n    private static function getData($file)\n    {\n        if (file_exists($file = __DIR__.'\/Resources\/unidata\/'.$file.'.php')) {\n            return require $file;\n        }\n\n        return false;\n    }\n}\n",
"vendor/symfony/polyfill-intl-normalizer/bootstrap.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Intl\\Normalizer as p;\n\nif (\\PHP_VERSION_ID >= 80000) {\n    return require __DIR__.'\/bootstrap80.php';\n}\n\nif (!function_exists('normalizer_is_normalized')) {\n    function normalizer_is_normalized($string, $form = p\\Normalizer::FORM_C) { return p\\Normalizer::isNormalized($string, $form); }\n}\nif (!function_exists('normalizer_normalize')) {\n    function normalizer_normalize($string, $form = p\\Normalizer::FORM_C) { return p\\Normalizer::normalize($string, $form); }\n}\n",
"vendor/symfony/polyfill-intl-normalizer/bootstrap80.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Intl\\Normalizer as p;\n\nif (!function_exists('normalizer_is_normalized')) {\n    function normalizer_is_normalized(?string $string, ?int $form = p\\Normalizer::FORM_C): bool { return p\\Normalizer::isNormalized((string) $string, (int) $form); }\n}\nif (!function_exists('normalizer_normalize')) {\n    function normalizer_normalize(?string $string, ?int $form = p\\Normalizer::FORM_C): string|false { return p\\Normalizer::normalize((string) $string, (int) $form); }\n}\n",
"vendor/symfony/polyfill-mbstring/Mbstring.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Mbstring;\n\n\/**\n * Partial mbstring implementation in PHP, iconv based, UTF-8 centric.\n *\n * Implemented:\n * - mb_chr                  - Returns a specific character from its Unicode code point\n * - mb_convert_encoding     - Convert character encoding\n * - mb_convert_variables    - Convert character code in variable(s)\n * - mb_decode_mimeheader    - Decode string in MIME header field\n * - mb_encode_mimeheader    - Encode string for MIME header XXX NATIVE IMPLEMENTATION IS REALLY BUGGED\n * - mb_decode_numericentity - Decode HTML numeric string reference to character\n * - mb_encode_numericentity - Encode character to HTML numeric string reference\n * - mb_convert_case         - Perform case folding on a string\n * - mb_detect_encoding      - Detect character encoding\n * - mb_get_info             - Get internal settings of mbstring\n * - mb_http_input           - Detect HTTP input character encoding\n * - mb_http_output          - Set\/Get HTTP output character encoding\n * - mb_internal_encoding    - Set\/Get internal character encoding\n * - mb_list_encodings       - Returns an array of all supported encodings\n * - mb_ord                  - Returns the Unicode code point of a character\n * - mb_output_handler       - Callback function converts character encoding in output buffer\n * - mb_scrub                - Replaces ill-formed byte sequences with substitute characters\n * - mb_strlen               - Get string length\n * - mb_strpos               - Find position of first occurrence of string in a string\n * - mb_strrpos              - Find position of last occurrence of a string in a string\n * - mb_str_split            - Convert a string to an array\n * - mb_strtolower           - Make a string lowercase\n * - mb_strtoupper           - Make a string uppercase\n * - mb_substitute_character - Set\/Get substitution character\n * - mb_substr               - Get part of string\n * - mb_stripos              - Finds position of first occurrence of a string within another, case insensitive\n * - mb_stristr              - Finds first occurrence of a string within another, case insensitive\n * - mb_strrchr              - Finds the last occurrence of a character in a string within another\n * - mb_strrichr             - Finds the last occurrence of a character in a string within another, case insensitive\n * - mb_strripos             - Finds position of last occurrence of a string within another, case insensitive\n * - mb_strstr               - Finds first occurrence of a string within another\n * - mb_strwidth             - Return width of string\n * - mb_substr_count         - Count the number of substring occurrences\n * - mb_ucfirst              - Make a string's first character uppercase\n * - mb_lcfirst              - Make a string's first character lowercase\n *\n * Not implemented:\n * - mb_convert_kana         - Convert \"kana\" one from another (\"zen-kaku\", \"han-kaku\" and more)\n * - mb_ereg_*               - Regular expression with multibyte support\n * - mb_parse_str            - Parse GET\/POST\/COOKIE data and set global variable\n * - mb_preferred_mime_name  - Get MIME charset string\n * - mb_regex_encoding       - Returns current encoding for multibyte regex as string\n * - mb_regex_set_options    - Set\/Get the default options for mbregex functions\n * - mb_send_mail            - Send encoded mail\n * - mb_split                - Split multibyte string using regular expression\n * - mb_strcut               - Get part of string\n * - mb_strimwidth           - Get truncated string with specified width\n *\n * @author Nicolas Grekas <p@tchwork.com>\n *\n * @internal\n *\/\nfinal class Mbstring\n{\n    public const MB_CASE_FOLD = \\PHP_INT_MAX;\n\n    private const SIMPLE_CASE_FOLD = [\n        ['\u00b5', '\u017f', \"\\xCD\\x85\", '\u03c2', \"\\xCF\\x90\", \"\\xCF\\x91\", \"\\xCF\\x95\", \"\\xCF\\x96\", \"\\xCF\\xB0\", \"\\xCF\\xB1\", \"\\xCF\\xB5\", \"\\xE1\\xBA\\x9B\", \"\\xE1\\xBE\\xBE\"],\n        ['\u03bc', 's', '\u03b9',        '\u03c3', '\u03b2',        '\u03b8',        '\u03c6',        '\u03c0',        '\u03ba',        '\u03c1',        '\u03b5',        \"\\xE1\\xB9\\xA1\", '\u03b9'],\n    ];\n\n    private static $encodingList = ['ASCII', 'UTF-8'];\n    private static $language = 'neutral';\n    private static $internalEncoding = 'UTF-8';\n\n    public static function mb_convert_encoding($s, $toEncoding, $fromEncoding = null)\n    {\n        if (\\is_array($s)) {\n            if (PHP_VERSION_ID < 70200) {\n                trigger_error('mb_convert_encoding() expects parameter 1 to be string, array given', \\E_USER_WARNING);\n\n                return null;\n            }\n\n            $r = [];\n            foreach ($s as $str) {\n                $r[] = self::mb_convert_encoding($str, $toEncoding, $fromEncoding);\n            }\n\n            return $r;\n        }\n\n        if (\\is_array($fromEncoding) || (null !== $fromEncoding && false !== strpos($fromEncoding, ','))) {\n            $fromEncoding = self::mb_detect_encoding($s, $fromEncoding);\n        } else {\n            $fromEncoding = self::getEncoding($fromEncoding);\n        }\n\n        $toEncoding = self::getEncoding($toEncoding);\n\n        if ('BASE64' === $fromEncoding) {\n            $s = base64_decode($s);\n            $fromEncoding = $toEncoding;\n        }\n\n        if ('BASE64' === $toEncoding) {\n            return base64_encode($s);\n        }\n\n        if ('HTML-ENTITIES' === $toEncoding || 'HTML' === $toEncoding) {\n            if ('HTML-ENTITIES' === $fromEncoding || 'HTML' === $fromEncoding) {\n                $fromEncoding = 'Windows-1252';\n            }\n            if ('UTF-8' !== $fromEncoding) {\n                $s = iconv($fromEncoding, 'UTF-8\/\/IGNORE', $s);\n            }\n\n            return preg_replace_callback('\/[\\x80-\\xFF]+\/', [__CLASS__, 'html_encoding_callback'], $s);\n        }\n\n        if ('HTML-ENTITIES' === $fromEncoding) {\n            $s = html_entity_decode($s, \\ENT_COMPAT, 'UTF-8');\n            $fromEncoding = 'UTF-8';\n        }\n\n        return iconv($fromEncoding, $toEncoding.'\/\/IGNORE', $s);\n    }\n\n    public static function mb_convert_variables($toEncoding, $fromEncoding, &...$vars)\n    {\n        $ok = true;\n        array_walk_recursive($vars, function (&$v) use (&$ok, $toEncoding, $fromEncoding) {\n            if (false === $v = self::mb_convert_encoding($v, $toEncoding, $fromEncoding)) {\n                $ok = false;\n            }\n        });\n\n        return $ok ? $fromEncoding : false;\n    }\n\n    public static function mb_decode_mimeheader($s)\n    {\n        return iconv_mime_decode($s, 2, self::$internalEncoding);\n    }\n\n    public static function mb_encode_mimeheader($s, $charset = null, $transferEncoding = null, $linefeed = null, $indent = null)\n    {\n        trigger_error('mb_encode_mimeheader() is bugged. Please use iconv_mime_encode() instead', \\E_USER_WARNING);\n    }\n\n    public static function mb_decode_numericentity($s, $convmap, $encoding = null)\n    {\n        if (null !== $s && !\\is_scalar($s) && !(\\is_object($s) && method_exists($s, '__toString'))) {\n            trigger_error('mb_decode_numericentity() expects parameter 1 to be string, '.\\gettype($s).' given', \\E_USER_WARNING);\n\n            return null;\n        }\n\n        if (!\\is_array($convmap) || (80000 > \\PHP_VERSION_ID && !$convmap)) {\n            return false;\n        }\n\n        if (null !== $encoding && !\\is_scalar($encoding)) {\n            trigger_error('mb_decode_numericentity() expects parameter 3 to be string, '.\\gettype($s).' given', \\E_USER_WARNING);\n\n            return '';  \/\/ Instead of null (cf. mb_encode_numericentity).\n        }\n\n        $s = (string) $s;\n        if ('' === $s) {\n            return '';\n        }\n\n        $encoding = self::getEncoding($encoding);\n\n        if ('UTF-8' === $encoding) {\n            $encoding = null;\n            if (!preg_match('\/\/u', $s)) {\n                $s = @iconv('UTF-8', 'UTF-8\/\/IGNORE', $s);\n            }\n        } else {\n            $s = iconv($encoding, 'UTF-8\/\/IGNORE', $s);\n        }\n\n        $cnt = floor(\\count($convmap) \/ 4) * 4;\n\n        for ($i = 0; $i < $cnt; $i += 4) {\n            \/\/ collector_decode_htmlnumericentity ignores $convmap[$i + 3]\n            $convmap[$i] += $convmap[$i + 2];\n            $convmap[$i + 1] += $convmap[$i + 2];\n        }\n\n        $s = preg_replace_callback('\/&#(?:0*([0-9]+)|x0*([0-9a-fA-F]+))(?!&);?\/', function (array $m) use ($cnt, $convmap) {\n            $c = isset($m[2]) ? (int) hexdec($m[2]) : $m[1];\n            for ($i = 0; $i < $cnt; $i += 4) {\n                if ($c >= $convmap[$i] && $c <= $convmap[$i + 1]) {\n                    return self::mb_chr($c - $convmap[$i + 2]);\n                }\n            }\n\n            return $m[0];\n        }, $s);\n\n        if (null === $encoding) {\n            return $s;\n        }\n\n        return iconv('UTF-8', $encoding.'\/\/IGNORE', $s);\n    }\n\n    public static function mb_encode_numericentity($s, $convmap, $encoding = null, $is_hex = false)\n    {\n        if (null !== $s && !\\is_scalar($s) && !(\\is_object($s) && method_exists($s, '__toString'))) {\n            trigger_error('mb_encode_numericentity() expects parameter 1 to be string, '.\\gettype($s).' given', \\E_USER_WARNING);\n\n            return null;\n        }\n\n        if (!\\is_array($convmap) || (80000 > \\PHP_VERSION_ID && !$convmap)) {\n            return false;\n        }\n\n        if (null !== $encoding && !\\is_scalar($encoding)) {\n            trigger_error('mb_encode_numericentity() expects parameter 3 to be string, '.\\gettype($s).' given', \\E_USER_WARNING);\n\n            return null;  \/\/ Instead of '' (cf. mb_decode_numericentity).\n        }\n\n        if (null !== $is_hex && !\\is_scalar($is_hex)) {\n            trigger_error('mb_encode_numericentity() expects parameter 4 to be boolean, '.\\gettype($s).' given', \\E_USER_WARNING);\n\n            return null;\n        }\n\n        $s = (string) $s;\n        if ('' === $s) {\n            return '';\n        }\n\n        $encoding = self::getEncoding($encoding);\n\n        if ('UTF-8' === $encoding) {\n            $encoding = null;\n            if (!preg_match('\/\/u', $s)) {\n                $s = @iconv('UTF-8', 'UTF-8\/\/IGNORE', $s);\n            }\n        } else {\n            $s = iconv($encoding, 'UTF-8\/\/IGNORE', $s);\n        }\n\n        static $ulenMask = [\"\\xC0\" => 2, \"\\xD0\" => 2, \"\\xE0\" => 3, \"\\xF0\" => 4];\n\n        $cnt = floor(\\count($convmap) \/ 4) * 4;\n        $i = 0;\n        $len = \\strlen($s);\n        $result = '';\n\n        while ($i < $len) {\n            $ulen = $s[$i] < \"\\x80\" ? 1 : $ulenMask[$s[$i] & \"\\xF0\"];\n            $uchr = substr($s, $i, $ulen);\n            $i += $ulen;\n            $c = self::mb_ord($uchr);\n\n            for ($j = 0; $j < $cnt; $j += 4) {\n                if ($c >= $convmap[$j] && $c <= $convmap[$j + 1]) {\n                    $cOffset = ($c + $convmap[$j + 2]) & $convmap[$j + 3];\n                    $result .= $is_hex ? sprintf('&#x%X;', $cOffset) : '&#'.$cOffset.';';\n                    continue 2;\n                }\n            }\n            $result .= $uchr;\n        }\n\n        if (null === $encoding) {\n            return $result;\n        }\n\n        return iconv('UTF-8', $encoding.'\/\/IGNORE', $result);\n    }\n\n    public static function mb_convert_case($s, $mode, $encoding = null)\n    {\n        $s = (string) $s;\n        if ('' === $s) {\n            return '';\n        }\n\n        $encoding = self::getEncoding($encoding);\n\n        if ('UTF-8' === $encoding) {\n            $encoding = null;\n            if (!preg_match('\/\/u', $s)) {\n                $s = @iconv('UTF-8', 'UTF-8\/\/IGNORE', $s);\n            }\n        } else {\n            $s = iconv($encoding, 'UTF-8\/\/IGNORE', $s);\n        }\n\n        if (\\MB_CASE_TITLE == $mode) {\n            static $titleRegexp = null;\n            if (null === $titleRegexp) {\n                $titleRegexp = self::getData('titleCaseRegexp');\n            }\n            $s = preg_replace_callback($titleRegexp, [__CLASS__, 'title_case'], $s);\n        } else {\n            if (\\MB_CASE_UPPER == $mode) {\n                static $upper = null;\n                if (null === $upper) {\n                    $upper = self::getData('upperCase');\n                }\n                $map = $upper;\n            } else {\n                if (self::MB_CASE_FOLD === $mode) {\n                    static $caseFolding = null;\n                    if (null === $caseFolding) {\n                        $caseFolding = self::getData('caseFolding');\n                    }\n                    $s = strtr($s, $caseFolding);\n                }\n\n                static $lower = null;\n                if (null === $lower) {\n                    $lower = self::getData('lowerCase');\n                }\n                $map = $lower;\n            }\n\n            static $ulenMask = [\"\\xC0\" => 2, \"\\xD0\" => 2, \"\\xE0\" => 3, \"\\xF0\" => 4];\n\n            $i = 0;\n            $len = \\strlen($s);\n\n            while ($i < $len) {\n                $ulen = $s[$i] < \"\\x80\" ? 1 : $ulenMask[$s[$i] & \"\\xF0\"];\n                $uchr = substr($s, $i, $ulen);\n                $i += $ulen;\n\n                if (isset($map[$uchr])) {\n                    $uchr = $map[$uchr];\n                    $nlen = \\strlen($uchr);\n\n                    if ($nlen == $ulen) {\n                        $nlen = $i;\n                        do {\n                            $s[--$nlen] = $uchr[--$ulen];\n                        } while ($ulen);\n                    } else {\n                        $s = substr_replace($s, $uchr, $i - $ulen, $ulen);\n                        $len += $nlen - $ulen;\n                        $i += $nlen - $ulen;\n                    }\n                }\n            }\n        }\n\n        if (null === $encoding) {\n            return $s;\n        }\n\n        return iconv('UTF-8', $encoding.'\/\/IGNORE', $s);\n    }\n\n    public static function mb_internal_encoding($encoding = null)\n    {\n        if (null === $encoding) {\n            return self::$internalEncoding;\n        }\n\n        $normalizedEncoding = self::getEncoding($encoding);\n\n        if ('UTF-8' === $normalizedEncoding || false !== @iconv($normalizedEncoding, $normalizedEncoding, ' ')) {\n            self::$internalEncoding = $normalizedEncoding;\n\n            return true;\n        }\n\n        if (80000 > \\PHP_VERSION_ID) {\n            return false;\n        }\n\n        throw new \\ValueError(sprintf('Argument #1 ($encoding) must be a valid encoding, \"%s\" given', $encoding));\n    }\n\n    public static function mb_language($lang = null)\n    {\n        if (null === $lang) {\n            return self::$language;\n        }\n\n        switch ($normalizedLang = strtolower($lang)) {\n            case 'uni':\n            case 'neutral':\n                self::$language = $normalizedLang;\n\n                return true;\n        }\n\n        if (80000 > \\PHP_VERSION_ID) {\n            return false;\n        }\n\n        throw new \\ValueError(sprintf('Argument #1 ($language) must be a valid language, \"%s\" given', $lang));\n    }\n\n    public static function mb_list_encodings()\n    {\n        return ['UTF-8'];\n    }\n\n    public static function mb_encoding_aliases($encoding)\n    {\n        switch (strtoupper($encoding)) {\n            case 'UTF8':\n            case 'UTF-8':\n                return ['utf8'];\n        }\n\n        return false;\n    }\n\n    public static function mb_check_encoding($var = null, $encoding = null)\n    {\n        if (\\PHP_VERSION_ID < 70200 && \\is_array($var)) {\n            trigger_error('mb_check_encoding() expects parameter 1 to be string, array given', \\E_USER_WARNING);\n\n            return null;\n        }\n\n        if (null === $encoding) {\n            if (null === $var) {\n                return false;\n            }\n            $encoding = self::$internalEncoding;\n        }\n\n        if (!\\is_array($var)) {\n            return self::mb_detect_encoding($var, [$encoding]) || false !== @iconv($encoding, $encoding, $var);\n        }\n\n        foreach ($var as $key => $value) {\n            if (!self::mb_check_encoding($key, $encoding)) {\n                return false;\n            }\n            if (!self::mb_check_encoding($value, $encoding)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public static function mb_detect_encoding($str, $encodingList = null, $strict = false)\n    {\n        if (null === $encodingList) {\n            $encodingList = self::$encodingList;\n        } else {\n            if (!\\is_array($encodingList)) {\n                $encodingList = array_map('trim', explode(',', $encodingList));\n            }\n            $encodingList = array_map('strtoupper', $encodingList);\n        }\n\n        foreach ($encodingList as $enc) {\n            switch ($enc) {\n                case 'ASCII':\n                    if (!preg_match('\/[\\x80-\\xFF]\/', $str)) {\n                        return $enc;\n                    }\n                    break;\n\n                case 'UTF8':\n                case 'UTF-8':\n                    if (preg_match('\/\/u', $str)) {\n                        return 'UTF-8';\n                    }\n                    break;\n\n                default:\n                    if (0 === strncmp($enc, 'ISO-8859-', 9)) {\n                        return $enc;\n                    }\n            }\n        }\n\n        return false;\n    }\n\n    public static function mb_detect_order($encodingList = null)\n    {\n        if (null === $encodingList) {\n            return self::$encodingList;\n        }\n\n        if (!\\is_array($encodingList)) {\n            $encodingList = array_map('trim', explode(',', $encodingList));\n        }\n        $encodingList = array_map('strtoupper', $encodingList);\n\n        foreach ($encodingList as $enc) {\n            switch ($enc) {\n                default:\n                    if (strncmp($enc, 'ISO-8859-', 9)) {\n                        return false;\n                    }\n                    \/\/ no break\n                case 'ASCII':\n                case 'UTF8':\n                case 'UTF-8':\n            }\n        }\n\n        self::$encodingList = $encodingList;\n\n        return true;\n    }\n\n    public static function mb_strlen($s, $encoding = null)\n    {\n        $encoding = self::getEncoding($encoding);\n        if ('CP850' === $encoding || 'ASCII' === $encoding) {\n            return \\strlen($s);\n        }\n\n        return @iconv_strlen($s, $encoding);\n    }\n\n    public static function mb_strpos($haystack, $needle, $offset = 0, $encoding = null)\n    {\n        $encoding = self::getEncoding($encoding);\n        if ('CP850' === $encoding || 'ASCII' === $encoding) {\n            return strpos($haystack, $needle, $offset);\n        }\n\n        $needle = (string) $needle;\n        if ('' === $needle) {\n            if (80000 > \\PHP_VERSION_ID) {\n                trigger_error(__METHOD__.': Empty delimiter', \\E_USER_WARNING);\n\n                return false;\n            }\n\n            return 0;\n        }\n\n        return iconv_strpos($haystack, $needle, $offset, $encoding);\n    }\n\n    public static function mb_strrpos($haystack, $needle, $offset = 0, $encoding = null)\n    {\n        $encoding = self::getEncoding($encoding);\n        if ('CP850' === $encoding || 'ASCII' === $encoding) {\n            return strrpos($haystack, $needle, $offset);\n        }\n\n        if ($offset != (int) $offset) {\n            $offset = 0;\n        } elseif ($offset = (int) $offset) {\n            if ($offset < 0) {\n                if (0 > $offset += self::mb_strlen($needle)) {\n                    $haystack = self::mb_substr($haystack, 0, $offset, $encoding);\n                }\n                $offset = 0;\n            } else {\n                $haystack = self::mb_substr($haystack, $offset, 2147483647, $encoding);\n            }\n        }\n\n        $pos = '' !== $needle || 80000 > \\PHP_VERSION_ID\n            ? iconv_strrpos($haystack, $needle, $encoding)\n            : self::mb_strlen($haystack, $encoding);\n\n        return false !== $pos ? $offset + $pos : false;\n    }\n\n    public static function mb_str_split($string, $split_length = 1, $encoding = null)\n    {\n        if (null !== $string && !\\is_scalar($string) && !(\\is_object($string) && method_exists($string, '__toString'))) {\n            trigger_error('mb_str_split() expects parameter 1 to be string, '.\\gettype($string).' given', \\E_USER_WARNING);\n\n            return null;\n        }\n\n        if (1 > $split_length = (int) $split_length) {\n            if (80000 > \\PHP_VERSION_ID) {\n                trigger_error('The length of each segment must be greater than zero', \\E_USER_WARNING);\n\n                return false;\n            }\n\n            throw new \\ValueError('Argument #2 ($length) must be greater than 0');\n        }\n\n        if (null === $encoding) {\n            $encoding = mb_internal_encoding();\n        }\n\n        if ('UTF-8' === $encoding = self::getEncoding($encoding)) {\n            $rx = '\/(';\n            while (65535 < $split_length) {\n                $rx .= '.{65535}';\n                $split_length -= 65535;\n            }\n            $rx .= '.{'.$split_length.'})\/us';\n\n            return preg_split($rx, $string, -1, \\PREG_SPLIT_DELIM_CAPTURE | \\PREG_SPLIT_NO_EMPTY);\n        }\n\n        $result = [];\n        $length = mb_strlen($string, $encoding);\n\n        for ($i = 0; $i < $length; $i += $split_length) {\n            $result[] = mb_substr($string, $i, $split_length, $encoding);\n        }\n\n        return $result;\n    }\n\n    public static function mb_strtolower($s, $encoding = null)\n    {\n        return self::mb_convert_case($s, \\MB_CASE_LOWER, $encoding);\n    }\n\n    public static function mb_strtoupper($s, $encoding = null)\n    {\n        return self::mb_convert_case($s, \\MB_CASE_UPPER, $encoding);\n    }\n\n    public static function mb_substitute_character($c = null)\n    {\n        if (null === $c) {\n            return 'none';\n        }\n        if (0 === strcasecmp($c, 'none')) {\n            return true;\n        }\n        if (80000 > \\PHP_VERSION_ID) {\n            return false;\n        }\n        if (\\is_int($c) || 'long' === $c || 'entity' === $c) {\n            return false;\n        }\n\n        throw new \\ValueError('Argument #1 ($substitute_character) must be \"none\", \"long\", \"entity\" or a valid codepoint');\n    }\n\n    public static function mb_substr($s, $start, $length = null, $encoding = null)\n    {\n        $encoding = self::getEncoding($encoding);\n        if ('CP850' === $encoding || 'ASCII' === $encoding) {\n            return (string) substr($s, $start, null === $length ? 2147483647 : $length);\n        }\n\n        if ($start < 0) {\n            $start = iconv_strlen($s, $encoding) + $start;\n            if ($start < 0) {\n                $start = 0;\n            }\n        }\n\n        if (null === $length) {\n            $length = 2147483647;\n        } elseif ($length < 0) {\n            $length = iconv_strlen($s, $encoding) + $length - $start;\n            if ($length < 0) {\n                return '';\n            }\n        }\n\n        return (string) iconv_substr($s, $start, $length, $encoding);\n    }\n\n    public static function mb_stripos($haystack, $needle, $offset = 0, $encoding = null)\n    {\n        [$haystack, $needle] = str_replace(self::SIMPLE_CASE_FOLD[0], self::SIMPLE_CASE_FOLD[1], [\n            self::mb_convert_case($haystack, \\MB_CASE_LOWER, $encoding),\n            self::mb_convert_case($needle, \\MB_CASE_LOWER, $encoding),\n        ]);\n\n        return self::mb_strpos($haystack, $needle, $offset, $encoding);\n    }\n\n    public static function mb_stristr($haystack, $needle, $part = false, $encoding = null)\n    {\n        $pos = self::mb_stripos($haystack, $needle, 0, $encoding);\n\n        return self::getSubpart($pos, $part, $haystack, $encoding);\n    }\n\n    public static function mb_strrchr($haystack, $needle, $part = false, $encoding = null)\n    {\n        $encoding = self::getEncoding($encoding);\n        if ('CP850' === $encoding || 'ASCII' === $encoding) {\n            $pos = strrpos($haystack, $needle);\n        } else {\n            $needle = self::mb_substr($needle, 0, 1, $encoding);\n            $pos = iconv_strrpos($haystack, $needle, $encoding);\n        }\n\n        return self::getSubpart($pos, $part, $haystack, $encoding);\n    }\n\n    public static function mb_strrichr($haystack, $needle, $part = false, $encoding = null)\n    {\n        $needle = self::mb_substr($needle, 0, 1, $encoding);\n        $pos = self::mb_strripos($haystack, $needle, $encoding);\n\n        return self::getSubpart($pos, $part, $haystack, $encoding);\n    }\n\n    public static function mb_strripos($haystack, $needle, $offset = 0, $encoding = null)\n    {\n        $haystack = self::mb_convert_case($haystack, \\MB_CASE_LOWER, $encoding);\n        $needle = self::mb_convert_case($needle, \\MB_CASE_LOWER, $encoding);\n\n        $haystack = str_replace(self::SIMPLE_CASE_FOLD[0], self::SIMPLE_CASE_FOLD[1], $haystack);\n        $needle = str_replace(self::SIMPLE_CASE_FOLD[0], self::SIMPLE_CASE_FOLD[1], $needle);\n\n        return self::mb_strrpos($haystack, $needle, $offset, $encoding);\n    }\n\n    public static function mb_strstr($haystack, $needle, $part = false, $encoding = null)\n    {\n        $pos = strpos($haystack, $needle);\n        if (false === $pos) {\n            return false;\n        }\n        if ($part) {\n            return substr($haystack, 0, $pos);\n        }\n\n        return substr($haystack, $pos);\n    }\n\n    public static function mb_get_info($type = 'all')\n    {\n        $info = [\n            'internal_encoding' => self::$internalEncoding,\n            'http_output' => 'pass',\n            'http_output_conv_mimetypes' => '^(text\/|application\/xhtml\\+xml)',\n            'func_overload' => 0,\n            'func_overload_list' => 'no overload',\n            'mail_charset' => 'UTF-8',\n            'mail_header_encoding' => 'BASE64',\n            'mail_body_encoding' => 'BASE64',\n            'illegal_chars' => 0,\n            'encoding_translation' => 'Off',\n            'language' => self::$language,\n            'detect_order' => self::$encodingList,\n            'substitute_character' => 'none',\n            'strict_detection' => 'Off',\n        ];\n\n        if ('all' === $type) {\n            return $info;\n        }\n        if (isset($info[$type])) {\n            return $info[$type];\n        }\n\n        return false;\n    }\n\n    public static function mb_http_input($type = '')\n    {\n        return false;\n    }\n\n    public static function mb_http_output($encoding = null)\n    {\n        return null !== $encoding ? 'pass' === $encoding : 'pass';\n    }\n\n    public static function mb_strwidth($s, $encoding = null)\n    {\n        $encoding = self::getEncoding($encoding);\n\n        if ('UTF-8' !== $encoding) {\n            $s = iconv($encoding, 'UTF-8\/\/IGNORE', $s);\n        }\n\n        $s = preg_replace('\/[\\x{1100}-\\x{115F}\\x{2329}\\x{232A}\\x{2E80}-\\x{303E}\\x{3040}-\\x{A4CF}\\x{AC00}-\\x{D7A3}\\x{F900}-\\x{FAFF}\\x{FE10}-\\x{FE19}\\x{FE30}-\\x{FE6F}\\x{FF00}-\\x{FF60}\\x{FFE0}-\\x{FFE6}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}]\/u', '', $s, -1, $wide);\n\n        return ($wide << 1) + iconv_strlen($s, 'UTF-8');\n    }\n\n    public static function mb_substr_count($haystack, $needle, $encoding = null)\n    {\n        return substr_count($haystack, $needle);\n    }\n\n    public static function mb_output_handler($contents, $status)\n    {\n        return $contents;\n    }\n\n    public static function mb_chr($code, $encoding = null)\n    {\n        if (0x80 > $code %= 0x200000) {\n            $s = \\chr($code);\n        } elseif (0x800 > $code) {\n            $s = \\chr(0xC0 | $code >> 6).\\chr(0x80 | $code & 0x3F);\n        } elseif (0x10000 > $code) {\n            $s = \\chr(0xE0 | $code >> 12).\\chr(0x80 | $code >> 6 & 0x3F).\\chr(0x80 | $code & 0x3F);\n        } else {\n            $s = \\chr(0xF0 | $code >> 18).\\chr(0x80 | $code >> 12 & 0x3F).\\chr(0x80 | $code >> 6 & 0x3F).\\chr(0x80 | $code & 0x3F);\n        }\n\n        if ('UTF-8' !== $encoding = self::getEncoding($encoding)) {\n            $s = mb_convert_encoding($s, $encoding, 'UTF-8');\n        }\n\n        return $s;\n    }\n\n    public static function mb_ord($s, $encoding = null)\n    {\n        if ('UTF-8' !== $encoding = self::getEncoding($encoding)) {\n            $s = mb_convert_encoding($s, 'UTF-8', $encoding);\n        }\n\n        if (1 === \\strlen($s)) {\n            return \\ord($s);\n        }\n\n        $code = ($s = unpack('C*', substr($s, 0, 4))) ? $s[1] : 0;\n        if (0xF0 <= $code) {\n            return (($code - 0xF0) << 18) + (($s[2] - 0x80) << 12) + (($s[3] - 0x80) << 6) + $s[4] - 0x80;\n        }\n        if (0xE0 <= $code) {\n            return (($code - 0xE0) << 12) + (($s[2] - 0x80) << 6) + $s[3] - 0x80;\n        }\n        if (0xC0 <= $code) {\n            return (($code - 0xC0) << 6) + $s[2] - 0x80;\n        }\n\n        return $code;\n    }\n\n    public static function mb_str_pad(string $string, int $length, string $pad_string = ' ', int $pad_type = \\STR_PAD_RIGHT, ?string $encoding = null): string\n    {\n        if (!\\in_array($pad_type, [\\STR_PAD_RIGHT, \\STR_PAD_LEFT, \\STR_PAD_BOTH], true)) {\n            throw new \\ValueError('mb_str_pad(): Argument #4 ($pad_type) must be STR_PAD_LEFT, STR_PAD_RIGHT, or STR_PAD_BOTH');\n        }\n\n        if (null === $encoding) {\n            $encoding = self::mb_internal_encoding();\n        } else {\n            self::assertEncoding($encoding, 'mb_str_pad(): Argument #5 ($encoding) must be a valid encoding, \"%s\" given');\n        }\n\n        if (self::mb_strlen($pad_string, $encoding) <= 0) {\n            throw new \\ValueError('mb_str_pad(): Argument #3 ($pad_string) must be a non-empty string');\n        }\n\n        $paddingRequired = $length - self::mb_strlen($string, $encoding);\n\n        if ($paddingRequired < 1) {\n            return $string;\n        }\n\n        switch ($pad_type) {\n            case \\STR_PAD_LEFT:\n                return self::mb_substr(str_repeat($pad_string, $paddingRequired), 0, $paddingRequired, $encoding).$string;\n            case \\STR_PAD_RIGHT:\n                return $string.self::mb_substr(str_repeat($pad_string, $paddingRequired), 0, $paddingRequired, $encoding);\n            default:\n                $leftPaddingLength = floor($paddingRequired \/ 2);\n                $rightPaddingLength = $paddingRequired - $leftPaddingLength;\n\n                return self::mb_substr(str_repeat($pad_string, $leftPaddingLength), 0, $leftPaddingLength, $encoding).$string.self::mb_substr(str_repeat($pad_string, $rightPaddingLength), 0, $rightPaddingLength, $encoding);\n        }\n    }\n\n    public static function mb_ucfirst(string $string, ?string $encoding = null): string\n    {\n        if (null === $encoding) {\n            $encoding = self::mb_internal_encoding();\n        } else {\n            self::assertEncoding($encoding, 'mb_ucfirst(): Argument #2 ($encoding) must be a valid encoding, \"%s\" given');\n        }\n\n        $firstChar = mb_substr($string, 0, 1, $encoding);\n        $firstChar = mb_convert_case($firstChar, \\MB_CASE_TITLE, $encoding);\n\n        return $firstChar.mb_substr($string, 1, null, $encoding);\n    }\n\n    public static function mb_lcfirst(string $string, ?string $encoding = null): string\n    {\n        if (null === $encoding) {\n            $encoding = self::mb_internal_encoding();\n        } else {\n            self::assertEncoding($encoding, 'mb_lcfirst(): Argument #2 ($encoding) must be a valid encoding, \"%s\" given');\n        }\n\n        $firstChar = mb_substr($string, 0, 1, $encoding);\n        $firstChar = mb_convert_case($firstChar, \\MB_CASE_LOWER, $encoding);\n\n        return $firstChar.mb_substr($string, 1, null, $encoding);\n    }\n\n    private static function getSubpart($pos, $part, $haystack, $encoding)\n    {\n        if (false === $pos) {\n            return false;\n        }\n        if ($part) {\n            return self::mb_substr($haystack, 0, $pos, $encoding);\n        }\n\n        return self::mb_substr($haystack, $pos, null, $encoding);\n    }\n\n    private static function html_encoding_callback(array $m)\n    {\n        $i = 1;\n        $entities = '';\n        $m = unpack('C*', htmlentities($m[0], \\ENT_COMPAT, 'UTF-8'));\n\n        while (isset($m[$i])) {\n            if (0x80 > $m[$i]) {\n                $entities .= \\chr($m[$i++]);\n                continue;\n            }\n            if (0xF0 <= $m[$i]) {\n                $c = (($m[$i++] - 0xF0) << 18) + (($m[$i++] - 0x80) << 12) + (($m[$i++] - 0x80) << 6) + $m[$i++] - 0x80;\n            } elseif (0xE0 <= $m[$i]) {\n                $c = (($m[$i++] - 0xE0) << 12) + (($m[$i++] - 0x80) << 6) + $m[$i++] - 0x80;\n            } else {\n                $c = (($m[$i++] - 0xC0) << 6) + $m[$i++] - 0x80;\n            }\n\n            $entities .= '&#'.$c.';';\n        }\n\n        return $entities;\n    }\n\n    private static function title_case(array $s)\n    {\n        return self::mb_convert_case($s[1], \\MB_CASE_UPPER, 'UTF-8').self::mb_convert_case($s[2], \\MB_CASE_LOWER, 'UTF-8');\n    }\n\n    private static function getData($file)\n    {\n        if (file_exists($file = __DIR__.'\/Resources\/unidata\/'.$file.'.php')) {\n            return require $file;\n        }\n\n        return false;\n    }\n\n    private static function getEncoding($encoding)\n    {\n        if (null === $encoding) {\n            return self::$internalEncoding;\n        }\n\n        if ('UTF-8' === $encoding) {\n            return 'UTF-8';\n        }\n\n        $encoding = strtoupper($encoding);\n\n        if ('8BIT' === $encoding || 'BINARY' === $encoding) {\n            return 'CP850';\n        }\n\n        if ('UTF8' === $encoding) {\n            return 'UTF-8';\n        }\n\n        return $encoding;\n    }\n\n    private static function assertEncoding(string $encoding, string $errorFormat): void\n    {\n        try {\n            $validEncoding = @self::mb_check_encoding('', $encoding);\n        } catch (\\ValueError $e) {\n            throw new \\ValueError(\\sprintf($errorFormat, $encoding));\n        }\n\n        \/\/ BC for PHP 7.3 and lower\n        if (!$validEncoding) {\n            throw new \\ValueError(\\sprintf($errorFormat, $encoding));\n        }\n    }\n}\n",
"vendor/symfony/polyfill-mbstring/bootstrap.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Mbstring as p;\n\nif (\\PHP_VERSION_ID >= 80000) {\n    return require __DIR__.'\/bootstrap80.php';\n}\n\nif (!function_exists('mb_convert_encoding')) {\n    function mb_convert_encoding($string, $to_encoding, $from_encoding = null) { return p\\Mbstring::mb_convert_encoding($string, $to_encoding, $from_encoding); }\n}\nif (!function_exists('mb_decode_mimeheader')) {\n    function mb_decode_mimeheader($string) { return p\\Mbstring::mb_decode_mimeheader($string); }\n}\nif (!function_exists('mb_encode_mimeheader')) {\n    function mb_encode_mimeheader($string, $charset = null, $transfer_encoding = null, $newline = \"\\r\\n\", $indent = 0) { return p\\Mbstring::mb_encode_mimeheader($string, $charset, $transfer_encoding, $newline, $indent); }\n}\nif (!function_exists('mb_decode_numericentity')) {\n    function mb_decode_numericentity($string, $map, $encoding = null) { return p\\Mbstring::mb_decode_numericentity($string, $map, $encoding); }\n}\nif (!function_exists('mb_encode_numericentity')) {\n    function mb_encode_numericentity($string, $map, $encoding = null, $hex = false) { return p\\Mbstring::mb_encode_numericentity($string, $map, $encoding, $hex); }\n}\nif (!function_exists('mb_convert_case')) {\n    function mb_convert_case($string, $mode, $encoding = null) { return p\\Mbstring::mb_convert_case($string, $mode, $encoding); }\n}\nif (!function_exists('mb_internal_encoding')) {\n    function mb_internal_encoding($encoding = null) { return p\\Mbstring::mb_internal_encoding($encoding); }\n}\nif (!function_exists('mb_language')) {\n    function mb_language($language = null) { return p\\Mbstring::mb_language($language); }\n}\nif (!function_exists('mb_list_encodings')) {\n    function mb_list_encodings() { return p\\Mbstring::mb_list_encodings(); }\n}\nif (!function_exists('mb_encoding_aliases')) {\n    function mb_encoding_aliases($encoding) { return p\\Mbstring::mb_encoding_aliases($encoding); }\n}\nif (!function_exists('mb_check_encoding')) {\n    function mb_check_encoding($value = null, $encoding = null) { return p\\Mbstring::mb_check_encoding($value, $encoding); }\n}\nif (!function_exists('mb_detect_encoding')) {\n    function mb_detect_encoding($string, $encodings = null, $strict = false) { return p\\Mbstring::mb_detect_encoding($string, $encodings, $strict); }\n}\nif (!function_exists('mb_detect_order')) {\n    function mb_detect_order($encoding = null) { return p\\Mbstring::mb_detect_order($encoding); }\n}\nif (!function_exists('mb_parse_str')) {\n    function mb_parse_str($string, &$result = []) { parse_str($string, $result); return (bool) $result; }\n}\nif (!function_exists('mb_strlen')) {\n    function mb_strlen($string, $encoding = null) { return p\\Mbstring::mb_strlen($string, $encoding); }\n}\nif (!function_exists('mb_strpos')) {\n    function mb_strpos($haystack, $needle, $offset = 0, $encoding = null) { return p\\Mbstring::mb_strpos($haystack, $needle, $offset, $encoding); }\n}\nif (!function_exists('mb_strtolower')) {\n    function mb_strtolower($string, $encoding = null) { return p\\Mbstring::mb_strtolower($string, $encoding); }\n}\nif (!function_exists('mb_strtoupper')) {\n    function mb_strtoupper($string, $encoding = null) { return p\\Mbstring::mb_strtoupper($string, $encoding); }\n}\nif (!function_exists('mb_substitute_character')) {\n    function mb_substitute_character($substitute_character = null) { return p\\Mbstring::mb_substitute_character($substitute_character); }\n}\nif (!function_exists('mb_substr')) {\n    function mb_substr($string, $start, $length = 2147483647, $encoding = null) { return p\\Mbstring::mb_substr($string, $start, $length, $encoding); }\n}\nif (!function_exists('mb_stripos')) {\n    function mb_stripos($haystack, $needle, $offset = 0, $encoding = null) { return p\\Mbstring::mb_stripos($haystack, $needle, $offset, $encoding); }\n}\nif (!function_exists('mb_stristr')) {\n    function mb_stristr($haystack, $needle, $before_needle = false, $encoding = null) { return p\\Mbstring::mb_stristr($haystack, $needle, $before_needle, $encoding); }\n}\nif (!function_exists('mb_strrchr')) {\n    function mb_strrchr($haystack, $needle, $before_needle = false, $encoding = null) { return p\\Mbstring::mb_strrchr($haystack, $needle, $before_needle, $encoding); }\n}\nif (!function_exists('mb_strrichr')) {\n    function mb_strrichr($haystack, $needle, $before_needle = false, $encoding = null) { return p\\Mbstring::mb_strrichr($haystack, $needle, $before_needle, $encoding); }\n}\nif (!function_exists('mb_strripos')) {\n    function mb_strripos($haystack, $needle, $offset = 0, $encoding = null) { return p\\Mbstring::mb_strripos($haystack, $needle, $offset, $encoding); }\n}\nif (!function_exists('mb_strrpos')) {\n    function mb_strrpos($haystack, $needle, $offset = 0, $encoding = null) { return p\\Mbstring::mb_strrpos($haystack, $needle, $offset, $encoding); }\n}\nif (!function_exists('mb_strstr')) {\n    function mb_strstr($haystack, $needle, $before_needle = false, $encoding = null) { return p\\Mbstring::mb_strstr($haystack, $needle, $before_needle, $encoding); }\n}\nif (!function_exists('mb_get_info')) {\n    function mb_get_info($type = 'all') { return p\\Mbstring::mb_get_info($type); }\n}\nif (!function_exists('mb_http_output')) {\n    function mb_http_output($encoding = null) { return p\\Mbstring::mb_http_output($encoding); }\n}\nif (!function_exists('mb_strwidth')) {\n    function mb_strwidth($string, $encoding = null) { return p\\Mbstring::mb_strwidth($string, $encoding); }\n}\nif (!function_exists('mb_substr_count')) {\n    function mb_substr_count($haystack, $needle, $encoding = null) { return p\\Mbstring::mb_substr_count($haystack, $needle, $encoding); }\n}\nif (!function_exists('mb_output_handler')) {\n    function mb_output_handler($string, $status) { return p\\Mbstring::mb_output_handler($string, $status); }\n}\nif (!function_exists('mb_http_input')) {\n    function mb_http_input($type = null) { return p\\Mbstring::mb_http_input($type); }\n}\n\nif (!function_exists('mb_convert_variables')) {\n    function mb_convert_variables($to_encoding, $from_encoding, &...$vars) { return p\\Mbstring::mb_convert_variables($to_encoding, $from_encoding, ...$vars); }\n}\n\nif (!function_exists('mb_ord')) {\n    function mb_ord($string, $encoding = null) { return p\\Mbstring::mb_ord($string, $encoding); }\n}\nif (!function_exists('mb_chr')) {\n    function mb_chr($codepoint, $encoding = null) { return p\\Mbstring::mb_chr($codepoint, $encoding); }\n}\nif (!function_exists('mb_scrub')) {\n    function mb_scrub($string, $encoding = null) { $encoding = null === $encoding ? mb_internal_encoding() : $encoding; return mb_convert_encoding($string, $encoding, $encoding); }\n}\nif (!function_exists('mb_str_split')) {\n    function mb_str_split($string, $length = 1, $encoding = null) { return p\\Mbstring::mb_str_split($string, $length, $encoding); }\n}\n\nif (!function_exists('mb_str_pad')) {\n    function mb_str_pad(string $string, int $length, string $pad_string = ' ', int $pad_type = STR_PAD_RIGHT, ?string $encoding = null): string { return p\\Mbstring::mb_str_pad($string, $length, $pad_string, $pad_type, $encoding); }\n}\n\nif (!function_exists('mb_ucfirst')) {\n    function mb_ucfirst(string $string, ?string $encoding = null): string { return p\\Mbstring::mb_ucfirst($string, $encoding); }\n}\n\nif (!function_exists('mb_lcfirst')) {\n    function mb_lcfirst(string $string, ?string $encoding = null): string { return p\\Mbstring::mb_lcfirst($string, $encoding); }\n}\n\nif (extension_loaded('mbstring')) {\n    return;\n}\n\nif (!defined('MB_CASE_UPPER')) {\n    define('MB_CASE_UPPER', 0);\n}\nif (!defined('MB_CASE_LOWER')) {\n    define('MB_CASE_LOWER', 1);\n}\nif (!defined('MB_CASE_TITLE')) {\n    define('MB_CASE_TITLE', 2);\n}\n",
"vendor/symfony/polyfill-mbstring/bootstrap80.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Mbstring as p;\n\nif (!function_exists('mb_convert_encoding')) {\n    function mb_convert_encoding(array|string|null $string, ?string $to_encoding, array|string|null $from_encoding = null): array|string|false { return p\\Mbstring::mb_convert_encoding($string ?? '', (string) $to_encoding, $from_encoding); }\n}\nif (!function_exists('mb_decode_mimeheader')) {\n    function mb_decode_mimeheader(?string $string): string { return p\\Mbstring::mb_decode_mimeheader((string) $string); }\n}\nif (!function_exists('mb_encode_mimeheader')) {\n    function mb_encode_mimeheader(?string $string, ?string $charset = null, ?string $transfer_encoding = null, ?string $newline = \"\\r\\n\", ?int $indent = 0): string { return p\\Mbstring::mb_encode_mimeheader((string) $string, $charset, $transfer_encoding, (string) $newline, (int) $indent); }\n}\nif (!function_exists('mb_decode_numericentity')) {\n    function mb_decode_numericentity(?string $string, array $map, ?string $encoding = null): string { return p\\Mbstring::mb_decode_numericentity((string) $string, $map, $encoding); }\n}\nif (!function_exists('mb_encode_numericentity')) {\n    function mb_encode_numericentity(?string $string, array $map, ?string $encoding = null, ?bool $hex = false): string { return p\\Mbstring::mb_encode_numericentity((string) $string, $map, $encoding, (bool) $hex); }\n}\nif (!function_exists('mb_convert_case')) {\n    function mb_convert_case(?string $string, ?int $mode, ?string $encoding = null): string { return p\\Mbstring::mb_convert_case((string) $string, (int) $mode, $encoding); }\n}\nif (!function_exists('mb_internal_encoding')) {\n    function mb_internal_encoding(?string $encoding = null): string|bool { return p\\Mbstring::mb_internal_encoding($encoding); }\n}\nif (!function_exists('mb_language')) {\n    function mb_language(?string $language = null): string|bool { return p\\Mbstring::mb_language($language); }\n}\nif (!function_exists('mb_list_encodings')) {\n    function mb_list_encodings(): array { return p\\Mbstring::mb_list_encodings(); }\n}\nif (!function_exists('mb_encoding_aliases')) {\n    function mb_encoding_aliases(?string $encoding): array { return p\\Mbstring::mb_encoding_aliases((string) $encoding); }\n}\nif (!function_exists('mb_check_encoding')) {\n    function mb_check_encoding(array|string|null $value = null, ?string $encoding = null): bool { return p\\Mbstring::mb_check_encoding($value, $encoding); }\n}\nif (!function_exists('mb_detect_encoding')) {\n    function mb_detect_encoding(?string $string, array|string|null $encodings = null, ?bool $strict = false): string|false { return p\\Mbstring::mb_detect_encoding((string) $string, $encodings, (bool) $strict); }\n}\nif (!function_exists('mb_detect_order')) {\n    function mb_detect_order(array|string|null $encoding = null): array|bool { return p\\Mbstring::mb_detect_order($encoding); }\n}\nif (!function_exists('mb_parse_str')) {\n    function mb_parse_str(?string $string, &$result = []): bool { parse_str((string) $string, $result); return (bool) $result; }\n}\nif (!function_exists('mb_strlen')) {\n    function mb_strlen(?string $string, ?string $encoding = null): int { return p\\Mbstring::mb_strlen((string) $string, $encoding); }\n}\nif (!function_exists('mb_strpos')) {\n    function mb_strpos(?string $haystack, ?string $needle, ?int $offset = 0, ?string $encoding = null): int|false { return p\\Mbstring::mb_strpos((string) $haystack, (string) $needle, (int) $offset, $encoding); }\n}\nif (!function_exists('mb_strtolower')) {\n    function mb_strtolower(?string $string, ?string $encoding = null): string { return p\\Mbstring::mb_strtolower((string) $string, $encoding); }\n}\nif (!function_exists('mb_strtoupper')) {\n    function mb_strtoupper(?string $string, ?string $encoding = null): string { return p\\Mbstring::mb_strtoupper((string) $string, $encoding); }\n}\nif (!function_exists('mb_substitute_character')) {\n    function mb_substitute_character(string|int|null $substitute_character = null): string|int|bool { return p\\Mbstring::mb_substitute_character($substitute_character); }\n}\nif (!function_exists('mb_substr')) {\n    function mb_substr(?string $string, ?int $start, ?int $length = null, ?string $encoding = null): string { return p\\Mbstring::mb_substr((string) $string, (int) $start, $length, $encoding); }\n}\nif (!function_exists('mb_stripos')) {\n    function mb_stripos(?string $haystack, ?string $needle, ?int $offset = 0, ?string $encoding = null): int|false { return p\\Mbstring::mb_stripos((string) $haystack, (string) $needle, (int) $offset, $encoding); }\n}\nif (!function_exists('mb_stristr')) {\n    function mb_stristr(?string $haystack, ?string $needle, ?bool $before_needle = false, ?string $encoding = null): string|false { return p\\Mbstring::mb_stristr((string) $haystack, (string) $needle, (bool) $before_needle, $encoding); }\n}\nif (!function_exists('mb_strrchr')) {\n    function mb_strrchr(?string $haystack, ?string $needle, ?bool $before_needle = false, ?string $encoding = null): string|false { return p\\Mbstring::mb_strrchr((string) $haystack, (string) $needle, (bool) $before_needle, $encoding); }\n}\nif (!function_exists('mb_strrichr')) {\n    function mb_strrichr(?string $haystack, ?string $needle, ?bool $before_needle = false, ?string $encoding = null): string|false { return p\\Mbstring::mb_strrichr((string) $haystack, (string) $needle, (bool) $before_needle, $encoding); }\n}\nif (!function_exists('mb_strripos')) {\n    function mb_strripos(?string $haystack, ?string $needle, ?int $offset = 0, ?string $encoding = null): int|false { return p\\Mbstring::mb_strripos((string) $haystack, (string) $needle, (int) $offset, $encoding); }\n}\nif (!function_exists('mb_strrpos')) {\n    function mb_strrpos(?string $haystack, ?string $needle, ?int $offset = 0, ?string $encoding = null): int|false { return p\\Mbstring::mb_strrpos((string) $haystack, (string) $needle, (int) $offset, $encoding); }\n}\nif (!function_exists('mb_strstr')) {\n    function mb_strstr(?string $haystack, ?string $needle, ?bool $before_needle = false, ?string $encoding = null): string|false { return p\\Mbstring::mb_strstr((string) $haystack, (string) $needle, (bool) $before_needle, $encoding); }\n}\nif (!function_exists('mb_get_info')) {\n    function mb_get_info(?string $type = 'all'): array|string|int|false { return p\\Mbstring::mb_get_info((string) $type); }\n}\nif (!function_exists('mb_http_output')) {\n    function mb_http_output(?string $encoding = null): string|bool { return p\\Mbstring::mb_http_output($encoding); }\n}\nif (!function_exists('mb_strwidth')) {\n    function mb_strwidth(?string $string, ?string $encoding = null): int { return p\\Mbstring::mb_strwidth((string) $string, $encoding); }\n}\nif (!function_exists('mb_substr_count')) {\n    function mb_substr_count(?string $haystack, ?string $needle, ?string $encoding = null): int { return p\\Mbstring::mb_substr_count((string) $haystack, (string) $needle, $encoding); }\n}\nif (!function_exists('mb_output_handler')) {\n    function mb_output_handler(?string $string, ?int $status): string { return p\\Mbstring::mb_output_handler((string) $string, (int) $status); }\n}\nif (!function_exists('mb_http_input')) {\n    function mb_http_input(?string $type = null): array|string|false { return p\\Mbstring::mb_http_input($type); }\n}\n\nif (!function_exists('mb_convert_variables')) {\n    function mb_convert_variables(?string $to_encoding, array|string|null $from_encoding, mixed &$var, mixed &...$vars): string|false { return p\\Mbstring::mb_convert_variables((string) $to_encoding, $from_encoding ?? '', $var, ...$vars); }\n}\n\nif (!function_exists('mb_ord')) {\n    function mb_ord(?string $string, ?string $encoding = null): int|false { return p\\Mbstring::mb_ord((string) $string, $encoding); }\n}\nif (!function_exists('mb_chr')) {\n    function mb_chr(?int $codepoint, ?string $encoding = null): string|false { return p\\Mbstring::mb_chr((int) $codepoint, $encoding); }\n}\nif (!function_exists('mb_scrub')) {\n    function mb_scrub(?string $string, ?string $encoding = null): string { $encoding ??= mb_internal_encoding(); return mb_convert_encoding((string) $string, $encoding, $encoding); }\n}\nif (!function_exists('mb_str_split')) {\n    function mb_str_split(?string $string, ?int $length = 1, ?string $encoding = null): array { return p\\Mbstring::mb_str_split((string) $string, (int) $length, $encoding); }\n}\n\nif (!function_exists('mb_str_pad')) {\n    function mb_str_pad(string $string, int $length, string $pad_string = ' ', int $pad_type = STR_PAD_RIGHT, ?string $encoding = null): string { return p\\Mbstring::mb_str_pad($string, $length, $pad_string, $pad_type, $encoding); }\n}\n\nif (!function_exists('mb_ucfirst')) {\n    function mb_ucfirst($string, ?string $encoding = null): string { return p\\Mbstring::mb_ucfirst($string, $encoding); }\n}\n\nif (!function_exists('mb_lcfirst')) {\n    function mb_lcfirst($string, ?string $encoding = null): string { return p\\Mbstring::mb_lcfirst($string, $encoding); }\n}\n\nif (extension_loaded('mbstring')) {\n    return;\n}\n\nif (!defined('MB_CASE_UPPER')) {\n    define('MB_CASE_UPPER', 0);\n}\nif (!defined('MB_CASE_LOWER')) {\n    define('MB_CASE_LOWER', 1);\n}\nif (!defined('MB_CASE_TITLE')) {\n    define('MB_CASE_TITLE', 2);\n}\n",
"vendor/symfony/polyfill-php73/Php73.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Php73;\n\n\/**\n * @author Gabriel Caruso <carusogabriel34@gmail.com>\n * @author Ion Bazan <ion.bazan@gmail.com>\n *\n * @internal\n *\/\nfinal class Php73\n{\n    public static $startAt = 1533462603;\n\n    \/**\n     * @param bool $asNum\n     *\n     * @return array|float|int\n     *\/\n    public static function hrtime($asNum = false)\n    {\n        $ns = microtime(false);\n        $s = substr($ns, 11) - self::$startAt;\n        $ns = 1E9 * (float) $ns;\n\n        if ($asNum) {\n            $ns += $s * 1E9;\n\n            return \\PHP_INT_SIZE === 4 ? $ns : (int) $ns;\n        }\n\n        return [$s, (int) $ns];\n    }\n}\n",
"vendor/symfony/polyfill-php73/bootstrap.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Php73 as p;\n\nif (\\PHP_VERSION_ID >= 70300) {\n    return;\n}\n\nif (!function_exists('is_countable')) {\n    function is_countable($value) { return is_array($value) || $value instanceof Countable || $value instanceof ResourceBundle || $value instanceof SimpleXmlElement; }\n}\nif (!function_exists('hrtime')) {\n    require_once __DIR__.'\/Php73.php';\n    p\\Php73::$startAt = (int) microtime(true);\n    function hrtime($as_number = false) { return p\\Php73::hrtime($as_number); }\n}\nif (!function_exists('array_key_first')) {\n    function array_key_first(array $array) { foreach ($array as $key => $value) { return $key; } }\n}\nif (!function_exists('array_key_last')) {\n    function array_key_last(array $array) { return key(array_slice($array, -1, 1, true)); }\n}\n",
"vendor/symfony/polyfill-php80/Php80.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Php80;\n\n\/**\n * @author Ion Bazan <ion.bazan@gmail.com>\n * @author Nico Oelgart <nicoswd@gmail.com>\n * @author Nicolas Grekas <p@tchwork.com>\n *\n * @internal\n *\/\nfinal class Php80\n{\n    public static function fdiv(float $dividend, float $divisor): float\n    {\n        return @($dividend \/ $divisor);\n    }\n\n    public static function get_debug_type($value): string\n    {\n        switch (true) {\n            case null === $value: return 'null';\n            case \\is_bool($value): return 'bool';\n            case \\is_string($value): return 'string';\n            case \\is_array($value): return 'array';\n            case \\is_int($value): return 'int';\n            case \\is_float($value): return 'float';\n            case \\is_object($value): break;\n            case $value instanceof \\__PHP_Incomplete_Class: return '__PHP_Incomplete_Class';\n            default:\n                if (null === $type = @get_resource_type($value)) {\n                    return 'unknown';\n                }\n\n                if ('Unknown' === $type) {\n                    $type = 'closed';\n                }\n\n                return \"resource ($type)\";\n        }\n\n        $class = \\get_class($value);\n\n        if (false === strpos($class, '@')) {\n            return $class;\n        }\n\n        return (get_parent_class($class) ?: key(class_implements($class)) ?: 'class').'@anonymous';\n    }\n\n    public static function get_resource_id($res): int\n    {\n        if (!\\is_resource($res) && null === @get_resource_type($res)) {\n            throw new \\TypeError(sprintf('Argument 1 passed to get_resource_id() must be of the type resource, %s given', get_debug_type($res)));\n        }\n\n        return (int) $res;\n    }\n\n    public static function preg_last_error_msg(): string\n    {\n        switch (preg_last_error()) {\n            case \\PREG_INTERNAL_ERROR:\n                return 'Internal error';\n            case \\PREG_BAD_UTF8_ERROR:\n                return 'Malformed UTF-8 characters, possibly incorrectly encoded';\n            case \\PREG_BAD_UTF8_OFFSET_ERROR:\n                return 'The offset did not correspond to the beginning of a valid UTF-8 code point';\n            case \\PREG_BACKTRACK_LIMIT_ERROR:\n                return 'Backtrack limit exhausted';\n            case \\PREG_RECURSION_LIMIT_ERROR:\n                return 'Recursion limit exhausted';\n            case \\PREG_JIT_STACKLIMIT_ERROR:\n                return 'JIT stack limit exhausted';\n            case \\PREG_NO_ERROR:\n                return 'No error';\n            default:\n                return 'Unknown error';\n        }\n    }\n\n    public static function str_contains(string $haystack, string $needle): bool\n    {\n        return '' === $needle || false !== strpos($haystack, $needle);\n    }\n\n    public static function str_starts_with(string $haystack, string $needle): bool\n    {\n        return 0 === strncmp($haystack, $needle, \\strlen($needle));\n    }\n\n    public static function str_ends_with(string $haystack, string $needle): bool\n    {\n        if ('' === $needle || $needle === $haystack) {\n            return true;\n        }\n\n        if ('' === $haystack) {\n            return false;\n        }\n\n        $needleLength = \\strlen($needle);\n\n        return $needleLength <= \\strlen($haystack) && 0 === substr_compare($haystack, $needle, -$needleLength);\n    }\n}\n",
"vendor/symfony/polyfill-php80/PhpToken.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Polyfill\\Php80;\n\n\/**\n * @author Fedonyuk Anton <info@ensostudio.ru>\n *\n * @internal\n *\/\nclass PhpToken implements \\Stringable\n{\n    \/**\n     * @var int\n     *\/\n    public $id;\n\n    \/**\n     * @var string\n     *\/\n    public $text;\n\n    \/**\n     * @var int\n     *\/\n    public $line;\n\n    \/**\n     * @var int\n     *\/\n    public $pos;\n\n    public function __construct(int $id, string $text, int $line = -1, int $position = -1)\n    {\n        $this->id = $id;\n        $this->text = $text;\n        $this->line = $line;\n        $this->pos = $position;\n    }\n\n    public function getTokenName(): ?string\n    {\n        if ('UNKNOWN' === $name = token_name($this->id)) {\n            $name = \\strlen($this->text) > 1 || \\ord($this->text) < 32 ? null : $this->text;\n        }\n\n        return $name;\n    }\n\n    \/**\n     * @param int|string|array $kind\n     *\/\n    public function is($kind): bool\n    {\n        foreach ((array) $kind as $value) {\n            if (\\in_array($value, [$this->id, $this->text], true)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public function isIgnorable(): bool\n    {\n        return \\in_array($this->id, [\\T_WHITESPACE, \\T_COMMENT, \\T_DOC_COMMENT, \\T_OPEN_TAG], true);\n    }\n\n    public function __toString(): string\n    {\n        return (string) $this->text;\n    }\n\n    \/**\n     * @return static[]\n     *\/\n    public static function tokenize(string $code, int $flags = 0): array\n    {\n        $line = 1;\n        $position = 0;\n        $tokens = token_get_all($code, $flags);\n        foreach ($tokens as $index => $token) {\n            if (\\is_string($token)) {\n                $id = \\ord($token);\n                $text = $token;\n            } else {\n                [$id, $text, $line] = $token;\n            }\n            $tokens[$index] = new static($id, $text, $line, $position);\n            $position += \\strlen($text);\n        }\n\n        return $tokens;\n    }\n}\n",
"vendor/symfony/polyfill-php80/bootstrap.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nuse Symfony\\Polyfill\\Php80 as p;\n\nif (\\PHP_VERSION_ID >= 80000) {\n    return;\n}\n\nif (!defined('FILTER_VALIDATE_BOOL') && defined('FILTER_VALIDATE_BOOLEAN')) {\n    define('FILTER_VALIDATE_BOOL', \\FILTER_VALIDATE_BOOLEAN);\n}\n\nif (!function_exists('fdiv')) {\n    function fdiv(float $num1, float $num2): float { return p\\Php80::fdiv($num1, $num2); }\n}\nif (!function_exists('preg_last_error_msg')) {\n    function preg_last_error_msg(): string { return p\\Php80::preg_last_error_msg(); }\n}\nif (!function_exists('str_contains')) {\n    function str_contains(?string $haystack, ?string $needle): bool { return p\\Php80::str_contains($haystack ?? '', $needle ?? ''); }\n}\nif (!function_exists('str_starts_with')) {\n    function str_starts_with(?string $haystack, ?string $needle): bool { return p\\Php80::str_starts_with($haystack ?? '', $needle ?? ''); }\n}\nif (!function_exists('str_ends_with')) {\n    function str_ends_with(?string $haystack, ?string $needle): bool { return p\\Php80::str_ends_with($haystack ?? '', $needle ?? ''); }\n}\nif (!function_exists('get_debug_type')) {\n    function get_debug_type($value): string { return p\\Php80::get_debug_type($value); }\n}\nif (!function_exists('get_resource_id')) {\n    function get_resource_id($resource): int { return p\\Php80::get_resource_id($resource); }\n}\n",
"vendor/symfony/string/Resources/functions.php" : "<?php\n\n\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Symfony\\Component\\String;\n\nif (!\\function_exists(u::class)) {\n    function u(?string $string = ''): UnicodeString\n    {\n        return new UnicodeString($string ?? '');\n    }\n}\n\nif (!\\function_exists(b::class)) {\n    function b(?string $string = ''): ByteString\n    {\n        return new ByteString($string ?? '');\n    }\n}\n\nif (!\\function_exists(s::class)) {\n    \/**\n     * @return UnicodeString|ByteString\n     *\/\n    function s(?string $string = ''): AbstractString\n    {\n        $string ??= '';\n\n        return preg_match('\/\/u', $string) ? new UnicodeString($string) : new ByteString($string);\n    }\n}\n"
}
